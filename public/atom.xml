<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PyGo²</title>
  
  <subtitle>一个爱&lt;font size=&quot;5&quot; color=&quot;#BF0060&quot;&gt;老婆&lt;/font&gt;的&lt;font size=&quot;5&quot; color=&quot;#FF4500&quot;&gt;Python&lt;/font&gt;程序猿。。。。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pygo2.top/"/>
  <updated>2023-03-04T06:53:03.000Z</updated>
  <id>http://pygo2.top/</id>
  
  <author>
    <name>mingliang.gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端脚手架管理系统模板</title>
    <link href="http://pygo2.top/articles/38070/"/>
    <id>http://pygo2.top/articles/38070/</id>
    <published>2023-03-04T06:53:03.000Z</published>
    <updated>2023-03-04T06:53:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>记录下前端好用的管理系统模板脚手架（引用参考）</p></blockquote><a id="more"></a><hr><ul><li><a href="https://mp.weixin.qq.com/s/j6Nwmn-f9L2w83sy_t71Pg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/j6Nwmn-f9L2w83sy_t71Pg</a></li><li><a href="https://mp.weixin.qq.com/s/NOoGMkF3Ct2OobCopltTsg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NOoGMkF3Ct2OobCopltTsg</a></li></ul><font size="6.5" color="red">持续更新中。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;记录下前端好用的管理系统模板脚手架（引用参考）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="REACT" scheme="http://pygo2.top/tags/REACT/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库连接工具PLSQL快捷配置</title>
    <link href="http://pygo2.top/articles/13254/"/>
    <id>http://pygo2.top/articles/13254/</id>
    <published>2023-02-28T14:53:26.000Z</published>
    <updated>2023-02-28T14:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_plsql.jpg" alt></p><blockquote class="blockquote-center"><p>PLSQL工具日常快捷配置说明</p></blockquote><a id="more"></a><hr><p>正所谓“功先利其事，必先利其器”，把PLSQL的快捷方式设置好，在写SQL以及操作方面会大大提高效率，分享下本人PLSQL的快捷配置：</p><h4 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h4><h4 id="延时tip设置"><a href="#延时tip设置" class="headerlink" title="延时tip设置"></a>延时tip设置</h4><h4 id="SQL快捷语句"><a href="#SQL快捷语句" class="headerlink" title="SQL快捷语句"></a>SQL快捷语句</h4><h4 id="快捷键配置"><a href="#快捷键配置" class="headerlink" title="快捷键配置"></a>快捷键配置</h4><p>PLSQL自带了许多快捷键配置，但是习惯了IDE写代码的快捷键，所以对部分配置、以及未配置的功能进行了更改，快捷键配置说明【修改部分】：</p><hr><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">功能</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">文件/打开/新建(N)/SQL窗口(S)</td><td style="text-align:center">Ctrl+Alt+A</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">文件/关闭/关闭(C)</td><td style="text-align:center">Ctrl+Alt+W</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">编辑/选择/缩进(I)</td><td style="text-align:center">Tab</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">编辑/选择/取消缩进(U)</td><td style="text-align:center">Shift+Tab</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">编辑/选择/注释(O)</td><td style="text-align:center">Ctrl+/</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">编辑/选择/取消注释(N)</td><td style="text-align:center">Ctrl+Shift+/</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">编辑/选择/转到行(G)</td><td style="text-align:center">Ctrl+G</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">工具/源/PL/SQL Beautifier</td><td style="text-align:center">Ctrl+Shift+F</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">删除行(Editor:Delete Line)</td><td style="text-align:center">Ctrl+Y</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">PLSQL切换窗口(Editor:Navigate Forward)</td><td style="text-align:center">Alt+Left上一个窗口</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">PLSQL切换窗口(Editor:Navigate Back)</td><td style="text-align:center">Alt+Right下一个窗口</td></tr></tbody></table><hr><font size="6.5" color="red">持续更新中。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_plsql.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;PLSQL工具日常快捷配置说明&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
      <category term="PLSQL" scheme="http://pygo2.top/tags/PLSQL/"/>
    
  </entry>
  
  <entry>
    <title>Oracle备份expdp与恢复impdp</title>
    <link href="http://pygo2.top/articles/48068/"/>
    <id>http://pygo2.top/articles/48068/</id>
    <published>2023-02-22T14:13:33.000Z</published>
    <updated>2023-02-22T14:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle_2.png" alt></p><a id="more"></a><hr><h4 id="主备恢复流程摘要"><a href="#主备恢复流程摘要" class="headerlink" title="主备恢复流程摘要"></a>主备恢复流程摘要</h4><p>1、停止【主服务器】tomcat服务(./shutdown.sh)</p><p>2、停止【主服务器】oracle监听服务（lsnrctl stop）</p><p>3、【主服务器】切换oracle用户进行expdp备份</p><p>4、主备服务器传输备份文件（MD5SUM查看是否文件完整）</p><p>5、【备服务器】impdp数据恢复</p><p>6、启动tomcat服务(./start.sh)</p><p>7、启动oracle监听服务（lsnrctl start）</p><h4 id="备份前数据库参数设置"><a href="#备份前数据库参数设置" class="headerlink" title="备份前数据库参数设置"></a>备份前数据库参数设置</h4><blockquote><p>备份参数DEFERRED_SEGMENT_CREATION {true | flase}【非必须设置参数】</p></blockquote><p>–true 当该参数值等于true的时候，我们数据库中新创建的表，并且没有insert过任何数据的情况下，采用导出时不会将该表导出， 因为在dba_segments和user_segments是查不到该表的信息，只有当我们插入记录才会在两表中生成段的信息，并能导出该表。</p><p>–flase 当此参数为false时，不存在dba_segments和user_segments中的段表也可以通过导出的方式将该表导出。</p><p>查询：show parameter DEFERRED_SEGMENT_CREATION;</p><p>更改：alter system set DEFERRED_SEGMENT_CREATION=false scope=both;</p><p>﻿</p><blockquote><p>expdp备份目录【必须设置参数】</p></blockquote><p>select * from dba_directories;</p><p>创建/修改：create or replace directory 备份目录名称 as ‘备份绝对路径’;</p><p>授权：grant read,write on dirrectory 备份目录名称 to 用户;</p><p>删除：drop directory 备份目录名称;</p><p>﻿</p><blockquote><p>普通用户授权导出全库【非必要设置参数】：</p></blockquote><p>grant datadump_exp_full_database to test;</p><p>﻿</p><h4 id="备份命令"><a href="#备份命令" class="headerlink" title="备份命令"></a>备份命令</h4><p>普通用户：expdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y</p><p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expdp pas/pas directory=DMPDID_PAS dumpfile=AESPAS_20230213_01.dmp logfile=AESPAS_20230213_01.log compression=all reuse_dumpfiles=y</span><br></pre></td></tr></table></figure></p><p>system用户：expdp system/密码 directory=备份目录名称 schema=策略名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y</p><p>﻿<br>– directory：指定转储文件和日志文件所在的目录（数据库设置）</p><p>– dumpfile：备份文件的名称</p><p>– schema：策略名称，如果system导出全库去掉schema参数，加上full=y</p><p>– logfile：备份日志名称</p><p>– reuse_dumpfiles：是否覆盖备份文件，Y覆盖N不覆盖</p><p>– FULL：指定数据库模式导出,默认为N，{Y | N}为Y时,标识执行数据库导出</p><p>– tables：导出指定的表名，%代表通配符，如果是system可以加上：策略名称.表名</p><p>– exclude：排除指定的表名不导出</p><p>– content：导出内容{ALL | DATA_ONLY | METADATA_ONLY}当设置CONTENT为ALL时,将导出对象定义及其所有数据.为DATA_ONLY时,只导出对象数据,为METADATA_ONLY时,只导出对象定义</p><p>– FLASHBACK_TIME：指定导出特定时间点的表数据（FLASHBACK_TIME=“TO_TIMESTAMP(’25-08-2004 14:35:00’,’DD-MM-YYYY HH24:MI:SS’)”）</p><p>– FILESIZE：指定导出文件的最大尺寸,默认为0</p><p>– NOLOGFILE：该选项用于指定禁止生成导出日志文件,默认值为N</p><p>– QUERY：用于指定过滤导出数据的where条件</p><p>– compression：ALL ：对导出的元数据和表数据都进行压缩，得到的导出文件是最小的，耗时也是最长的。DATA_ONLY ：仅对表数据进行压缩，对于大数据量的导出效果明显，会比METADATA_ONLY方式得到更小的压缩文件。METADATA_ONLY ：仅对元数据进行压缩，而不会对表数据进行压缩，这种压缩执行后效果一般不是很明显，不过速度比较快。NONE ：不进行任何的压缩，导出后的文件也是最大的。DEFAULT ：默认方式，即不指定COMPRESSION参数，会采用默认的压缩方式METADATA_ONLY。</p><p>﻿</p><p>导出表：<br>expdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y tables=表名称1,表名称2,表名称N</p><p>﻿</p><h4 id="恢复命令"><a href="#恢复命令" class="headerlink" title="恢复命令"></a>恢复命令</h4><p>impdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp exclude=statistics table_exists_action=replace<br>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impdp pas/pas directory=DMPDID_PAS dumpfile=AESPAS_20230213_01.dmp exclude=statistics table_exists_action=replace</span><br></pre></td></tr></table></figure></p><h4 id="查看存在的job："><a href="#查看存在的job：" class="headerlink" title="查看存在的job："></a>查看存在的job：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM DBA_DATAPUMP_JOBS;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle_2.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>NODE17或者18版本启动NODE16版本的项目:0308010C:digital envelope routines::unsupported</title>
    <link href="http://pygo2.top/articles/40755/"/>
    <id>http://pygo2.top/articles/40755/</id>
    <published>2023-02-18T11:46:20.000Z</published>
    <updated>2023-02-18T11:46:20.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>前端项目open2lui一直都用的是node/16.9.1版本，最近用n更新了最新版、lts版本，分别是node/18.14.0、node/19.6.0，完了用18活着19版本npm去运行npm run dev的时候报错了，导致项目起不来，后台查询资料解决了高版本启动项目的问题。</p>          </div><p><img src="/images/article_npm_1.png" alt></p><span class="label primary">NODE</span> <span class="label warning">VUE</span><a id="more"></a><hr><p>在项目的package.json文件中记录了npm scripts，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;vue-cli-service serve --open --copy --mode development&quot;,</span><br><span class="line">    &quot;devs&quot;: &quot;vue-cli-service serve --open --copy --https --mode development&quot;,</span><br><span class="line">    &quot;prod&quot;: &quot;vue-cli-service serve --open --copy --mode production&quot;,</span><br><span class="line">    &quot;prods&quot;: &quot;vue-cli-service serve --open --copy --https --mode production&quot;,</span><br><span class="line">    &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class="line">    &quot;lint-fix&quot;: &quot;eslint --ext .js,.vue src --fix&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;vue-cli-service build --report&quot;,</span><br><span class="line">    &quot;build:prod&quot;: &quot;vue-cli-service build --report --mode production --dest dist&quot;,</span><br><span class="line">    &quot;build:dev&quot;: &quot;vue-cli-service build --report --mode development --dest dist&quot;,</span><br><span class="line">    &quot;preview&quot;: &quot;node build/index.js --preview&quot;,</span><br><span class="line">    &quot;new&quot;: &quot;plop&quot;,</span><br><span class="line">    &quot;svgo&quot;: &quot;svgo -f src/icons/svg --config=src/icons/svgo.yml&quot;,</span><br><span class="line">    &quot;test:unit&quot;: &quot;jest --clearCache &amp;&amp; vue-cli-service test:unit&quot;,</span><br><span class="line">    &quot;test:ci&quot;: &quot;npm run lint &amp;&amp; npm run test:unit&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>用18/19高版本的node运行<strong><em>npm run dev</em></strong>，发生了错误。</p><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Error: error:0308010C:digital envelope routines::unsupported</span><br><span class="line">    at new Hash (node:internal/crypto/hash:71:19)</span><br><span class="line">    at Object.createHash (node:crypto:133:10)</span><br><span class="line">    at module.exports (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/util/createHash.js:135:53)</span><br><span class="line">    at NormalModule._initBuildHash (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:417:16)</span><br><span class="line">    at handleParseError (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:471:10)</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:503:5</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:358:12</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:373:3</span><br><span class="line">    at iterateNormalLoaders (/Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:214:10)</span><br><span class="line">    at Array.&lt;anonymous&gt; (/Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:205:4)</span><br><span class="line">    at Storage.finished (/Users/gaomingliang/gitee/open2lui/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:55:16)</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:91:9</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/graceful-fs/graceful-fs.js:123:16</span><br><span class="line">    at FSReqCallback.readFileAfterClose [as oncomplete] (node:internal/fs/read_file_context:68:3) &#123;</span><br><span class="line">  opensslErrorStack: [ &apos;error:03000086:digital envelope routines::initialization error&apos; ],</span><br><span class="line">  library: &apos;digital envelope routines&apos;,</span><br><span class="line">  reason: &apos;unsupported&apos;,</span><br><span class="line">  code: &apos;ERR_OSSL_EVP_UNSUPPORTED&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node.js v18.14.0</span><br><span class="line">npm notice</span><br><span class="line">npm notice New minor version of npm available! 9.3.1 -&gt; 9.4.2</span><br><span class="line">npm notice Changelog: https://github.com/npm/cli/releases/tag/v9.4.2</span><br><span class="line">npm notice Run npm install -g npm@9.4.2 to update!</span><br><span class="line">npm notice</span><br></pre></td></tr></table></figure><h4 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h4><p>对前端不是特别精通，具体什么原因上网查了下，大致理解原因：<br>出现这个错误是因为node.js V17、18、19高版本中最近发布的OpenSSL3.0, 而OpenSSL3.0对允许算法和密钥大小增加了严格的限制，可能会对生态系统造成一些影响.</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>方案一</p></blockquote><p>在控制台中进行变量设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NODE_OPTIONS=--openssl-legacy-provider</span><br></pre></td></tr></table></figure></p><p>把NODE_OPTIONS变量设置为环境变量，在运行的时候直接export导入，<strong><em>npm run dev</em></strong>运行。</p><blockquote><p>方案二</p></blockquote><p>直接修改package.json scripts内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vue-cli-service serve --open --copy --mode development</span><br></pre></td></tr></table></figure></p><p>运行<strong><em>npm run dev</em></strong>，高版本node的问题解决。<br>但是，这么处理有个问题，就是其他的script脚本也需要加上变量，不如直接在控制台活着配置文件中添加。</p><h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><p>IDE：WebStorm<br>OS：MacOS<br>node多版本管理用的为n。</p><font size="6.5" color="red">坚持学习。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;p&gt;前端项目open2lui一直都用的是node/16.9.1版本，最近用n更新了最新版、lts版本，分别是node/18.14.0、node/19.6.0，完了用18活着19版本npm去运行npm run dev的时候报错了，导致项目起不来，后台查询资料解决了高版本启动项目的问题。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_npm_1.png&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;NODE&lt;/span&gt; &lt;span class=&quot;label warning&quot;&gt;VUE&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="NPM" scheme="http://pygo2.top/tags/NPM/"/>
    
      <category term="NODE" scheme="http://pygo2.top/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>Window Server 2012R2添加我的电脑</title>
    <link href="http://pygo2.top/articles/7239/"/>
    <id>http://pygo2.top/articles/7239/</id>
    <published>2023-02-03T04:28:36.000Z</published>
    <updated>2023-02-03T04:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_window_server_2012.png" alt></p><div class="note primary">            <p>新服务器刚装的Window Server 2012R2系统，打开服务器发现找不到我的电脑，需要对其进行简单操作下才可以显示。</p>          </div><span class="label info">Window Server</span><a id="more"></a><hr><h4 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">服务器系统</td><td style="text-align:center">Windows Server2012 R2 Standard</td></tr></tbody></table><h4 id="我的电脑"><a href="#我的电脑" class="headerlink" title="我的电脑"></a>我的电脑</h4><p>1、运行win徽标键+R，输入下列代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe shell32.dll,Control_RunDLL desk.cpl,,0</span><br></pre></td></tr></table></figure></p><font size="6.5" color="red">逗号一定要用英文逗号,</font><br><font size="6.5" color="blue">逗号一定要用英文逗号,</font><br><font size="6.5" color="yellow">逗号一定要用英文逗号,</font><p>2、确定之后，会出现以下设置配置的项目，勾选我的电脑以及需要桌面显示快捷入口。<br><img src="computer.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_window_server_2012.png&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;新服务器刚装的Window Server 2012R2系统，打开服务器发现找不到我的电脑，需要对其进行简单操作下才可以显示。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Window Server&lt;/span&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://pygo2.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Window Server" scheme="http://pygo2.top/tags/Window-Server/"/>
    
  </entry>
  
  <entry>
    <title>Oracle报错监听TNS-01155</title>
    <link href="http://pygo2.top/articles/4107/"/>
    <id>http://pygo2.top/articles/4107/</id>
    <published>2023-01-19T13:22:57.000Z</published>
    <updated>2023-01-19T13:22:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle.jpeg" alt></p><span class="label default">Oracle</span> <span class="label info"> TNS-01155</span><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>今天对线上数据库进行<strong><em>expdp</em></strong>备份，先lsntctl stop停止了监听，然后expdp进行数据库备份，备份完之后在启动监听发现直接报：TNS-01155的错误。<br><img src="lsnrctl_start_error.PNG" alt></p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>找到Oracle数据库的listener.ora文件中，vim删除以下内容代码：<br><img src="listener.PNG" alt></p><h3 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h3><p><img src="lsnrctl_start.PNG" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label default&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt; TNS-01155&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装2个Tomcat</title>
    <link href="http://pygo2.top/articles/27869/"/>
    <id>http://pygo2.top/articles/27869/</id>
    <published>2023-01-13T07:35:46.000Z</published>
    <updated>2023-01-13T07:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label primary">Java</span> <span class="label success">Tomcat</span><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><div class="note primary">            <p>在Windows上运行Tomcat6、Tomcat8，Tomcat与对应的Java有版本关系。</p>          </div><p><img src="/images/article_youzan.jpeg" alt></p><a id="more"></a><hr><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">Tomcat版本</th><th style="text-align:center">Java版本</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">6</td><td style="text-align:center">1.6</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">8</td><td style="text-align:center">1.8</td></tr></tbody></table><h4 id="特殊说明"><a href="#特殊说明" class="headerlink" title="特殊说明"></a>特殊说明</h4><p>第一套Tomcat6与Java1.6正常配置，这里不做详细描述</p><h4 id="操作方式"><a href="#操作方式" class="headerlink" title="操作方式"></a>操作方式</h4><p>安装JDK1.8与TOMCAT8，环境已经已存在tomcat6，如果只有一个tomcat不需要设置。<br>TOMCAT8/Bin/startup.bat、TOMCAT8/bin/setclasspath.bat最上面添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rem =====================================================================</span><br><span class="line">rem tomcat</span><br><span class="line">SET CATALINA_HOME=D:\apache-tomcat-8.5.59</span><br><span class="line">SET CATALINA_BASE=D:\apache-tomcat-8.5.59</span><br><span class="line">SET CATALINA_TMPDIR=D:\apache-tomcat-8.5.59\temp</span><br><span class="line"></span><br><span class="line">rem java</span><br><span class="line">SET JAVA_HOME=C:\Program Files\Java\jdk1.8.0_271</span><br><span class="line">rem =====================================================================</span><br></pre></td></tr></table></figure></p><p><font color="red" size="4.5">坚持学习。。。。。。</font>！！！。</p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label primary&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;Tomcat&lt;/span&gt;
&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;在Windows上运行Tomcat6、Tomcat8，Tomcat与对应的Java有版本关系。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_youzan.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://pygo2.top/categories/Java/"/>
    
    
      <category term="Java" scheme="http://pygo2.top/tags/Java/"/>
    
      <category term="Tomcat" scheme="http://pygo2.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>VUE之input只允许输入数字</title>
    <link href="http://pygo2.top/articles/18893/"/>
    <id>http://pygo2.top/articles/18893/</id>
    <published>2023-01-06T13:48:38.000Z</published>
    <updated>2023-01-06T13:48:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/INPUT图片" alt></p><div class="note primary">            <p>加工INPUT标签，只允许输入数字</p>          </div><span class="label primary">VUE</span> <span class="label info">INPUT</span><a id="more"></a><hr><p>在写前端代码的时候，经常会遇到手机号的input输入框，除了位数限制，还有数字等判断，对input进行加工，满足纯数字输入：</p><p>方式一：<br>直接用oninput事件处理输入的内容，正则匹配内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">    v-model.trim=&quot;formData.start&quot;</span><br><span class="line">    placeholder=&quot;文档转换的起始页码，默认首页开始&quot;</span><br><span class="line">    :size=&quot;inputAttrs.size&quot;</span><br><span class="line">    :maxlength=&quot;formDataLimit.start&quot;</span><br><span class="line">    :clearable=&quot;inputAttrs.clear&quot;</span><br><span class="line">    :show-word-limit=&quot;inputAttrs.limit&quot;</span><br><span class="line">    :prefix-icon=&quot;inputAttrs.prefixIcon&quot;</span><br><span class="line">    :disabled=&quot;!formData.mode&quot;</span><br><span class="line">    oninput=&quot;this.value=this.value.replace(/[^\d]/g,&apos;&apos;);&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>方式二：<br>直接使用Element-UI的el-input-number组件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input-number v-model=&quot;num&quot; @change=&quot;handleChange&quot; :min=&quot;1&quot; :max=&quot;10&quot; label=&quot;描述文字&quot;&gt;&lt;/el-input-number&gt;</span><br></pre></td></tr></table></figure></p><div class="post_cus_note">END</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/INPUT图片&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;加工INPUT标签，只允许输入数字&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;INPUT&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE富文本编辑器学习</title>
    <link href="http://pygo2.top/articles/8950/"/>
    <id>http://pygo2.top/articles/8950/</id>
    <published>2022-12-24T04:58:49.000Z</published>
    <updated>2022-12-24T04:58:49.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label primary">VUE</span> <span class="label info">富文本编辑器</span><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><div class="note primary">            <p>最近的OpenTool平台集成了SQLBase功能，大致就是采集日常用的SQL语句，供使用的人参考，所以在富文本这搜索一下，自己使用的是wangeditor（国产）。</p>          </div><p><img src="/images/article_vue.jpeg" alt></p><a id="more"></a><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>下面2个文章是</p><ul><li>11款vue富文本编辑器推荐：<a href="https://www.geekku.com/spec/vue/1574.html" target="_blank" rel="noopener">https://www.geekku.com/spec/vue/1574.html</a></li><li>最好用的8款Vue富文本编辑器测评与推荐：<a href="https://kalacloud.com/blog/vue-richtext-editor/" target="_blank" rel="noopener">https://kalacloud.com/blog/vue-richtext-editor/</a></li></ul><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>国内外有很多VUE富文本组件，有TinyMCE、CKEditor5等等，太多了，在本次开发中我使用的wangeditor，是一位国内友人开源的一款富文本，总体来说文档、使用还是很方便的。</p><p>官网：<a href="https://www.wangeditor.com/" target="_blank" rel="noopener">https://www.wangeditor.com/</a></p><p>具体的代码、ISSUE、API都有很详细的说明，而且还支持二次开发。</p><font size="5.5" color="red"><strong><em>坚持每天学习。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;富文本编辑器&lt;/span&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;最近的OpenTool平台集成了SQLBase功能，大致就是采集日常用的SQL语句，供使用的人参考，所以在富文本这搜索一下，自己使用的是wangeditor（国产）。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>Pycharm出现Non-Project-Files-Protection的解决方法</title>
    <link href="http://pygo2.top/articles/62345/"/>
    <id>http://pygo2.top/articles/62345/</id>
    <published>2022-12-15T15:22:37.000Z</published>
    <updated>2022-12-15T15:22:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_pycharm.jpeg" alt></p><div class="note primary">            <font color="red" size="4.5">Pycharm打开Python项目出现Non Project Files Protection提示，并且处理项目文件需要确认，度娘上找了下解决方案，记录一下</font>          </div><span class="label default">Python</span> <span class="label primary">Pycharm</span><a id="more"></a><hr><p>从远程git仓库clone项目的时候，如果项目包含<strong><em><font color="red" size="5.5">.idea文件夹</font></em></strong>，直接用Pycharm工具打开的时候，会提示：Non Project Files Protection。<br>关闭Pycharm，找到项目目录，删除.idea文件夹即可。</p><blockquote><p>win</p></blockquote><p>1.需要设置文件夹显示隐藏文件、文件夹<br>2.资源管理器删除.idea文件夹</p><blockquote><p>MacOS</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd 项目目录</span><br><span class="line">ll</span><br><span class="line">rm -rf .idea</span><br></pre></td></tr></table></figure><p>Pycharm工具重新打开项目。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_pycharm.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;font color=&quot;red&quot; size=&quot;4.5&quot;&gt;Pycharm打开Python项目出现Non Project Files Protection提示，并且处理项目文件需要确认，度娘上找了下解决方案，记录一下&lt;/font&gt;
          &lt;/div&gt;
&lt;span class=&quot;label default&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Pycharm&lt;/span&gt;
    
    </summary>
    
      <category term="IDE" scheme="http://pygo2.top/categories/IDE/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="IDE" scheme="http://pygo2.top/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>前端栅格布局xs sm md lg xl详解</title>
    <link href="http://pygo2.top/articles/6149/"/>
    <id>http://pygo2.top/articles/6149/</id>
    <published>2022-10-08T15:12:19.000Z</published>
    <updated>2022-10-08T15:12:19.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <p>在写VUE的时候用到了Layout布局组件，el-col里面有多个属性是控制大小的，一直都是搞后台的，css基本是小白，查阅资料记录一下学习的内容。</p>          </div><span class="label info">前端</span><a id="more"></a><hr><p>看下官网实例，响应式设计：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-row :gutter=&quot;10&quot;&gt;</span><br><span class="line">  &lt;el-col :xs=&quot;8&quot; :sm=&quot;6&quot; :md=&quot;4&quot; :lg=&quot;3&quot; :xl=&quot;1&quot;&gt;&lt;div class=&quot;grid-content bg-purple&quot;&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">  &lt;el-col :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;&lt;div class=&quot;grid-content bg-purple-light&quot;&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">  &lt;el-col :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;&lt;div class=&quot;grid-content bg-purple&quot;&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">  &lt;el-col :xs=&quot;8&quot; :sm=&quot;6&quot; :md=&quot;4&quot; :lg=&quot;3&quot; :xl=&quot;1&quot;&gt;&lt;div class=&quot;grid-content bg-purple-light&quot;&gt;&lt;/div&gt;&lt;/el-col&gt;</span><br><span class="line">&lt;/el-row&gt;</span><br></pre></td></tr></table></figure></p><p>里面包含了xs sm md lg xl属性来控制宽度，对这几个值进行详解：</p><ul><li>xl【extra large】：屏幕 &gt;= 1920px，超大显示器</li><li>lg【large】：1200px &lt;= 屏幕 &lt;= 1920px，台式1920*1080显示器</li><li>md【middle】：992px&lt;= 屏幕 &lt;= 1200px，适合笔记本</li><li>sm【small】：768px &lt;= 屏幕 &lt;= 992px，适合平板</li><li>xs【extra small】：屏幕&lt;=768，手机端屏幕</li></ul><blockquote><p>优点</p></blockquote><p>如果屏幕的大小发生改变，系统会根据设置的大小进行分别显示，感觉挺好用的。</p><blockquote><p>测试</p></blockquote><p>正常分辨率</p><p><img src="1.png" alt></p><p>更改分辨率</p><p><img src="2.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;在写VUE的时候用到了Layout布局组件，el-col里面有多个属性是控制大小的，一直都是搞后台的，css基本是小白，查阅资料记录一下学习的内容。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;前端&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML" scheme="http://pygo2.top/tags/HTML/"/>
    
      <category term="CSS" scheme="http://pygo2.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Bash脚本之自动解压zip</title>
    <link href="http://pygo2.top/articles/42651/"/>
    <id>http://pygo2.top/articles/42651/</id>
    <published>2022-09-24T01:00:12.000Z</published>
    <updated>2022-09-24T01:00:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_bash.jpeg" alt></p><span class="label primary">Bash</span> <span class="label info">Bash脚本系列</span><div class="post_cus_note">Bash脚本系列</div><a id="more"></a><hr><p>记录日常服务器运维用到的Bash脚本。</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>每天新接收新的zip文件，并且zip文件压缩的时候是直接集成了文件，没有把文件放在一个目录里面在进行压缩。</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LDIR=/home/mingliang.gao/newdir</span><br><span class="line">cd $LDIR</span><br><span class="line">files=$(ls | grep &quot;.zip&quot;)</span><br><span class="line"></span><br><span class="line">for file in $files</span><br><span class="line">do</span><br><span class="line">  echo $file</span><br><span class="line">  NAME=`echo &quot;$file&quot; | cut -d&apos;.&apos; -f1`</span><br><span class="line">  #EXTENSION=`echo &quot;$file&quot; | cut -d&apos;.&apos; -f2`</span><br><span class="line">  if [ ! -e &quot;$&#123;NAME&#125;&quot; ]; then</span><br><span class="line">    unzip $&#123;LDIR&#125;/$&#123;file&#125; -d $&#123;LDIR&#125;/$&#123;NAME&#125;</span><br><span class="line">  fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>LDIR：*.zip文件所在的目录</p><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p>其他Bash系列请点击tag标签进行查看。</p><font size="6.5" color="red">Bash脚本系列，持续更新中。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_bash.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Bash&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Bash脚本系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Bash脚本系列&lt;/div&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://pygo2.top/categories/Linux/"/>
    
      <category term="Bash" scheme="http://pygo2.top/categories/Linux/Bash/"/>
    
    
      <category term="Linux" scheme="http://pygo2.top/tags/Linux/"/>
    
      <category term="Bash" scheme="http://pygo2.top/tags/Bash/"/>
    
      <category term="Bash脚本系列" scheme="http://pygo2.top/tags/Bash%E8%84%9A%E6%9C%AC%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Oracle手工导入dat数据</title>
    <link href="http://pygo2.top/articles/30542/"/>
    <id>http://pygo2.top/articles/30542/</id>
    <published>2022-09-18T15:33:04.000Z</published>
    <updated>2022-09-18T15:33:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle.jpeg" alt></p><div class="note info">            <p>最近开始搞Oracle数据库，看存储过程学习了一下Oracle怎么导入dat数据的，这里记录一下，方便日后查询使用。</p>          </div><span class="label info">Oracle</span> <span class="label primary">sqlplus</span> <span class="label default">sqlldr</span><a id="more"></a><hr><h4 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h4><blockquote><p>第一步：生成ctl文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/u01/app/oracle/product/11.2.0/dbhome_1/bin/sqlplus pas/pas @/home/oracle/pas_control/control.sql T01_CPCT_BSC_INF_FILE_H T01_CPCT_BSC_INF_FILE_H.dat /data/gtp/20220830/</span><br></pre></td></tr></table></figure><ul><li>/u01/app/oracle/product/11.2.0/dbhome_1/bin/sqlplus：为sqlplus命令的绝对路径，根据环境不同进行更改</li><li>pas/pas：账户/密码</li><li>@/home/oracle/pas_control/control.sql：下面会有control.sql文件详解，这里也是绝对路径</li><li>T01_CPCT_BSC_INF_FILE_H：表名，control.sql文件会用到列举表字段信息</li><li>T01_CPCT_BSC_INF_FILE_H.dat：dat文件名称</li><li>/data/gtp/20220830/：dat数据存放的绝对路径</li></ul><blockquote><p>第二步：根据生成的ctl导入数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/u01/app/oracle/product/11.2.0/dbhome_1/bin/sqlldr userid=pas/pas control=/data/gtp/20220830/T01_CPCT_BSC_INF_FILE_H.ctl log=/data/gtp/20220830/T01_CPCT_BSC_INF_FILE_H.log direct=true</span><br></pre></td></tr></table></figure><ul><li>/u01/app/oracle/product/11.2.0/dbhome_1/bin/sqlldr：sqlldr命令的绝对路径</li><li>userid=pas/pas：账户/密码</li><li>control=/data/gtp/20220830/T01_CPCT_BSC_INF_FILE_H.ctl：执行第一步sqlplus会生成新的ctl文件，存放的导入命令</li><li>log=/data/gtp/20220830/T01_CPCT_BSC_INF_FILE_H.log：导入日志</li><li>direct=true：是否为直接路径</li></ul><p>sqlldr是Oracle数据加载工具，还有bad、data、discard、skip等很多参数，详细查看man命令或者官网。</p><h4 id="control-sql"><a href="#control-sql" class="headerlink" title="control.sql"></a>control.sql</h4><p>目的产生新的ctl文件，导入数据时候使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">set echo off</span><br><span class="line">set heading off</span><br><span class="line">set verify off</span><br><span class="line">set feedback off</span><br><span class="line">set show off</span><br><span class="line">set trim off</span><br><span class="line">set pages 0</span><br><span class="line">set concat on</span><br><span class="line">set lines 300</span><br><span class="line">set trimspool on</span><br><span class="line">set trimout on</span><br><span class="line">spool &amp;3&amp;1..ctl</span><br><span class="line"></span><br><span class="line">select &apos;LOAD DATA&apos;||chr (10)||</span><br><span class="line">       &apos;CHARACTERSET ZHS16GBK&apos;||chr (10)||</span><br><span class="line">       &apos;INFILE &apos;&apos;&amp;3&amp;2&apos;&apos;&apos;||chr (10)||</span><br><span class="line">       &apos;APPEND INTO TABLE &apos;||table_name||chr (10)||</span><br><span class="line">       &apos;FIELDS TERMINATED BY &quot;&quot; optionally enclosed by &apos;&apos;&quot;&apos;&apos;&apos;||chr (10)||</span><br><span class="line">       &apos;TRAILING NULLCOLS&apos;||chr (10)||&apos;(&apos;</span><br><span class="line">from   USER_TABLES</span><br><span class="line">where  table_name = upper (&apos;&amp;1&apos;);</span><br><span class="line"></span><br><span class="line">select decode (column_id, 1, &apos;   &apos;, &apos; , &apos;)||</span><br><span class="line">       rpad (column_name, 33, &apos; &apos;)||</span><br><span class="line">       decode (data_type,</span><br><span class="line">               &apos;VARCHAR2&apos;, &apos;CHAR(2000) NULLIF (&apos;||column_name||&apos;=BLANKS)&apos;,</span><br><span class="line">               &apos;FLOAT&apos;,    &apos;DECIMAL EXTERNAL NULLIF(&apos;||column_name||&apos;=BLANKS)&apos;,</span><br><span class="line">               &apos;NUMBER&apos;,   decode (data_precision, 0,</span><br><span class="line">                           &apos;INTEGER EXTERNAL NULLIF (&apos;||column_name||</span><br><span class="line">                           &apos;=BLANKS)&apos;, decode (data_scale, 0,</span><br><span class="line">                           &apos;INTEGER EXTERNAL NULLIF (&apos;||</span><br><span class="line">                           column_name||&apos;=BLANKS)&apos;,</span><br><span class="line">                           &apos;DECIMAL EXTERNAL NULLIF (&apos;||</span><br><span class="line">                           column_name||&apos;=BLANKS)&apos;)),</span><br><span class="line">               &apos;DATE&apos;,     &apos;DATE &quot;MM/DD/YY&quot;  NULLIF (&apos;||column_name||&apos;=BLANKS)&apos;,</span><br><span class="line">               null)</span><br><span class="line">from   user_tab_columns</span><br><span class="line">where  table_name = upper (&apos;&amp;1&apos;)</span><br><span class="line">order  by column_id;</span><br><span class="line">select &apos;)&apos;</span><br><span class="line">from sys.dual;</span><br><span class="line">spool off</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;最近开始搞Oracle数据库，看存储过程学习了一下Oracle怎么导入dat数据的，这里记录一下，方便日后查询使用。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;sqlplus&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;sqlldr&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之企业微信消息</title>
    <link href="http://pygo2.top/articles/33254/"/>
    <id>http://pygo2.top/articles/33254/</id>
    <published>2022-09-06T13:39:24.000Z</published>
    <updated>2022-09-06T13:39:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>企业微信消息通知<br>腾讯企业微信官网提供一整套WebHook API接口，内容相当丰富，可以实现内部、第三方等各种各样的功能<br>详情参考reference urls</p><h4 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h4><p>运用requests模拟API请求，这里主要实现了2大请求：</p><ul><li>ACCESS TOKEN：认证token获取</li><li>SEND MESSAGE：发送消息</li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qywx_lib = QYWXLib(corp_id=企业号标识, secret=管理组凭证密钥, agent_id=机器人应用ID)</span><br><span class="line">qywx_lib.send_to_user_by_markdown(to_user, message)</span><br></pre></td></tr></table></figure><p>初始化必须的参数：</p><ul><li>corp_id: 企业号标识</li><li>secret: 管理组凭证密钥</li><li>agent_id: 机器人应用ID</li></ul><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    企业微信消息通知</span><br><span class="line">    腾讯企业微信官网提供一整套WebHook API接口，内容相当丰富，可以实现内部、第三方等各种各样的功能</span><br><span class="line">    详情参考reference urls</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/9/14&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;quality-inspect&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    qywx_lib = QYWXLib(corp_id=企业号标识, secret=管理组凭证密钥, agent_id=机器人应用ID)</span><br><span class="line">    qywx_lib.send_to_user_by_markdown(to_user, message)</span><br><span class="line"></span><br><span class="line">    初始化必须的参数：</span><br><span class="line">        - corp_id: 企业号标识</span><br><span class="line">        - secret: 管理组凭证密钥</span><br><span class="line">        - agent_id: 机器人应用ID</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line">    运用requests模拟API请求，这里主要实现了2大请求：</span><br><span class="line">        - ACCESS TOKEN：认证token获取</span><br><span class="line">        - SEND MESSAGE：发送消息</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line">  - ACCESS TOKEN：https://developer.work.weixin.qq.com/document/path/91039</span><br><span class="line">  - 发送应用消息：https://developer.work.weixin.qq.com/document/path/90236</span><br><span class="line">  - 全局错误码：https://developer.work.weixin.qq.com/document/path/90313#10649</span><br><span class="line">  --------------------------------------------------------------------------------------</span><br><span class="line">    企业微信API response：</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;errcode&quot; : 0,</span><br><span class="line">      &quot;errmsg&quot; : &quot;ok&quot;,</span><br><span class="line">      &quot;invaliduser&quot; : &quot;userid1|userid2&quot;,</span><br><span class="line">      &quot;invalidparty&quot; : &quot;partyid1|partyid2&quot;,</span><br><span class="line">      &quot;invalidtag&quot;: &quot;tagid1|tagid2&quot;,</span><br><span class="line">      &quot;unlicenseduser&quot; : &quot;userid3|userid4&quot;,</span><br><span class="line">      &quot;msgid&quot;: &quot;xxxx&quot;,</span><br><span class="line">      &quot;response_code&quot;: &quot;xyzxyz&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  --------------------------------------------------------------------------------------</span><br><span class="line">  - 错误码查询工具：https://open.work.weixin.qq.com/devtool/query</span><br><span class="line">  - 发消息API参考：https://developer.work.weixin.qq.com/document/path/90236</span><br><span class="line">  - MARKDOWN语法：https://developer.work.weixin.qq.com/document/path/90236#%E6%94%AF%E6%8C%81%E7%9A%84markdown%E8%AF%AD%E6%B3%95</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good time everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python qywx_lib.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">from deploy.status import Status</span><br><span class="line">from config import QYWX_SEND_MESSAGE, \</span><br><span class="line">    QYWX_ACCESS_TOKEN, DEBUG</span><br><span class="line">from deploy.logger import logger as LOG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class QYWXLib(object):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    QYWX class</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def __init__(self, corp_id, secret, agent_id):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Initialize parameter</span><br><span class="line">        :param corp_id: 企业号标识</span><br><span class="line">        :param secret: 管理组凭证密钥</span><br><span class="line">        :param agent_id: 机器人应用ID</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if DEBUG:</span><br><span class="line">            LOG.debug(&apos;QYWX lib is loading.&apos;)</span><br><span class="line">        self.CORP_ID = corp_id</span><br><span class="line">        self.SECRET = secret</span><br><span class="line">        self.AGENT_ID = agent_id</span><br><span class="line">        self.token = self.__init_token()   # 每次实例化调用初始化access token</span><br><span class="line"></span><br><span class="line">    def __init_token(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Initialize access token</span><br><span class="line">        :return: string</span><br><span class="line"></span><br><span class="line">        请求方式： GET（HTTPS）</span><br><span class="line">        请求地址： https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=ID&amp;corpsecret=SECRET</span><br><span class="line">            - ID：企业号标识</span><br><span class="line">            - SECRET：管理组凭证密钥</span><br><span class="line">        返回示例：</span><br><span class="line">            &#123;</span><br><span class="line">               &quot;errcode&quot;: 0,</span><br><span class="line">               &quot;errmsg&quot;: &quot;ok&quot;,</span><br><span class="line">               &quot;access_token&quot;: &quot;accesstoken000001&quot;,</span><br><span class="line">               &quot;expires_in&quot;: 7200</span><br><span class="line">            &#125;</span><br><span class="line">            - errcode：出错返回码，为0表示成功，非0表示调用失败</span><br><span class="line">            - errmsg：返回码提示语</span><br><span class="line">            - access_token：获取到的凭证，最长为512字节</span><br><span class="line">            - expires_in：凭证的有效时间（秒）</span><br><span class="line"></span><br><span class="line">        ACCESS TOKEN API参考：https://developer.work.weixin.qq.com/document/path/91039</span><br><span class="line"></span><br><span class="line">        TODO</span><br><span class="line">        7200秒（2小时）后续优化为缓存机制，避免在有效期内频繁调用</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if DEBUG:</span><br><span class="line">            LOG.debug(&apos;QYWX lib start to apply access token.&apos;)</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;corpid&quot;: self.CORP_ID,</span><br><span class="line">            &quot;corpsecret&quot;: self.SECRET</span><br><span class="line">        &#125;</span><br><span class="line">        req = requests.get(url=QYWX_ACCESS_TOKEN, params=data)</span><br><span class="line">        res = req.json()</span><br><span class="line">        if res.get(&quot;errcode&quot;) == 0 and res.get(&quot;errmsg&quot;) == &quot;ok&quot;:</span><br><span class="line">            if DEBUG:</span><br><span class="line">                LOG.debug(&apos;QYWX lib access token apply success.&apos;)</span><br><span class="line">            return res.get(&quot;access_token&quot;)</span><br><span class="line">        else:</span><br><span class="line">            LOG.error(&apos;QYWX lib access token apply failure: %s&apos; % res.get(&apos;errmsg&apos;))</span><br><span class="line">            return None</span><br><span class="line"></span><br><span class="line">    def check_token(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        check access token is or not available</span><br><span class="line">        :return: bool</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        return True if self.token else False</span><br><span class="line"></span><br><span class="line">    def send_to_user_by_markdown(self, to_user: list, content: str, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        用户私发消息 &gt;&gt;&gt; markdown语法消息体</span><br><span class="line"></span><br><span class="line">        send message to user list by the content of markdown type data</span><br><span class="line">        :param to_user: 企业微信用户ID列表，列表类型参数</span><br><span class="line">        :param content: markdown消息体</span><br><span class="line">        :param kwargs: 其他key-value参数</span><br><span class="line">        :return: json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        请求方式：POST（HTTPS）</span><br><span class="line">        请求地址： https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=ACCESS_TOKEN</span><br><span class="line">            - ACCESS_TOKEN：access token</span><br><span class="line">        请求数据：</span><br><span class="line">            &#123;</span><br><span class="line">               &quot;touser&quot; : &quot;UserID1|UserID2|UserID3&quot;,</span><br><span class="line">               &quot;toparty&quot; : &quot;PartyID1|PartyID2&quot;,</span><br><span class="line">               &quot;totag&quot; : &quot;TagID1 | TagID2&quot;,</span><br><span class="line">               &quot;msgtype&quot;: &quot;markdown&quot;,</span><br><span class="line">               &quot;agentid&quot; : 1,</span><br><span class="line">               &quot;markdown&quot;: &#123;</span><br><span class="line">                    &quot;content&quot;: &quot;&quot;</span><br><span class="line">               &#125;,</span><br><span class="line">               &quot;enable_duplicate_check&quot;: 0,</span><br><span class="line">               &quot;duplicate_check_interval&quot;: 1800</span><br><span class="line">            &#125;</span><br><span class="line">        参数说明：</span><br><span class="line">            参数         是否必须            说明</span><br><span class="line">            touser        否            成员ID列表（消息接收者，多个接收者用‘|’分隔，最多支持1000个）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</span><br><span class="line">            toparty        否            部门ID列表，多个接收者用‘|’分隔，最多支持100个。当touser为@all时忽略本参数</span><br><span class="line">            totag        否            标签ID列表，多个接收者用‘|’分隔，最多支持100个。当touser为@all时忽略本参数</span><br><span class="line">            msgtype        是            消息类型，此时固定为：markdown</span><br><span class="line">            agentid        是            企业应用的id，整型。企业内部开发，可在应用的设置页面查看；第三方服务商，可通过接口 获取企业授权信息 获取该参数值</span><br><span class="line">            content        是            markdown内容，最长不超过2048个字节，必须是utf8编码</span><br><span class="line">            enable_duplicate_check否    表示是否开启重复消息检查，0表示否，1表示是，默认0</span><br><span class="line">            duplicate_check_interval否表示是否重复消息检查的时间间隔，默认1800s，最大不超过4小时</span><br><span class="line">        返回示例：</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;errcode&quot; : 0,</span><br><span class="line">              &quot;errmsg&quot; : &quot;ok&quot;,</span><br><span class="line">              &quot;invaliduser&quot; : &quot;userid1|userid2&quot;,</span><br><span class="line">              &quot;invalidparty&quot; : &quot;partyid1|partyid2&quot;,</span><br><span class="line">              &quot;invalidtag&quot;: &quot;tagid1|tagid2&quot;,</span><br><span class="line">              &quot;unlicenseduser&quot; : &quot;userid3|userid4&quot;,</span><br><span class="line">              &quot;msgid&quot;: &quot;xxxx&quot;,</span><br><span class="line">              &quot;response_code&quot;: &quot;xyzxyz&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            - errcode：返回码</span><br><span class="line">            - errmsg：对返回码的文本描述内容</span><br><span class="line">            - invaliduser：不合法的userid，不区分大小写，统一转为小写</span><br><span class="line">            - invalidparty：不合法的partyid</span><br><span class="line">            - invalidtag：不合法的标签id</span><br><span class="line">            - unlicenseduser：没有基础接口许可(包含已过期)的userid</span><br><span class="line">            - msgid：消息id，用于撤回应用消息</span><br><span class="line">            - response_code：仅消息类型为“按钮交互型”，“投票选择型”和“多项选择型”的模板卡片消息返回，应用可使用response_code调用更新模版卡片消息接口，24小时内有效，且只能使用一次</span><br><span class="line"></span><br><span class="line">        发消息API参考：https://developer.work.weixin.qq.com/document/path/90236</span><br><span class="line">        MARKDOWN语法：https://developer.work.weixin.qq.com/document/path/90236#%E6%94%AF%E6%8C%81%E7%9A%84markdown%E8%AF%AD%E6%B3%95</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if not self.token:</span><br><span class="line">            return Status(212, &apos;failure&apos;, &apos;请检查access token是否获取成功&apos;, &#123;&#125;).json()</span><br><span class="line">        if not to_user:</span><br><span class="line">            return Status(212, &apos;failure&apos;, &apos;缺少用户列表&apos;, &#123;&#125;).json()</span><br><span class="line">        if not isinstance(to_user, list):</span><br><span class="line">            return Status(213, &apos;failure&apos;, &apos;用户列表必须为List类型&apos;, &#123;&#125;).json()</span><br><span class="line">        if not content:</span><br><span class="line">            return Status(212, &apos;failure&apos;, &apos;缺少消息内容&apos;, &#123;&#125;).json()</span><br><span class="line"></span><br><span class="line">        url = &quot;%s?access_token=%s&quot; % (QYWX_SEND_MESSAGE, self.token)</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;touser&quot;: &quot;|&quot;.join(to_user),</span><br><span class="line">            &quot;msgtype&quot;: &quot;markdown&quot;,</span><br><span class="line">            &quot;agentid&quot;: self.AGENT_ID,</span><br><span class="line">            &quot;markdown&quot;: &#123;</span><br><span class="line">                &quot;content&quot;: content</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;enable_duplicate_check&quot;: 0,</span><br><span class="line">            &quot;duplicate_check_interval&quot;: 1800</span><br><span class="line">        &#125;</span><br><span class="line">        req = requests.post(url=url, json=data)</span><br><span class="line">        res = req.json()</span><br><span class="line">        if res.get(&quot;errcode&quot;) == 0 and res.get(&quot;errmsg&quot;) == &quot;ok&quot;:</span><br><span class="line">            return Status(100, &apos;success&apos;, &apos;成功&apos;, &#123;&#125;).json()</span><br><span class="line">        else:</span><br><span class="line">            return Status(501, &apos;failure&apos;, res.get(&apos;errmsg&apos;), &#123;&#125;).json()</span><br></pre></td></tr></table></figure><h4 id="官网API教程"><a href="#官网API教程" class="headerlink" title="官网API教程"></a>官网API教程</h4><ul><li>ACCESS TOKEN：<a href="https://developer.work.weixin.qq.com/document/path/91039" target="_blank" rel="noopener">https://developer.work.weixin.qq.com/document/path/91039</a></li><li>发送应用消息：<a href="https://developer.work.weixin.qq.com/document/path/90236" target="_blank" rel="noopener">https://developer.work.weixin.qq.com/document/path/90236</a></li><li><p>全局错误码：<a href="https://developer.work.weixin.qq.com/document/path/90313#10649" target="_blank" rel="noopener">https://developer.work.weixin.qq.com/document/path/90313#10649</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">企业微信API response：</span><br><span class="line">&#123;</span><br><span class="line">  &quot;errcode&quot; : 0,</span><br><span class="line">  &quot;errmsg&quot; : &quot;ok&quot;,</span><br><span class="line">  &quot;invaliduser&quot; : &quot;userid1|userid2&quot;,</span><br><span class="line">  &quot;invalidparty&quot; : &quot;partyid1|partyid2&quot;,</span><br><span class="line">  &quot;invalidtag&quot;: &quot;tagid1|tagid2&quot;,</span><br><span class="line">  &quot;unlicenseduser&quot; : &quot;userid3|userid4&quot;,</span><br><span class="line">  &quot;msgid&quot;: &quot;xxxx&quot;,</span><br><span class="line">  &quot;response_code&quot;: &quot;xyzxyz&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>错误码查询工具：<a href="https://open.work.weixin.qq.com/devtool/query" target="_blank" rel="noopener">https://open.work.weixin.qq.com/devtool/query</a></p></li><li>发消息API参考：<a href="https://developer.work.weixin.qq.com/document/path/90236" target="_blank" rel="noopener">https://developer.work.weixin.qq.com/document/path/90236</a></li><li>MARKDOWN语法：<a href="https://developer.work.weixin.qq.com/document/path/90236#%E6%94%AF%E6%8C%81%E7%9A%84markdown%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">https://developer.work.weixin.qq.com/document/path/90236#%E6%94%AF%E6%8C%81%E7%9A%84markdown%E8%AF%AD%E6%B3%95</a></li></ul><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之dtalk钉钉消息</title>
    <link href="http://pygo2.top/articles/58292/"/>
    <id>http://pygo2.top/articles/58292/</id>
    <published>2022-09-05T12:59:18.000Z</published>
    <updated>2022-09-05T12:59:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>DingApi类，主要用请求dingTalk openApi来操作DingDing进行发消息等操作。<br>目前，只支持机器人推送消息操作<br>类添加了is_avail对access token进行判断是否可用，如果不可用中止程序</p><h4 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h4><ul><li>官网发消息API：<a href="https://developers.dingtalk.com/document/robots/chatbots-send-one-on-one-chat-messages-in-batches/h2-xsq-kwt-wyg" target="_blank" rel="noopener">https://developers.dingtalk.com/document/robots/chatbots-send-one-on-one-chat-messages-in-batches/h2-xsq-kwt-wyg</a></li><li>Status JSON说明：<a href="http://pygo2.top/articles/40461/">http://pygo2.top/articles/40461/</a></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">json_message = &#123;</span><br><span class="line">    &quot;title&quot;: &quot;2021-12绩效明细&quot;,</span><br><span class="line">    &quot;text&quot;: &quot;#### 2021-11绩效明细  \n  - 个人存款绩效：278  \n  - 贷款绩效：278  \n  - 部门履职绩效：278  \n  - 存款下降扣发：278  \n  - ![screenshot](https://img.alicdn.com/tfs/TB1NwmBEL9TBuNjy1zbXXXpepXa-2400-1218.png)&quot;</span><br><span class="line">&#125;</span><br><span class="line">user = &apos;manager2730&apos;</span><br><span class="line">dapi = DingApi()</span><br><span class="line">res = dapi.robot2send(message=json_message, to_id=user)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    DingTalk Api class, it use to push message</span><br><span class="line">    采用单例模式的DingApi类，主要用请求dingTalk openApi来操作DingDing进行发消息等操作。</span><br><span class="line">    目前，只支持机器人推送消息操作</span><br><span class="line">    类添加了is_avail对access token进行判断是否可用，如果不可用中止程序</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2021/11/23&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;open2lisapi&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    json_message = &#123;</span><br><span class="line">        &quot;title&quot;: &quot;2021-12绩效明细&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;#### 2021-11绩效明细  \n  - 个人存款绩效：278  \n  - 贷款绩效：278  \n  - 部门履职绩效：278  \n  - 存款下降扣发：278  \n  - ![screenshot](https://img.alicdn.com/tfs/TB1NwmBEL9TBuNjy1zbXXXpepXa-2400-1218.png)&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    user = &apos;manager2730&apos;</span><br><span class="line">    dapi = DingApi()</span><br><span class="line">    res = dapi.robot2send(message=json_message, to_id=user)</span><br><span class="line">    print(res)</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line">    DingDing官网开放平台</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line">    官网发消息API：https://developers.dingtalk.com/document/robots/chatbots-send-one-on-one-chat-messages-in-batches/h2-xsq-kwt-wyg</span><br><span class="line">    Status JSON说明：http://pygo2.top/articles/40461/</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good life everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import sys</span><br><span class="line">import json</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">from deploy.utils.base_class import Singleton</span><br><span class="line">from deploy.utils.status import Status</span><br><span class="line">from deploy.config import DTALK_TOKEN_URL, DTALK_BASE_URL, DEBUG</span><br><span class="line">from deploy.utils.logger import logger as LOG</span><br><span class="line"></span><br><span class="line">from alibabacloud_dingtalk.robot_1_0.client import Client as dingtalkrobot_1_0Client</span><br><span class="line">from alibabacloud_tea_openapi import models as open_api_models</span><br><span class="line">from alibabacloud_dingtalk.robot_1_0 import models as dingtalkrobot__1__0_models</span><br><span class="line">from alibabacloud_tea_util import models as util_models</span><br><span class="line">from alibabacloud_tea_util.client import Client as UtilClient</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DtalkLib(object):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    dingTalk Api class</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def __init__(self, app_key, app_secret):</span><br><span class="line">        if DEBUG:</span><br><span class="line">            LOG.debug(&quot;DingApi class start initialize.&quot;)</span><br><span class="line">        self.RC = 0</span><br><span class="line">        self.app_key = app_key</span><br><span class="line">        self.app_secret = app_secret</span><br><span class="line">        self.base_api_url = DTALK_BASE_URL</span><br><span class="line">        self.token_api_url = DTALK_TOKEN_URL</span><br><span class="line">        self.msg_type = &apos;sampleMarkdown&apos;</span><br><span class="line">        self.access_token = self.get_token()</span><br><span class="line">        self.client = self.create_client()</span><br><span class="line"></span><br><span class="line">    def is_avail(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        是否有access token，如果没有token，则中止发信息请求</span><br><span class="line">        建议用sys.exit()优雅的方式退出</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        return True if self.access_token else False</span><br><span class="line"></span><br><span class="line">    def close(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        关闭实例，清除access token</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        self.access_token = &apos;&apos;</span><br><span class="line"></span><br><span class="line">    def get_token(self) -&gt; str:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        获取唯一access token，2h有效期</span><br><span class="line">        this function is static method, it use to get access token code from dingTalk open api</span><br><span class="line">        :return: access token</span><br><span class="line">        result type is string</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if DEBUG:</span><br><span class="line">            LOG.debug(&quot;DingApi get access token.&quot;)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            &apos;Access-Control-Allow-Origin&apos;: &apos;*&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        params = &#123;&quot;appkey&quot;: self.app_key, &quot;appsecret&quot;: self.app_secret&#125;</span><br><span class="line">        url = &quot;%s%s&quot; % (self.base_api_url, self.token_api_url)</span><br><span class="line">        try:</span><br><span class="line">            response = requests.get(url=url, headers=headers, params=params)</span><br><span class="line">            if response.status_code == 200:</span><br><span class="line">                json_res = response.json()</span><br><span class="line">                if json_res and json_res.get(&quot;errcode&quot;) == 0:</span><br><span class="line">                    return json_res.get(&quot;access_token&quot;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            LOG.error(&apos;Initialize dingTalk openApi access token occur error: %s&apos; % e)</span><br><span class="line">            return &apos;&apos;</span><br><span class="line">        LOG.error(&apos;Initialize dingTalk openApi get access token failure, please try again later.&apos;)</span><br><span class="line">        return &apos;&apos;</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def create_client() -&gt; dingtalkrobot_1_0Client:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        初始化账号Client</span><br><span class="line">        @return: Client</span><br><span class="line">        @throws Exception</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        config = open_api_models.Config()</span><br><span class="line">        config.protocol = &apos;https&apos;</span><br><span class="line">        config.region_id = &apos;central&apos;</span><br><span class="line">        return dingtalkrobot_1_0Client(config)</span><br><span class="line"></span><br><span class="line">    def robot2send(self, message: json, to_id: str) -&gt; json:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        use dingtalk openApi to send message</span><br><span class="line">        :param message: DingDing消息体，为MarkDown语法</span><br><span class="line">        :param to_id: 接收人ID</span><br><span class="line">        :return: json type result</span><br><span class="line">            status_id: 状态码,</span><br><span class="line">            status: success or failure,</span><br><span class="line">            msg: 消息体</span><br><span class="line">            data: 数据体（diact类型）</span><br><span class="line">            具体说明：http://pygo2.top/articles/40461/</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # check access token &amp;&amp; parameters</span><br><span class="line">        if not self.access_token:</span><br><span class="line">            return Status(</span><br><span class="line">                202, &quot;failure&quot;, &quot;Not found access token.&quot;, &#123;&#125;).status_body</span><br><span class="line">        batch_send_otoheaders = dingtalkrobot__1__0_models.BatchSendOTOHeaders()</span><br><span class="line">        batch_send_otoheaders.x_acs_dingtalk_access_token = self.access_token</span><br><span class="line">        batch_send_otorequest = dingtalkrobot__1__0_models.BatchSendOTORequest(</span><br><span class="line">            robot_code=self.app_key,</span><br><span class="line">            user_ids=[to_id],</span><br><span class="line">            msg_key=self.msg_type,</span><br><span class="line">            msg_param=json.dumps(message)</span><br><span class="line">        )</span><br><span class="line">        try:</span><br><span class="line">            response = self.client.batch_send_otowith_options(batch_send_otorequest, batch_send_otoheaders, util_models.RuntimeOptions())</span><br><span class="line">            json_resp = &#123;</span><br><span class="line">                &apos;process&apos;: response.body.process_query_key or &apos;&apos;,</span><br><span class="line">                &apos;failure&apos;: response.body.invalid_staff_id_list or [],</span><br><span class="line">                &apos;control&apos;: response.body.flow_controlled_staff_id_list or []</span><br><span class="line">            &#125;</span><br><span class="line">            return Status(</span><br><span class="line">                100, &quot;success&quot;, &quot;成功&quot;, json_resp).status_body</span><br><span class="line">        except Exception as e:</span><br><span class="line">            msg = &apos;DingTalk send message to [%s] occur error: %s&apos; % (to_id, e)</span><br><span class="line">            LOG.error(msg)</span><br><span class="line">            return Status(</span><br><span class="line">                601, &quot;failure&quot;, msg, &#123;&#125;).status_body</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之config配置解析</title>
    <link href="http://pygo2.top/articles/51787/"/>
    <id>http://pygo2.top/articles/51787/</id>
    <published>2022-08-31T15:15:26.000Z</published>
    <updated>2022-08-31T15:15:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>用来解析config.yaml配置文件，添加默认值。</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    解析配置</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/9/14&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;quality-inspect&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good time everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python config.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import yaml</span><br><span class="line">import inspect</span><br><span class="line">import logging</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># logging.basicConfig()</span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get current folder, solve is or not frozen of the script</span><br><span class="line">def _get_cur_folder():</span><br><span class="line">    if getattr(sys, &quot;frozen&quot;, False):</span><br><span class="line">        return os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">    else:</span><br><span class="line">        cur_folder = os.path.dirname(inspect.getfile(inspect.currentframe()))</span><br><span class="line">        return os.path.abspath(cur_folder)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get global projects by mode</span><br><span class="line">def _get_global_projects(mode=&apos;dev&apos;):</span><br><span class="line">    if mode not in [&apos;dev&apos;, &apos;prod&apos;]:</span><br><span class="line">        return None</span><br><span class="line">    return os.path.join(os.path.join(os.path.join(_get_cur_folder(), &apos;etc&apos;), mode), &apos;projects.json&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get current run config by mode</span><br><span class="line">def _get_config(mode=&apos;dev&apos;):</span><br><span class="line">    if mode not in [&apos;dev&apos;, &apos;prod&apos;]:</span><br><span class="line">        return None</span><br><span class="line">    return os.path.join(os.path.join(os.path.join(_get_cur_folder(), &apos;etc&apos;), mode), &apos;config.yaml&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># default log dir</span><br><span class="line">def __get_log_dir():</span><br><span class="line">    return os.path.join(_get_cur_folder(), &apos;log&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># default log dir</span><br><span class="line">def __get_result_dir():</span><br><span class="line">    return os.path.join(_get_cur_folder(), &apos;result&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">default config</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"># SERVER</span><br><span class="line">NAME = &apos;quality-inspect&apos;</span><br><span class="line">VERSION = &apos;v1.0.0&apos;</span><br><span class="line">DEBUG = True</span><br><span class="line">SECRET_KEY = &apos;BelivemeIcanfly&apos;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">enrty: initializate config</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">mode = os.environ.get(&apos;mode&apos;) or &apos;dev&apos;</span><br><span class="line">_config_file = _get_config(mode)</span><br><span class="line">if not os.path.exists(_config_file):</span><br><span class="line">    logger.critical(&apos;====== config file is not exist, exit ======&apos;)</span><br><span class="line">    sys.exit(1)</span><br><span class="line"></span><br><span class="line">with open(_config_file, &apos;r&apos;, encoding=&apos;UTF-8&apos;) as f:</span><br><span class="line">    _config_info = yaml.safe_load(f)</span><br><span class="line">    if not _config_info:</span><br><span class="line">        logger.critical(&apos;====== config file is unavail, exit ======&apos;)</span><br><span class="line">        sys.exit(1)</span><br><span class="line"></span><br><span class="line">    # SERVER</span><br><span class="line">    NAME = _config_info[&apos;SERVER&apos;][&apos;NAME&apos;] or NAME</span><br><span class="line">    VERSION = _config_info[&apos;SERVER&apos;][&apos;VERSION&apos;] or VERSION</span><br><span class="line">    DEBUG = _config_info[&apos;SERVER&apos;][&apos;DEBUG&apos;]</span><br><span class="line">    DEBUG = False if not DEBUG else DEBUG</span><br><span class="line">    SECRET_KEY = _config_info[&apos;SERVER&apos;][&apos;SECRET_KEY&apos;] or SECRET_KEY</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之watcher打点</title>
    <link href="http://pygo2.top/articles/31232/"/>
    <id>http://pygo2.top/articles/31232/</id>
    <published>2022-08-28T13:55:22.000Z</published>
    <updated>2022-08-28T13:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>用于API计时打点，写入request表。</p><h4 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h4><p>装饰器。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>装饰器的方式使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line">@watcher(watcher_args=request)</span><br><span class="line">watcher_args参数为request对象，里面包含blueprint, endpoint, method, path, header等请求参数</span><br></pre></td></tr></table></figure></p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    watcher</span><br><span class="line">    用于API计时打点，写入request表</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/8/26 23:02&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __blog__ = &quot;www.pygo2.top&quot;</span><br><span class="line">    __project__ = &quot;open2lisapi&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    from flask import request</span><br><span class="line">    @watcher(watcher_args=request)</span><br><span class="line">    watcher_args参数为request对象，里面包含blueprint, endpoint, method, path, header等请求参数</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good life everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python watcher.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">from datetime import datetime</span><br><span class="line">from functools import wraps</span><br><span class="line">from pprint import pprint</span><br><span class="line"></span><br><span class="line">from deploy.utils.logger import logger as LOG</span><br><span class="line">from deploy.utils.utils import get_rtx_id</span><br><span class="line">from deploy.services.request import RequestService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 声明一个全局RequestService对象</span><br><span class="line">request_service = RequestService()</span><br><span class="line">GLOBAL_NEW_ENDPOINR = [</span><br><span class="line">    &apos;dashboard.pan&apos;,</span><br><span class="line">    &apos;dashboard.pan_chart&apos;,</span><br><span class="line">    &apos;dashboard.index&apos;,</span><br><span class="line">    &apos;auth.user_list&apos;,</span><br><span class="line">    &apos;info.dict_list&apos;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># method desc: API request to write database table [request]</span><br><span class="line">def __add_request(request, cost, rtx=None):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    API request information to insert into request table</span><br><span class="line">    :param request: API request object parameters</span><br><span class="line">    :param cost: API run time, unit is second</span><br><span class="line">    :param rtx: request user rtx-id</span><br><span class="line">        - 1.request get &quot;X-Rtx-Id&quot;</span><br><span class="line">        - 2.no request by manual set</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    rtx_id = get_rtx_id(request) or rtx    # not rtx_id, no insert</span><br><span class="line">    if not rtx_id:</span><br><span class="line">        return False</span><br><span class="line">    method = getattr(request, &apos;method&apos;)     # method allow only get or post</span><br><span class="line">    if method and str(method).upper() not in [&apos;GET&apos;, &apos;POST&apos;]:</span><br><span class="line">        return False</span><br><span class="line">    if hasattr(request, &apos;endpoint&apos;) and getattr(request, &apos;endpoint&apos;) in GLOBAL_NEW_ENDPOINR:</span><br><span class="line">        RequestService().add_request(request=request, cost=cost, rtx=rtx_id)</span><br><span class="line">    else:</span><br><span class="line">        request_service.add_request(request=request, cost=cost, rtx=rtx_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; API打点计时器 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">def watcher(watcher_args):</span><br><span class="line">    def _watcher(fn):</span><br><span class="line">        @wraps(fn)</span><br><span class="line">        def _wrapper(*args, **kwargs):</span><br><span class="line">            start = datetime.now()</span><br><span class="line">            res = fn(*args, **kwargs)</span><br><span class="line">            end = datetime.now()</span><br><span class="line">            cost = round((end-start).microseconds * pow(0.1, 6), 4)   # API run time, unit is second</span><br><span class="line">            if watcher_args:</span><br><span class="line">                __add_request(request=watcher_args, cost=cost)  # API request to write database table [request]</span><br><span class="line">            LOG.info(&apos;@Watcher [%s] is run: %s&apos; % (getattr(watcher_args, &apos;endpoint&apos;) or fn.__name__, cost))</span><br><span class="line">            return res</span><br><span class="line"></span><br><span class="line">        return _wrapper</span><br><span class="line">    return _watcher</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之utils公共方法</title>
    <link href="http://pygo2.top/articles/61799/"/>
    <id>http://pygo2.top/articles/61799/</id>
    <published>2022-08-24T14:54:36.000Z</published>
    <updated>2022-08-24T14:54:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>公共方法模块。</p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    utils method</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/9/14&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;quality-inspect&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good time everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python utils.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import inspects</span><br><span class="line">import hashlib</span><br><span class="line">import time</span><br><span class="line">import subprocess</span><br><span class="line">from datetime import datetime, timedelta</span><br><span class="line">from functools import wraps</span><br><span class="line">from deploy.logger import logger as LOG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_cur_folder():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # get current folder, solve is or not frozen of the script</span><br><span class="line">    :return: the file current folder</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if getattr(sys, &quot;frozen&quot;, False):</span><br><span class="line">        return os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">    else:</span><br><span class="line">        cur_folder = os.path.dirname(inspects.getfile(inspects.currentframe()))</span><br><span class="line">        return os.path.abspath(cur_folder)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def md5(v):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # md5加密</span><br><span class="line">    :param v: value</span><br><span class="line">    :return: md5 value</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if isinstance(v, str):</span><br><span class="line">        v = v.encode(&apos;utf-8&apos;)</span><br><span class="line">    return hashlib.md5(v).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def s2d(s, fmt=&quot;%Y-%m-%d %H:%M:%S&quot;):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 字符串转日期</span><br><span class="line">    :param s: string type time</span><br><span class="line">    :param fmt: transfer to formatter</span><br><span class="line">    :return: datetime type time</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return datetime.strptime(s, fmt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def d2s(d, fmt=&quot;%Y-%m-%d %H:%M:%S&quot;):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 日期转字符串</span><br><span class="line">    :param d: datetime type time</span><br><span class="line">    :param fmt: transfer to formatter</span><br><span class="line">    :return: string type time</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return d.strftime(fmt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def d2ts(d):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 日期转ts</span><br><span class="line">    :param d: datetime type parameter</span><br><span class="line">    :return: time.time type</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return time.mktime(d.timetuple())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def s2ts(s, format=&quot;%Y-%m-%d %H:%M:%S&quot;):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 字符串转ts</span><br><span class="line">    :param s: sting type parameter</span><br><span class="line">    :return: time.time type</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    d = s2d(s, format)</span><br><span class="line">    return d2ts(d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dura_date(d1, d2, need_d=False):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # get datetime1 and datatime difference 时间差</span><br><span class="line">    :param d1: datetime parameter 1</span><br><span class="line">    :param d2: datetime parameter 2</span><br><span class="line">    :param need_d: is or not need hours, minutes, seconds</span><br><span class="line">    :return: result 1: seconds</span><br><span class="line">    result 2: hours, minutes, seconds</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if type(d1) is str:</span><br><span class="line">        d1 = s2d(d1)</span><br><span class="line">    if type(d2) is str:</span><br><span class="line">        d2 = s2d(d2)</span><br><span class="line">    d = d2 - d1</span><br><span class="line">    if need_d is False:</span><br><span class="line">        seconds = d.seconds</span><br><span class="line">        mins = seconds / 60.00</span><br><span class="line">        hours = mins / 60.00</span><br><span class="line">        return seconds, mins, hours</span><br><span class="line">    return d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_now_time():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 获取当前时间</span><br><span class="line">    :return: to return the now of datetime type</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return datetime.now()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_now_date():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 获取当前日期</span><br><span class="line">    :return: to return the now of date type</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return datetime.now().date()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_now(format=&quot;%Y-%m-%d %H:%M:%S&quot;):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 获取当前时间str</span><br><span class="line">    :return: to return the now of string type</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return d2s(datetime.now(), format)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_week_day(date):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 获取weekday</span><br><span class="line">    :param date: date</span><br><span class="line">    :return: week</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    weekdaylist = (&apos;星期一&apos;, &apos;星期二&apos;, &apos;星期三&apos;, &apos;星期四&apos;, &apos;星期五&apos;, &apos;星期六&apos;, &apos;星期天&apos;)</span><br><span class="line">    weekday = weekdaylist[date.weekday()]</span><br><span class="line">    return weekday</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 计时器</span><br><span class="line">def timeer(fn):</span><br><span class="line">    @wraps(fn)</span><br><span class="line">    def _wrapper(*args, **kwargs):</span><br><span class="line">        start = datetime.now()</span><br><span class="line">        res = fn(*args, **kwargs)</span><br><span class="line">        end = datetime.now()</span><br><span class="line">        LOG.info(&apos;@timeer %s is run: %s&apos; % (fn.__name__, (end-start).seconds))</span><br><span class="line">        return res</span><br><span class="line"></span><br><span class="line">    return _wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 真实IP</span><br><span class="line">def get_real_ip(request):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    flask api request object</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not request.headers.getlist(&quot;X-Forwarded-For&quot;):</span><br><span class="line">        ip = request.remote_addr</span><br><span class="line">    else:</span><br><span class="line">        ip = request.headers.getlist(&quot;X-Forwarded-For&quot;)[0]</span><br><span class="line">    return ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># rtx-id by request config</span><br><span class="line">def get_rtx_id(request):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    flask api request object</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return request.headers.get(&quot;X-Rtx-Id&quot;) \</span><br><span class="line">        if request.headers.get(&quot;X-Rtx-Id&quot;) else &apos;&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def mk_dirs(path):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # mdkirs folder 建立文件夹（递归）</span><br><span class="line">    :param path: to make folder path</span><br><span class="line">    :return: path</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    os.makedirs(path)</span><br><span class="line">    return path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_base_dir():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 获取项目base目录（deploy）</span><br><span class="line">    :return: deploy base path</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return os.path.dirname(get_cur_folder())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def v2decimal(x, y):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 保留小数</span><br><span class="line">    :param x: value</span><br><span class="line">    :param y: point decimal</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not x:</span><br><span class="line">        return None</span><br><span class="line">    if x.find(&apos;.&apos;) &gt; 0:</span><br><span class="line">        return round(x, y)</span><br><span class="line">    return int(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_month_list():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    static method</span><br><span class="line">    # 获取月份list</span><br><span class="line">    :return: list data</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    return [u&apos;1月&apos;, u&apos;2月&apos;, u&apos;3月&apos;, u&apos;4月&apos;, u&apos;5月&apos;, u&apos;6月&apos;,</span><br><span class="line">            u&apos;7月&apos;, u&apos;8月&apos;, u&apos;9月&apos;, u&apos;10月&apos;, u&apos;11月&apos;, u&apos;12月&apos;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def filename2md5(rtx_id: str = None, file_name: str = None, _type: str = &apos;file&apos;):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    get local store file name by md5 value</span><br><span class="line">    获取本地存储文件名称md5</span><br><span class="line">    :param rtx_id: rtx id</span><br><span class="line">    :param file_name: file name</span><br><span class="line">    :param _type: file type, is file,image, and so on.</span><br><span class="line">    :return:</span><br><span class="line">    result is tuple</span><br><span class="line">    param1: md5 value no suffix</span><br><span class="line">    param2: md5 value have suffix</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    file_names = os.path.splitext(file_name)</span><br><span class="line">    suffix = (file_names[1]).lower() if len(file_names) &gt; 1 else &apos;&apos;</span><br><span class="line">    _v = file_name + get_now() + _type + rtx_id if rtx_id \</span><br><span class="line">        else file_name + get_now() + _type</span><br><span class="line">    md5_v = md5(_v)</span><br><span class="line">    return md5_v, md5_v + suffix if suffix else md5_v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def check_length(data, limit=10):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    check data length</span><br><span class="line">    :param data: check data</span><br><span class="line">    :param limit: length limit</span><br><span class="line"></span><br><span class="line">    return True or False</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not data:</span><br><span class="line">        return True</span><br><span class="line">    return True if len(data) &lt;= limit else False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_day_week_date(query_date):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    get query day current week</span><br><span class="line">    :param query_date: query day, is str</span><br><span class="line"></span><br><span class="line">    return dict</span><br><span class="line">    format:</span><br><span class="line">        - start_time</span><br><span class="line">        - end_time</span><br><span class="line">        - [星期一date, 星期二date, 星期三date, 星期四date, 星期五date, 星期六date, 星期日date]</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if not query_date:</span><br><span class="line">        query_date = get_now_date()</span><br><span class="line">    if isinstance(query_date, str):</span><br><span class="line">        query_date = s2d(query_date, fmt=&quot;%Y-%m-%d&quot;)</span><br><span class="line">    current_week = query_date.isoweekday()  # 当前时间所在本周第几天</span><br><span class="line">    start_week_date = (query_date - timedelta(days=current_week - 1))</span><br><span class="line">    end_week_date = (query_date + timedelta(days=7 - current_week))</span><br><span class="line">    _week = list()</span><br><span class="line">    for day_num in range(0, 7, 1):</span><br><span class="line">        _week.append(d2s(start_week_date + timedelta(days=day_num), fmt=&quot;%Y-%m-%d&quot;))</span><br><span class="line">    _res = &#123;</span><br><span class="line">        &quot;start_week_date&quot;: d2s(start_week_date, fmt=&quot;%Y-%m-%d&quot;),  # 本周起始日期</span><br><span class="line">        &quot;end_week_date&quot;: d2s(end_week_date, fmt=&quot;%Y-%m-%d&quot;),      # 本周结束日期</span><br><span class="line">        &quot;week_date&quot;: _week                   # 本周日期列表</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    return _res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ping(ip: str, **kwargs):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    insect to ping the ip connection</span><br><span class="line"></span><br><span class="line">    :param ip: the target ip or 域名</span><br><span class="line">    :param kwargs: the ping other parameters</span><br><span class="line">    :return: bool</span><br><span class="line"></span><br><span class="line">    **kwargs:</span><br><span class="line">        -a             将地址解析为主机名。</span><br><span class="line">        -n count       要发送的回显请求数。</span><br><span class="line">        -l size        发送缓冲区大小。</span><br><span class="line">        -w timeout     等待每次回复的超时时间(毫秒)。</span><br><span class="line"></span><br><span class="line">    usage:</span><br><span class="line">        ping(ip=&apos;www.baidu.com&apos;, n=4, w=2000, l=32)</span><br><span class="line">        or</span><br><span class="line">        ping(ip=&apos;127.0.0.1&apos;, n=4, w=2000, l=32)</span><br><span class="line"></span><br><span class="line">    param default value:</span><br><span class="line">        - count: 4</span><br><span class="line">        - size: 32</span><br><span class="line">        - timeout: 2000</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    cmd = [&apos;ping&apos;]</span><br><span class="line">    # **kwargs &gt; ping &gt; a</span><br><span class="line">    if kwargs.get(&apos;a&apos;):</span><br><span class="line">        cmd.append(&apos;-a&apos;)</span><br><span class="line">    # **kwargs &gt; ping &gt; n</span><br><span class="line">    if kwargs.get(&apos;n&apos;) or kwargs.get(&apos;count&apos;):</span><br><span class="line">        count = kwargs.get(&apos;n&apos;) or kwargs.get(&apos;count&apos;) or 4</span><br><span class="line">        if not isinstance(count, int):</span><br><span class="line">            count = 4</span><br><span class="line">        if count &gt; 0:</span><br><span class="line">            cmd.append(&apos;-n %s&apos; % count)</span><br><span class="line">    # **kwargs &gt; ping &gt; l</span><br><span class="line">    if kwargs.get(&apos;l&apos;) or kwargs.get(&apos;size&apos;):</span><br><span class="line">        size = kwargs.get(&apos;l&apos;) or kwargs.get(&apos;size&apos;) or 32</span><br><span class="line">        if not isinstance(size, int):</span><br><span class="line">            size = 0</span><br><span class="line">        if size &gt; 0:</span><br><span class="line">            cmd.append(&apos;-l %s&apos; % size)</span><br><span class="line">    # **kwargs &gt; ping &gt; w</span><br><span class="line">    if kwargs.get(&apos;w&apos;) or kwargs.get(&apos;timeout&apos;):</span><br><span class="line">        timeout = kwargs.get(&apos;w&apos;) or kwargs.get(&apos;timeout&apos;) or 2000</span><br><span class="line">        if not isinstance(timeout, int):</span><br><span class="line">            timeout = 0</span><br><span class="line">        if timeout &gt; 0:</span><br><span class="line">            cmd.append(&apos;-w %s&apos; % timeout)</span><br><span class="line">    cmd.append(ip)</span><br><span class="line">    cmd_str = &apos; &apos;.join(cmd)</span><br><span class="line">    ret_res = subprocess.call(cmd_str, shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE,</span><br><span class="line">                              stderr=subprocess.PIPE)</span><br><span class="line">    return True if ret_res == 0 else False</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之logger日志</title>
    <link href="http://pygo2.top/articles/5145/"/>
    <id>http://pygo2.top/articles/5145/</id>
    <published>2022-08-18T14:20:32.000Z</published>
    <updated>2022-08-18T14:20:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>日志模块。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from app.utils.logger import logger</span><br><span class="line"></span><br><span class="line">logger.debug(&apos;message&apos;)</span><br><span class="line">logger.info(&apos;message&apos;)</span><br><span class="line">logger.warning(&apos;message&apos;)</span><br><span class="line">logger.error(&apos;message&apos;)</span><br><span class="line">logger.critical(&apos;message&apos;)</span><br></pre></td></tr></table></figure><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    日志</span><br><span class="line"></span><br><span class="line">    record  system information</span><br><span class="line">    level: debug, info, warning, error, critical</span><br><span class="line"></span><br><span class="line">    CRITICAL 50</span><br><span class="line">    ERROR 40</span><br><span class="line">    WARNING 30</span><br><span class="line">    INFO 20</span><br><span class="line">    DEBUG 10</span><br><span class="line"></span><br><span class="line">formatter：</span><br><span class="line">    %(levelno)s：打印日志级别的数值。</span><br><span class="line"></span><br><span class="line">    %(levelname)s：打印日志级别的名称。</span><br><span class="line"></span><br><span class="line">    %(pathname)s：打印当前执行程序的路径，其实就是sys.argv[0]。</span><br><span class="line"></span><br><span class="line">    %(filename)s：打印当前执行程序名。</span><br><span class="line"></span><br><span class="line">    %(funcName)s：打印日志的当前函数。</span><br><span class="line"></span><br><span class="line">    %(lineno)d：打印日志的当前行号。</span><br><span class="line"></span><br><span class="line">    %(asctime)s：打印日志的时间。</span><br><span class="line"></span><br><span class="line">    %(thread)d：打印线程ID。</span><br><span class="line"></span><br><span class="line">    %(threadName)s：打印线程名称。</span><br><span class="line"></span><br><span class="line">    %(process)d：打印进程ID。</span><br><span class="line"></span><br><span class="line">    %(processName)s：打印线程名称。</span><br><span class="line"></span><br><span class="line">    %(module)s：打印模块名称。</span><br><span class="line"></span><br><span class="line">    %(message)s：打印日志信息。</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/9/14&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;quality-inspect&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    from app.utils.logger import logger</span><br><span class="line"></span><br><span class="line">    logger.debug(&apos;message&apos;)</span><br><span class="line">    logger.info(&apos;message&apos;)</span><br><span class="line">    logger.warning(&apos;message&apos;)</span><br><span class="line">    logger.error(&apos;message&apos;)</span><br><span class="line">    logger.critical(&apos;message&apos;)</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good time everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python logger.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">import datetime</span><br><span class="line">import inspect</span><br><span class="line">import logging</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">from logging.handlers import RotatingFileHandler</span><br><span class="line">from config import LOG_DIR, LOG_LEVEL, LOG_FORMATTER, LOG_FILENAME_PREFIX</span><br><span class="line"></span><br><span class="line">LEVEL = &#123;</span><br><span class="line">    &apos;debug&apos;: logging.DEBUG,</span><br><span class="line">    &apos;info&apos;: logging.INFO,</span><br><span class="line">    &apos;warning&apos;: logging.WARNING,</span><br><span class="line">    &apos;error&apos;: logging.ERROR,</span><br><span class="line">    &apos;critical&apos;: logging.CRITICAL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># get current folder, solve is or not frozen of the script</span><br><span class="line">def _get_cur_folder():</span><br><span class="line">    if getattr(sys, &quot;frozen&quot;, False):</span><br><span class="line">        return os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">    else:</span><br><span class="line">        cur_folder = os.path.dirname(inspect.getfile(inspect.currentframe()))</span><br><span class="line">        return os.path.abspath(cur_folder)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def _get_now(format=&quot;%Y-%m-%d %H:%M:%S&quot;):</span><br><span class="line">    return datetime.datetime.strftime(datetime.datetime.now(), format)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># default log dir</span><br><span class="line">def __get_log_dir():</span><br><span class="line">    return os.path.join(_get_cur_folder(), &apos;log&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logdir = LOG_DIR</span><br><span class="line">level = LOG_LEVEL</span><br><span class="line">formatter = LOG_FORMATTER</span><br><span class="line">filename_prefix = LOG_FILENAME_PREFIX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if not logdir:</span><br><span class="line">    logdir = __get_log_dir()</span><br><span class="line">if not os.path.exists(logdir):</span><br><span class="line">    try:</span><br><span class="line">        os.makedirs(logdir)</span><br><span class="line">        logger.critical(&apos;====== log dir is not exist, create: %s ======&apos; % logdir)</span><br><span class="line">    except:</span><br><span class="line">        logger.critical(&apos;====== log dir is not exist and create failure, exist: %s ======&apos; % logdir)</span><br><span class="line">        sys.exit(1)</span><br><span class="line">if not level:</span><br><span class="line">    level = &apos;debug&apos;</span><br><span class="line"># 格式</span><br><span class="line">if not formatter:</span><br><span class="line">    formatter = &apos;%(asctime)s - %(pathname)s[line:%(lineno)d] - %(levelname)s - %(message)s&apos;</span><br><span class="line">formatter = logging.Formatter(formatter,</span><br><span class="line">                              datefmt=&apos;%Y/%m/%d %H:%M:%S&apos;)</span><br><span class="line"></span><br><span class="line">log_level = LEVEL.get(level)</span><br><span class="line">logger.setLevel(level=log_level)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 定义一个RotatingFileHandler，最多备份10个日志文件，每个日志文件最大10M</span><br><span class="line">log_name = filename_prefix + &apos;_&apos; + _get_now(format=&quot;%Y-%m-%d&quot;) \</span><br><span class="line">    if filename_prefix and filename_prefix != &apos;-&apos; else _get_now(format=&quot;%Y-%m-%d&quot;)</span><br><span class="line">log_file = os.path.join(logdir, (log_name + &apos;.log&apos;))</span><br><span class="line">file_handler = RotatingFileHandler(log_file,</span><br><span class="line">                                   mode=&apos;a&apos;,</span><br><span class="line">                                   maxBytes=10*1024*1024,</span><br><span class="line">                                   backupCount=10,</span><br><span class="line">                                   encoding=&apos;utf-8&apos;)</span><br><span class="line">file_handler.setLevel(log_level)</span><br><span class="line">file_handler.setFormatter(formatter)</span><br><span class="line">logger.addHandler(file_handler)</span><br><span class="line"># 控制台</span><br><span class="line">stream_handler = logging.StreamHandler()</span><br><span class="line">stream_handler.setLevel(log_level)</span><br><span class="line">stream_handler.setFormatter(formatter)</span><br><span class="line">logger.addHandler(stream_handler)</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Python模块之excel模块</title>
    <link href="http://pygo2.top/articles/19275/"/>
    <id>http://pygo2.top/articles/19275/</id>
    <published>2022-08-13T14:20:32.000Z</published>
    <updated>2022-08-13T14:20:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_python_module.jpeg" alt></p><span class="label primary">Python</span> <span class="label info">Python模块系列</span><div class="post_cus_note">Python模块系列</div><a id="more"></a><hr><p>Python项目常用的模块代码。</p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">Python</td><td style="text-align:center">3</td></tr></tbody></table><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p>Excel表读取、写入工具<br>使用了xlrd、xlwt，Excel表格处理包进行开发的lib工具包</p><ul><li><p>read</p></li><li><p>write<br>其中，在写入模块加入了表格样式处理，使其生成的表格自带cell样式，更加美观</p></li></ul><h4 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h4><p>利用Python包开发的表格工具包。</p><ul><li>xlrd: 表格读取包</li><li>xlwt: 表格写入包</li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">excel_lib = ExcelLib()</span><br><span class="line"># 读取</span><br><span class="line">excel_lib.read(read_file)</span><br><span class="line"># 写入</span><br><span class="line">excel_res = self.excel_lib.beau_write(excel_file=excel_file, data=inspect_list)</span><br></pre></td></tr></table></figure><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">------------------------------------------------</span><br><span class="line"></span><br><span class="line">describe:</span><br><span class="line">    Excel表读取、写入工具</span><br><span class="line">    使用了xlrd、xlwt，Excel表格处理包进行开发的lib工具包</span><br><span class="line">    - read</span><br><span class="line">    - write</span><br><span class="line">    其中，在写入模块加入了表格样式处理，使其生成的表格自带cell样式，更加美观</span><br><span class="line"></span><br><span class="line">base_info:</span><br><span class="line">    __author__ = &quot;PyGo&quot;</span><br><span class="line">    __time__ = &quot;2022/9/15&quot;</span><br><span class="line">    __version__ = &quot;v.1.0.0&quot;</span><br><span class="line">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class="line">    __project__ = &quot;quality-inspect&quot;</span><br><span class="line"></span><br><span class="line">usage:</span><br><span class="line">    excel_lib = ExcelLib()</span><br><span class="line">    # 读取</span><br><span class="line">    excel_lib.read(read_file)</span><br><span class="line">    # 写入</span><br><span class="line">    excel_res = self.excel_lib.beau_write(excel_file=excel_file, data=inspect_list)</span><br><span class="line"></span><br><span class="line">design:</span><br><span class="line">    - xlrd: 表格读取包</span><br><span class="line">    - xlwt: 表格写入包</span><br><span class="line">    利用Python包开发的表格工具包。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reference urls:</span><br><span class="line"></span><br><span class="line">python version:</span><br><span class="line">    python3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Enjoy the good time everyday！！!</span><br><span class="line">Life is short, I use python.</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line"># usage: /usr/bin/python excel_lib.py</span><br><span class="line"># ------------------------------------------------------------</span><br><span class="line">import os</span><br><span class="line">import xlwt</span><br><span class="line">import xlrd</span><br><span class="line"></span><br><span class="line">from deploy.utils import get_now, mk_dirs</span><br><span class="line">from deploy.status_msg import StatusMsgs</span><br><span class="line">from config import RESULT_EXCEL, DEBUG</span><br><span class="line">from deploy.logger import logger as LOG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ExcelLib(object):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Excel class</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    # 类常量参数</span><br><span class="line">    DEFAULT_OLD_V_PREFIX = &apos;.xls&apos;</span><br><span class="line">    DEFAULT_NEW_V_PREFIX = &apos;.xlsx&apos;</span><br><span class="line">    DEFAULT_SHEET_NAME = &apos;Sheet1&apos;</span><br><span class="line"></span><br><span class="line">    # 表格样式 &gt; 文字横向方向</span><br><span class="line">    HORZ_DICT = &#123;</span><br><span class="line">        &apos;left&apos;: 0x01,</span><br><span class="line">        &apos;center&apos;: 0x02,</span><br><span class="line">        &apos;right&apos;: 0x03</span><br><span class="line">    &#125;</span><br><span class="line">    # 表格样式 &gt; 文字纵向方向</span><br><span class="line">    VERT_DICT = &#123;</span><br><span class="line">        &apos;top&apos;: 0x00,</span><br><span class="line">        &apos;center&apos;: 0x01,</span><br><span class="line">        &apos;bottom&apos;: 0x02</span><br><span class="line">    &#125;</span><br><span class="line">    # 表格样式 &gt; 单元格边框</span><br><span class="line">    BORDER_LINES = &#123;</span><br><span class="line">        &apos;NO_LINE&apos;: xlwt.Borders.NO_LINE,</span><br><span class="line">        &apos;THIN&apos;: xlwt.Borders.THIN,</span><br><span class="line">        &apos;MEDIUM&apos;: xlwt.Borders.MEDIUM,</span><br><span class="line">        &apos;DASHED&apos;: xlwt.Borders.DASHED,</span><br><span class="line">        &apos;DOTTED&apos;: xlwt.Borders.DOTTED,</span><br><span class="line">        &apos;THICK&apos;: xlwt.Borders.THICK,</span><br><span class="line">        &apos;DOUBLE&apos;: xlwt.Borders.DOUBLE,</span><br><span class="line">        &apos;HAIR&apos;: xlwt.Borders.HAIR</span><br><span class="line">    &#125;</span><br><span class="line">    # 表格样式 &gt; 单元格类型</span><br><span class="line">    FORMATTER = [</span><br><span class="line">        &apos;general&apos;,</span><br><span class="line">        &apos;0&apos;,</span><br><span class="line">        &apos;0.00&apos;,</span><br><span class="line">        &apos;#,##0&apos;,</span><br><span class="line">        &apos;#,##0.00&apos;,</span><br><span class="line">        &apos;&quot;$&quot;#,##0_);(&quot;$&quot;#,##&apos;,</span><br><span class="line">        &apos;&quot;$&quot;#,##0_);[Red](&quot;$&quot;#,##&apos;,</span><br><span class="line">        &apos;&quot;$&quot;#,##0.00_);(&quot;$&quot;#,##&apos;,</span><br><span class="line">        &apos;&quot;$&quot;#,##0.00_);[Red](&quot;$&quot;#,##&apos;,</span><br><span class="line">        &apos;0%&apos;,</span><br><span class="line">        &apos;0.00%&apos;,</span><br><span class="line">        &apos;0.00E+00&apos;,</span><br><span class="line">        &apos;# ?/?&apos;,</span><br><span class="line">        &apos;# ??/??&apos;,</span><br><span class="line">        &apos;M/D/YY&apos;,</span><br><span class="line">        &apos;D-MMM-YY&apos;,</span><br><span class="line">        &apos;D-MMM&apos;,</span><br><span class="line">        &apos;MMM-YY&apos;,</span><br><span class="line">        &apos;h:mm AM/PM&apos;,</span><br><span class="line">        &apos;h:mm:ss AM/PM&apos;,</span><br><span class="line">        &apos;h:mm&apos;,</span><br><span class="line">        &apos;h:mm:ss&apos;,</span><br><span class="line">        &apos;M/D/YY h:mm&apos;,</span><br><span class="line">        &apos;_(#,##0_);(#,##0)&apos;,</span><br><span class="line">        &apos;_(#,##0_);[Red](#,##0)&apos;,</span><br><span class="line">        &apos;_(#,##0.00_);(#,##0.00)&apos;,</span><br><span class="line">        &apos;_(#,##0.00_);[Red](#,##0.00)&apos;,</span><br><span class="line">        &apos;_(&quot;$&quot;* #,##0_);_(&quot;$&quot;* (#,##0);_(&quot;$&quot;* &quot;-&quot;_);_(@_)&apos;,</span><br><span class="line">        &apos;_(* #,##0_);_(* (#,##0);_(* &quot;-&quot;_);_(@_)&apos;,</span><br><span class="line">        &apos;_(&quot;$&quot;* #,##0.00_);_(&quot;$&quot;* (#,##0.00);_(&quot;$&quot;* &quot;-&quot;??_);_(@_)&apos;,</span><br><span class="line">        &apos;_(* #,##0.00_);_(* (#,##0.00);_(* &quot;-&quot;??_);_(@_)&apos;,</span><br><span class="line">        &apos;mm:ss&apos;,</span><br><span class="line">        &apos;[h]:mm:ss&apos;,</span><br><span class="line">        &apos;mm:ss.0&apos;,</span><br><span class="line">        &apos;##0.0E+0&apos;,</span><br><span class="line">        &apos;@&apos;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    def __init__(self, blank=0):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        class initialize parameters</span><br><span class="line">        :param blank: blank number</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if DEBUG:</span><br><span class="line">            LOG.debug(&apos;Excel lib is loading.&apos;)</span><br><span class="line">        self.prefix_list = [&apos;.xlsx&apos;, &apos;.xls&apos;]</span><br><span class="line">        self.blank = 0  # 空行个数，默认值0行</span><br><span class="line"></span><br><span class="line">    def set_style(self, font=&apos;Times New Roman&apos;, size=11, color=0, bgcolor=&apos;white&apos;, horz=&apos;left&apos;, vert=&apos;center&apos;, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        set the excel cell style, to achieve customize style.</span><br><span class="line">        all parameters have default value.</span><br><span class="line">        parameters detail informations refer to the follow description.</span><br><span class="line">        :param font: font type</span><br><span class="line">            default value is &quot;Times New Roman&quot;</span><br><span class="line">            currently, the font is not use, font type function will be added later</span><br><span class="line">        :param size: font size</span><br><span class="line">            default value is 11</span><br><span class="line">        :param color: font color index</span><br><span class="line">            color value range is 0 ~ 100, default value is black(0)</span><br><span class="line">            this is only list 1-7:</span><br><span class="line">            0 黑 black</span><br><span class="line">            1 白 white</span><br><span class="line">            2 红 red</span><br><span class="line">            3 酸橙 lime</span><br><span class="line">            4 蓝 blue</span><br><span class="line">            5 黄 yellow</span><br><span class="line">            6 洋红 magenta</span><br><span class="line">            7 青 cyan</span><br><span class="line">        :param bgcolor: cell background</span><br><span class="line">            this value is english color, default value is white, color range:</span><br><span class="line">            aqua 0x31</span><br><span class="line">            black 0x08</span><br><span class="line">            blue 0x0C</span><br><span class="line">            blue_gray 0x36</span><br><span class="line">            bright_green 0x0B</span><br><span class="line">            brown 0x3C</span><br><span class="line">            coral 0x1D</span><br><span class="line">            cyan_ega 0x0F</span><br><span class="line">            dark_blue 0x12</span><br><span class="line">            dark_blue_ega 0x12</span><br><span class="line">            dark_green 0x3A</span><br><span class="line">            dark_green_ega 0x11</span><br><span class="line">            dark_purple 0x1C</span><br><span class="line">            dark_red 0x10</span><br><span class="line">            dark_red_ega 0x10</span><br><span class="line">            dark_teal 0x38</span><br><span class="line">            dark_yellow 0x13</span><br><span class="line">            gold 0x33</span><br><span class="line">            gray_ega 0x17</span><br><span class="line">            gray25 0x16</span><br><span class="line">            gray40 0x37</span><br><span class="line">            gray50 0x17</span><br><span class="line">            gray80 0x3F</span><br><span class="line">            green 0x11</span><br><span class="line">            ice_blue 0x1F</span><br><span class="line">            indigo 0x3E</span><br><span class="line">            ivory 0x1A</span><br><span class="line">            lavender 0x2E</span><br><span class="line">            light_blue 0x30</span><br><span class="line">            light_green 0x2A</span><br><span class="line">            light_orange 0x34</span><br><span class="line">            light_turquoise 0x29</span><br><span class="line">            light_yellow 0x2B</span><br><span class="line">            lime 0x32</span><br><span class="line">            magenta_ega 0x0E</span><br><span class="line">            ocean_blue 0x1E</span><br><span class="line">            olive_ega 0x13</span><br><span class="line">            olive_green 0x3B</span><br><span class="line">            orange 0x35</span><br><span class="line">            pale_blue 0x2C</span><br><span class="line">            periwinkle 0x18</span><br><span class="line">            pink 0x0E</span><br><span class="line">            plum 0x3D</span><br><span class="line">            purple_ega 0x14</span><br><span class="line">            red 0x0A</span><br><span class="line">            rose 0x2D</span><br><span class="line">            sea_green 0x39</span><br><span class="line">            silver_ega 0x16</span><br><span class="line">            sky_blue 0x28</span><br><span class="line">            tan 0x2F</span><br><span class="line">            teal 0x15</span><br><span class="line">            teal_ega 0x15</span><br><span class="line">            turquoise 0x0F</span><br><span class="line">            violet 0x14</span><br><span class="line">            white 0x09</span><br><span class="line">            yellow 0x0D</span><br><span class="line">        :param horz: cell horizontal（水平方向上）</span><br><span class="line">            default value is left</span><br><span class="line">            left = 0x01 左端对齐</span><br><span class="line">            center = 0x02 居中对齐</span><br><span class="line">            right = 0x03 右端对齐</span><br><span class="line">            if horz not in values dict, use default value(left)</span><br><span class="line">        :param vert: cell vertical（垂直方向上）</span><br><span class="line">            default value is center</span><br><span class="line">            top = 0x00 上端对齐</span><br><span class="line">            center = 0x01 居中对齐</span><br><span class="line">            bottom = 0x02 低端对齐</span><br><span class="line">            if vert not in values dict, use default value(center)</span><br><span class="line">        :param kwargs: other parameters, contain: bold, underline, italic, width, height, borders</span><br><span class="line">            bold: font bold</span><br><span class="line">                default is font no bold</span><br><span class="line">                value range is: True or False, default value is False</span><br><span class="line">            underline: font underline</span><br><span class="line">                default is font no underline</span><br><span class="line">                value range is: True or False, default value is False</span><br><span class="line">            italic: font italic</span><br><span class="line">                default is font no italic</span><br><span class="line">                value range is: True or False, default value is False</span><br><span class="line">            struck_out: font struck_out 字体删除符，字上加一横杠</span><br><span class="line">                default is font no struck_out</span><br><span class="line">                value range is: True or False, default value is False</span><br><span class="line">            width: cell width</span><br><span class="line">                default value is cell default width</span><br><span class="line">            height: cell height</span><br><span class="line">                default value is cell default height</span><br><span class="line">            borders: cell borders, contain left, right, top, bottom</span><br><span class="line">                default value is cell no borders</span><br><span class="line">                value range is True or False</span><br><span class="line">                border line, default is NO_LINE:</span><br><span class="line">                    NO_LINE = 0x00</span><br><span class="line">                    THIN    = 0x01</span><br><span class="line">                    MEDIUM  = 0x02</span><br><span class="line">                    DASHED  = 0x03</span><br><span class="line">                    DOTTED  = 0x04</span><br><span class="line">                    THICK   = 0x05</span><br><span class="line">                    DOUBLE  = 0x06</span><br><span class="line">                    HAIR    = 0x07</span><br><span class="line">                border color, default is 0x40.</span><br><span class="line">            borders_dict: customize to set border style</span><br><span class="line">                line: left, right, top, bottom</span><br><span class="line">                color: left, right, top, bottom</span><br><span class="line">                data frame:</span><br><span class="line">                    borders_dict = &#123;</span><br><span class="line">                        &apos;line&apos;: &#123;</span><br><span class="line">                            &apos;top&apos;: &apos;THIN&apos;,</span><br><span class="line">                            &apos;bottom&apos;: &apos;THIN&apos;,</span><br><span class="line">                            &apos;left&apos;: &apos;THIN&apos;,</span><br><span class="line">                            &apos;right&apos;: &apos;THIN&apos;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &apos;color&apos;: &#123;</span><br><span class="line">                            &apos;top&apos;: &apos;0x40&apos;,</span><br><span class="line">                            &apos;bottom&apos;: &apos;0x40&apos;,</span><br><span class="line">                            &apos;left&apos;: &apos;0x40&apos;,</span><br><span class="line">                            &apos;right&apos;: &apos;0x40&apos;</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;</span><br><span class="line">            warp: is or not auto wrap 自动换行</span><br><span class="line">                default value is False,</span><br><span class="line">                if True, cell value is auto wrap</span><br><span class="line">                if False, cell value is not warp</span><br><span class="line">            formatter: cell formatter</span><br><span class="line">                contain numbers, string, date, time and so on.</span><br><span class="line">                default value is general</span><br><span class="line">                detail scan FORMATTER values</span><br><span class="line">                    &apos;general&apos;,</span><br><span class="line">                    &apos;0&apos;,</span><br><span class="line">                    &apos;0.00&apos;,</span><br><span class="line">                    &apos;#,##0&apos;,</span><br><span class="line">                    &apos;#,##0.00&apos;,</span><br><span class="line">                    &apos;&quot;$&quot;#,##0_);(&quot;$&quot;#,##&apos;,</span><br><span class="line">                    &apos;&quot;$&quot;#,##0_);[Red](&quot;$&quot;#,##&apos;,</span><br><span class="line">                    &apos;&quot;$&quot;#,##0.00_);(&quot;$&quot;#,##&apos;,</span><br><span class="line">                    &apos;&quot;$&quot;#,##0.00_);[Red](&quot;$&quot;#,##&apos;,</span><br><span class="line">                    &apos;0%&apos;,</span><br><span class="line">                    &apos;0.00%&apos;,</span><br><span class="line">                    &apos;0.00E+00&apos;,</span><br><span class="line">                    &apos;# ?/?&apos;,</span><br><span class="line">                    &apos;# ??/??&apos;,</span><br><span class="line">                    &apos;M/D/YY&apos;,</span><br><span class="line">                    &apos;D-MMM-YY&apos;,</span><br><span class="line">                    &apos;D-MMM&apos;,</span><br><span class="line">                    &apos;MMM-YY&apos;,</span><br><span class="line">                    &apos;h:mm AM/PM&apos;,</span><br><span class="line">                    &apos;h:mm:ss AM/PM&apos;,</span><br><span class="line">                    &apos;h:mm&apos;,</span><br><span class="line">                    &apos;h:mm:ss&apos;,</span><br><span class="line">                    &apos;M/D/YY h:mm&apos;,</span><br><span class="line">                    &apos;_(#,##0_);(#,##0)&apos;,</span><br><span class="line">                    &apos;_(#,##0_);[Red](#,##0)&apos;,</span><br><span class="line">                    &apos;_(#,##0.00_);(#,##0.00)&apos;,</span><br><span class="line">                    &apos;_(#,##0.00_);[Red](#,##0.00)&apos;,</span><br><span class="line">                    &apos;_(&quot;$&quot;* #,##0_);_(&quot;$&quot;* (#,##0);_(&quot;$&quot;* &quot;-&quot;_);_(@_)&apos;,</span><br><span class="line">                    &apos;_(* #,##0_);_(* (#,##0);_(* &quot;-&quot;_);_(@_)&apos;,</span><br><span class="line">                    &apos;_(&quot;$&quot;* #,##0.00_);_(&quot;$&quot;* (#,##0.00);_(&quot;$&quot;* &quot;-&quot;??_);_(@_)&apos;,</span><br><span class="line">                    &apos;_(* #,##0.00_);_(* (#,##0.00);_(* &quot;-&quot;??_);_(@_)&apos;,</span><br><span class="line">                    &apos;mm:ss&apos;,</span><br><span class="line">                    &apos;[h]:mm:ss&apos;,</span><br><span class="line">                    &apos;mm:ss.0&apos;,</span><br><span class="line">                    &apos;##0.0E+0&apos;,</span><br><span class="line">                    &apos;@&apos;</span><br><span class="line"></span><br><span class="line">        :return: object</span><br><span class="line"></span><br><span class="line">        usge:</span><br><span class="line">            column_style = self.set_style(size=8, horz=&apos;center&apos;, vert=&apos;center&apos;, color=0, bgcolor=&apos;ice_blue&apos;, borders=True)</span><br><span class="line">            sheet.write(row, col, JG_ENUMS.get(jg), column_style)</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        style = xlwt.XFStyle()</span><br><span class="line">        font = xlwt.Font()</span><br><span class="line">        # font: type</span><br><span class="line">        # font.name = font or &apos;Times New Roman&apos;</span><br><span class="line">        # font: size</span><br><span class="line">        try:</span><br><span class="line">            size = int(size)</span><br><span class="line">        except:</span><br><span class="line">            size = 11</span><br><span class="line">        font.height = size * 20</span><br><span class="line">        # font: color</span><br><span class="line">        try:</span><br><span class="line">            color = int(color)</span><br><span class="line">        except:</span><br><span class="line">            color = 0</span><br><span class="line">        finally:</span><br><span class="line">            if color &gt; 100: color = 0</span><br><span class="line">        font.colour_index = color</span><br><span class="line">        # font: bold</span><br><span class="line">        bold = kwargs.get(&apos;bold&apos;) or False</span><br><span class="line">        if bold not in [True, False]:</span><br><span class="line">            bold = False</span><br><span class="line">        font.bold = bold</span><br><span class="line">        # font: underline</span><br><span class="line">        underline = kwargs.get(&apos;underline&apos;) or False</span><br><span class="line">        if underline not in [True, False]:</span><br><span class="line">            underline = False</span><br><span class="line">        font.underline = underline</span><br><span class="line">        # font: italic</span><br><span class="line">        italic = kwargs.get(&apos;italic&apos;) or False</span><br><span class="line">        if italic not in [True, False]:</span><br><span class="line">            italic = False</span><br><span class="line">        font.italic = italic</span><br><span class="line">        # font: struck_out</span><br><span class="line">        struck_out = kwargs.get(&apos;struck_out&apos;) or False</span><br><span class="line">        if struck_out not in [True, False]:</span><br><span class="line">            struck_out = False</span><br><span class="line">        font.struck_out = struck_out</span><br><span class="line">        style.font = font</span><br><span class="line"></span><br><span class="line">        # align: horz</span><br><span class="line">        horz_v = self.HORZ_DICT.get(horz.lower())</span><br><span class="line">        if not horz_v: horz_v = 0x02</span><br><span class="line">        # align: vert</span><br><span class="line">        vert_v = self.VERT_DICT.get(vert.lower())</span><br><span class="line">        if not vert_v: vert_v = 0x01</span><br><span class="line">        align = xlwt.Alignment()</span><br><span class="line">        align.horz = horz_v</span><br><span class="line">        align.vert = vert_v</span><br><span class="line">        # align: wrap</span><br><span class="line">        wrap = kwargs.get(&apos;wrap&apos;) or False</span><br><span class="line">        if wrap not in [True, False]:</span><br><span class="line">            wrap = False</span><br><span class="line">        align.wrap = wrap</span><br><span class="line">        style.alignment = align</span><br><span class="line"></span><br><span class="line">        # background color</span><br><span class="line">        pattern = xlwt.Pattern()</span><br><span class="line">        pattern.pattern = xlwt.Pattern.SOLID_PATTERN</span><br><span class="line">        try:</span><br><span class="line">            pattern.pattern_fore_colour = xlwt.Style.colour_map[bgcolor]</span><br><span class="line">        except:</span><br><span class="line">            pattern.pattern_fore_colour = xlwt.Style.colour_map[&apos;white&apos;]</span><br><span class="line">        style.pattern = pattern</span><br><span class="line"></span><br><span class="line">        # borders</span><br><span class="line">        is_border = kwargs.get(&apos;borders&apos;) or False</span><br><span class="line">        if is_border not in [True, False]:</span><br><span class="line">            is_border = False</span><br><span class="line">        if is_border:</span><br><span class="line">            border = xlwt.Borders()</span><br><span class="line">            border.top = xlwt.Borders.THIN  # 上</span><br><span class="line">            border.bottom = xlwt.Borders.THIN  # 下</span><br><span class="line">            border.left = xlwt.Borders.THIN  # 左</span><br><span class="line">            border.right = xlwt.Borders.THIN  # 右</span><br><span class="line">            border.left_colour = 0x40</span><br><span class="line">            border.right_colour = 0x40</span><br><span class="line">            border.top_colour = 0x40</span><br><span class="line">            border.bottom_colour = 0x40</span><br><span class="line">            style.borders = border</span><br><span class="line">        borders_dict = kwargs.get(&apos;borders_dict&apos;) or False</span><br><span class="line">        if borders_dict:</span><br><span class="line">            border = xlwt.Borders()</span><br><span class="line">            for k, v in borders_dict.get(&apos;line&apos;).items():</span><br><span class="line">                if k == &apos;top&apos;:</span><br><span class="line">                    border.top = self.BORDER_LINES.get(v.upper()) if v.upper() in self.BORDER_LINES.keys() \</span><br><span class="line">                        else xlwt.Borders.NO_LINE</span><br><span class="line">                elif k == &apos;bottom&apos;:</span><br><span class="line">                    border.bottom = self.BORDER_LINES.get(v.upper()) if v.upper() in self.BORDER_LINES.keys() \</span><br><span class="line">                        else xlwt.Borders.NO_LINE</span><br><span class="line">                elif k == &apos;left&apos;:</span><br><span class="line">                    border.left = self.BORDER_LINES.get(v.upper()) if v.upper() in self.BORDER_LINES.keys() \</span><br><span class="line">                        else xlwt.Borders.NO_LINE</span><br><span class="line">                elif k == &apos;right&apos;:</span><br><span class="line">                    border.right = self.BORDER_LINES.get(v.upper()) if v.upper() in self.BORDER_LINES.keys() \</span><br><span class="line">                        else xlwt.Borders.NO_LINE</span><br><span class="line">            border.left_colour = 0x40</span><br><span class="line">            border.right_colour = 0x40</span><br><span class="line">            border.top_colour = 0x40</span><br><span class="line">            border.bottom_colour = 0x40</span><br><span class="line">            style.borders = border</span><br><span class="line"></span><br><span class="line">        # formatter</span><br><span class="line">        num_format_str = kwargs.get(&apos;formatter&apos;) or &apos;general&apos;</span><br><span class="line">        if num_format_str not in self.FORMATTER:</span><br><span class="line">            num_format_str = &apos;general&apos;</span><br><span class="line">        style.num_format_str = num_format_str</span><br><span class="line">        return style</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def format_res(status_id: int, message: str, data: dict) -&gt; dict:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        方法请求结果格式化</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        return &#123;</span><br><span class="line">            &apos;status_id&apos;: status_id,</span><br><span class="line">            &apos;message&apos;: message if message else StatusMsgs.get(status_id),</span><br><span class="line">            &apos;data&apos;: data</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def read_headers(self, excel_file):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        get the headers information of excel file</span><br><span class="line">        :param excel_file: excel file real path</span><br><span class="line">        :return: dict</span><br><span class="line">        result content:</span><br><span class="line">            sheets: dict sheet base info, contain something. such as row.col.index.name</span><br><span class="line">            number sheet: int sheet number</span><br><span class="line">            names: sheets name dict</span><br><span class="line">            columns: sheet columns dict</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # default value</span><br><span class="line">        res = &#123;&apos;sheets&apos;: &#123;&#125;, &apos;nsheet&apos;: 0, &apos;names&apos;: &#123;&#125;, &apos;columns&apos;: &#123;&#125;&#125;</span><br><span class="line">        # not exist excel file</span><br><span class="line">        if not excel_file \</span><br><span class="line">                or not os.path.exists(excel_file):</span><br><span class="line">            return res</span><br><span class="line"></span><br><span class="line">        excel = xlrd.open_workbook(excel_file)</span><br><span class="line">        nsheets = excel.nsheets</span><br><span class="line">        # sheet_names = excel.sheet_names()     # 获取所有excel sheet名称列表</span><br><span class="line">        sheets_dict = dict()</span><br><span class="line">        names_dict = dict()</span><br><span class="line">        columns_dict = dict()</span><br><span class="line">        for i in range(0, nsheets, 1):</span><br><span class="line">            sheet = excel.sheet_by_index(i)</span><br><span class="line">            names_dict[str(i)] = sheet.name</span><br><span class="line">            # sheet：row行数 col列数 index索引 name名称</span><br><span class="line">            sheets_dict[str(i)] = &#123;&apos;row&apos;: sheet.nrows, &apos;col&apos;: sheet.ncols, &apos;index&apos;: i, &apos;name&apos;: sheet.name&#125;</span><br><span class="line">            try:</span><br><span class="line">                # sheet column：key：value格式</span><br><span class="line">                row_values_0 = sheet.row_values(0)</span><br><span class="line">                new_column = list()</span><br><span class="line">                for _k, _v in enumerate(row_values_0):</span><br><span class="line">                    new_column.append(&#123;&apos;key&apos;: str(_k), &apos;value&apos;: str(_v)&#125;)</span><br><span class="line">                columns_dict[str(i)] = new_column</span><br><span class="line">            except:</span><br><span class="line">                pass</span><br><span class="line">        return &#123;&apos;sheets&apos;: sheets_dict, &apos;nsheet&apos;: nsheets, &apos;names&apos;: names_dict, &apos;columns&apos;: columns_dict&#125;</span><br><span class="line"></span><br><span class="line">    def check_real_file(self, real_file: str, _type=1, clean=False):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        生成存储excel文件的绝对路径，以及新文件名称</span><br><span class="line">        加了文件已存在的check</span><br><span class="line">        结果采用绝对路径+新文件名称，新文件名称</span><br><span class="line">        如果存在用新的时间戳创建文件</span><br><span class="line">        generate to store real path of excel file</span><br><span class="line">        if file exist dir, the file name rename file name + now(%Y-%m-%d-%H-%M-%S)</span><br><span class="line">        the result is path file</span><br><span class="line">        :param clean: 是否删除已存在</span><br><span class="line">        :param real_file: all path excel file</span><br><span class="line">        :param _type: excel file version type</span><br><span class="line">        :return: sting</span><br><span class="line"></span><br><span class="line">        _type为默认格式：</span><br><span class="line">            - 1为.xls</span><br><span class="line">            - 2为.xlsx</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if not _type or _type not in [1, 2]:    # 默认xls</span><br><span class="line">            _type = 1</span><br><span class="line"></span><br><span class="line">        # 存在 &amp;&amp; 删除</span><br><span class="line">        if clean and os.path.exists(real_file):</span><br><span class="line">            os.remove(real_file)</span><br><span class="line">            return real_file</span><br><span class="line"></span><br><span class="line">        # 文件已存在，加上时间戳</span><br><span class="line">        if os.path.exists(real_file):</span><br><span class="line">            file_name = &apos;%s%s&apos; % (get_now(format=&quot;%Y-%m-%d-%H-%M-%S&quot;), self.DEFAULT_OLD_V_PREFIX)</span><br><span class="line">            real_file = os.path.join(self._default_folder(), file_name)</span><br><span class="line">            return real_file</span><br><span class="line">        return real_file</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def _default_folder():</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        new excel file folder</span><br><span class="line">        :return: string</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        if not os.path.exists(RESULT_EXCEL):</span><br><span class="line">            mk_dirs(RESULT_EXCEL)</span><br><span class="line">        return RESULT_EXCEL</span><br><span class="line"></span><br><span class="line">    def read(self, read_file: str, sheet: int = 0, rows: list = [], columns: list = [], **kwargs) -&gt; dict:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        read excel data</span><br><span class="line">        :param read_file: excel文件abs全路径</span><br><span class="line">        :param sheet: 读取的sheet数，从0开始，default value is 0</span><br><span class="line">        :param rows: 读取数据的rows行列表，如果为空，默认读取全部行</span><br><span class="line">        :param columns: 读取数据的columns列列表，如果为空，默认读取全部列</span><br><span class="line">        :param kwargs: 读取excel数据的其他参数配置</span><br><span class="line">            request_title: 读取的表格是否包含title行，默认是true（bool类型）</span><br><span class="line">            response_title: 返回的数据是否包含title说明，默认是true（bool类型）</span><br><span class="line"></span><br><span class="line">        :return: dict result</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # ================== parameters check start ==================</span><br><span class="line">        if not read_file or not os.path.exists(read_file) \</span><br><span class="line">                or not os.path.isfile(read_file):</span><br><span class="line">            return self.format_res(</span><br><span class="line">                206, &apos;读取的excel数据不存在&apos;, &#123;&#125;)</span><br><span class="line">        request_title = False if kwargs.get(&apos;request_title&apos;) is False else True</span><br><span class="line">        # 初始化数据读取开始的行数</span><br><span class="line">        start_row = 1 if request_title else 0</span><br><span class="line">        response_title = False if kwargs.get(&apos;response_title&apos;) is False else True</span><br><span class="line">        excel_object = xlrd.open_workbook(filename=read_file)   # xlrd可以读取xls、xlsx</span><br><span class="line">        excel_sheet_names = excel_object.sheet_names()</span><br><span class="line">        if not str(sheet):          # 添加无sheet index，默认读取首页</span><br><span class="line">            sheet = 0</span><br><span class="line">        # 添加sheet为整型处理</span><br><span class="line">        try:</span><br><span class="line">            if not isinstance(sheet, int):</span><br><span class="line">                sheet = int(sheet)</span><br><span class="line">        except:</span><br><span class="line">            sheet = 0</span><br><span class="line">        if sheet &gt; len(excel_sheet_names) or sheet &lt; 0:</span><br><span class="line">            return self.format_res(</span><br><span class="line">                207, &apos;读取的sheet页不存在&apos;, &#123;&#125;)</span><br><span class="line">        excel_sheet = excel_object.sheet_by_index(sheet)</span><br><span class="line">        # 读取指定行</span><br><span class="line">        new_rows = list()</span><br><span class="line">        if rows:</span><br><span class="line">            for r in rows:</span><br><span class="line">                try:</span><br><span class="line">                    new_rows.append(int(r))</span><br><span class="line">                except: pass</span><br><span class="line">        # 读取指定列</span><br><span class="line">        new_cols = list()</span><br><span class="line">        if columns:</span><br><span class="line">            for c in columns:</span><br><span class="line">                try:</span><br><span class="line">                    new_cols.append(int(c))</span><br><span class="line">                except: pass</span><br><span class="line">        # ================== parameters check end ==================</span><br><span class="line"></span><br><span class="line">        # 指定行</span><br><span class="line">        read_rows = new_rows if new_rows else range(start_row, excel_sheet.nrows, 1)</span><br><span class="line">        # 指定列</span><br><span class="line">        read_cols = new_cols if new_cols else range(0, excel_sheet.ncols, 1)</span><br><span class="line">        # 读取表头</span><br><span class="line">        resp_header = list()</span><br><span class="line">        if response_title and request_title:</span><br><span class="line">            for col in read_cols:</span><br><span class="line">                if col &lt; 0: continue</span><br><span class="line">                # TODO 是否添加空标题、重复标题等标题判断</span><br><span class="line">                # 目前，定位空活着列值重复均可以</span><br><span class="line">                # if not excel_sheet.cell_value(0, col) or excel_sheet.cell_value(0, col) in resp_header:</span><br><span class="line">                #     return self.format_res(</span><br><span class="line">                #         208, &apos;读取的第%s列值为空&apos; % col, &#123;&#125;)</span><br><span class="line">                resp_header.append(excel_sheet.cell_value(0, col))</span><br><span class="line">        # 读取表数据</span><br><span class="line">        resp_data = list()</span><br><span class="line">        for row in read_rows:</span><br><span class="line">            if not row: continue</span><br><span class="line">            _d = list()</span><br><span class="line">            for col in read_cols:</span><br><span class="line">                if col &lt; 0: continue</span><br><span class="line">                _d.append(excel_sheet.cell_value(row, col))</span><br><span class="line">            if _d: resp_data.append(_d)</span><br><span class="line">        return self.format_res(</span><br><span class="line">            100, &apos;success&apos;, &#123;&apos;header&apos;: resp_header, &apos;data&apos;: resp_data&#125;)</span><br><span class="line"></span><br><span class="line">    def write(self, excel_file, data, sheet=&quot;Sheet1&quot;, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        写入的通用方法，xlwt、xlrd:</span><br><span class="line">            .xls表格行数限制65535</span><br><span class="line">        写入的数据为list格式，里面的元素也为list类型数据，以元素list顺序进行表格row的写入</span><br><span class="line"></span><br><span class="line">        use xlwt、xlrd to merge excel, it are to deal .xls、.xlsx formatter excel file</span><br><span class="line">        the deal excel style is cell values(row + col)</span><br><span class="line">        :param excel_file: excel file, if not exist to create</span><br><span class="line">        :param data: excel data</span><br><span class="line">        :param sheet: excel sheet name</span><br><span class="line">        :param kwargs: multiple parameters, is dict type</span><br><span class="line">            - title: 是否为标题，如果是标题样式采用标题样式</span><br><span class="line">            - start_row: 写入excel的起始行，默认为0</span><br><span class="line">            - *** extra parameters ***</span><br><span class="line">        :return: json object</span><br><span class="line">            status_id: result id, except status_id is 1 is success, others is failure</span><br><span class="line">            message: the result message</span><br><span class="line">            data:</span><br><span class="line">                path: the new excel path + name, real path</span><br><span class="line">                name: the new excel file name, not contain path</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # if not excel file, auto rename by timestamp</span><br><span class="line">        # new excel file format xlrd xlwt: xls</span><br><span class="line">        if not excel_file:</span><br><span class="line">            return self.format_res(214, &apos;请求参数为file必须信息&apos;, &#123;&#125;)</span><br><span class="line">        if not data:</span><br><span class="line">            return self.format_res(401, &apos;数据不存在&apos;, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            new_excel = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class="line">            new_sheet = new_excel.add_sheet(sheet or self.DEFAULT_SHEET_NAME, cell_overwrite_ok=True)</span><br><span class="line">            start_row = kwargs.get(&apos;start_row&apos;) or 0    # 写入的起始行</span><br><span class="line">            row = 0</span><br><span class="line">            for _d in data:</span><br><span class="line">                if not _d: continue</span><br><span class="line">                for col in range(0, len(_d), 1):</span><br><span class="line">                    new_sheet.write((start_row + row), col, _d[col])    # 单元格的方式写入</span><br><span class="line">                row += 1</span><br><span class="line">            # excel_file = self.check_real_file(excel_file, clean=True)</span><br><span class="line">            new_excel.save(excel_file)</span><br><span class="line">            return self.format_res(</span><br><span class="line">                100, &apos;success&apos;, &#123;&apos;name&apos;: os.path.split(excel_file)[1], &apos;path&apos;: excel_file&#125;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            return self.format_res(998, str(e), &#123;&#125;)</span><br><span class="line"></span><br><span class="line">    def beau_write(self, excel_file, data, sheet_name=&quot;Sheet1&quot;, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        针对于质量考核检查结果直接带样式的表格，xlwt、xlrd:</span><br><span class="line">            .xls表格行数限制65535</span><br><span class="line">        特殊方法，写死数据以及样式</span><br><span class="line"></span><br><span class="line">        use xlwt、xlrd to merge excel, it are to deal .xls、.xlsx formatter excel file</span><br><span class="line">        the deal excel style is cell values(row + col)</span><br><span class="line">        :param excel_file: excel file, if not exist to create</span><br><span class="line">        :param data: excel data</span><br><span class="line">        :param sheet_name: excel sheet name</span><br><span class="line">        :param kwargs: multiple parameters, is dict type</span><br><span class="line">            - *** extra parameters ***</span><br><span class="line">        :return: json object</span><br><span class="line">            status_id: result id, except status_id is 1 is success, others is failure</span><br><span class="line">            message: the result message</span><br><span class="line">            data:</span><br><span class="line">                path: the new excel path + name, real path</span><br><span class="line">                name: the new excel file name, not contain path</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # if not excel file, auto rename by timestamp</span><br><span class="line">        # new excel file format xlrd xlwt: xls</span><br><span class="line">        if not excel_file:</span><br><span class="line">            return self.format_res(214, &apos;请求参数为Excel file必须信息&apos;, &#123;&#125;)</span><br><span class="line">        if not data:</span><br><span class="line">            return self.format_res(401, &apos;数据不存在&apos;, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            new_excel = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class="line">            new_sheet = new_excel.add_sheet(sheet_name or self.DEFAULT_SHEET_NAME, cell_overwrite_ok=True)</span><br><span class="line"></span><br><span class="line">            # initialize cell style</span><br><span class="line">            headline_border = &#123;</span><br><span class="line">                &apos;line&apos;: &#123;</span><br><span class="line">                    &apos;top&apos;: &apos;NO_LINE&apos;,</span><br><span class="line">                    &apos;bottom&apos;: &apos;DASHED&apos;,</span><br><span class="line">                    &apos;left&apos;: &apos;NO_LINE&apos;,</span><br><span class="line">                    &apos;right&apos;: &apos;NO_LINE&apos;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            headline_style = self.set_style(size=16, horz=&apos;center&apos;, vert=&apos;center&apos;, bold=True,</span><br><span class="line">                                            borders_dict=headline_border, wrap=True)</span><br><span class="line">            title_style = self.set_style(size=10, bold=True, horz=&apos;center&apos;, vert=&apos;center&apos;, color=1,</span><br><span class="line">                                         bgcolor=&apos;periwinkle&apos;, borders=True)</span><br><span class="line">            column_style = self.set_style(size=8, bold=True, horz=&apos;center&apos;, vert=&apos;center&apos;, color=0, bgcolor=&apos;ice_blue&apos;,</span><br><span class="line">                                          borders=True)</span><br><span class="line">            cell_style = self.set_style(size=8, horz=&apos;center&apos;, vert=&apos;center&apos;, borders=True)</span><br><span class="line">            cell_per_style = self.set_style(size=8, horz=&apos;center&apos;, vert=&apos;center&apos;, borders=True, formatter=&apos;0.00%&apos;)</span><br><span class="line">            special_cell_style = self.set_style(size=8, horz=&apos;center&apos;, vert=&apos;center&apos;, bgcolor=&apos;yellow&apos;, borders=True)</span><br><span class="line">            special_per_style = self.set_style(size=8, horz=&apos;center&apos;, vert=&apos;center&apos;, bgcolor=&apos;yellow&apos;, borders=True,</span><br><span class="line">                                               formatter=&apos;0.00%&apos;)</span><br><span class="line">            # excel title</span><br><span class="line">            new_sheet.write_merge(0, 1, 0, 0, &quot;项目编号&quot;, title_style)</span><br><span class="line">            new_sheet.write_merge(0, 1, 1, 1, &quot;项目名称&quot;, title_style)</span><br><span class="line">            new_sheet.write_merge(0, 0, 2, 6, &quot;测试记录&quot;, title_style)</span><br><span class="line">            new_sheet.write_merge(0, 0, 7, 11, &quot;工资确认单&quot;, title_style)</span><br><span class="line">            new_sheet.write(1, 2, &apos;提交次数&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 3, &apos;版本&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 4, &apos;用户&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 5, &apos;时间&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 6, &apos;备注&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 7, &apos;提交次数&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 8, &apos;版本&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 9, &apos;用户&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 10, &apos;时间&apos;, title_style)</span><br><span class="line">            new_sheet.write(1, 11, &apos;备注&apos;, title_style)</span><br><span class="line"></span><br><span class="line">            start_row = 2    # 数据写入的起始行</span><br><span class="line">            row = 0</span><br><span class="line">            for _d in data:</span><br><span class="line">                if not _d: continue</span><br><span class="line">                for col in range(0, len(_d), 1):</span><br><span class="line">                    style = column_style if col &lt; 2 else cell_style</span><br><span class="line">                    new_sheet.write((start_row + row), col, _d[col], style)    # 单元格的方式写入</span><br><span class="line">                row += 1</span><br><span class="line">            &quot;&quot;&quot;</span><br><span class="line">            end write and save</span><br><span class="line">            &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">            # 设置列宽, 256为基准数</span><br><span class="line">            for col in [1]:</span><br><span class="line">                new_sheet.col(col).width_mismatch = True</span><br><span class="line">                new_sheet.col(col).width = 256 * 24  # 标准256 * 12</span><br><span class="line">            for col in [5, 6, 10, 11]:</span><br><span class="line">                new_sheet.col(col).width_mismatch = True</span><br><span class="line">                new_sheet.col(col).width = 256 * 18  # 标准256 * 12</span><br><span class="line">            # 设置行高, 20为基准数 50为50磅</span><br><span class="line">            he_rows = [0, 1]</span><br><span class="line">            for row in he_rows:</span><br><span class="line">                new_sheet.row(row).height_mismatch = True  # 标题</span><br><span class="line">                new_sheet.row(row).height = 20 * 20</span><br><span class="line"></span><br><span class="line">            # excel_file = self.check_real_file(excel_file, clean=True)</span><br><span class="line">            new_excel.save(excel_file)</span><br><span class="line">            return self.format_res(</span><br><span class="line">                100, &apos;success&apos;, &#123;&apos;name&apos;: os.path.split(excel_file)[1], &apos;path&apos;: excel_file&#125;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            return self.format_res(998, str(e), &#123;&#125;)</span><br></pre></td></tr></table></figure><h4 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h4><p><a href="http://pygo2.top/articles/26110/">Python模块之command系统命令</a><br><a href="http://pygo2.top/articles/19275/">Python模块之excel模块</a><br><a href="http://pygo2.top/articles/5145/">Python模块之logger日志</a><br><a href="http://pygo2.top/articles/61799/">Python模块之utils公共方法</a><br><a href="http://pygo2.top/articles/31232/">Python模块之watcher打点</a><br><a href="http://pygo2.top/articles/51787/">Python模块之config配置解析</a><br><a href="http://pygo2.top/articles/58292/">Python模块之dtalk钉钉消息</a><br><a href="http://pygo2.top/articles/33254/">Python模块之企业微信</a></p><p>更多模块请参考文章TAG进行查看。</p><font size="6.5" color="red"><strong><em>Python模块系列，持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_python_module.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;Python模块系列&lt;/span&gt;

&lt;div class=&quot;post_cus_note&quot;&gt;Python模块系列&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
      <category term="Python模块系列" scheme="http://pygo2.top/tags/Python%E6%A8%A1%E5%9D%97%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
</feed>
