<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PyGo²</title>
  
  <subtitle>一个爱&lt;font size=&quot;5&quot; color=&quot;#BF0060&quot;&gt;老婆&lt;/font&gt;的&lt;font size=&quot;5&quot; color=&quot;#FF4500&quot;&gt;Python&lt;/font&gt;程序猿。。。。。。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pygo2.top/"/>
  <updated>2023-10-08T14:10:57.000Z</updated>
  <id>http://pygo2.top/</id>
  
  <author>
    <name>mingliang.gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VUE开源前端低代码平台</title>
    <link href="http://pygo2.top/articles/19243/"/>
    <id>http://pygo2.top/articles/19243/</id>
    <published>2023-10-08T14:10:57.000Z</published>
    <updated>2023-10-08T14:10:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue.jpeg" alt></p><span class="label danger">VUE</span> <span class="label info">低代码平台</span><a id="more"></a><hr><p>在微信公众号中学习看到，收藏一下，日后学习。</p><ul><li><a href="https://mp.weixin.qq.com/s/6w5Njegv1FgGAkMMujmeFg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6w5Njegv1FgGAkMMujmeFg</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label danger&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;低代码平台&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>VUE组件库</title>
    <link href="http://pygo2.top/articles/63670/"/>
    <id>http://pygo2.top/articles/63670/</id>
    <published>2023-08-14T13:46:32.000Z</published>
    <updated>2023-08-14T13:46:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue.jpeg" alt></p><div class="note primary">            <p>前端框架出现之后，组件化成为了前端开发的趋势，对于开发者来说，尤其是初学者，直接引用别人封装好的组件，在开发成本、样式上会节省一把时间，记录一下VUE学习过程中使用过的第三方组件。</p>          </div><span class="label danger">VUE</span> <span class="label info">第三方组件</span><a id="more"></a><hr><p>组件库使用方式都一样，就看自己喜欢什么风格。</p><ul><li><a href="https://mp.weixin.qq.com/s/75dc4GRk53Ylg8SeN87GfA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/75dc4GRk53Ylg8SeN87GfA</a></li><li><a href="https://mp.weixin.qq.com/s/HyPGgXdtDFJQPaXB0ifi2Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/HyPGgXdtDFJQPaXB0ifi2Q</a></li></ul><font size="5.5" color="red"><strong><em>持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;前端框架出现之后，组件化成为了前端开发的趋势，对于开发者来说，尤其是初学者，直接引用别人封装好的组件，在开发成本、样式上会节省一把时间，记录一下VUE学习过程中使用过的第三方组件。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label danger&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;第三方组件&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库一次异常处理的解决经历</title>
    <link href="http://pygo2.top/articles/29163/"/>
    <id>http://pygo2.top/articles/29163/</id>
    <published>2023-08-03T14:23:18.000Z</published>
    <updated>2023-08-03T14:23:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle.jpeg" alt></p><div class="note info">            <p>记录一次Oracle数据库挂载mount数据库失败的经历，过程中除了多次问题，在错误中寻找解决方案。</p>          </div><span class="label info">Oracle</span><a id="more"></a><hr><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>去了一个新项目，发现用sqlplus和sqlldr导出dat数据报错，接二连三的报了好几个，下面是解决遇到的问题与解决方案。</p><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><blockquote><p>问题</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ORA-01078: failure in processingsystem parameters</span><br><span class="line">LRM-00109: could not openparameterfile &apos;/u01/app/oracle/product/11.2.0/db_1/dbs/initORA10G.ora&apos;</span><br></pre></td></tr></table></figure><blockquote><p>解决方案</p></blockquote><p>找到$ORACLE_BASE/admin/数据库名称/pfile目录下的init.ora形式的文件，复制到$ORACLE_HOME/dbs目录下，并且改成wlhtpas.ora文件名称，其中wlhtpas.ora是oracle数据库实例名ORACLE_SID。</p><blockquote><p>原因</p></blockquote><p>文件初始化spfile缺失，具体原因不详，可能是安装问题，也可能是异常断电导致。</p><h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><p>解决了之后，重新startup启动数据的时候，又有新问题。</p><blockquote><p>问题</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORA-01102: cannot mount database in EXCLUSIVE mode</span><br></pre></td></tr></table></figure><p><img src="1.png" alt></p><p>查看Oracle数据库日志，发现文件被占用。</p><blockquote><p>解决方案</p></blockquote><p>1.进入/u01/app/oracle/product/11.2.0/db_1/dbs/目录<br>2.删除lkPOD文件</p><p>在这里有个小技巧，用lsof去查看哪些进程使用了lkPOD文件，需要kill掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof lkPOD</span><br><span class="line">kill -9 进程ID</span><br></pre></td></tr></table></figure><blockquote><p>原因</p></blockquote><p>文件被重复占用，导致启动失败。</p><h4 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h4><font size="6.5" color="red">坚持学习。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;记录一次Oracle数据库挂载mount数据库失败的经历，过程中除了多次问题，在错误中寻找解决方案。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Oracle&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>VUE3的watch和watchEffect区别</title>
    <link href="http://pygo2.top/articles/58210/"/>
    <id>http://pygo2.top/articles/58210/</id>
    <published>2023-07-24T14:23:54.000Z</published>
    <updated>2023-07-24T14:23:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue.jpeg" alt></p><span class="label warning">VUE</span> <span class="label info">监听器</span><a id="more"></a><hr><p>最近官网学习了VUE3基础教程，跟VUE2比起来，改变还是挺大的，不过好多也很多，性能、开发效率，新增的组合式API很喜欢，也算下一步搞一个VUE3项目练练手，学完了不写，几天就生疏了。<br>不过学习的过程中发现VUE3新增了一个watchEffect，具体分别如下：</p><ul><li><strong>watch</strong>和<strong>watchEffect</strong>都能监听响应式数据的变化，不同的是它们监听数据变化的方式不同。</li><li><strong>watch</strong>会明确监听某一个响应数据，而<strong>watchEffect</strong>则是隐式的监听回调函数中响应数据。</li><li><strong>watch</strong>在响应数据初始化时是不会执行回调函数的，<strong>watchEffect</strong>在响应数据初始化时就会立即执行回调函数。</li></ul><p>watchEffect更好用。</p><font color="red" size="6"><strong><em>坚持学习。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label warning&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;监听器&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
      <category term="前端" scheme="http://pygo2.top/categories/VUE/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>图片hover动画效果，另一种动画方式</title>
    <link href="http://pygo2.top/articles/37930/"/>
    <id>http://pygo2.top/articles/37930/</id>
    <published>2023-07-13T16:09:32.000Z</published>
    <updated>2023-07-13T16:09:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Aug-01-2023 22-12-55.gif" align="center" style="border:3px solid red"></p><span class="label success">VUE</span> <span class="label default">动画</span><a id="more"></a><hr><p>用transition实现动画样式，也是css中实现动画的常用方式之一，本人用的最多的就是transition、animation，VUE还有自带的Transition组件，但是Transition是切换的效果。</p><h4 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h4><p>鼠标划过图片的时候有动画效果，直接上代码实现结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">.viewer-box &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.viewer-box-image &#123;</span><br><span class="line">  width: 120px;</span><br><span class="line">  height: 120px;</span><br><span class="line">  margin: 5px 6px 5px 6px;</span><br><span class="line">  transition: transform .4s ease-in-out;</span><br><span class="line">  transform-origin: center center; /* 中心点 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.viewer-box-image:hover &#123;</span><br><span class="line">  transform: scale(1.2) rotate(360deg); /* 缩放+旋转 */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><h4 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h4><blockquote><p>transition: transform .4s ease-in-out;</p></blockquote><ul><li>transition-property: none| all | property &gt;&gt;&gt; all表示所有属性都有过渡效果，property定义应用过渡效果的 CSS 属性名称列表，列表以逗号分隔</li><li>transition-duration: time值； &gt;&gt;&gt; 默认是0 没有动画效果，以秒或者毫秒计</li><li>transition-timing-function:linear|ease|ease-in|ease-out|ease-in-out &gt;&gt;&gt; 动画效果</li></ul><blockquote><p>transform: scale(1.2) rotate(360deg)</p></blockquote><ul><li>transform: scale(1.2);  缩放</li><li>transform: translate(10px, 10px);  平移</li><li>transform: rotate(360deg);  旋转</li><li>transform: skew(90deg, 10deg);  斜切skewX, skewY</li></ul><div class="post_cus_note">注意</div><p>关于transition，transform，translate三者的关系可以先搞清楚了，不然很容易蒙了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Aug-01-2023 22-12-55.gif&quot; align=&quot;center&quot; style=&quot;border:3px solid red&quot;&gt;&lt;/p&gt;
&lt;span class=&quot;label success&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label default&quot;&gt;动画&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
      <category term="前端" scheme="http://pygo2.top/categories/VUE/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>图片增加选中animation动画效果</title>
    <link href="http://pygo2.top/articles/65418/"/>
    <id>http://pygo2.top/articles/65418/</id>
    <published>2023-07-03T12:54:21.000Z</published>
    <updated>2023-07-03T12:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Aug-01-2023 21-54-59.gif" align="center" style="border:3px solid red"></p><div class="note danger">            <p>前几天用v-viewerjs写了一个头像设置页面，用css的animation给图片选中加了一个动画效果，记录一下animation的基础用法以及实现的代码。</p>          </div><span class="label info">VUE</span> <span class="label danger">animation</span>  <span class="label default">动画</span><a id="more"></a><hr><p>上篇博客记录了图片的选择事件，其中通过ref去对img元素进行样式修改，<strong><em>viewer-select-image</em></strong>样式类就是图片选择的效果，通过animation实现图片的方法缩小，效果简简单单，但是瞬间高大上了许多，代码也不多。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@keyframes select-image-an &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    border: 27px solid;</span><br><span class="line">    border-image: linear-gradient(#FF0000FF, #84cdfa, #FFFF00FF) 1;</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    border: 7px solid;</span><br><span class="line">    border-image: linear-gradient(#FF0000FF, #84cdfa, #FFFF00FF) 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.viewer-select-image &#123;</span><br><span class="line">  animation: select-image-an 1.5s linear infinite alternate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h4><p><strong><em>animation: select-image-an 1.5s linear infinite alternate;</em></strong><br>select-image-an：动画名称，与@keyframes select-image-an关联，其中0%是初始状态，100%为全状态，在0-100之间也可以在一些效果<br>1.5s：动画一次的持续时间<br>linear：动画运动轨迹的速度，linear为匀速，默认是ease（低俗-&gt;加速-&gt;减速）<br>infinite：动画播放次数，infinite无限次执行<br>alternate：往返动画</p><h4 id="相关学习"><a href="#相关学习" class="headerlink" title="相关学习"></a>相关学习</h4><ul><li>菜鸟：<a href="https://www.runoob.com/cssref/css3-pr-animation.html" target="_blank" rel="noopener">https://www.runoob.com/cssref/css3-pr-animation.html</a></li><li>度娘：一搜一大推，问什么度娘都会告诉你</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Aug-01-2023 21-54-59.gif&quot; align=&quot;center&quot; style=&quot;border:3px solid red&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;note danger&quot;&gt;
            &lt;p&gt;前几天用v-viewerjs写了一个头像设置页面，用css的animation给图片选中加了一个动画效果，记录一下animation的基础用法以及实现的代码。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label danger&quot;&gt;animation&lt;/span&gt;  &lt;span class=&quot;label default&quot;&gt;动画&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
      <category term="前端" scheme="http://pygo2.top/categories/VUE/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>关于VUE2的通过v-for动态变量的ref标签</title>
    <link href="http://pygo2.top/articles/32337/"/>
    <id>http://pygo2.top/articles/32337/</id>
    <published>2023-06-30T13:15:02.000Z</published>
    <updated>2023-06-30T13:15:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue.jpeg" alt></p><div class="note primary">            <p>最近使用到了VUE2的ref这个功能吧，其实功能就等于id，但是比id更好用，只要对标签注册了ref变量，那么在this.$refs中可用使用这个元素了，对元素可以进行相关的js操作。</p>          </div><a id="more"></a><hr><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>ref不仅可以对标签注册，还可以对组件注册，自己写前端代码的时候用到了对img标签的v-for操作，每个img标签都进行ref注册，具体代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;viewer ref=&quot;viewer&quot; :options=&quot;viewerOption&quot; :images=&quot;images&quot; @inited=&quot;viewerInited&quot;&gt;</span><br><span class="line">  &lt;img v-for=&quot;(img, index) in images&quot; :id=&quot;img.md5_id&quot; :ref=&quot;img.md5_id&quot; :key=&quot;index&quot; :src=&quot;img.url&quot; class=&quot;viewer-box-image&quot; @click=&quot;selectViewerImage(index)&quot;&gt;</span><br><span class="line">&lt;/viewer&gt;</span><br></pre></td></tr></table></figure></p><p>其中，images是个字典数组，格式：[{id: 1, md5_id: 1, url: 1}]。<br>对每一个图片都有一个点击事件，触发事件代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">selectViewerImage(selectIndex) &#123;</span><br><span class="line">  if (this.images &amp;&amp; selectIndex &gt;= 0) &#123;</span><br><span class="line">    // 设置当前图片选择的索引</span><br><span class="line">    this.curImageIndex = selectIndex</span><br><span class="line">    // 设置选择的样式</span><br><span class="line">    this.images.forEach((item, index) =&gt; &#123;</span><br><span class="line">      // 清空image选择样式</span><br><span class="line">      // document.getElementById(item.md5_id).classList.remove(&apos;viewer-select-image&apos;)</span><br><span class="line">      this.$refs[item.md5_id][0].classList.remove(&apos;viewer-select-image&apos;) // ref动态变量[0]</span><br><span class="line"></span><br><span class="line">      if (index === selectIndex) &#123;</span><br><span class="line">        // 当前选择image-md5</span><br><span class="line">        this.curImage = item.md5_id</span><br><span class="line">        // 当前被选择查看的image的样式</span><br><span class="line">        // document.getElementById(item.md5_id).classList.add(&apos;viewer-select-image&apos;)</span><br><span class="line">        this.$refs[item.md5_id][0].classList.add(&apos;viewer-select-image&apos;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>方法的意思就是对所有的图片清除选择的样式，对选择的图片新增选中样式。但是当时我用this.$refs[item.md5_id]去获取对应的img元素的时候，发现元素获取不到，查阅了相关资料，说如果是v-for使用ref的动态变量，获取元素需要获取第一个值，也就是this.$refs[item.md5_id][0]，这个写法。</p><h4 id="ref的v-for用法"><a href="#ref的v-for用法" class="headerlink" title="ref的v-for用法"></a>ref的v-for用法</h4><ul><li>VUE中如果通过v-for遍历的方式注册ref的时候，如果是变量写法为：:ref = 变量，:（冒号）为代表这个为变量；如果是固定值就去掉 :号。</li><li><strong><em>通过v-for注册的ref，获取指定的ref时需要加 [0]，写法：this.$refs[变量][0]；如果是固定值或者非v-for遍历的方式，写法都是this.$refs[变量]，不需要添加[0]。</em></strong></li></ul><font size="6.5" color="red">每天一点点，坚持学习。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;最近使用到了VUE2的ref这个功能吧，其实功能就等于id，但是比id更好用，只要对标签注册了ref变量，那么在this.$refs中可用使用这个元素了，对元素可以进行相关的js操作。&lt;/p&gt;
          &lt;/div&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
      <category term="前端" scheme="http://pygo2.top/categories/VUE/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
  <entry>
    <title>免费的网站工具</title>
    <link href="http://pygo2.top/articles/34113/"/>
    <id>http://pygo2.top/articles/34113/</id>
    <published>2023-05-28T14:10:20.000Z</published>
    <updated>2023-05-28T14:10:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_tool.png" alt></p><blockquote class="blockquote-center"><p>收藏一下网上好用、免费的网站。</p></blockquote><span class="label danger">网站工具</span><a id="more"></a><hr><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">名称</th><th style="text-align:center">地址</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">代码转图片</td><td style="text-align:center"><a href="https://carbon.now.sh/" target="_blank" rel="noopener">https://carbon.now.sh/</a></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">JavaScript正则表达式可视化工具</td><td style="text-align:center"><a href="https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24" target="_blank" rel="noopener">https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24</a></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">图片压缩</td><td style="text-align:center"><a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Codepen</td><td style="text-align:center"><a href="https://codepen.io/" target="_blank" rel="noopener">https://codepen.io/</a></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">阿里开源图标</td><td style="text-align:center"><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">在线调色板</td><td style="text-align:center"><a href="https://colorhunt.co/palettes/pastel" target="_blank" rel="noopener">https://colorhunt.co/palettes/pastel</a></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">开发文档</td><td style="text-align:center"><a href="https://devdocs.io/" target="_blank" rel="noopener">https://devdocs.io/</a></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">一键抠图</td><td style="text-align:center"><a href="https://www.remove.bg/zh" target="_blank" rel="noopener">https://www.remove.bg/zh</a></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">自述文件</td><td style="text-align:center"><a href="https://readme.so/editor" target="_blank" rel="noopener">https://readme.so/editor</a></td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">测试网站加载速度</td><td style="text-align:center"><a href="https://gtmetrix.com/" target="_blank" rel="noopener">https://gtmetrix.com/</a></td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"></td></tr></tbody></table><font size="5.5" color="red"><strong><em>持续更新中。。。。。。</em></strong></font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_tool.png&quot; alt&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;收藏一下网上好用、免费的网站。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span class=&quot;label danger&quot;&gt;网站工具&lt;/span&gt;
    
    </summary>
    
      <category term="工具" scheme="http://pygo2.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://pygo2.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>前端JavaScript全局对象获取通用方法</title>
    <link href="http://pygo2.top/articles/19661/"/>
    <id>http://pygo2.top/articles/19661/</id>
    <published>2023-04-08T14:07:23.000Z</published>
    <updated>2023-04-08T14:07:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_javascript.jpeg" alt></p><a id="more"></a><hr><p>在学习ES6语法的过程中，看到了JavaScript获取全局对象的通用方法，记录上，以防日后用的上。</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(typeof window !== &apos;undefined&apos;</span><br><span class="line">   ? window</span><br><span class="line">   : (typeof process === &apos;object&apos; &amp;&amp;</span><br><span class="line">      typeof require === &apos;function&apos; &amp;&amp;</span><br><span class="line">      typeof global === &apos;object&apos;)</span><br><span class="line">     ? global</span><br><span class="line">     : this);</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var getGlobal = function () &#123;</span><br><span class="line">  if (typeof self !== &apos;undefined&apos;) &#123; return self; &#125;</span><br><span class="line">  if (typeof window !== &apos;undefined&apos;) &#123; return window; &#125;</span><br><span class="line">  if (typeof global !== &apos;undefined&apos;) &#123; return global; &#125;</span><br><span class="line">  throw new Error(&apos;unable to locate global object&apos;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><font size="6.5" color="red">坚持学习。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_javascript.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="http://pygo2.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>七牛API上传文件发送ProtocolError-Connection-aborted错误</title>
    <link href="http://pygo2.top/articles/43878/"/>
    <id>http://pygo2.top/articles/43878/</id>
    <published>2023-03-25T06:59:54.000Z</published>
    <updated>2023-03-25T06:59:54.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label default">Python</span><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><div class="note primary">            <p>自己开发的<font size="5.5" color="red">OPENTOOL-Z</font>系统在PDF转WORD功能文件上传上发送上传失败，后台查看日志发送了ProtocolError(‘Connection aborted.’, timeout(‘timed out’))的错误，记录以下解决方法。</p>          </div><p><img src="/images/article_qiniu.jpg" alt></p><a id="more"></a><hr><p>开发完PDF转WORD功能之后测试了几个小文件的都是1.2M大小的PDF文件，上传与转换都没有问题，突然有一天同事找我让我转换一个6.3M大小的文件，上传了好几次都是显示上传失败。</p><h4 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h4><p>于是，登录到服务器，查看存储的文件，发现服务器本地存储成功了，是上传到七牛云对象存储失败，打开日志错误如下：<br><img src="error.jpg" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[WARNING] Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by &apos;ProtocolError(&apos;Connection aborted.&apos;, timeout(&apos;timed out&apos;))&apos;: /buckets/open2lstore/objects/MjAyMzAzMjUv6KGl5YWF5Y2P6K6uMjAyMjA5MTXmiavmj4_ku7YucGRm/uploads/641e55eff67b72651c9d93c0region09cn-east-2/1</span><br><span class="line">None</span><br><span class="line">_ResponseInfo__response:None, exception:HTTPConnectionPool(host=&apos;upload-cn-east-2.qiniup.com&apos;, port=80): Max retries exceeded with url: /buckets/open2lstore/objects/MjAyMzAzMjUv6KGl5YWF5Y2P6K6uMjAyMjA5MTXmiavmj4_ku7YucGRm/uploads/641e55eff67b72651c9d93c0region09cn-east-2/1 (Caused by ProtocolError(&apos;Connection aborted.&apos;, timeout(&apos;timed out&apos;))), status_code:-1, text_body:None, req_id:None, x_log:None, error:HTTPConnectionPool(host=&apos;upload-cn-east-2.qiniup.com&apos;, port=80): Max retries exceeded with url: /buckets/open2lstore/objects/MjAyMzAzMjUv6KGl5YWF5Y2P6K6uMjAyMjA5MTXmiavmj4_ku7YucGRm/uploads/641e55eff67b72651c9d93c0region09cn-east-2/1 (Caused by ProtocolError(&apos;Connection aborted.&apos;, timeout(&apos;timed out&apos;))</span><br></pre></td></tr></table></figure></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>一开始我本地开启项目上传10M大小的文件都没有问题，大概拆到了是服务器带宽的问题，因为服务器我买的是腾讯云新用户99一年的服务器，配置都是最低的，于是安装了nload命令去观察上传带宽，果然上传的带宽限制了文件上传的问题。<br>我在官网提了相关错误的报错工单，官网工程师给出的解决方案：<br><img src="jiejue.png" alt></p><p>就是修改官网Pyhton SDK的参数，修改后的参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">_config = &#123;</span><br><span class="line">    &apos;default_zone&apos;: zone.Zone(),</span><br><span class="line">    &apos;default_rs_host&apos;: RS_HOST,</span><br><span class="line">    &apos;default_rsf_host&apos;: RSF_HOST,</span><br><span class="line">    &apos;default_api_host&apos;: API_HOST,</span><br><span class="line">    &apos;default_uc_host&apos;: UC_HOST,</span><br><span class="line">    &apos;connection_timeout&apos;: 120,  # 链接超时为时间为30s</span><br><span class="line">    &apos;connection_retries&apos;: 3,  # 链接重试次数为3次</span><br><span class="line">    &apos;connection_pool&apos;: 10,  # 链接池个数为10</span><br><span class="line">    &apos;default_upload_threshold&apos;: 2 * _BLOCK_SIZE  # put_file上传方式的临界默认值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>把connection_timeout连接时间由默认的30秒修改为120秒。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在解决过程中学到了一个新的实时测带宽的命令nload。</p><blockquote><p>nload</p></blockquote><p><img src="nload.png" alt></p><p>除了nload，也可以使用speedtest-cli进行网速测评。</p><blockquote><p>speedtest-cli</p></blockquote><p><img src="speedtest-cli.jpg" alt></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>虽然服务器配置较低，如果可以利用起来，还是可以干很多事情的，而且在自己搞的时候，遇到了别人没有遇到过的问题，总结起来，慢慢会的就多了。</p><font size="6.5" color="red">坚持学习，总会有收获。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label default&quot;&gt;Python&lt;/span&gt;
&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;自己开发的&lt;font size=&quot;5.5&quot; color=&quot;red&quot;&gt;OPENTOOL-Z&lt;/font&gt;系统在PDF转WORD功能文件上传上发送上传失败，后台查看日志发送了ProtocolError(‘Connection aborted.’, timeout(‘timed out’))的错误，记录以下解决方法。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_qiniu.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://pygo2.top/categories/Python/"/>
    
    
      <category term="Python" scheme="http://pygo2.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库dat数据导入双引号问题</title>
    <link href="http://pygo2.top/articles/42107/"/>
    <id>http://pygo2.top/articles/42107/</id>
    <published>2023-03-19T14:59:03.000Z</published>
    <updated>2023-03-25T07:38:49.477Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle.jpeg" alt></p><div class="note info">            <p>解决Oracle数据库导入dat数据出现的报错：second enclosure string not present。</p>          </div><span class="label info">Oracle</span><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>今天系统调度跑批，发现17号数据导入有问题。于是用sqlplus、sqlldr手工导入dat数据，打开.log日志有4条数据失败了，提示如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Record 36187: Rejected - Error on table T05_HIST_JRNL_FILE_INF, column SMY.</span><br><span class="line">second enclosure string not present</span><br><span class="line">Record 36188: Rejected - Error on table T05_HIST_JRNL_FILE_INF, column SMY.</span><br><span class="line">second enclosure string not present</span><br><span class="line">Record 43289: Rejected - Error on table T05_HIST_JRNL_FILE_INF, column SMY.</span><br><span class="line">second enclosure string not present</span><br><span class="line">Record 43290: Rejected - Error on table T05_HIST_JRNL_FILE_INF, column SMY.</span><br><span class="line">second enclosure string not present</span><br><span class="line"></span><br><span class="line">Table T05_HIST_JRNL_FILE_INF:</span><br><span class="line">  54833 Rows successfully loaded.</span><br><span class="line">  4 Rows not loaded due to data errors.</span><br><span class="line">  0 Rows not loaded because all WHEN clauses were failed.</span><br><span class="line">  0 Rows not loaded because all fields were null.</span><br></pre></td></tr></table></figure></p><p>大概意思是引号缺失，上网查了一下引号可以没有，或者成对出现，</p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>打开报错的dat数据，搜索找到双引号并删除，重新导入就解决了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;解决Oracle数据库导入dat数据出现的报错：second enclosure string not present。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Oracle&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Element-ui框架el-date-picker的清除之后NULL的问题</title>
    <link href="http://pygo2.top/articles/63642/"/>
    <id>http://pygo2.top/articles/63642/</id>
    <published>2023-03-12T14:23:27.000Z</published>
    <updated>2023-03-12T14:23:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_vue2.jpg" alt></p><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>在写一个高级筛选的VUE代码，使用到了<strong><em>el-date-picker</em></strong>日期选择器组件，设置了daterange类型，并且设置了可以清除的功能。但是使用清除之后，在提交高级筛选的查询，发现报错了，查了好久的问题所在，记录一下。</p><span class="label info">VUE</span> <span class="label primary">Element-UI</span><a id="more"></a><hr><p>下面是VUE开发的高级筛选，<strong><em>el-date-picker</em></strong>日期选择器组件使用清除功能之后，组件变量会设置NULL。<br><img src="xuanze.pic.jpg" alt></p><h4 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h4><p>报错的截图。</p><p><img src="error.pic.jpg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">vue.runtime.esm.js?2b0e:619 [Vue warn]: Error in v-on handler: &quot;TypeError: Cannot read properties of null (reading &apos;0&apos;)&quot;</span><br><span class="line"></span><br><span class="line">found in</span><br><span class="line"></span><br><span class="line">---&gt; &lt;ElButton&gt; at packages/button/src/button.vue</span><br><span class="line">       &lt;ElRow&gt;</span><br><span class="line">         &lt;ElForm&gt; at packages/form/src/form.vue</span><br><span class="line">           &lt;ApiFilter&gt; at src/services/info/ApiFilter.vue</span><br><span class="line">             &lt;Api&gt; at src/views/info/api.vue</span><br><span class="line">               &lt;AppMain&gt; at src/layout/components/AppMain.vue</span><br><span class="line">                 &lt;Layout&gt; at src/layout/index.vue</span><br><span class="line">                   &lt;App&gt; at src/App.vue</span><br><span class="line">                     &lt;Root&gt;</span><br><span class="line">warn @ vue.runtime.esm.js?2b0e:619</span><br><span class="line">logError @ vue.runtime.esm.js?2b0e:1884</span><br><span class="line">globalHandleError @ vue.runtime.esm.js?2b0e:1879</span><br><span class="line">handleError @ vue.runtime.esm.js?2b0e:1839</span><br><span class="line">invokeWithErrorHandling @ vue.runtime.esm.js?2b0e:1862</span><br><span class="line">invoker @ vue.runtime.esm.js?2b0e:2179</span><br><span class="line">invokeWithErrorHandling @ vue.runtime.esm.js?2b0e:1854</span><br><span class="line">Vue.$emit @ vue.runtime.esm.js?2b0e:3882</span><br><span class="line">handleClick @ element-ui.common.js?5c96:9417</span><br><span class="line">invokeWithErrorHandling @ vue.runtime.esm.js?2b0e:1854</span><br><span class="line">invoker @ vue.runtime.esm.js?2b0e:2179</span><br><span class="line">original._wrapper @ vue.runtime.esm.js?2b0e:6911</span><br><span class="line">vue.runtime.esm.js?2b0e:1888 TypeError: Cannot read properties of null (reading &apos;0&apos;)</span><br><span class="line">    at VueComponent.filterQuery (ApiFilter.vue?9380:279:1)</span><br><span class="line">    at click (ApiFilter.vue?f585:309:1)</span><br><span class="line">    at invokeWithErrorHandling (vue.runtime.esm.js?2b0e:1854:1)</span><br><span class="line">    at VueComponent.invoker (vue.runtime.esm.js?2b0e:2179:1)</span><br><span class="line">    at invokeWithErrorHandling (vue.runtime.esm.js?2b0e:1854:1)</span><br><span class="line">    at Vue.$emit (vue.runtime.esm.js?2b0e:3882:1)</span><br><span class="line">    at VueComponent.handleClick (element-ui.common.js?5c96:9417:1)</span><br><span class="line">    at invokeWithErrorHandling (vue.runtime.esm.js?2b0e:1854:1)</span><br><span class="line">    at HTMLButtonElement.invoker (vue.runtime.esm.js?2b0e:2179:1)</span><br><span class="line">    at original._wrapper (vue.runtime.esm.js?2b0e:6911:1)</span><br></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>直接说问题所在，使用<strong><em>el-date-picker</em></strong>日期选择器组件的清除功能，会把组件的变量设置NULL，所以导致在获取时间的时候报错。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p><img src="i.jpg" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (this.create_date !== null &amp;&amp; this.create_date !== &apos;&apos; &amp;&amp; this.create_date !== undefined) &#123;</span><br><span class="line">  this.searchData.create_time_start = this.create_date[0] + &apos; 00:00:00&apos;</span><br><span class="line">  this.searchData.create_time_end = this.create_date[1] + &apos; 23:59:59&apos;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  this.searchData.create_time_start = &apos;&apos;</span><br><span class="line">  this.searchData.create_time_end = &apos;&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_vue2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h4&gt;&lt;p&gt;在写一个高级筛选的VUE代码，使用到了&lt;strong&gt;&lt;em&gt;el-date-picker&lt;/em&gt;&lt;/strong&gt;日期选择器组件，设置了daterange类型，并且设置了可以清除的功能。但是使用清除之后，在提交高级筛选的查询，发现报错了，查了好久的问题所在，记录一下。&lt;/p&gt;
&lt;span class=&quot;label info&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label primary&quot;&gt;Element-UI&lt;/span&gt;
    
    </summary>
    
      <category term="VUE" scheme="http://pygo2.top/categories/VUE/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="Element-UI" scheme="http://pygo2.top/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>前端脚手架管理系统模板</title>
    <link href="http://pygo2.top/articles/38070/"/>
    <id>http://pygo2.top/articles/38070/</id>
    <published>2023-03-04T06:53:03.000Z</published>
    <updated>2023-03-04T06:53:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>记录下前端好用的管理系统模板脚手架（引用参考）</p></blockquote><a id="more"></a><hr><ul><li><a href="https://mp.weixin.qq.com/s/j6Nwmn-f9L2w83sy_t71Pg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/j6Nwmn-f9L2w83sy_t71Pg</a></li><li><a href="https://mp.weixin.qq.com/s/NOoGMkF3Ct2OobCopltTsg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/NOoGMkF3Ct2OobCopltTsg</a></li><li><a href="https://mp.weixin.qq.com/s/sznpqdGGWLffI8pnBdGB4w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/sznpqdGGWLffI8pnBdGB4w</a></li></ul><font size="6.5" color="red">持续更新中。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;记录下前端好用的管理系统模板脚手架（引用参考）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="REACT" scheme="http://pygo2.top/tags/REACT/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库连接工具PLSQL快捷配置</title>
    <link href="http://pygo2.top/articles/13254/"/>
    <id>http://pygo2.top/articles/13254/</id>
    <published>2023-02-28T14:53:26.000Z</published>
    <updated>2023-02-28T14:53:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_plsql.jpg" alt></p><blockquote class="blockquote-center"><p>PLSQL工具日常快捷配置说明</p></blockquote><a id="more"></a><hr><p>正所谓“功先利其事，必先利其器”，把PLSQL的快捷方式设置好，在写SQL以及操作方面会大大提高效率，分享下本人PLSQL的快捷配置：</p><h4 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h4><blockquote><p>用户界面 &gt; 编辑器 &gt; 显示行号</p></blockquote><p>可以显示SQL窗口的行号。<br><img src="showline.PNG" alt></p><h4 id="关键词大写"><a href="#关键词大写" class="headerlink" title="关键词大写"></a>关键词大写</h4><blockquote><p>用户界面 &gt; 编辑器 &gt; 关键词大小写 &gt; 大写</p></blockquote><p>这个看个人喜好，如果想把关键字都大写可以进行设置，这样写出来的SQL也比较好看，关键字都是大写并且带颜色。<br><img src="keycase.PNG" alt></p><h4 id="高亮显示编辑行"><a href="#高亮显示编辑行" class="headerlink" title="高亮显示编辑行"></a>高亮显示编辑行</h4><blockquote><p>用户界面 &gt; 编辑器 &gt; 高亮显示编辑行</p></blockquote><p>可以高亮SQL窗口的编辑行，一下子就找到鼠标在哪，方便继续编辑SQL。<br><img src="hightline.jpg" alt></p><h4 id="延时tip设置"><a href="#延时tip设置" class="headerlink" title="延时tip设置"></a>延时tip设置</h4><blockquote><p>用户界面 &gt; 代码助手 &gt; 延时</p></blockquote><p>设置自动提示的时间，最小值100，不喜欢立马提示的可以值设置的打点。<br><img src="tip.PNG" alt></p><h4 id="不自动提交"><a href="#不自动提交" class="headerlink" title="不自动提交"></a>不自动提交</h4><blockquote><p>窗口类型 &gt; SQL窗口 &gt; 自动提交SQL</p></blockquote><p>设置不自动提交，否则一下子做的危险UPDATE、DELETE等操作，想想都是泪，千万别设置自动提交。<br><img src="nocommit.PNG" alt></p><h4 id="SQL快捷语句"><a href="#SQL快捷语句" class="headerlink" title="SQL快捷语句"></a>SQL快捷语句</h4><blockquote><p>用户界面 &gt; 编辑器 &gt; 自动替换</p></blockquote><p>设置之后，写SQL非常的高效，只需要把缩写写完一个空格，就可以替换设定的SQL语句或关键字。<br><img src="autoreplace.PNG" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sf=SELECT * FROM</span><br><span class="line">sw=SELECT * FROM  WHERE</span><br><span class="line">w=WHERE</span><br><span class="line">or=ORDER BY</span><br><span class="line">order=ORDER BY</span><br><span class="line">ij=INNER JOIN</span><br><span class="line">in=INNER JOIN</span><br><span class="line">inn=INNER JOIN</span><br><span class="line">lj=LEFT JOIN</span><br><span class="line">le=LEFT JOIN</span><br><span class="line">rj=RIGHT JOIN</span><br><span class="line">ri=RIGHT JOIN</span><br><span class="line">drop=DROP TABLE</span><br></pre></td></tr></table></figure><h4 id="快捷键配置"><a href="#快捷键配置" class="headerlink" title="快捷键配置"></a>快捷键配置</h4><p>PLSQL自带了许多快捷键配置，但是习惯了IDE写代码的快捷键，所以对部分配置、以及未配置的功能进行了更改，快捷键配置说明【修改部分】：</p><hr><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">功能</th><th style="text-align:center">快捷键</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">文件/打开/新建(N)/SQL窗口(S)</td><td style="text-align:center">Ctrl+Alt+A</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">文件/关闭/关闭(C)</td><td style="text-align:center">Ctrl+Alt+W</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">编辑/选择/缩进(I)</td><td style="text-align:center">Tab</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">编辑/选择/取消缩进(U)</td><td style="text-align:center">Shift+Tab</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">编辑/选择/注释(O)</td><td style="text-align:center">Ctrl+/</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">编辑/选择/取消注释(N)</td><td style="text-align:center">Ctrl+Shift+/</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">编辑/选择/转到行(G)</td><td style="text-align:center">Ctrl+G</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">工具/源/PL/SQL Beautifier</td><td style="text-align:center">Ctrl+Shift+F</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">删除行(Editor:Delete Line)</td><td style="text-align:center">Ctrl+Y</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">PLSQL切换窗口(Editor:Navigate Forward)</td><td style="text-align:center">Alt+Left上一个窗口</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">PLSQL切换窗口(Editor:Navigate Back)</td><td style="text-align:center">Alt+Right下一个窗口</td></tr></tbody></table><hr><font size="6.5" color="red">持续更新中。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_plsql.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;PLSQL工具日常快捷配置说明&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
      <category term="PLSQL" scheme="http://pygo2.top/tags/PLSQL/"/>
    
  </entry>
  
  <entry>
    <title>Oracle备份expdp与恢复impdp</title>
    <link href="http://pygo2.top/articles/48068/"/>
    <id>http://pygo2.top/articles/48068/</id>
    <published>2023-02-22T14:13:33.000Z</published>
    <updated>2023-02-22T14:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle_2.png" alt></p><a id="more"></a><hr><h4 id="主备恢复流程摘要"><a href="#主备恢复流程摘要" class="headerlink" title="主备恢复流程摘要"></a>主备恢复流程摘要</h4><p>1、停止【主服务器】tomcat服务(./shutdown.sh)</p><p>2、停止【主服务器】oracle监听服务（lsnrctl stop）</p><p>3、【主服务器】切换oracle用户进行expdp备份</p><p>4、主备服务器传输备份文件（MD5SUM查看是否文件完整）</p><p>5、【备服务器】impdp数据恢复</p><p>6、启动tomcat服务(./start.sh)</p><p>7、启动oracle监听服务（lsnrctl start）</p><h4 id="备份前数据库参数设置"><a href="#备份前数据库参数设置" class="headerlink" title="备份前数据库参数设置"></a>备份前数据库参数设置</h4><blockquote><p>备份参数DEFERRED_SEGMENT_CREATION {true | flase}【非必须设置参数】</p></blockquote><p>–true 当该参数值等于true的时候，我们数据库中新创建的表，并且没有insert过任何数据的情况下，采用导出时不会将该表导出， 因为在dba_segments和user_segments是查不到该表的信息，只有当我们插入记录才会在两表中生成段的信息，并能导出该表。</p><p>–flase 当此参数为false时，不存在dba_segments和user_segments中的段表也可以通过导出的方式将该表导出。</p><p>查询：show parameter DEFERRED_SEGMENT_CREATION;</p><p>更改：alter system set DEFERRED_SEGMENT_CREATION=false scope=both;</p><p>﻿</p><blockquote><p>expdp备份目录【必须设置参数】</p></blockquote><p>select * from dba_directories;</p><p>创建/修改：create or replace directory 备份目录名称 as ‘备份绝对路径’;</p><p>授权：grant read,write on dirrectory 备份目录名称 to 用户;</p><p>删除：drop directory 备份目录名称;</p><p>﻿</p><blockquote><p>普通用户授权导出全库【非必要设置参数】：</p></blockquote><p>grant datadump_exp_full_database to test;</p><p>﻿</p><h4 id="备份命令"><a href="#备份命令" class="headerlink" title="备份命令"></a>备份命令</h4><p>普通用户：expdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y</p><p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expdp pas/pas directory=DMPDID_PAS dumpfile=AESPAS_20230213_01.dmp logfile=AESPAS_20230213_01.log compression=all reuse_dumpfiles=y</span><br></pre></td></tr></table></figure></p><p>system用户：expdp system/密码 directory=备份目录名称 schema=策略名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y</p><p>﻿<br>– directory：指定转储文件和日志文件所在的目录（数据库设置）</p><p>– dumpfile：备份文件的名称</p><p>– schema：策略名称，如果system导出全库去掉schema参数，加上full=y</p><p>– logfile：备份日志名称</p><p>– reuse_dumpfiles：是否覆盖备份文件，Y覆盖N不覆盖</p><p>– FULL：指定数据库模式导出,默认为N，{Y | N}为Y时,标识执行数据库导出</p><p>– tables：导出指定的表名，%代表通配符，如果是system可以加上：策略名称.表名</p><p>– exclude：排除指定的表名不导出</p><p>– content：导出内容{ALL | DATA_ONLY | METADATA_ONLY}当设置CONTENT为ALL时,将导出对象定义及其所有数据.为DATA_ONLY时,只导出对象数据,为METADATA_ONLY时,只导出对象定义</p><p>– FLASHBACK_TIME：指定导出特定时间点的表数据（FLASHBACK_TIME=“TO_TIMESTAMP(’25-08-2004 14:35:00’,’DD-MM-YYYY HH24:MI:SS’)”）</p><p>– FILESIZE：指定导出文件的最大尺寸,默认为0</p><p>– NOLOGFILE：该选项用于指定禁止生成导出日志文件,默认值为N</p><p>– QUERY：用于指定过滤导出数据的where条件</p><p>– compression：ALL ：对导出的元数据和表数据都进行压缩，得到的导出文件是最小的，耗时也是最长的。DATA_ONLY ：仅对表数据进行压缩，对于大数据量的导出效果明显，会比METADATA_ONLY方式得到更小的压缩文件。METADATA_ONLY ：仅对元数据进行压缩，而不会对表数据进行压缩，这种压缩执行后效果一般不是很明显，不过速度比较快。NONE ：不进行任何的压缩，导出后的文件也是最大的。DEFAULT ：默认方式，即不指定COMPRESSION参数，会采用默认的压缩方式METADATA_ONLY。</p><p>﻿</p><p>导出表：<br>expdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp logfile=备份日志名称.log compression=all reuse_dumpfiles=y tables=表名称1,表名称2,表名称N</p><p>﻿</p><h4 id="恢复命令"><a href="#恢复命令" class="headerlink" title="恢复命令"></a>恢复命令</h4><p>impdp 账户/密码 directory=备份目录名称 dumpfile=备份文件名称.dmp exclude=statistics table_exists_action=replace<br>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impdp pas/pas directory=DMPDID_PAS dumpfile=AESPAS_20230213_01.dmp exclude=statistics table_exists_action=replace</span><br></pre></td></tr></table></figure></p><h4 id="查看存在的job："><a href="#查看存在的job：" class="headerlink" title="查看存在的job："></a>查看存在的job：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM DBA_DATAPUMP_JOBS;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle_2.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>NODE17或者18版本启动NODE16版本的项目:0308010C:digital envelope routines::unsupported</title>
    <link href="http://pygo2.top/articles/40755/"/>
    <id>http://pygo2.top/articles/40755/</id>
    <published>2023-02-18T11:46:20.000Z</published>
    <updated>2023-02-18T11:46:20.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary">            <h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>前端项目open2lui一直都用的是node/16.9.1版本，最近用n更新了最新版、lts版本，分别是node/18.14.0、node/19.6.0，完了用18活着19版本npm去运行npm run dev的时候报错了，导致项目起不来，后台查询资料解决了高版本启动项目的问题。</p>          </div><p><img src="/images/article_npm_1.png" alt></p><span class="label primary">NODE</span> <span class="label warning">VUE</span><a id="more"></a><hr><p>在项目的package.json文件中记录了npm scripts，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;vue-cli-service serve --open --copy --mode development&quot;,</span><br><span class="line">    &quot;devs&quot;: &quot;vue-cli-service serve --open --copy --https --mode development&quot;,</span><br><span class="line">    &quot;prod&quot;: &quot;vue-cli-service serve --open --copy --mode production&quot;,</span><br><span class="line">    &quot;prods&quot;: &quot;vue-cli-service serve --open --copy --https --mode production&quot;,</span><br><span class="line">    &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span><br><span class="line">    &quot;lint-fix&quot;: &quot;eslint --ext .js,.vue src --fix&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;vue-cli-service build --report&quot;,</span><br><span class="line">    &quot;build:prod&quot;: &quot;vue-cli-service build --report --mode production --dest dist&quot;,</span><br><span class="line">    &quot;build:dev&quot;: &quot;vue-cli-service build --report --mode development --dest dist&quot;,</span><br><span class="line">    &quot;preview&quot;: &quot;node build/index.js --preview&quot;,</span><br><span class="line">    &quot;new&quot;: &quot;plop&quot;,</span><br><span class="line">    &quot;svgo&quot;: &quot;svgo -f src/icons/svg --config=src/icons/svgo.yml&quot;,</span><br><span class="line">    &quot;test:unit&quot;: &quot;jest --clearCache &amp;&amp; vue-cli-service test:unit&quot;,</span><br><span class="line">    &quot;test:ci&quot;: &quot;npm run lint &amp;&amp; npm run test:unit&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>用18/19高版本的node运行<strong><em>npm run dev</em></strong>，发生了错误。</p><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Error: error:0308010C:digital envelope routines::unsupported</span><br><span class="line">    at new Hash (node:internal/crypto/hash:71:19)</span><br><span class="line">    at Object.createHash (node:crypto:133:10)</span><br><span class="line">    at module.exports (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/util/createHash.js:135:53)</span><br><span class="line">    at NormalModule._initBuildHash (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:417:16)</span><br><span class="line">    at handleParseError (/Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:471:10)</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:503:5</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/webpack/lib/NormalModule.js:358:12</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:373:3</span><br><span class="line">    at iterateNormalLoaders (/Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:214:10)</span><br><span class="line">    at Array.&lt;anonymous&gt; (/Users/gaomingliang/gitee/open2lui/node_modules/loader-runner/lib/LoaderRunner.js:205:4)</span><br><span class="line">    at Storage.finished (/Users/gaomingliang/gitee/open2lui/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:55:16)</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:91:9</span><br><span class="line">    at /Users/gaomingliang/gitee/open2lui/node_modules/graceful-fs/graceful-fs.js:123:16</span><br><span class="line">    at FSReqCallback.readFileAfterClose [as oncomplete] (node:internal/fs/read_file_context:68:3) &#123;</span><br><span class="line">  opensslErrorStack: [ &apos;error:03000086:digital envelope routines::initialization error&apos; ],</span><br><span class="line">  library: &apos;digital envelope routines&apos;,</span><br><span class="line">  reason: &apos;unsupported&apos;,</span><br><span class="line">  code: &apos;ERR_OSSL_EVP_UNSUPPORTED&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Node.js v18.14.0</span><br><span class="line">npm notice</span><br><span class="line">npm notice New minor version of npm available! 9.3.1 -&gt; 9.4.2</span><br><span class="line">npm notice Changelog: https://github.com/npm/cli/releases/tag/v9.4.2</span><br><span class="line">npm notice Run npm install -g npm@9.4.2 to update!</span><br><span class="line">npm notice</span><br></pre></td></tr></table></figure><h4 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h4><p>对前端不是特别精通，具体什么原因上网查了下，大致理解原因：<br>出现这个错误是因为node.js V17、18、19高版本中最近发布的OpenSSL3.0, 而OpenSSL3.0对允许算法和密钥大小增加了严格的限制，可能会对生态系统造成一些影响.</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><blockquote><p>方案一</p></blockquote><p>在控制台中进行变量设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NODE_OPTIONS=--openssl-legacy-provider</span><br></pre></td></tr></table></figure></p><p>把NODE_OPTIONS变量设置为环境变量，在运行的时候直接export导入，<strong><em>npm run dev</em></strong>运行。</p><blockquote><p>方案二</p></blockquote><p>直接修改package.json scripts内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vue-cli-service serve --open --copy --mode development</span><br></pre></td></tr></table></figure></p><p>运行<strong><em>npm run dev</em></strong>，高版本node的问题解决。<br>但是，这么处理有个问题，就是其他的script脚本也需要加上变量，不如直接在控制台活着配置文件中添加。</p><h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><p>IDE：WebStorm<br>OS：MacOS<br>node多版本管理用的为n。</p><font size="6.5" color="red">坚持学习。。。。。。</font>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;
            &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;p&gt;前端项目open2lui一直都用的是node/16.9.1版本，最近用n更新了最新版、lts版本，分别是node/18.14.0、node/19.6.0，完了用18活着19版本npm去运行npm run dev的时候报错了，导致项目起不来，后台查询资料解决了高版本启动项目的问题。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_npm_1.png&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label primary&quot;&gt;NODE&lt;/span&gt; &lt;span class=&quot;label warning&quot;&gt;VUE&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
      <category term="NPM" scheme="http://pygo2.top/tags/NPM/"/>
    
      <category term="NODE" scheme="http://pygo2.top/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>Window Server 2012R2添加我的电脑</title>
    <link href="http://pygo2.top/articles/7239/"/>
    <id>http://pygo2.top/articles/7239/</id>
    <published>2023-02-03T04:28:36.000Z</published>
    <updated>2023-02-03T04:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_window_server_2012.png" alt></p><div class="note primary">            <p>新服务器刚装的Window Server 2012R2系统，打开服务器发现找不到我的电脑，需要对其进行简单操作下才可以显示。</p>          </div><span class="label info">Window Server</span><a id="more"></a><hr><h4 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h4><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">服务器系统</td><td style="text-align:center">Windows Server2012 R2 Standard</td></tr></tbody></table><h4 id="我的电脑"><a href="#我的电脑" class="headerlink" title="我的电脑"></a>我的电脑</h4><p>1、运行win徽标键+R，输入下列代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe shell32.dll,Control_RunDLL desk.cpl,,0</span><br></pre></td></tr></table></figure></p><font size="6.5" color="red">逗号一定要用英文逗号,</font><br><font size="6.5" color="blue">逗号一定要用英文逗号,</font><br><font size="6.5" color="yellow">逗号一定要用英文逗号,</font><p>2、确定之后，会出现以下设置配置的项目，勾选我的电脑以及需要桌面显示快捷入口。<br><img src="computer.jpeg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_window_server_2012.png&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;新服务器刚装的Window Server 2012R2系统，打开服务器发现找不到我的电脑，需要对其进行简单操作下才可以显示。&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label info&quot;&gt;Window Server&lt;/span&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://pygo2.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Window Server" scheme="http://pygo2.top/tags/Window-Server/"/>
    
  </entry>
  
  <entry>
    <title>Oracle报错监听TNS-01155</title>
    <link href="http://pygo2.top/articles/4107/"/>
    <id>http://pygo2.top/articles/4107/</id>
    <published>2023-01-19T13:22:57.000Z</published>
    <updated>2023-01-19T13:22:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/article_oracle.jpeg" alt></p><span class="label default">Oracle</span> <span class="label info"> TNS-01155</span><a id="more"></a><hr><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>今天对线上数据库进行<strong><em>expdp</em></strong>备份，先lsntctl stop停止了监听，然后expdp进行数据库备份，备份完之后在启动监听发现直接报：TNS-01155的错误。<br><img src="lsnrctl_start_error.PNG" alt></p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>找到Oracle数据库的listener.ora文件中，vim删除以下内容代码：<br><img src="listener.PNG" alt></p><h3 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h3><p><img src="lsnrctl_start.PNG" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/article_oracle.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;span class=&quot;label default&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt; TNS-01155&lt;/span&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://pygo2.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://pygo2.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装2个Tomcat</title>
    <link href="http://pygo2.top/articles/27869/"/>
    <id>http://pygo2.top/articles/27869/</id>
    <published>2023-01-13T07:35:46.000Z</published>
    <updated>2023-01-13T07:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<span class="label primary">Java</span> <span class="label success">Tomcat</span><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><div class="note primary">            <p>在Windows上运行Tomcat6、Tomcat8，Tomcat与对应的Java有版本关系。</p>          </div><p><img src="/images/article_youzan.jpeg" alt></p><a id="more"></a><hr><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">Tomcat版本</th><th style="text-align:center">Java版本</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">6</td><td style="text-align:center">1.6</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">8</td><td style="text-align:center">1.8</td></tr></tbody></table><h4 id="特殊说明"><a href="#特殊说明" class="headerlink" title="特殊说明"></a>特殊说明</h4><p>第一套Tomcat6与Java1.6正常配置，这里不做详细描述</p><h4 id="操作方式"><a href="#操作方式" class="headerlink" title="操作方式"></a>操作方式</h4><p>安装JDK1.8与TOMCAT8，环境已经已存在tomcat6，如果只有一个tomcat不需要设置。<br>TOMCAT8/Bin/startup.bat、TOMCAT8/bin/setclasspath.bat最上面添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rem =====================================================================</span><br><span class="line">rem tomcat</span><br><span class="line">SET CATALINA_HOME=D:\apache-tomcat-8.5.59</span><br><span class="line">SET CATALINA_BASE=D:\apache-tomcat-8.5.59</span><br><span class="line">SET CATALINA_TMPDIR=D:\apache-tomcat-8.5.59\temp</span><br><span class="line"></span><br><span class="line">rem java</span><br><span class="line">SET JAVA_HOME=C:\Program Files\Java\jdk1.8.0_271</span><br><span class="line">rem =====================================================================</span><br></pre></td></tr></table></figure></p><p><font color="red" size="4.5">坚持学习。。。。。。</font>！！！。</p>]]></content>
    
    <summary type="html">
    
      &lt;span class=&quot;label primary&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;label success&quot;&gt;Tomcat&lt;/span&gt;
&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h4&gt;&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;在Windows上运行Tomcat6、Tomcat8，Tomcat与对应的Java有版本关系。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/article_youzan.jpeg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://pygo2.top/categories/Java/"/>
    
    
      <category term="Java" scheme="http://pygo2.top/tags/Java/"/>
    
      <category term="Tomcat" scheme="http://pygo2.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>VUE之input只允许输入数字</title>
    <link href="http://pygo2.top/articles/18893/"/>
    <id>http://pygo2.top/articles/18893/</id>
    <published>2023-01-06T13:48:38.000Z</published>
    <updated>2023-01-06T13:48:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/INPUT图片" alt></p><div class="note primary">            <p>加工INPUT标签，只允许输入数字</p>          </div><span class="label primary">VUE</span> <span class="label info">INPUT</span><a id="more"></a><hr><p>在写前端代码的时候，经常会遇到手机号的input输入框，除了位数限制，还有数字等判断，对input进行加工，满足纯数字输入：</p><p>方式一：<br>直接用oninput事件处理输入的内容，正则匹配内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">    v-model.trim=&quot;formData.start&quot;</span><br><span class="line">    placeholder=&quot;文档转换的起始页码，默认首页开始&quot;</span><br><span class="line">    :size=&quot;inputAttrs.size&quot;</span><br><span class="line">    :maxlength=&quot;formDataLimit.start&quot;</span><br><span class="line">    :clearable=&quot;inputAttrs.clear&quot;</span><br><span class="line">    :show-word-limit=&quot;inputAttrs.limit&quot;</span><br><span class="line">    :prefix-icon=&quot;inputAttrs.prefixIcon&quot;</span><br><span class="line">    :disabled=&quot;!formData.mode&quot;</span><br><span class="line">    oninput=&quot;this.value=this.value.replace(/[^\d]/g,&apos;&apos;);&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p><p>方式二：<br>直接使用Element-UI的el-input-number组件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input-number v-model=&quot;num&quot; @change=&quot;handleChange&quot; :min=&quot;1&quot; :max=&quot;10&quot; label=&quot;描述文字&quot;&gt;&lt;/el-input-number&gt;</span><br></pre></td></tr></table></figure></p><div class="post_cus_note">END</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/INPUT图片&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;note primary&quot;&gt;
            &lt;p&gt;加工INPUT标签，只允许输入数字&lt;/p&gt;
          &lt;/div&gt;
&lt;span class=&quot;label primary&quot;&gt;VUE&lt;/span&gt; &lt;span class=&quot;label info&quot;&gt;INPUT&lt;/span&gt;
    
    </summary>
    
      <category term="前端" scheme="http://pygo2.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="VUE" scheme="http://pygo2.top/tags/VUE/"/>
    
  </entry>
  
</feed>
