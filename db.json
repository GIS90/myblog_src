{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/error.html","path":"error.html","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/root.html","path":"root.html","modified":0,"renderable":0},{"_id":"source/robots_github.txt","path":"robots_github.txt","modified":0,"renderable":0},{"_id":"source/about/wx.png","path":"about/wx.png","modified":0,"renderable":0},{"_id":"source/messagepad/messagepad.png","path":"messagepad/messagepad.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/about/life.jpg","path":"about/life.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/click_love.js","path":"js/src/click_love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/click_magic.js","path":"js/src/click_magic.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/next-boot.js","path":"js/src/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/float_box.js","path":"js/src/float_box.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/theme_change.js","path":"js/src/theme_change.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/bookmark/LICENSE","path":"lib/bookmark/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/bookmark/README.md","path":"lib/bookmark/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/bookmark/index.js","path":"lib/bookmark/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/bookmark/package.json","path":"lib/bookmark/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/bookmark/bookmark.min.js","path":"lib/bookmark/bookmark.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","path":"lib/jquery_lazyload/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/README.md","path":"lib/pdf/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/LICENSE","path":"lib/pdf/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/quicklink/README.md","path":"lib/quicklink/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/quicklink/quicklink.umd.js","path":"lib/quicklink/quicklink.umd.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/quicklink/LICENSE","path":"lib/quicklink/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/yarn.lock","path":"lib/three/yarn.lock","modified":0,"renderable":1},{"_id":"source/photo/images/balidaomiyue/meijing7.jpg","path":"photo/images/balidaomiyue/meijing7.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu1.jpg","path":"photo/images/balidaomiyue/renwu1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu7.jpg","path":"photo/images/balidaomiyue/renwu7.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu7.jpg","path":"photo/images/wuzhenzhilv/renwu7.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"source/photo/images/balidaomiyue/meijing1.jpg","path":"photo/images/balidaomiyue/meijing1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meijing6.jpg","path":"photo/images/balidaomiyue/meijing6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi3.jpg","path":"photo/images/balidaomiyue/meishi3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi2.jpg","path":"photo/images/balidaomiyue/meishi2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi1.jpg","path":"photo/images/balidaomiyue/meishi1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi5.jpg","path":"photo/images/balidaomiyue/meishi5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu4.jpg","path":"photo/images/balidaomiyue/renwu4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu6.jpg","path":"photo/images/balidaomiyue/renwu6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu8.jpg","path":"photo/images/balidaomiyue/renwu8.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/11.jpg","path":"photo/images/fristniupai/11.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing4.jpg","path":"photo/images/tianjinzhilv/meijing4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing3.jpg","path":"photo/images/tianjinzhilv/meijing3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing5.jpg","path":"photo/images/tianjinzhilv/meijing5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu1.jpg","path":"photo/images/tianjinzhilv/renwu1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu5.jpg","path":"photo/images/tianjinzhilv/renwu5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing1.jpg","path":"photo/images/wuzhenzhilv/meijing1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing4.jpg","path":"photo/images/wuzhenzhilv/meijing4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu3.jpg","path":"photo/images/tianjinzhilv/renwu3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meishi2.jpg","path":"photo/images/wuzhenzhilv/meishi2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu4.jpg","path":"photo/images/wuzhenzhilv/renwu4.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/muse.js","path":"js/src/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":0,"renderable":1},{"_id":"source/photo/images/balidaomiyue/meijing2.jpg","path":"photo/images/balidaomiyue/meijing2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi6.jpg","path":"photo/images/balidaomiyue/meishi6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/10.jpg","path":"photo/images/fristniupai/10.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/6.jpg","path":"photo/images/fristniupai/6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/4.jpg","path":"photo/images/fristniupai/4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/8.jpg","path":"photo/images/fristniupai/8.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/3.jpg","path":"photo/images/fristniupai/3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing12.jpg","path":"photo/images/tianjinzhilv/meijing12.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing1.jpg","path":"photo/images/tianjinzhilv/meijing1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing7.jpg","path":"photo/images/tianjinzhilv/meijing7.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing6.jpg","path":"photo/images/tianjinzhilv/meijing6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing3.jpg","path":"photo/images/wuzhenzhilv/meijing3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing2.jpg","path":"photo/images/wuzhenzhilv/meijing2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing5.jpg","path":"photo/images/wuzhenzhilv/meijing5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing7.jpg","path":"photo/images/wuzhenzhilv/meijing7.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing8.jpg","path":"photo/images/wuzhenzhilv/meijing8.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu2.jpg","path":"photo/images/tianjinzhilv/renwu2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing9.jpg","path":"photo/images/wuzhenzhilv/meijing9.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu2.jpg","path":"photo/images/wuzhenzhilv/renwu2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu3.jpg","path":"photo/images/wuzhenzhilv/renwu3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meishi3.jpg","path":"photo/images/wuzhenzhilv/meishi3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu5.jpg","path":"photo/images/wuzhenzhilv/renwu5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu1.jpg","path":"photo/images/wuzhenzhilv/renwu1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/renwu6.jpg","path":"photo/images/wuzhenzhilv/renwu6.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/debugger.js","path":"lib/pdf/web/debugger.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.html","path":"lib/pdf/web/viewer.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.css","path":"lib/pdf/web/viewer.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":0,"renderable":1},{"_id":"source/photo/images/balidaomiyue/meijing5.jpg","path":"photo/images/balidaomiyue/meijing5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meijing4.jpg","path":"photo/images/balidaomiyue/meijing4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu5.jpg","path":"photo/images/balidaomiyue/renwu5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu2.jpg","path":"photo/images/balidaomiyue/renwu2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/5.jpg","path":"photo/images/fristniupai/5.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/9.jpg","path":"photo/images/fristniupai/9.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing10.jpg","path":"photo/images/tianjinzhilv/meijing10.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing9.jpg","path":"photo/images/tianjinzhilv/meijing9.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing8.jpg","path":"photo/images/tianjinzhilv/meijing8.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meijing6.jpg","path":"photo/images/wuzhenzhilv/meijing6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/wuzhenzhilv/meishi1.jpg","path":"photo/images/wuzhenzhilv/meishi1.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-V.bcmap","path":"lib/pdf/web/cmaps/78-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-H.bcmap","path":"lib/pdf/web/cmaps/78-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/78-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-H.bcmap","path":"lib/pdf/web/cmaps/78-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/78-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-V.bcmap","path":"lib/pdf/web/cmaps/78-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-H.bcmap","path":"lib/pdf/web/cmaps/Add-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-V.bcmap","path":"lib/pdf/web/cmaps/Add-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","path":"lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","path":"lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-V.bcmap","path":"lib/pdf/web/cmaps/B5pc-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-H.bcmap","path":"lib/pdf/web/cmaps/CNS-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-V.bcmap","path":"lib/pdf/web/cmaps/B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-V.bcmap","path":"lib/pdf/web/cmaps/CNS-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-H.bcmap","path":"lib/pdf/web/cmaps/B5pc-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-V.bcmap","path":"lib/pdf/web/cmaps/CNS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-H.bcmap","path":"lib/pdf/web/cmaps/B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-V.bcmap","path":"lib/pdf/web/cmaps/CNS1-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETHK-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETHK-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETenms-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-H.bcmap","path":"lib/pdf/web/cmaps/ETen-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETen-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-V.bcmap","path":"lib/pdf/web/cmaps/ETenms-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-V.bcmap","path":"lib/pdf/web/cmaps/EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-H.bcmap","path":"lib/pdf/web/cmaps/Ext-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-H.bcmap","path":"lib/pdf/web/cmaps/CNS1-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-H.bcmap","path":"lib/pdf/web/cmaps/EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GB-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-H.bcmap","path":"lib/pdf/web/cmaps/CNS2-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GB-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-H.bcmap","path":"lib/pdf/web/cmaps/GB-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-V.bcmap","path":"lib/pdf/web/cmaps/Ext-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-V.bcmap","path":"lib/pdf/web/cmaps/GB-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-V.bcmap","path":"lib/pdf/web/cmaps/GBK2K-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBT-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBK-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBK-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBT-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-H.bcmap","path":"lib/pdf/web/cmaps/GBT-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-V.bcmap","path":"lib/pdf/web/cmaps/GBT-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/H.bcmap","path":"lib/pdf/web/cmaps/H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKdla-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKdla-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKm314-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-H.bcmap","path":"lib/pdf/web/cmaps/GBK2K-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKm314-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKm471-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hankaku.bcmap","path":"lib/pdf/web/cmaps/Hankaku.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-V.bcmap","path":"lib/pdf/web/cmaps/HKscs-B5-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKm471-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hiragana.bcmap","path":"lib/pdf/web/cmaps/Hiragana.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-H.bcmap","path":"lib/pdf/web/cmaps/HKscs-B5-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-H.bcmap","path":"lib/pdf/web/cmaps/KSC-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-V.bcmap","path":"lib/pdf/web/cmaps/KSC-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-H.bcmap","path":"lib/pdf/web/cmaps/KSC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-V.bcmap","path":"lib/pdf/web/cmaps/KSC-Johab-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-V.bcmap","path":"lib/pdf/web/cmaps/KSC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","path":"lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","path":"lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","path":"lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/LICENSE","path":"lib/pdf/web/cmaps/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-H.bcmap","path":"lib/pdf/web/cmaps/NWP-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-V.bcmap","path":"lib/pdf/web/cmaps/NWP-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-H.bcmap","path":"lib/pdf/web/cmaps/RKSJ-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-H.bcmap","path":"lib/pdf/web/cmaps/KSC-Johab-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Roman.bcmap","path":"lib/pdf/web/cmaps/Roman.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-V.bcmap","path":"lib/pdf/web/cmaps/RKSJ-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/Katakana.bcmap","path":"lib/pdf/web/cmaps/Katakana.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/V.bcmap","path":"lib/pdf/web/cmaps/V.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/WP-Symbol.bcmap","path":"lib/pdf/web/cmaps/WP-Symbol.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","path":"lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-check.svg","path":"lib/pdf/web/images/annotation-check.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-insert.svg","path":"lib/pdf/web/images/annotation-insert.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","path":"lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-comment.svg","path":"lib/pdf/web/images/annotation-comment.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-key.svg","path":"lib/pdf/web/images/annotation-key.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-newparagraph.svg","path":"lib/pdf/web/images/annotation-newparagraph.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-paragraph.svg","path":"lib/pdf/web/images/annotation-paragraph.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-help.svg","path":"lib/pdf/web/images/annotation-help.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-note.svg","path":"lib/pdf/web/images/annotation-note.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl@2x.png","path":"lib/pdf/web/images/findbarButton-next-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next.png","path":"lib/pdf/web/images/findbarButton-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl.png","path":"lib/pdf/web/images/findbarButton-next-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl.png","path":"lib/pdf/web/images/findbarButton-previous-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/annotation-noicon.svg","path":"lib/pdf/web/images/annotation-noicon.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous.png","path":"lib/pdf/web/images/findbarButton-previous.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/grab.cur","path":"lib/pdf/web/images/grab.cur","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl@2x.png","path":"lib/pdf/web/images/findbarButton-previous-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next@2x.png","path":"lib/pdf/web/images/findbarButton-next@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-icon.gif","path":"lib/pdf/web/images/loading-icon.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous@2x.png","path":"lib/pdf/web/images/findbarButton-previous@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-small.png","path":"lib/pdf/web/images/loading-small.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","path":"lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage.png","path":"lib/pdf/web/images/secondaryToolbarButton-firstPage.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool.png","path":"lib/pdf/web/images/secondaryToolbarButton-handTool.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage.png","path":"lib/pdf/web/images/secondaryToolbarButton-lastPage.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/loading-small@2x.png","path":"lib/pdf/web/images/loading-small@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/grabbing.cur","path":"lib/pdf/web/images/grabbing.cur","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool.png","path":"lib/pdf/web/images/secondaryToolbarButton-selectTool.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","path":"lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/texture.png","path":"lib/pdf/web/images/texture.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/shadow.png","path":"lib/pdf/web/images/shadow.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark.png","path":"lib/pdf/web/images/toolbarButton-bookmark.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","path":"lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark@2x.png","path":"lib/pdf/web/images/toolbarButton-bookmark@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows@2x.png","path":"lib/pdf/web/images/toolbarButton-menuArrows@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download.png","path":"lib/pdf/web/images/toolbarButton-download.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows.png","path":"lib/pdf/web/images/toolbarButton-menuArrows.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download@2x.png","path":"lib/pdf/web/images/toolbarButton-download@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl.png","path":"lib/pdf/web/images/toolbarButton-pageDown-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile.png","path":"lib/pdf/web/images/toolbarButton-openFile.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown.png","path":"lib/pdf/web/images/toolbarButton-pageDown.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown@2x.png","path":"lib/pdf/web/images/toolbarButton-pageDown@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile@2x.png","path":"lib/pdf/web/images/toolbarButton-openFile@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl.png","path":"lib/pdf/web/images/toolbarButton-pageUp-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp.png","path":"lib/pdf/web/images/toolbarButton-pageUp.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp@2x.png","path":"lib/pdf/web/images/toolbarButton-pageUp@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search.png","path":"lib/pdf/web/images/toolbarButton-search.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print@2x.png","path":"lib/pdf/web/images/toolbarButton-print@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search@2x.png","path":"lib/pdf/web/images/toolbarButton-search@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode.png","path":"lib/pdf/web/images/toolbarButton-presentationMode.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","path":"lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode@2x.png","path":"lib/pdf/web/images/toolbarButton-presentationMode@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","path":"lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments.png","path":"lib/pdf/web/images/toolbarButton-viewAttachments.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","path":"lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","path":"lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print.png","path":"lib/pdf/web/images/toolbarButton-print.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline.png","path":"lib/pdf/web/images/toolbarButton-viewOutline.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","path":"lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","path":"lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn@2x.png","path":"lib/pdf/web/images/toolbarButton-zoomIn@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut.png","path":"lib/pdf/web/images/toolbarButton-zoomOut.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline@2x.png","path":"lib/pdf/web/images/toolbarButton-viewOutline@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail.png","path":"lib/pdf/web/images/toolbarButton-viewThumbnail.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut@2x.png","path":"lib/pdf/web/images/toolbarButton-zoomOut@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl.png","path":"lib/pdf/web/images/treeitem-collapsed-rtl.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","path":"lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed.png","path":"lib/pdf/web/images/treeitem-collapsed.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded.png","path":"lib/pdf/web/images/treeitem-expanded.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded@2x.png","path":"lib/pdf/web/images/treeitem-expanded@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn.png","path":"lib/pdf/web/images/toolbarButton-zoomIn.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed@2x.png","path":"lib/pdf/web/images/treeitem-collapsed@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/locale.properties","path":"lib/pdf/web/locale/locale.properties","modified":0,"renderable":1},{"_id":"source/photo/images/balidaomiyue/meijing3.jpg","path":"photo/images/balidaomiyue/meijing3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meijing8.jpg","path":"photo/images/balidaomiyue/meijing8.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meishi4.jpg","path":"photo/images/balidaomiyue/meishi4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu3.jpg","path":"photo/images/balidaomiyue/renwu3.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/1.jpg","path":"photo/images/fristniupai/1.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing11.jpg","path":"photo/images/tianjinzhilv/meijing11.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu7.jpg","path":"photo/images/tianjinzhilv/renwu7.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu6.jpg","path":"photo/images/tianjinzhilv/renwu6.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/meijing9.jpg","path":"photo/images/balidaomiyue/meijing9.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/balidaomiyue/renwu9.jpg","path":"photo/images/balidaomiyue/renwu9.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/fristniupai/7.jpg","path":"photo/images/fristniupai/7.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/pdf/web/locale/ach/viewer.properties","path":"lib/pdf/web/locale/ach/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ak/viewer.properties","path":"lib/pdf/web/locale/ak/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/af/viewer.properties","path":"lib/pdf/web/locale/af/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ar/viewer.properties","path":"lib/pdf/web/locale/ar/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/as/viewer.properties","path":"lib/pdf/web/locale/as/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/az/viewer.properties","path":"lib/pdf/web/locale/az/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/be/viewer.properties","path":"lib/pdf/web/locale/be/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/an/viewer.properties","path":"lib/pdf/web/locale/an/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bg/viewer.properties","path":"lib/pdf/web/locale/bg/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bn-BD/viewer.properties","path":"lib/pdf/web/locale/bn-BD/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ast/viewer.properties","path":"lib/pdf/web/locale/ast/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bn-IN/viewer.properties","path":"lib/pdf/web/locale/bn-IN/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/bs/viewer.properties","path":"lib/pdf/web/locale/bs/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/br/viewer.properties","path":"lib/pdf/web/locale/br/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/brx/viewer.properties","path":"lib/pdf/web/locale/brx/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ca/viewer.properties","path":"lib/pdf/web/locale/ca/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cak/viewer.properties","path":"lib/pdf/web/locale/cak/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cs/viewer.properties","path":"lib/pdf/web/locale/cs/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/crh/viewer.properties","path":"lib/pdf/web/locale/crh/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/csb/viewer.properties","path":"lib/pdf/web/locale/csb/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/cy/viewer.properties","path":"lib/pdf/web/locale/cy/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/da/viewer.properties","path":"lib/pdf/web/locale/da/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/el/viewer.properties","path":"lib/pdf/web/locale/el/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/de/viewer.properties","path":"lib/pdf/web/locale/de/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-GB/viewer.properties","path":"lib/pdf/web/locale/en-GB/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-ZA/viewer.properties","path":"lib/pdf/web/locale/en-ZA/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-CA/viewer.properties","path":"lib/pdf/web/locale/en-CA/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/eo/viewer.properties","path":"lib/pdf/web/locale/eo/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-CL/viewer.properties","path":"lib/pdf/web/locale/es-CL/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-ES/viewer.properties","path":"lib/pdf/web/locale/es-ES/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/en-US/viewer.properties","path":"lib/pdf/web/locale/en-US/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/et/viewer.properties","path":"lib/pdf/web/locale/et/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/eu/viewer.properties","path":"lib/pdf/web/locale/eu/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ff/viewer.properties","path":"lib/pdf/web/locale/ff/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-MX/viewer.properties","path":"lib/pdf/web/locale/es-MX/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/es-AR/viewer.properties","path":"lib/pdf/web/locale/es-AR/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fi/viewer.properties","path":"lib/pdf/web/locale/fi/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fr/viewer.properties","path":"lib/pdf/web/locale/fr/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ga-IE/viewer.properties","path":"lib/pdf/web/locale/ga-IE/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fa/viewer.properties","path":"lib/pdf/web/locale/fa/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gd/viewer.properties","path":"lib/pdf/web/locale/gd/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gl/viewer.properties","path":"lib/pdf/web/locale/gl/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/fy-NL/viewer.properties","path":"lib/pdf/web/locale/fy-NL/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gn/viewer.properties","path":"lib/pdf/web/locale/gn/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/gu-IN/viewer.properties","path":"lib/pdf/web/locale/gu-IN/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hr/viewer.properties","path":"lib/pdf/web/locale/hr/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/he/viewer.properties","path":"lib/pdf/web/locale/he/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hto/viewer.properties","path":"lib/pdf/web/locale/hto/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hi-IN/viewer.properties","path":"lib/pdf/web/locale/hi-IN/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hsb/viewer.properties","path":"lib/pdf/web/locale/hsb/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hu/viewer.properties","path":"lib/pdf/web/locale/hu/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/is/viewer.properties","path":"lib/pdf/web/locale/is/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ia/viewer.properties","path":"lib/pdf/web/locale/ia/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/hy-AM/viewer.properties","path":"lib/pdf/web/locale/hy-AM/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/id/viewer.properties","path":"lib/pdf/web/locale/id/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/it/viewer.properties","path":"lib/pdf/web/locale/it/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ka/viewer.properties","path":"lib/pdf/web/locale/ka/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ja/viewer.properties","path":"lib/pdf/web/locale/ja/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kab/viewer.properties","path":"lib/pdf/web/locale/kab/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kk/viewer.properties","path":"lib/pdf/web/locale/kk/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/km/viewer.properties","path":"lib/pdf/web/locale/km/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ks/viewer.properties","path":"lib/pdf/web/locale/ks/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kn/viewer.properties","path":"lib/pdf/web/locale/kn/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lg/viewer.properties","path":"lib/pdf/web/locale/lg/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ko/viewer.properties","path":"lib/pdf/web/locale/ko/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ku/viewer.properties","path":"lib/pdf/web/locale/ku/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lo/viewer.properties","path":"lib/pdf/web/locale/lo/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/kok/viewer.properties","path":"lib/pdf/web/locale/kok/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lij/viewer.properties","path":"lib/pdf/web/locale/lij/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lt/viewer.properties","path":"lib/pdf/web/locale/lt/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ltg/viewer.properties","path":"lib/pdf/web/locale/ltg/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mn/viewer.properties","path":"lib/pdf/web/locale/mn/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/lv/viewer.properties","path":"lib/pdf/web/locale/lv/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/meh/viewer.properties","path":"lib/pdf/web/locale/meh/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mai/viewer.properties","path":"lib/pdf/web/locale/mai/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mk/viewer.properties","path":"lib/pdf/web/locale/mk/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/mr/viewer.properties","path":"lib/pdf/web/locale/mr/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ml/viewer.properties","path":"lib/pdf/web/locale/ml/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nb-NO/viewer.properties","path":"lib/pdf/web/locale/nb-NO/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ms/viewer.properties","path":"lib/pdf/web/locale/ms/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/my/viewer.properties","path":"lib/pdf/web/locale/my/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ne-NP/viewer.properties","path":"lib/pdf/web/locale/ne-NP/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nn-NO/viewer.properties","path":"lib/pdf/web/locale/nn-NO/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/oc/viewer.properties","path":"lib/pdf/web/locale/oc/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nso/viewer.properties","path":"lib/pdf/web/locale/nso/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/nl/viewer.properties","path":"lib/pdf/web/locale/nl/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/or/viewer.properties","path":"lib/pdf/web/locale/or/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pt-BR/viewer.properties","path":"lib/pdf/web/locale/pt-BR/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pa-IN/viewer.properties","path":"lib/pdf/web/locale/pa-IN/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pl/viewer.properties","path":"lib/pdf/web/locale/pl/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/rm/viewer.properties","path":"lib/pdf/web/locale/rm/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/pt-PT/viewer.properties","path":"lib/pdf/web/locale/pt-PT/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sah/viewer.properties","path":"lib/pdf/web/locale/sah/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ru/viewer.properties","path":"lib/pdf/web/locale/ru/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/si/viewer.properties","path":"lib/pdf/web/locale/si/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ro/viewer.properties","path":"lib/pdf/web/locale/ro/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/rw/viewer.properties","path":"lib/pdf/web/locale/rw/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sat/viewer.properties","path":"lib/pdf/web/locale/sat/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sl/viewer.properties","path":"lib/pdf/web/locale/sl/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sk/viewer.properties","path":"lib/pdf/web/locale/sk/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/son/viewer.properties","path":"lib/pdf/web/locale/son/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sr/viewer.properties","path":"lib/pdf/web/locale/sr/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sq/viewer.properties","path":"lib/pdf/web/locale/sq/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sv-SE/viewer.properties","path":"lib/pdf/web/locale/sv-SE/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ta-LK/viewer.properties","path":"lib/pdf/web/locale/ta-LK/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tl/viewer.properties","path":"lib/pdf/web/locale/tl/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/te/viewer.properties","path":"lib/pdf/web/locale/te/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/sw/viewer.properties","path":"lib/pdf/web/locale/sw/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tr/viewer.properties","path":"lib/pdf/web/locale/tr/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/uk/viewer.properties","path":"lib/pdf/web/locale/uk/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/th/viewer.properties","path":"lib/pdf/web/locale/th/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ta/viewer.properties","path":"lib/pdf/web/locale/ta/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tn/viewer.properties","path":"lib/pdf/web/locale/tn/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/ur/viewer.properties","path":"lib/pdf/web/locale/ur/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/vi/viewer.properties","path":"lib/pdf/web/locale/vi/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/wo/viewer.properties","path":"lib/pdf/web/locale/wo/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/uz/viewer.properties","path":"lib/pdf/web/locale/uz/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/xh/viewer.properties","path":"lib/pdf/web/locale/xh/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/tsz/viewer.properties","path":"lib/pdf/web/locale/tsz/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zh-CN/viewer.properties","path":"lib/pdf/web/locale/zh-CN/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zh-TW/viewer.properties","path":"lib/pdf/web/locale/zh-TW/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zam/viewer.properties","path":"lib/pdf/web/locale/zam/viewer.properties","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/locale/zu/viewer.properties","path":"lib/pdf/web/locale/zu/viewer.properties","modified":0,"renderable":1},{"_id":"source/photo/images/fristniupai/2.jpg","path":"photo/images/fristniupai/2.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/renwu4.jpg","path":"photo/images/tianjinzhilv/renwu4.jpg","modified":0,"renderable":0},{"_id":"source/photo/images/tianjinzhilv/meijing2.jpg","path":"photo/images/tianjinzhilv/meijing2.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.js","path":"lib/pdf/web/viewer.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/viewer.js.map","path":"lib/pdf/web/viewer.js.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.js","path":"lib/pdf/build/pdf.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","path":"lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.js.map","path":"lib/pdf/build/pdf.js.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js","path":"lib/pdf/build/pdf.worker.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js.map","path":"lib/pdf/build/pdf.worker.js.map","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"27d48b14f1554fe5b03d7ddad520c8f7433b6180","modified":1560479472552},{"_id":"source/README.md","hash":"f6e326ae41b9ce04502cd29c2715304dcb16c6d9","modified":1576806673080},{"_id":"source/error.html","hash":"e90bd631fc60ce3250829ee2588dea62052c258f","modified":1586310566516},{"_id":"source/robots.txt","hash":"e338ede2f168cb5b43f9ca9666f5471167c5bcb2","modified":1576673921384},{"_id":"source/root.html","hash":"9ad9ef42ed18c8cdea8ceac5961dd8e4a0e8cec8","modified":1586310502436},{"_id":"source/robots_github.txt","hash":"9d48633f53f2c8fc0e021cce81b56b13c50ee377","modified":1576673950095},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1552801513493},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1552801513492},{"_id":"themes/next/.all-contributorsrc","hash":"14a716cd05a63d8473053914d67c0f2392b58c37","modified":1552801513492},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1552801513492},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1552801513493},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1552801513495},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1552801513495},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1552801513495},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1552801513495},{"_id":"themes/next/README.md","hash":"be1aee74c5b82a1255d7159cc218dc1ada055e3e","modified":1552801513495},{"_id":"themes/next/bower.json","hash":"1be57277396806031619b0f625cbeba0224a7cb5","modified":1552801513496},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1552801513496},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1552801513501},{"_id":"themes/next/_config.yml","hash":"760f7795d55d4c3f460fb2283ae932ae0b0e3d8d","modified":1584166602952},{"_id":"themes/next/package.json","hash":"f3b4ef65214cec9c37acd10ef080526fb1ea14bb","modified":1552801513520},{"_id":"source/about/.DS_Store","hash":"3ea922088ca0ccccb35b28c6de3d1926ea2ccb58","modified":1590130615504},{"_id":"source/_drafts/.DS_Store","hash":"7c55a0ed75f40b637e637cbb01fcc34a85dd6710","modified":1585376655804},{"_id":"source/_drafts/test.md","hash":"63307a863c3b7c99558424c588a6bc045c909f0d","modified":1576717381270},{"_id":"source/about/index.md","hash":"89d9f8f3c49dfb9fae19b3c27f8e11e73b486412","modified":1581300747066},{"_id":"source/categories/index.md","hash":"3d3f3818ab2fc29538addf5ace6ed35edb81f7a6","modified":1559746379773},{"_id":"source/about/.index.md.un~","hash":"8a2771f3d14efd8e363c26c2cbc48cd2c5a0ae98","modified":1552482374270},{"_id":"source/messagepad/index.md","hash":"8a02decfe37beeeb8311f22bb7eec67d3edbe297","modified":1559576117482},{"_id":"source/_posts/.DS_Store","hash":"f051ef7ae204508f118a85d11b600563635a1542","modified":1593060153444},{"_id":"source/_posts/College-大学证书那点事.md","hash":"5ed13af15e1901e3104d719b4c37ba49418acba3","modified":1576764778581},{"_id":"source/_posts/DB-Mysql复制表.md","hash":"26d41cde7b8b7b4815e64bfbbc7734c0a268690b","modified":1594192284602},{"_id":"source/_posts/DB-Mysql常用命令.md","hash":"5c1047b189520cefd296795713acc690175cb55a","modified":1594787248907},{"_id":"source/_posts/DB-postgresql的备份与恢复.md","hash":"af318d18783a2231e8a432d5cc2bf71c1d0dd267","modified":1577321173014},{"_id":"source/_posts/DB-postgresql的导表.md","hash":"fd316f9b75c55ee6f1fa9416818b3d185d17fbaa","modified":1577321733396},{"_id":"source/_posts/Enjoy-加强版小黄车.md","hash":"daf9d5389f2548f62f4f937277dfa9c969d60c00","modified":1576765077656},{"_id":"source/_posts/Enjoy-加班版耳机.md","hash":"4a110e2f505d826fc0af8d16daeefb95760bbdcd","modified":1576765082459},{"_id":"source/_posts/Enjoy-席梦思.md","hash":"931bcb387a3e4c38af5d9bed580a7738168bf36b","modified":1576765086023},{"_id":"source/_posts/Enjoy-正常点6、7下班.md","hash":"f4485269181147ae27f86a3dd182074aa6cea3b9","modified":1576765089801},{"_id":"source/_posts/Enjoy-选词填空.md","hash":"f85e069964752f9728446b517b672d431c298ef5","modified":1576765094759},{"_id":"source/_posts/Festival-中秋节.md","hash":"faa2290e2f89e9e59352851d1f66335c2303de92","modified":1577763074412},{"_id":"source/_posts/Festival-儿童节.md","hash":"cdc5cc91ac066e30929555c93e936a35324fc373","modified":1577763099593},{"_id":"source/_posts/Festival-元旦.md","hash":"7b443ebb5673ecc84b117ec78e18814205aebaaf","modified":1578214193218},{"_id":"source/_posts/Festival-圣诞节.md","hash":"8eb09ac4090ae608c6339b4f33674c6c0a5a946e","modified":1577763233075},{"_id":"source/_posts/Festival-母亲节.md","hash":"252cd584f2c8d8d89a19d158b23c214ecedc4329","modified":1577763186986},{"_id":"source/_posts/Festival-父亲节.md","hash":"d6860cda3a81668a05ce651b05c43b7ac05e23fa","modified":1577763191332},{"_id":"source/_posts/Festival-端午节.md","hash":"3f17233588b26ddcc31b1d574699815ff28b45de","modified":1593060184188},{"_id":"source/_posts/Front-鼠标自定义样式.md","hash":"e46d48e9caa4fccd072a93eaf8f8d6f72d545309","modified":1577321770623},{"_id":"source/_posts/Gongwuyuan-History-三大作风三大法宝三大灵魂.md","hash":"bb2e97a1a80349a1c03c83b4e2516d48a717bf57","modified":1576941300514},{"_id":"source/_posts/Gongwuyuan-History-新旧民主主义革命.md","hash":"b14787544f4873860ce3de6d43e69febaccf2a8f","modified":1576992603052},{"_id":"source/_posts/Hadoop-1-2-1集群安装.md","hash":"fd304ed9712f12e270e99a1e686e3b8347182ef8","modified":1576992631260},{"_id":"source/_posts/Hexo-Next主题优化-内置tags篇.md","hash":"208108330376792e90d6297d3dfec8d16c7ed792","modified":1577321812468},{"_id":"source/_posts/Hexo-Live2d喵星人模型s.md","hash":"3e2e5ce6dea652102c255c3040a5195d74686107","modified":1576992989593},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）.md","hash":"e3f8c957240af6eeaed8d4a1c4c3613b8c751ef2","modified":1577321863462},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）.md","hash":"47f4dbe0e9e39ced1f9f89ce2f2a0025d8be525c","modified":1577321903130},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）.md","hash":"1e3c88417b782996571e438a72cd585884410e8c","modified":1577321911262},{"_id":"source/_posts/Hexo-Next分类页样式美化.md","hash":"c868ab51360b876172674b7b96bece896fc89ab6","modified":1577321918038},{"_id":"source/_posts/Hexo-Next博客添加喵星人.md","hash":"693bcd214985028779b654c93af2075045a00efe","modified":1576993550029},{"_id":"source/_posts/Hexo-Next手记.md","hash":"fae2f6e2c0cf58019f5ddc9c332b690276d552b5","modified":1576993664657},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索.md","hash":"03d6c47f97876caa296d4e8befaa67c7422368a0","modified":1577430633527},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索.md","hash":"ffe873eb03ee1737a0ef873124320be805def8a6","modified":1582279052270},{"_id":"source/_posts/Hexo-Next搜索优化（二）博客优化.md","hash":"7cf19369b89815c6008076122c8dfd743730b8dd","modified":1577430642770},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog.md","hash":"a1dc92a5c644be2395c0c6d44d43ff6e9a795153","modified":1577322173080},{"_id":"source/_posts/Hexo-Next添加TagCloud.md","hash":"5bf6288804a93e7cdb9555046be1afa1480be8d3","modified":1577322177906},{"_id":"source/_posts/Hexo-blog常用语记录.md","hash":"215729bebd5ffa6fb6788709aad2b3eb23ae878b","modified":1578643299952},{"_id":"source/_posts/Hexo-tags与categories重构的教训.md","hash":"86a94e74f65a5d5f8b64839a107dc55fa2843208","modified":1577428806591},{"_id":"source/_posts/Hexo-url优化篇.md","hash":"4dca5f13db6dd2a199806ca9b2662de11b2449d2","modified":1577322186469},{"_id":"source/_posts/Hexo-博文加入原生html-css.md","hash":"b2f10faa1e277381798021f6ec184a2460d606d3","modified":1577322191286},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片.md","hash":"92eda8ac1c290ae22fab82c7d1ba8d93ba96011e","modified":1577322195896},{"_id":"source/_posts/Hexo-如何引用自定义js代码.md","hash":"cef73fa1376353222fcc261f6d7f85faf6c798e4","modified":1577322212121},{"_id":"source/_posts/Hexo-展示文章统计-hexo-symbols-count-time.md","hash":"1e77e2abbb77db505a2f1c272bfc32d4736223ae","modified":1577322217838},{"_id":"source/_posts/Hexo-基础命令学习.md","hash":"eaee2a02086e27ee51bb5d98da68bc924b50bd01","modified":1577322207188},{"_id":"source/_posts/Hexo-拓展-插件篇.md","hash":"ba3cc41dd25c55b4fc340d05fda0b6c1ab0b3638","modified":1577322224144},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb.md","hash":"0754977de8ab15589c610e0fd79c6c8a6140ea79","modified":1577322239055},{"_id":"source/_posts/Hexo-文章添加版权声明.md","hash":"a3c2f1e7ca8bf9bbbaeca7a29a1f3b607e41b1bf","modified":1577322290207},{"_id":"source/_posts/Hexo-文章置顶.md","hash":"ca1d0e26b1f14bc3ddfafa68ae446522f15e5915","modified":1577322297968},{"_id":"source/_posts/Hexo-新增tags、categories、自定义菜单栏页.md","hash":"5e65fcf9e1bc7e6705ccd231a037e867f74a18f9","modified":1577322306760},{"_id":"source/_posts/Hexo-添加鼠标点击效果.md","hash":"7c4b24062c48dc0d79744b686af0ce1ebcc68b5f","modified":1577322331185},{"_id":"source/_posts/Hexo-环境搭建之node版本问题.md","hash":"fd517eee85965e9b700e991507924653bf4a26f0","modified":1577322338708},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine.md","hash":"b11fcb5dee87a44d7ef94d19a9e081ee77317b9d","modified":1577322343639},{"_id":"source/_posts/Ide-初学atom.md","hash":"b686adb4233b749c9a88ed8717cd11e0d1d2022e","modified":1577014704015},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01.md","hash":"f28a1090bf4724a74ca688d25070cc366c7f0b06","modified":1577015226898},{"_id":"source/_posts/LDAP-查看用户是否锁定lockoutTime.md","hash":"9129dc8df499129364a9c62edca4561de551222a","modified":1577014826240},{"_id":"source/_posts/Linux-学习之基础篇-cd.md","hash":"0669b1bcbd7e83f1b5014f252f385f4498c6093f","modified":1584150177733},{"_id":"source/_posts/Linux-学习之基础篇-ls.md","hash":"3097a5bd4c3bf444296fc2b8055ad951c7096769","modified":1584150171070},{"_id":"source/_posts/Linux-学习之基础篇-ps.md","hash":"ff8ec7f506a09438b27f1c85c6a83f8e67edbccc","modified":1584166465523},{"_id":"source/_posts/Linux-学习之基础篇-tar.md","hash":"0e970c1ec72b2cd62ade1d823ad9442f8de41dca","modified":1584150155729},{"_id":"source/_posts/Linux-学习之增强篇-awk.md","hash":"763d1dbc9fafc68cd59a8a4592bb8226baddb513","modified":1577322396036},{"_id":"source/_posts/Linux-学习之增强篇-crontab.md","hash":"0e149118104babbc8bd7c5dd144b48b06f232630","modified":1586309746513},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd.md","hash":"4bcc6008fe42f3414f1356084f082acf79a42e01","modified":1589180363776},{"_id":"source/_posts/Linux-学习之增强篇-lsof.md","hash":"cbfb392391998ea8491f3206cb2ebcd84438a6fb","modified":1585358486768},{"_id":"source/_posts/Linux-学习之番外篇-w、who、whoami.md","hash":"8770c6919107834da96376aff5d1236be326a5dc","modified":1577428889164},{"_id":"source/_posts/Linux-学习之番外篇-多命令执行.md","hash":"8b2a07daec6ef82f134f04249726aeca70bd668f","modified":1577322408374},{"_id":"source/_posts/Linux学习之番外篇-nohup.md","hash":"72b59948d93b62ecdc3e484d980d97d5a50d71cb","modified":1593060208134},{"_id":"source/_posts/Live-北京西单抓娃娃心得篇.md","hash":"879de5dc0bc5470a8a6b062993923bbe69cd0902","modified":1577015351035},{"_id":"source/_posts/Live-百词斩打卡.md","hash":"e1a134a38064d2ec6f64c3e3cd61b0bd61c95afc","modified":1577015477753},{"_id":"source/_posts/Movie-夏洛克·福尔摩斯.md","hash":"5851de7e818a34fe9376a1234e368cdb349d2107","modified":1584167181979},{"_id":"source/_posts/Movie-我的英雄学院.md","hash":"b8647f2b156ba441c7117d3ad71671c04bcc7000","modified":1584167176886},{"_id":"source/_posts/Movie-权力的游戏.md","hash":"3f7d181d9da451255f5cb5d3faf6ea50545cd606","modified":1584167172546},{"_id":"source/_posts/Movie-行尸走肉.md","hash":"134b0945704f2a9260c4d993808783ef69f9d14d","modified":1584168996868},{"_id":"source/_posts/Project-summary-qunar项目总结.md","hash":"30f11f6db4f17f6a204512bbcd179adbe64cab5a","modified":1577015755500},{"_id":"source/_posts/Python-YouZan数据处理小程序.md","hash":"45b55624b26c74e7a0a804b3709dd78a7f28daa3","modified":1585376683587},{"_id":"source/_posts/Python-for-break-else的坑.md","hash":"a59ce072775b42b6bbf98986919e545c4605397d","modified":1577322612350},{"_id":"source/_posts/Python-github项目推荐.md","hash":"17c5e505ce5c8a6b9ad3a4e8a45291e32c94bc54","modified":1577514801540},{"_id":"source/_posts/Python-pip.md","hash":"b8eb89bdd9379da2c2924037fe80abb51704c7e8","modified":1577366837337},{"_id":"source/_posts/Python-信息管理系统.md","hash":"bebea358629286f9c3a12545e596836c02a41c2e","modified":1594192043005},{"_id":"source/_posts/Python-内置函数-any与all.md","hash":"89ee40f3cbb113b45e2d038614ca938554fd96ce","modified":1577322604235},{"_id":"source/_posts/Python-判断PC是否连网.md","hash":"caea4dec0571fd7587cefea83ead40ddd9c467f8","modified":1577762708692},{"_id":"source/_posts/Python-制作天气数据api.md","hash":"3930cd3632fda1d81c41f7c65c870096a2ae655f","modified":1577016333142},{"_id":"source/_posts/Python-处理ArcGIS多图层矢量裁剪.md","hash":"77162941008fd4f41b76a022185b96ca2abcdc04","modified":1577015999797},{"_id":"source/_posts/Python-实现微信小机器人.md","hash":"eba63ef0fce90763f49525df00dec2643ad597b6","modified":1577322592350},{"_id":"source/_posts/Python-爬虫之公司网站首页.md","hash":"4bf1ad5a7a384b44d7f58a6e8479fb396f0e23c9","modified":1577016347377},{"_id":"source/_posts/Python-爬虫之糗百笑话.md","hash":"4a22517b7a360bce92ce99c2adc6c7f1bd691041","modified":1577432434180},{"_id":"source/_posts/Python-爬虫利器之BeautifulSoup.md","hash":"495c3a2cc059515d66558fe878a673a93e686dbf","modified":1577366840188},{"_id":"source/_posts/Python-爬虫利器之requests.md","hash":"d0cb39a7f7a6e2ba7290376aa3a0fdcb65c90eb7","modified":1577366843069},{"_id":"source/_posts/Python-生成博客tag词云.md","hash":"2d567b720fb0546a1551fdcddac8bcaa54688455","modified":1577322522393},{"_id":"source/_posts/Python-的列表推导式.md","hash":"93324f46e1e6ec049da25d644dcb37ba3ff4ea32","modified":1577322515214},{"_id":"source/_posts/Python-程序猿七夕-心心相印.md","hash":"a7ad73d14c4a6102cd8d0dd40e5fc152af30a3b3","modified":1578896411625},{"_id":"source/_posts/Qita-抖音BMG.md","hash":"cb853361f6d88a46abc4afd38853577cb5cffb05","modified":1594192981694},{"_id":"source/_posts/Qita-新MacOS导致微信截图问题.md","hash":"293506f53102b431d00f474bb4dbf801011c6d53","modified":1577322490428},{"_id":"source/_posts/Server-SSH之快捷配置.md","hash":"bd21f12e53f0e5037b7226e9a416d28d6ff6eed1","modified":1577322480515},{"_id":"source/_posts/Server-SSH的见解.md","hash":"530b4fd44f40fdc71e4f4febb7ca715544bfb9de","modified":1577322473387},{"_id":"source/_posts/Tools-Confluence之延期.md","hash":"4190a1b54c2f062ef5e9ea391c8a8e5807935e4b","modified":1589180316774},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏.md","hash":"4668d925946f6528337530ef8b4a1f4d62c3f015","modified":1577367359683},{"_id":"source/_posts/Tools-etherpad在线协作编辑.md","hash":"fb80def970722b4f45447ef9b6001c76f0f02c5a","modified":1578206583468},{"_id":"source/_posts/Tools-ffmpeg的基础学习.md","hash":"1eb7bd3b114eb95d15f5d27d732aa6223401d5e0","modified":1577367363282},{"_id":"source/_posts/Travel-2019-06北京美食计划.md","hash":"26fa35454f1aaa1bca5792c496c3d961caa84136","modified":1576941631286},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅.md","hash":"ad265abd3d18f0f43a9fdd0f4a6a1610c1e4987e","modified":1576941463552},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游.md","hash":"743c8beddacc2eed16d7e818f8c9a219e0ffcf3e","modified":1576941435165},{"_id":"source/photo/index.md","hash":"0f0345e09c8649a4b002b9ab3e8a820227ca7370","modified":1567401117479},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1552801513485},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1552801513487},{"_id":"source/tags/index.md","hash":"3117c73a6e0851f765b86b7d89bc15ec5932db4e","modified":1559746437234},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1552801502612},{"_id":"themes/next/.git/index","hash":"e6d30628ddf0aa9cc807f6bfe10facfb69836762","modified":1577761820030},{"_id":"themes/next/.git/packed-refs","hash":"3f51d235c53045d0224d42e16211ab7bd44555dd","modified":1552801513483},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1552801513493},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"1ba344cb353207138ee2bd4d3bb729eb350a746c","modified":1552801513493},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1552801513493},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"492b2c159d871e5b5d4c70d259f36e603afe192d","modified":1552801513494},{"_id":"themes/next/.github/stale.yml","hash":"dbdbc897d0d959b1508c14211240bbfcdd1b7edc","modified":1552801513495},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1552801513497},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1552801513497},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1552801513497},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1552801513497},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1552801513498},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1552801513497},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1552801513498},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1552801513498},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1552801513498},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1552801513501},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1552801513502},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1552801513502},{"_id":"themes/next/languages/fr.yml","hash":"d37a5d82b499a2f082fe9bbf3ad9f11b36b6b837","modified":1552801513502},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1552801513502},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1552801513502},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1552801513502},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1552801513503},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1552801513503},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1552801513503},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1552801513503},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1552801513503},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1552801513503},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1552801513504},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1552801513504},{"_id":"themes/next/languages/zh-CN.yml","hash":"866a5221e2d77649cc12341bab456dcc91119ae4","modified":1581081753872},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1552801513504},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1552801513504},{"_id":"themes/next/layout/_layout.swig","hash":"4ede8460c2bcf8ba673b75e8a64489e0c976b207","modified":1576918430703},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1559958915917},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1552801513519},{"_id":"themes/next/layout/index.swig","hash":"ba94305a14fd40eafa3977e74e2fae2dc46de304","modified":1580710798700},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1552801513520},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1559957059933},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1577341425118},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1559956728861},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1552801513522},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1552801513522},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1552801513561},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1552801513561},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1552801513561},{"_id":"source/about/wx.png","hash":"8acad0a2026571a6a640261d49872d049c118fe4","modified":1552914240568},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552801513546},{"_id":"source/_posts/College-大学证书那点事/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1572780933177},{"_id":"source/_posts/College-大学证书那点事/cet4zhunkaozheng.jpeg","hash":"6bde592c9d7c5c280f4e205e47209fb3bc95aa98","modified":1572780768041},{"_id":"source/_posts/College-大学证书那点事/cet4.jpeg","hash":"2a86727c2914b554bbd9c936fc414d8cab216f99","modified":1572780604252},{"_id":"source/_posts/College-大学证书那点事/cet6zhunkaozheng.jpeg","hash":"2636765b902cb57474ce19a7f51a101268b59ae6","modified":1572780780327},{"_id":"source/_posts/College-大学证书那点事/kaoyan.jpeg","hash":"df3349d69b31f80e53e57960da9cdeccd9b68f89","modified":1572780590537},{"_id":"source/_posts/College-大学证书那点事/jisuanjizhunkaozheng.jpeg","hash":"1d633846b08648cfb344dfea62cfc2720aa2d3b1","modified":1572780796505},{"_id":"source/messagepad/messagepad.png","hash":"cd992c225f9381fc1b49f52b916beaf669ea7186","modified":1557889854842},{"_id":"source/_posts/Enjoy-席梦思/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1575960633084},{"_id":"source/_posts/Enjoy-选词填空/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1560391154174},{"_id":"source/_posts/Enjoy-选词填空/enjoy_xuance_1.jpg","hash":"61b47b2123b034990b56c481789d59d1d9640d86","modified":1560391085945},{"_id":"source/_posts/Festival-中秋节/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577429353519},{"_id":"source/_posts/Festival-儿童节/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577429402519},{"_id":"source/_posts/Festival-母亲节/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577429358528},{"_id":"source/_posts/Festival-父亲节/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577429374542},{"_id":"source/_posts/Festival-端午节/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577429472517},{"_id":"source/_posts/Hadoop-1-2-1集群安装/.DS_Store","hash":"ddca62254a6be790ea7a1f61f5dbc5b86b04930d","modified":1553009746424},{"_id":"source/_posts/Hadoop-1-2-1集群安装/addgroup.jpg","hash":"bcf829b334966d9ec75ca1286b3b1b05b2baa052","modified":1553008680977},{"_id":"source/_posts/Hadoop-1-2-1集群安装/addgroup_hadoop.jpg","hash":"bcf829b334966d9ec75ca1286b3b1b05b2baa052","modified":1553008982571},{"_id":"source/_posts/Hadoop-1-2-1集群安装/cat.jpg","hash":"b148283586f490babe628017eba977fb155a9246","modified":1553008791036},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_core_site.jpg","hash":"f35705eb2576e096f5b2e91f5aff8d723eb4ecb5","modified":1557907854325},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_hadoop_env.jpg","hash":"8f5278097d010bcdc6277af176b76effe8e8879d","modified":1557907856222},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_mapred_site.jpg","hash":"b1d51324dffbec30975cdee5c4b68a08446b28b5","modified":1557907863091},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_hdfs_site.jpg","hash":"fd5cade4ad332c00dab9641b74e1b78c2e3aca11","modified":1557907858355},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_master_slaves.jpg","hash":"90a5a788306584fea9960b1a529a583156e744d3","modified":1557907860533},{"_id":"source/_posts/Hadoop-1-2-1集群安装/install_java.jpg","hash":"0bc23ccd9d9547d705cbfef76650583ae8d939f7","modified":1557907993902},{"_id":"source/_posts/Hadoop-1-2-1集群安装/java_version.jpg","hash":"1a98c2bf536316484378dc3239ac5e612f228b2d","modified":1557907942672},{"_id":"source/_posts/Hadoop-1-2-1集群安装/jps.jpg","hash":"6a3c0c41832176086af4bb6e99bff7a63d074165","modified":1557907939457},{"_id":"source/_posts/Hadoop-1-2-1集群安装/master_jps.jpg","hash":"6a3c0c41832176086af4bb6e99bff7a63d074165","modified":1557907940912},{"_id":"source/_posts/Hadoop-1-2-1集群安装/slaves_jps.jpg","hash":"8511b1317908ec655def6413ca64878689b6f37d","modified":1557907997328},{"_id":"source/_posts/Hadoop-1-2-1集群安装/ssh_localhost.jpg","hash":"32921a63164523f4236a00c997e096d8690574f3","modified":1557907992662},{"_id":"source/_posts/Hadoop-1-2-1集群安装/su_hadoop.jpg","hash":"2e7b98030c21dc64920bdcbf62ce1729c09170c2","modified":1553009016160},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/.DS_Store","hash":"050b3883e500ebd71092b23cae516792c3f7e8b1","modified":1577330288713},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-chitose.png","hash":"f006f6096c9d5b9ac0e3c5dcc2234f549a3b537c","modified":1558157217851},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haruto.png","hash":"804fbef3eb89f5e04f438b911be28d08dbc41895","modified":1558157225010},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-hijiki.png","hash":"7465ec3210f05ff5c3ea67d7290a063ae310f2f6","modified":1558157262330},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-izumi.png","hash":"45b8d98d155cb4bccd2df2115896cb8a87a91e1b","modified":1558157264220},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-ni-j.png","hash":"cc3f5054e74000026bbc075f01b94438169881e0","modified":1558157269292},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nito.png","hash":"c42e77e4ade83fda8aebb2b1b88427827f37cc20","modified":1558157313822},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nico.png","hash":"304ed1acd43fe124f81253106ad4835e871fc468","modified":1558157307601},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nietzsche.png","hash":"593bfef3782f8154ad7bf2af77926aae74306528","modified":1558157309254},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-wanko.png","hash":"617f3845d73d6af92a65b50a04060c3807809a27","modified":1558157341027},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-unitychan.png","hash":"4c06f22217eaf53a383f0518332a0f56e8a5c526","modified":1558157339227},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/.DS_Store","hash":"0372c116031fcbd21ac4a672d33cd6a58f78dda4","modified":1577330863078},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_baidushare.png","hash":"763d488951d191bd8f3bea05ab50ed107f8d6ed7","modified":1554642753796},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_extrainfo.png","hash":"6c7a345b58421d2a40f65d4bc5a2812be5fd775e","modified":1557909156602},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_link.png","hash":"91346cab53b17e860c4910b873afe060e503d3ec","modified":1557909252445},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_likely.png","hash":"947fb0b034834efa3b6035ea8b198a84b14065d4","modified":1558425372085},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_needmoreshare2.png","hash":"e0e3605f11cd75814817c99d621581b523faf394","modified":1558425411383},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/.DS_Store","hash":"1b8726472d3d5ab6d747956bbadd0347ae4f301b","modified":1577330601852},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_pic.png","hash":"aeceaf5f9e3b276a7d7216f6ecbb6401263b27ee","modified":1557909251978},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_a.gif","hash":"a65a2713a88b8909b4b23577eec35245ba06858a","modified":1557909505042},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_catalog.png","hash":"237a109ee3762f53ffc8bbab0170481fd1cf17be","modified":1557909513173},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_github.png","hash":"d380941afdaa368d8dd00bbd08bc2f2afe9eb08b","modified":1557909513636},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_border.png","hash":"64c0f1bcd078b42429745d29f4164994e6d7ea4d","modified":1554553565586},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_tags.png","hash":"0c27ffbfc6c34651b5b69da26f2f318aef569653","modified":1558928239037},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_youhua_border.png","hash":"64c0f1bcd078b42429745d29f4164994e6d7ea4d","modified":1554553565586},{"_id":"source/_posts/Hexo-Next博客添加喵星人/.DS_Store","hash":"1c5b303c46b9366e84d9f1c08353aba5744e4fac","modified":1558149845506},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fugailv.png","hash":"0f5103cc7214787aad8e8786bfee64fc53088c95","modified":1567738146553},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_check.png","hash":"74d0f49e9fd9a7d78815e1f3233b9c346ed9089d","modified":1558066982091},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_main.png","hash":"3c1fd427ef6f2f05696c77bdb61f2ac90ecf1d37","modified":1558066980093},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_new.png","hash":"99f0d358b20ef259f5a17fbfc3494a47826a219b","modified":1558066984350},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_select.png","hash":"47e6beec15e8fc4f67bc7bdf492bd78e296f072c","modified":1558066977096},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_result.png","hash":"3f91e7a4f32b238f02b68bf07ed018e35a16b468","modified":1558063307729},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_sitemap.png","hash":"b96af32da4127325471e18cb17ddc81c83ddd23e","modified":1558066978768},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_robots.png","hash":"082a9c9507ff521315261689bc31a233baa8d2f3","modified":1558066975346},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_1.png","hash":"d06d2349b87eeeea6d71fe62f1b4d15e4d0ca650","modified":1576716767921},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_xinxi.png","hash":"494c8098462e798a8af101f15aca652b286b5e24","modified":1576716541238},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330710881},{"_id":"source/_posts/Hexo-Next添加TagCloud/.DS_Store","hash":"defc000f076c3fc220817438617b096f86636d86","modified":1557833736666},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next.png","hash":"71f466ec6d7cfc88ee4b4765a69ed0fc05aee569","modified":1556017890863},{"_id":"source/_posts/Hexo-tags与categories重构的教训/.DS_Store","hash":"ee9df79bc98492b7a017051ee2b92aab96072663","modified":1558881140367},{"_id":"source/_posts/Hexo-tags与categories重构的教训/404_ri.jpeg","hash":"947575f09da05531b32af511e08d661e15e46f66","modified":1558881748797},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片/.DS_Store","hash":"04b2a899cd71c5a9b815210ff6a4f09c040fcbdf","modified":1557889520433},{"_id":"source/_posts/Hexo-基础命令学习/hexo_list.png","hash":"3d8f0be7a00f313b1078cb8ad7cd0ccdae55d085","modified":1557908377369},{"_id":"source/_posts/Hexo-基础命令学习/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577331218931},{"_id":"source/_posts/Hexo-展示文章统计-hexo-symbols-count-time/hexo-symbols-count-time.png","hash":"60b40c0512afaf9a36513c531c52a338703aa81b","modified":1553653061192},{"_id":"source/_posts/Hexo-拓展-插件篇/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330808021},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-admin.png","hash":"9b474fc037bceaa505d500e581649581675a6059","modified":1577330825065},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-tag-echarts.png","hash":"0389dd27d4ab4e54a12686085ae3a71805a0b464","modified":1558957095812},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/.DS_Store","hash":"d94231e645ee67bb56c983ba27b7a313c27e5c42","modified":1558435620901},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_console.png","hash":"7df65a8b80aed5c1bac873747be10068a077436f","modified":1558444629507},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_error.png","hash":"dc72e8e7d13c510c8c1c3a98c19e2c4c37498ea7","modified":1558445397981},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_promble.png","hash":"3ded2c0ac33e7355360cf9c00e31d0458da92d76","modified":1577323694461},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_sidebar.png","hash":"d187f985e9c8331ef821b55e553fe650f85f306a","modified":1558437888028},{"_id":"source/_posts/Hexo-文章置顶/.DS_Store","hash":"1a4ac3185483b514ef51c456c76c4a611c17a42e","modified":1557825167434},{"_id":"source/_posts/Hexo-文章添加版权声明/.DS_Store","hash":"e5f02a86367dcfc2f99f7432bb94fec050659f70","modified":1553689580604},{"_id":"source/_posts/Hexo-添加鼠标点击效果/.DS_Store","hash":"6e399c9b7420d1c0e533f509f1a6f0772d501f52","modified":1557313064112},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/.DS_Store","hash":"a864dc038670090b076a683d089a4fdb69e45ac2","modified":1553825116363},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/changyan.png","hash":"9af9c1285e21f92e43626435ee71b94ca9de8677","modified":1553957473946},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/disqus.png","hash":"1eae53a57f676e52a93ab822678e4575cfd6eaa4","modified":1553957651791},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/gitalk.png","hash":"297e71d7bde166e9a3512be11eecec099384fa11","modified":1553957781692},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/gitment.png","hash":"7ee393660e2f3e142a7f2dab636fe7ae564947b4","modified":1553957697709},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_setting.png","hash":"a1bb729258c6ad4434fb5d044e86e8567346f80a","modified":1557908287835},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_newapp.png","hash":"bfb1abc4e57581830562dd83858a7a57b1be9864","modified":1557908286401},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/valine.png","hash":"55d80b8b7127efda0264ded271dbb4afcc625bc4","modified":1553957502581},{"_id":"source/_posts/Ide-初学atom/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330020356},{"_id":"source/_posts/Ide-初学atom/chuxueatom_power.jpg","hash":"1cd9a95961c81daaa8618e8c7a89fe57751d6d86","modified":1552554209293},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577331109248},{"_id":"source/_posts/Linux-学习之基础篇-cd/.DS_Store","hash":"5f3fa4cd1d7b7647394d927067fb4bba636c9139","modified":1559642595858},{"_id":"source/_posts/Linux-学习之基础篇-ls/.DS_Store","hash":"7d752d68bd19ab07d5c5566d70215310d87e1bdf","modified":1557912675218},{"_id":"source/_posts/Linux-学习之基础篇-ls/article_linux_ls_ll.png","hash":"dea52fcbd87e21400e121426689849fa9a45be5e","modified":1557995693124},{"_id":"source/_posts/Linux-学习之基础篇-ps/hushi.jpg","hash":"3604fb33a13884148959dfb22da580d10cd42b17","modified":1584151237732},{"_id":"source/_posts/Linux-学习之基础篇-ps/axjf.jpg","hash":"d1a093354c53e95471a90c5c8ea0779be6e2354e","modified":1584158042247},{"_id":"source/_posts/Linux-学习之基础篇-tar/article_linux_tar.png","hash":"d6ac00663688bbbf2da3dab277b4147c4f34f4c6","modified":1559642339130},{"_id":"source/_posts/Linux-学习之基础篇-tar/.DS_Store","hash":"f54c94e5b564a5fb8a6a528d4b067a2003bcc2df","modified":1559642483916},{"_id":"source/_posts/Linux-学习之增强篇-awk/.DS_Store","hash":"9736112f9e315a9bb7634591846396927ef01d2f","modified":1577331484933},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_4.png","hash":"751af24af496095528308b99af32b03b413012bb","modified":1557908605657},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/firewall_state.png","hash":"85d179e9f581860a4024d71691443ed0fd49f054","modified":1585366289590},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/ports.png","hash":"653c8dd82f0499c1380c182919bed05685650b92","modified":1585366091240},{"_id":"source/_posts/Linux-学习之增强篇-lsof/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330920233},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_c_id.png","hash":"6c03ca4c05f551ac555b3eb35c0fbf3b6917fa64","modified":1577330986982},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_dd.png","hash":"2bacdbecfd4bf9c61e88ab5981a039057ce0e401","modified":1577330999900},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_c.png","hash":"72cd336747334a5ea5c4704debe1abdde3641593","modified":1577330989145},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_fields.png","hash":"717d79c169ec57008c7aefb590dd0e028deccaa6","modified":1577330993461},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_i.png","hash":"84442e36a05a4d3750612572a56f791b48566049","modified":1577331030148},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_port.png","hash":"cb2cbbb5cc79b14ccebe11248fc2a007992bcd7c","modified":1577331032177},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_user.png","hash":"c1e033f5df7c736a3ef20e64f34ebc14c7f9de9f","modified":1577331035040},{"_id":"source/_posts/Live-百词斩打卡/20190527daka.jpg","hash":"5052347fbae5df39229fe7a7688e21bd929b93f6","modified":1559183385923},{"_id":"source/_posts/Live-百词斩打卡/20190524daka.jpg","hash":"071099fe6ac36edf89824dd6790fcf05c1445415","modified":1559183457822},{"_id":"source/_posts/Live-百词斩打卡/20190528daka.jpg","hash":"0b2bfe61cbc9605547184d0c3e796a2f5901d6bd","modified":1559183384369},{"_id":"source/_posts/Live-百词斩打卡/.DS_Store","hash":"b2fe6332837db6cd11c1f02ad970e4ab63031177","modified":1560913785346},{"_id":"source/_posts/Live-百词斩打卡/20190529daka.jpg","hash":"de48fd5283d46e0aea6c0fa3ff17d8e5af3d2602","modified":1559183390479},{"_id":"source/_posts/Live-百词斩打卡/20190530daka.jpg","hash":"08acfc35b50f6646bc0072da5435b22fa63cd491","modified":1559183389369},{"_id":"source/_posts/Live-百词斩打卡/20190603daka.jpg","hash":"59e54f76f03d25649d7f7fcd261f3e7cb600fd80","modified":1559528733109},{"_id":"source/_posts/Live-百词斩打卡/20190606daka.jpg","hash":"0786277e72051e0a637d4686204379a2158718b0","modified":1559916686394},{"_id":"source/_posts/Live-百词斩打卡/20190605daka.jpg","hash":"14ddcf455a4de16dc86885b7ea38944d59886deb","modified":1559699476222},{"_id":"source/_posts/Live-百词斩打卡/20190610daka.jpg","hash":"81fe270d7b24ddd9dee2e4e30662d69e9ee13464","modified":1560131686634},{"_id":"source/_posts/Live-百词斩打卡/20190611daka.jpg","hash":"1e9cf055c0ad17d259c1d379d1926e3e1bd0beca","modified":1560218679845},{"_id":"source/_posts/Live-百词斩打卡/20190613daka.jpg","hash":"11d36577436817b750bdc790d03fd4f2e7bf381b","modified":1560390404765},{"_id":"source/_posts/Live-百词斩打卡/20190614daka.jpg","hash":"c2c84de464a04fa992cdc1d15ee4076cddcb0e0c","modified":1560477752226},{"_id":"source/_posts/Live-百词斩打卡/20190612daka.jpg","hash":"d393ebee110f47b6ee9c587e961a4582df41fa75","modified":1560303344226},{"_id":"source/_posts/Live-百词斩打卡/20190618daka.jpg","hash":"70d1389907b55039cfa2f4c605f5ed6fbfb39d5e","modified":1560825683834},{"_id":"source/_posts/Live-百词斩打卡/20190617daka.jpg","hash":"a23497ef782760cb15202932ad28ada3fd561636","modified":1560737271823},{"_id":"source/_posts/Live-百词斩打卡/20190619daka.jpg","hash":"ba09f003d95951b92d6df35618a9ce0cd1073dd3","modified":1560913201757},{"_id":"source/_posts/Live-百词斩打卡/20190620daka.jpg","hash":"a753a231804738f6bcddd0d58a0f968da3d5e975","modified":1560999891889},{"_id":"source/_posts/Live-百词斩打卡/20190624daka.jpg","hash":"4d6a276301aa24a31707fdec86339948757fc640","modified":1561342767755},{"_id":"source/_posts/Live-百词斩打卡/20190621daka.jpg","hash":"7f3eaf0db772fed52141e778416dd3dce5de3365","modified":1561098736275},{"_id":"source/_posts/Live-百词斩打卡/20190625daka.jpg","hash":"3fea251a4f57c8cdad6ef432ad69869aa8e320b9","modified":1561429308569},{"_id":"source/_posts/Live-百词斩打卡/20190627daka.jpg","hash":"20aeaa5156f5d1f83a6116ad2b6a7d8752fee230","modified":1561604064269},{"_id":"source/_posts/Live-百词斩打卡/20190626daka.jpg","hash":"951c9bc16fa65ace38857320a485f762dc3a3530","modified":1561516577402},{"_id":"source/_posts/Live-百词斩打卡/20190628daka.jpg","hash":"6d4a1a9276c9c06abbfdfc7cccfde3a3569e29fc","modified":1561690637798},{"_id":"source/_posts/Live-百词斩打卡/20190704daka.jpg","hash":"5a9f53515b31b709e344ec2b1823f529d9dcdcea","modified":1562201572333},{"_id":"source/_posts/Live-百词斩打卡/20190703daka.jpg","hash":"8b0ab146730417d31543bdf3494503d8e4c047ae","modified":1562123396869},{"_id":"source/_posts/Live-百词斩打卡/20190702daka.jpg","hash":"2b111a84b449e2e74db3945b558821ac95650c92","modified":1562033100730},{"_id":"source/_posts/Live-百词斩打卡/20190717daka.jpg","hash":"41cdeff9cc6460778a650cb3b0ec3325f453871b","modified":1563329522342},{"_id":"source/_posts/Live-百词斩打卡/20190718daka.jpg","hash":"63a748f28defcabb9b8926edc3e079eb69a6d1b0","modified":1563503480964},{"_id":"source/_posts/Live-百词斩打卡/20190722daka.jpg","hash":"dab28c8f002684a737a28c9e0c220429a10c6cf0","modified":1563761380357},{"_id":"source/_posts/Live-百词斩打卡/20190729daka.jpg","hash":"aec877b082ba057091e5faba3e2d5a3e43f3381e","modified":1564367554927},{"_id":"source/_posts/Live-百词斩打卡/20190725daka.jpg","hash":"51038df04a6b8795406eadd5345063263fe6b37d","modified":1564037130749},{"_id":"source/_posts/Live-百词斩打卡/20190726daka.jpg","hash":"767b362d5d5020f479e29226795287dce47c91bf","modified":1564121657783},{"_id":"source/_posts/Live-百词斩打卡/20190730daka.jpg","hash":"a4a38fb3cb424b7f7e87dc8402eb931c040a6161","modified":1564452462932},{"_id":"source/_posts/Live-百词斩打卡/20190801daka.jpg","hash":"eacfab03eee38d0fef7699531fee7e9d64a82611","modified":1564625904240},{"_id":"source/_posts/Live-百词斩打卡/20190731daka.jpg","hash":"f1b4e6d5043cef8d026d9d4134a1033b1f0789a5","modified":1564542657928},{"_id":"source/_posts/Live-百词斩打卡/20190802daka.jpg","hash":"d80dff196201eb6a27e636a920c216a13f21aad7","modified":1564971963481},{"_id":"source/_posts/Live-百词斩打卡/20190805daka.jpg","hash":"ae4be2251349cdd268323efd06213e58898781ca","modified":1564971961944},{"_id":"source/_posts/Live-百词斩打卡/20190808daka.jpg","hash":"1269e7b5889d953eaffeaa7d4bed8a847598491a","modified":1565317752373},{"_id":"source/_posts/Live-百词斩打卡/20190809daka.jpg","hash":"74b122a612960d25c6faa501baa0fe637a32e9fe","modified":1565317752647},{"_id":"source/_posts/Live-百词斩打卡/20190812daka.jpg","hash":"6c6caca4c5c33b356d011821adb945cbb4d443d4","modified":1565764257782},{"_id":"source/_posts/Live-百词斩打卡/20190814daka.jpg","hash":"7216726c47e9991bb5130e3ed2103335c41ddb20","modified":1565764255818},{"_id":"source/_posts/Live-百词斩打卡/20190815daka.jpg","hash":"131832ddd030bf5fdd26ac22667b13e5b0903de2","modified":1565838912506},{"_id":"source/_posts/Live-百词斩打卡/undaka.jpg","hash":"c86c70ab8b1ee5d8f1efbde9f6996e6842b619ff","modified":1559196853524},{"_id":"source/_posts/Python-YouZan数据处理小程序/py.jpeg","hash":"547fac7667345cc91949839ee63fe3d16cdcb46a","modified":1585376606600},{"_id":"source/_posts/Live-百词斩打卡/20190816daka.jpg","hash":"835b282560983d2a1900a413bba7cb3ad5d8d97b","modified":1565925034172},{"_id":"source/_posts/Python-for-break-else的坑/for_break_else.jpg","hash":"332dc288af91334f5f759e91e0962c939a6b8d46","modified":1557909601315},{"_id":"source/_posts/Python-for-break-else的坑/for_else.jpg","hash":"c017666a8d46675aab38c9392d4a569556727363","modified":1557909602988},{"_id":"source/_posts/Python-内置函数-any与all/all.png","hash":"bbbdff87f34757a18d8d95cd2e46a006498c74bb","modified":1557128915139},{"_id":"source/_posts/Python-内置函数-any与all/any_demo.png","hash":"c3544bfbd19c38dd272cd998e2eaf3428702ee03","modified":1557130351054},{"_id":"source/_posts/Python-内置函数-any与all/all_demo.png","hash":"3ae0eee54627080dd0877212a1d40f35a13ced42","modified":1557130226011},{"_id":"source/_posts/Python-内置函数-any与all/any.png","hash":"e99469e924265de1360d0cd45f13da057195c10b","modified":1557128906221},{"_id":"source/_posts/Python-制作天气数据api/api.jpg","hash":"7cf30105218cedd19787154896db25db9686bdba","modified":1557909867485},{"_id":"source/_posts/Python-制作天气数据api/baidu.jpg","hash":"d3da696813514f3259ed903b8e87b1ea16a9fa3d","modified":1557909843876},{"_id":"source/_posts/Python-制作天气数据api/db.jpg","hash":"117f9f66c4a352c2c516150ff3e0970257fc1123","modified":1557909846040},{"_id":"source/_posts/Python-制作天气数据api/id.jpg","hash":"324d660d486d072b0985b55dc25bbb15c047a6c0","modified":1557909852476},{"_id":"source/_posts/Python-制作天气数据api/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1552630572653},{"_id":"source/_posts/Python-制作天气数据api/test.jpg","hash":"ebe9a2bfe0a8bfad713c79cd89ae622b6cd1b52e","modified":1557909848842},{"_id":"source/_posts/Python-处理ArcGIS多图层矢量裁剪/.DS_Store","hash":"eaf922952b23c430814f4f50c6949d65123e625d","modified":1572489818893},{"_id":"source/_posts/Python-制作天气数据api/tiaoshi.jpg","hash":"658f4f191bca5014118c727099860eacdb362cb9","modified":1557909847665},{"_id":"source/_posts/Python-实现微信小机器人/itchat_msg.png","hash":"2e21feb5818043a7f5f424a9ea7f775e21de2a15","modified":1557909680663},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_create.png","hash":"4249b27fd8721944116c4a19bd9071b4325dab07","modified":1557909682656},{"_id":"source/_posts/Python-实现微信小机器人/itchat_run.png","hash":"16c014848bd300d9f187851c08e4e21a6e0a175c","modified":1557909681270},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_set.png","hash":"0b39f9d80f0aa1e66ba93cf213b901fa808358c8","modified":1557909674462},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_login.png","hash":"9bc022d187c3d267516631c7fe8dce4cca91a744","modified":1557909676121},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_key.png","hash":"0313d95f0501c9d23cc6a4047173de4701e9a9ae","modified":1557909678287},{"_id":"source/_posts/Python-爬虫利器之requests/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330776258},{"_id":"source/_posts/Python-爬虫之公司网站首页/article_kwpachong.jpg","hash":"1c535042f63a2f43da2d55f3b3ce4d3896fcdaae","modified":1575422679552},{"_id":"source/_posts/Python-程序猿七夕-心心相印/.DS_Store","hash":"861ec642508b34bcdf8539661e91ea9b1fdf0b55","modified":1578896472144},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan4.jpg","hash":"6598aa12fe22e1501cfdc1aa68e6d6b5e79eff5e","modified":1554203404145},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan2.jpg","hash":"a070550a46bbc7454b38ddf3bdf93035bd31d4ed","modified":1554203359278},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan3.gif","hash":"627331308cecc985819d12a1b854604764e79605","modified":1554203386879},{"_id":"source/_posts/Python-程序猿七夕-心心相印/riqi.png","hash":"d3944c72fe482bfc93a55c31dbbc062174038fa4","modified":1554186348205},{"_id":"source/_posts/Qita-新MacOS导致微信截图问题/shezhi.png","hash":"0a8175a09480003cbbebd6fd628ba7a54beb674f","modified":1574907248574},{"_id":"source/_posts/Server-SSH之快捷配置/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330552511},{"_id":"source/_posts/Server-SSH之快捷配置/ssh_config.png","hash":"5277a618c9e4d4858bf8b6ac707152920be3a79d","modified":1577330550022},{"_id":"source/_posts/Server-SSH的见解/ssh_yuanli.png","hash":"0fd755ea1165a620c641d6a6909fed58ecc12868","modified":1577330518392},{"_id":"source/_posts/Server-SSH的见解/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577330521690},{"_id":"source/_posts/Server-SSH的见解/ssh_keys.png","hash":"bd1ba60c3ec0cdd2c8f500e3a9ad30b6cfb86710","modified":1577330516491},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/article_confluence_hou.png","hash":"658b44ec2b796039a0204608a81eb5c8c0fb9d51","modified":1575959129873},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/article_confluence_qian.png","hash":"1ac64ddd617ccd220ca067599b4ae4a0379e6495","modified":1575959090053},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_config.png","hash":"93d8c5846361b2824ae08a5ac5c50c4949608541","modified":1575959823396},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_html.png","hash":"898a28501069ec31fcaf3cef1ac39c7c4454092d","modified":1575959920269},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_set.png","hash":"8d2b54e2af949d40da8a5eccded46c001c49e43e","modified":1575960021240},{"_id":"source/_posts/Tools-etherpad在线协作编辑/version.png","hash":"4032ccae764f9dc07269342c4b8344a7d6ac1bec","modified":1577518525010},{"_id":"source/_posts/Tools-etherpad在线协作编辑/image-upload.png","hash":"1f36e621bde14c9f8b949f38dc3b6115742de8f6","modified":1577519570659},{"_id":"source/_posts/Tools-ffmpeg的基础学习/.DS_Store","hash":"c682f9b9ef3d72e215ca5596e34c6b1a7df2c3c8","modified":1577329960410},{"_id":"source/_posts/Tools-ffmpeg的基础学习/ffmpeg_i_tf.png","hash":"f98c68bb27ffb23691230b5b37fcb86e097d2130","modified":1577329929774},{"_id":"source/_posts/Travel-2019-06北京美食计划/.DS_Store","hash":"54f18cceef181c3cce67a67f894bbc4efeee3f47","modified":1557386655662},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/.DS_Store","hash":"24d0b87c4421a3a987e6ea083fa83f2428d635b5","modified":1577331513499},{"_id":"source/_posts/Tools-ffmpeg的基础学习/article_ffmpeg.png","hash":"f699510d0e758f2eae0db3732b7345c8731ad696","modified":1576396320479},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1577331177209},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/guwenhuajie.jpeg","hash":"a4d3d046f767b0001f4b6695021798e7fa489f7a","modified":1564399893562},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/yidalifengqingjie.jpeg","hash":"e81e4aab4c59435904d794983ddc8f5392b89d44","modified":1564399883737},{"_id":"source/photo/images/.DS_Store","hash":"1dbd278b4d8e03e21f8b440d07da81b8b2077d15","modified":1567400374628},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1552801502613},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1552801502614},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1552801502614},{"_id":"themes/next/.git/logs/HEAD","hash":"072cb15842410de10ee4329da13b75b0365bb0ea","modified":1552801513486},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1552801502613},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1552801502615},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1552801502615},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1552801502614},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1552801502612},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1552801502614},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1552801502615},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1552801502613},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1552801513494},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1552801513494},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1552801513494},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1552801513494},{"_id":"themes/next/docs/ru/README.md","hash":"0430806eebb5a773f53a3d1cc0af8bb12f6334f9","modified":1552801513499},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1552801513499},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1552801513499},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1552801513498},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1552801513499},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1552801513500},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1552801513499},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1552801513500},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1552801513500},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1552801513500},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1552801513501},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"58c1f95903e959142c34ada6bae15e15c5aea29e","modified":1552801513500},{"_id":"themes/next/docs/zh-CN/README.md","hash":"30fe3217b7605b27b0411cf1b32d53124ec82c2e","modified":1552801513501},{"_id":"themes/next/layout/_custom/custom.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1576653843744},{"_id":"themes/next/layout/_custom/header.swig","hash":"efa4ceb95bd2f6c82cb89fe0a6e7746922fb3c83","modified":1576653883172},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"bad96f5741060c0edb33e2d1912341e4bd31118b","modified":1581297683908},{"_id":"themes/next/layout/_custom/head.swig","hash":"928c81c9beb2242c78d586603bbfdf5f1f90e31f","modified":1580710564016},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1552801513506},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"0c08c8e0df898cb71df22ffe05b72a795b666505","modified":1557827672413},{"_id":"themes/next/layout/_macro/post.swig","hash":"162fcb5c544961cb583bd53444adfb70b5f01c68","modified":1576892565108},{"_id":"themes/next/layout/_partials/comments.swig","hash":"07340f3a4c8d8a9dd491d1eba18d985ecc0855a2","modified":1552801513507},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"553424cb3cecd983819e08edb04257e5e73d49cf","modified":1552961831924},{"_id":"themes/next/layout/_partials/footer.swig","hash":"334b1282c4517170a2c024931a048d782ad202c7","modified":1586310171711},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"818deb840c91f7ebe8ff558840ca3c1612a3f1fe","modified":1552801513507},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1552801513509},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1552801513509},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"d66bc7ec3cc03f60fcc7d555368a5b9b010f7f11","modified":1552801513511},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"d359e638a86bd9664101c48e9344f21ec96e6a15","modified":1552801513511},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1552801513512},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"82032af75320f496ae40fce5d0781e05eb96453c","modified":1552801513511},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"1b250c1b7945cb1029b9e855edb09854f7c8250a","modified":1552801513512},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c4c58ea2bd4cf10372a5e46dbec1b9a2e0e69f0f","modified":1552801513513},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1552801513515},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1552801513515},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1552801513515},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"01ded5e1bad89a6f8d64cd063e3e4e42c20d33bc","modified":1552801513517},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1552801513517},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1552801513517},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1552801513518},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1552801513518},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1552801513518},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1552801513518},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1552801513518},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1552801513519},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1552801513521},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1552801513521},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1552801513522},{"_id":"themes/next/scripts/tags/button.js","hash":"279a04037fce9b5e3cc55aef0581cd34172aea98","modified":1552801513523},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1552801513523},{"_id":"themes/next/scripts/tags/cus_note.js","hash":"466790a2a3a1b214e3acc8c5cf25b472a43d729f","modified":1578641738952},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e3854f1951e6295220f94bd9d3eafe5364491390","modified":1552801513523},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"46bac5a4cf7821e37b548f7ed22c83aeae321857","modified":1559195849456},{"_id":"themes/next/scripts/tags/full-image.js","hash":"6dc82ae9df2341d9c7bd05eacb5cf90208c2a44c","modified":1552801513523},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"2a46ddf4cf0df31ce2ce160228b11d062d273a2a","modified":1558955969844},{"_id":"themes/next/scripts/tags/label.js","hash":"64e6f95e2ccde49413bb5a8d2926f6df2f9a670a","modified":1552801513524},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"d007598ab83babcff824bb44a2e858ef6537f627","modified":1552801513524},{"_id":"themes/next/scripts/tags/note.js","hash":"84ce2d2c0646baafc82083e261b093b1c515f63c","modified":1577350641296},{"_id":"themes/next/scripts/tags/pdf.js","hash":"ebd903785b4fd9163c58fef3707fb28eda6dc8e6","modified":1552801513524},{"_id":"themes/next/scripts/tags/tabs.js","hash":"8b1e9043db8f19ea4a12c473b3f729bd3b5bcb0e","modified":1552801513524},{"_id":"themes/next/scripts/tags/video.js","hash":"2a4d5bfc5318f66887936c51f54088f7611e686f","modified":1552801513525},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1552801513546},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1552801513547},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1552801513547},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1552801513547},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1552801513547},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1552801513548},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1552801513548},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1552801513548},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1552801513548},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1552801513549},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1552801513549},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1552801513548},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1552801513549},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552801513549},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1552801513549},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552801513549},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1552801513549},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1552801513550},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1552801513550},{"_id":"source/about/life.jpg","hash":"ac5bf0b904e33001c5d2ca4894d48f37c5945f45","modified":1552913961792},{"_id":"source/_posts/College-大学证书那点事/giszuopin.jpeg","hash":"b08323682da845766240730b4c9036aaf04ed3db","modified":1572780695570},{"_id":"source/_posts/College-大学证书那点事/putonghua.jpeg","hash":"60e5c27b453112b3be98b65876233eafef08bf84","modified":1572780806430},{"_id":"source/_posts/Enjoy-加班版耳机/enjoy_jiaban.jpg","hash":"14aec1be15c9e64085f8b5b9da3acacd24790105","modified":1559348654015},{"_id":"source/_posts/Enjoy-加强版小黄车/enjoy_xiaohuangche.jpg","hash":"7cac9d8039702ac3a96b7848a386ce56edbff706","modified":1558350868400},{"_id":"source/_posts/Enjoy-选词填空/enjoy_xuance_2.jpg","hash":"15cd5cc4398637ef7ff0fa53d49880f4ce077504","modified":1560391090982},{"_id":"source/_posts/Hadoop-1-2-1集群安装/adduser.jpg","hash":"fc4cbc12f6b15f8e3142dfcbf793258f552b98ba","modified":1553008688672},{"_id":"source/_posts/Hadoop-1-2-1集群安装/adduser_hadoop.jpg","hash":"fc4cbc12f6b15f8e3142dfcbf793258f552b98ba","modified":1553008993087},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit.jpg","hash":"75af3802087befe9b8018965bcfcc30a171579d4","modified":1553008702496},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_sudoers.jpg","hash":"75af3802087befe9b8018965bcfcc30a171579d4","modified":1553009005706},{"_id":"source/_posts/Hadoop-1-2-1集群安装/grep.jpg","hash":"5b279ff73b23f7bab0cf685147dca71a84b2dd74","modified":1553008771435},{"_id":"source/_posts/Hadoop-1-2-1集群安装/hadoop_path.jpg","hash":"653a384f0e44a3f99bdff47f8f9f1f23c137fd54","modified":1553008873363},{"_id":"source/_posts/Hadoop-1-2-1集群安装/hadoop.jpg","hash":"c2477f35cc803d90696c21316bc457d7a3dfff9f","modified":1553008971409},{"_id":"source/_posts/Hadoop-1-2-1集群安装/openssh.jpg","hash":"9efc8c807e5ed13c9eab8fd20786a989518bb8b8","modified":1553008759229},{"_id":"source/_posts/Hadoop-1-2-1集群安装/ssh.jpg","hash":"583890d4651315bc68778836d1f75f191d6d9a8c","modified":1553008778380},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-epsilon2_1.png","hash":"6620810300322b5fbfa84519abcbc006740fae0a","modified":1558157219684},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-gf.png","hash":"03f106ba16bcf529395e2dc39214f28239fa7c3a","modified":1558157222281},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haru_01.png","hash":"78a48f7b65bf7e3250e57c080fb376ab6c2ea36a","modified":1558157229371},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haru_02.png","hash":"9a983b447b36e2c49fcb831bea6a14f2dc3d6286","modified":1558157226484},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-hibiki.png","hash":"e51471530731688d18731ce6016796db671a35b9","modified":1558157260815},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-koharu.png","hash":"3c02788acaa86a183ea83c65c7c323ca85edb02f","modified":1558157267350},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-miku.png","hash":"5556cf34fb8c774f3814851c53551f3963962c2f","modified":1558157265642},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nipsilon.png","hash":"e526dc4ee0d65cfa2f1e18539cc046382bef8312","modified":1558157311998},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-tororo.png","hash":"e91e2e9e5f045337c5d47618794892ccbe9f4ae3","modified":1558157317865},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-tsumiki.png","hash":"bc554b10c9dd26a476336e8f6214aef6d1c08599","modified":1558157337616},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_copy.gif","hash":"9f2f7c50bd1bd7ec2b04554210f5383581424581","modified":1557909157249},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_fangda.png","hash":"42699b675f86a7c1a5e36dd8db8cf10b4151c1b7","modified":1557909160262},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_footer.gif","hash":"999d31c03732ce8314ebf0696cdafb97c9c2e323","modified":1557909160674},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_meihua_post.png","hash":"0af6d58aba8017f0e8c20cf8d7edf5d972c8078a","modified":1558872059566},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/diqu.png","hash":"7c5fe6e01710c388aeaa1770439686ce5fa4466a","modified":1567738239707},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fangwenliang.png","hash":"d029498b14896c822822184aebac06a47d4a002d","modified":1567738129897},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_link_commit.png","hash":"a08347db2011ae7e6ed024d0032cecfca8cdaaa8","modified":1576717647632},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_2.png","hash":"e81f8c740535c8a353e299620c9f83695bdee2fe","modified":1576716741359},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_3.png","hash":"7beec355ec2e75e2b9d1346ad30266f093942e26","modified":1576716867433},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_zhandian.png","hash":"9f153990574789d37bca1ca383cf26ed82856188","modified":1576716518489},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/sitemap.png","hash":"19756a937c7e81ef2e4392ab3d9fa3ab43f691bf","modified":1581303495318},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_server.png","hash":"e6c8c280dbcb90dbde40aef3add8f0c567fcf1dd","modified":1557908097185},{"_id":"source/_posts/Hexo-blog常用语记录/article_hadoop.jpg","hash":"e762dad0a7d884382aba4516b9fa11ac2d13e91b","modified":1553008585010},{"_id":"source/_posts/Hexo-基础命令学习/hexo_version.png","hash":"00068863df5995b48252e416e3f060d7c84ac18b","modified":1557908384721},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-blog-encrypt.png","hash":"3034987c30aee0f9e620d063e36d7e6646ac2acf","modified":1560061027727},{"_id":"source/_posts/Hexo-新增tags、categories、自定义菜单栏页/enjoy_list.png","hash":"b01c871c6b03f206faaa6b81fd75864681be2b6c","modified":1559057879243},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_zhuce.png","hash":"d278d626754540078140cd2fa64ac5b24b964947","modified":1557908293096},{"_id":"source/_posts/Ide-初学atom/chuxueatom_list.jpg","hash":"63dbfc8ee4e68b0f9eb5b945bc005dc7e20cde22","modified":1577330017568},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01/ldap_config.jpg","hash":"17e6fbd3ff969691ae204205c086f9c30adda233","modified":1557908443913},{"_id":"source/_posts/LDAP-查看用户是否锁定lockoutTime/ldap_lockoutTime.png","hash":"25076d5ac8673f287cf5358a9df50eae6352189d","modified":1557908504570},{"_id":"source/_posts/Linux-学习之基础篇-ps/aux.jpg","hash":"898d2ad086b43f68f4bfc443eadd403a567b4bea","modified":1584157114749},{"_id":"source/_posts/Linux-学习之基础篇-ps/u.jpg","hash":"d59db78efdd108ea36b238210a39221470a72bf3","modified":1584165544291},{"_id":"source/_posts/Linux-学习之增强篇-awk/isapi_dmeo.png","hash":"15f973ae4586fda64a32bbf7a11cd8ddd7187d51","modified":1557908612009},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/all.png","hash":"ae4e316b73cba60a8830f1558268fba5fc428e9d","modified":1585366041364},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/systemctl_state.png","hash":"c428982f272a2fe58b4b2b8866e2eb887a48d044","modified":1585366304081},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_D.png","hash":"3ee23f938b2fdb2650462e4eebe1b9dfc43e13b7","modified":1577330991271},{"_id":"source/_posts/Live-百词斩打卡/20190604daka.jpg","hash":"d42704719f6c2e8eac590592cb52e4c88c232d51","modified":1559613505311},{"_id":"source/_posts/Live-百词斩打卡/20190701daka.jpg","hash":"8206771d84257a1f0224a5ac06ead52deabc7237","modified":1561948703493},{"_id":"source/_posts/Live-百词斩打卡/20190716daka.jpg","hash":"b13b1ae7a302e4096cb36a5bb9645bd45bd23afc","modified":1563249356065},{"_id":"source/_posts/Live-百词斩打卡/20190719daka.jpg","hash":"80b41e963d732e5dd9b66c24525f9ce793aff53c","modified":1563503481469},{"_id":"source/_posts/Live-百词斩打卡/20190723daka.jpg","hash":"b6787d5c7be3d7e5115cc8c7e90fafe6cdf666c2","modified":1563939436880},{"_id":"source/_posts/Live-百词斩打卡/20190724daka.jpg","hash":"c2d476a63a398a55e5c48ed8817fef49c97f2311","modified":1563939437216},{"_id":"source/_posts/Live-百词斩打卡/20190813daka.jpg","hash":"d0eb6dc9e178b22e3ef04e10a90a31da084528a2","modified":1565764257130},{"_id":"source/_posts/Python-for-break-else的坑/for_break_else_english.jpg","hash":"60f8d90b49defdcaa667fb0e4de1c8d2e03ebaa0","modified":1557909600708},{"_id":"source/_posts/Python-爬虫利器之requests/postman.png","hash":"bb59ef56cda27eec9d1e66110e1bd1ad7d321a18","modified":1577330773655},{"_id":"source/_posts/Python-爬虫之糗百笑话/article_qiubai_liuchengtu.png","hash":"4a635f8e245e28974eeb9ce9fa31c9f9b0df92d3","modified":1577432299130},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan1.png","hash":"4f0dbe995b1b0775f8be9d0496d93b8bb198254b","modified":1557907298787},{"_id":"source/_posts/Qita-新MacOS导致微信截图问题/anquanyuyinsi.png","hash":"3617dd05d6bb97631f8cc9827076790a303cd76c","modified":1574907360682},{"_id":"source/_posts/Tools-Confluence之延期/1.png","hash":"bcb36e8d036a0119cb56de91c66b98fcb2e42cff","modified":1586998456093},{"_id":"source/_posts/Tools-Confluence之延期/2.png","hash":"c3f19ec011aaa2dbb57d3d75f4d89c8fdb72f590","modified":1586998263736},{"_id":"source/_posts/Tools-Confluence之延期/6.png","hash":"9ede1938556132ea7df6fc16410482df5c43e73b","modified":1586998429404},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_search.png","hash":"de4480f9ce7df92c2b86fce65d38942b6dc50855","modified":1575959710731},{"_id":"source/_posts/Tools-etherpad在线协作编辑/search_plugin.png","hash":"003042a6cd730cdfcffd202e6953f02fd295ded1","modified":1577519032722},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552801513540},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552801513540},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552801513540},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552801513545},{"_id":"source/_posts/College-大学证书那点事/jiangxuejin.jpeg","hash":"1e77388d23bde481dfae0ba600735c679b5b50f7","modified":1572781172506},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-z16.png","hash":"263243b0bf882213920d4c8b74f96339b3b535cb","modified":1558157343185},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/images/article_next.png","hash":"3d6ae56b06706bdac16e51ba6ef81b14c2eae877","modified":1557887864892},{"_id":"source/_posts/Hexo-Next博客添加喵星人/images/article_live2d.png","hash":"4ad4e95ade05f2d9737fdd1244476509cb43cd31","modified":1558151987217},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_init.png","hash":"7b4c4c6d12f120a5977d97f3549cc71481667bfb","modified":1557908106052},{"_id":"source/_posts/Hexo-文章置顶/images/article_zhiding.png","hash":"cae57a19f40889fae9d32c0a0d2e80ee40d951e0","modified":1557825126843},{"_id":"source/_posts/Hexo-添加鼠标点击效果/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1557367133648},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_key.png","hash":"6268d7fd6ce8b62fe6fc7aae1682a1f115b60b61","modified":1557908288329},{"_id":"source/_posts/Linux-学习之基础篇-ps/ef.jpg","hash":"9defd8d69d6727fd9caa03ec58c5aefce17a13d3","modified":1584156280989},{"_id":"source/_posts/Linux-学习之基础篇-tar/images/article_linux_tar.png","hash":"d6ac00663688bbbf2da3dab277b4147c4f34f4c6","modified":1559642339130},{"_id":"source/_posts/Linux-学习之基础篇-ps/examples.jpg","hash":"3a14bd8a23488ef8a008c35b1825e359ce6009b3","modified":1584166359705},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_1.png","hash":"7bfecefcc7d7ea9f88970217acbdacca27a542f2","modified":1577331420493},{"_id":"source/_posts/Live-北京西单抓娃娃心得篇/jiage.png","hash":"c3820339855446e9360d9d9edbb890d0afb2ee34","modified":1567663239586},{"_id":"source/_posts/Project-summary-qunar项目总结/qunar_supervisorctl.png","hash":"3c9354ea0f8555d4e0a9a3567b19d123ebe31ae2","modified":1565507732180},{"_id":"source/_posts/Tools-Confluence之延期/5.png","hash":"b3a6a763a7eede3c073197ad684ad676fbae7d5a","modified":1586998374915},{"_id":"source/_posts/Tools-etherpad在线协作编辑/align.jpg","hash":"708f2ad44b006aeab6601abb18b18464a1ac5bf2","modified":1577519392950},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/tianjinzhiyan.jpeg","hash":"cee4e803b94a9c4a43cc88890928fed798e26fda","modified":1564399850611},{"_id":"source/photo/images/balidaomiyue/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1563339740176},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/wudadao.jpeg","hash":"5abfef8829c6c044c435ecfa5ce798749fdfac54","modified":1564400020408},{"_id":"source/photo/images/tianjinzhilv/.DS_Store","hash":"3e7004803c794f2944bcc9a319d5e05a71d7aa23","modified":1567400881818},{"_id":"source/photo/images/wuzhenzhilv/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1559356296360},{"_id":"themes/next/.git/refs/heads/master","hash":"4403206a3ab606de017b94c57ef51e6751dfc734","modified":1552801513486},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1552801513505},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1552801513506},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"dc53a41196b675268bfd2a944f6258c57ed44e91","modified":1552801513508},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1552801513508},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1552801513508},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"3f310820ff8b97878ce33563c3b6a178b444c6c6","modified":1559903830556},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1552801513508},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"5773110fd62cbc08a244907088a164474db1872f","modified":1582279295549},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1552801513508},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1552801513509},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"69722be16ce5eae5c027168f9b2fded4776e1b53","modified":1552801513509},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1552801513509},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1552801513510},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1552801513510},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1552801513510},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1552801513510},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1552801513510},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1552801513510},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1552801513510},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1552801513511},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1552801513511},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"c7f2855f19dfdf18aba8c58d55b7489e631ed035","modified":1552801513512},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1552801513511},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1552801513512},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1552801513512},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"be24f204a515d5211bf3ba98a030e3bf61d4cc16","modified":1552801513512},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"94e106755c5fb6f40431b621beeba0bd33877e57","modified":1552801513512},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1552801513513},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1552801513513},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1552801513513},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1552801513514},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"c11cbef3df06d0f2b8913b4b01303ac88c0798ee","modified":1576893543677},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1552801513514},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1552801513514},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1552801513513},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1552801513514},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1552801513514},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1552801513515},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1552801513515},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1552801513515},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1552801513515},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1552801513516},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1552801513516},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1552801513516},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1552801513516},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"a4ab8095bf60def5823bf6b7b91a92a356a4c098","modified":1552801513516},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1552801513517},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1552801513516},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1552801513517},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1552801513517},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1552801513517},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"cd86bed852fec6e6933898067122a03755bc17f0","modified":1552801513519},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1552801513519},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1552801513519},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"731829c16a89690e58be77c9a07b85742bc7001b","modified":1577434003165},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1552801513540},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1552801513540},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"b21e39bd906b48332acfe3acfe3b5f476a3a73a9","modified":1552801513540},{"_id":"themes/next/source/css/_custom/custom0.styl","hash":"731829c16a89690e58be77c9a07b85742bc7001b","modified":1577760935412},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1552801513545},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"53d5449e839b0f0c7b1a3257b74fa55bb4f5e13c","modified":1557847560097},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4f9bc0c1e677053a54bc32131fd54c3266d97fa8","modified":1553566122701},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"5ccd87a8800a7258f6d0cef4022d6a96fcc8cec6","modified":1577023348724},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"cdf51b3e84eec7580b8d0197a422386e483c217d","modified":1558929796832},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1552801513550},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1552801513550},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1552801513550},{"_id":"themes/next/source/js/src/click_love.js","hash":"effa770d8085f7e7fb903de217ce521dff163780","modified":1557310687790},{"_id":"themes/next/source/js/src/click_magic.js","hash":"89a06f1dabfab7cac598beb5478ecba85f9b1922","modified":1557483216591},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1552801513551},{"_id":"themes/next/source/js/src/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1552801513551},{"_id":"themes/next/source/js/src/motion.js","hash":"7933a30382a84b655238f6e78d42ea1b99af4de6","modified":1552801513551},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1552801513551},{"_id":"themes/next/source/js/src/float_box.js","hash":"436ab94dcc47e2c57b571c355e6b9c853922d53b","modified":1576917683974},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1552801513552},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1552801513552},{"_id":"themes/next/source/js/src/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1552801513552},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1552801513553},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1552801513553},{"_id":"themes/next/source/js/src/theme_change.js","hash":"7ec206546649b2e057818683ef174f651ff30075","modified":1559903040744},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1552801513553},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1552801513553},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1552801513553},{"_id":"themes/next/source/lib/bookmark/.eslintignore","hash":"3d3910611724b7584a29297a3f7132334a3ad091","modified":1558081028395},{"_id":"themes/next/source/lib/bookmark/.eslintrc.js","hash":"76bec2314ec3477b18e357f9992cf42a9524a3f7","modified":1558081028396},{"_id":"themes/next/source/lib/bookmark/.gitignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1558081028397},{"_id":"themes/next/source/lib/bookmark/LICENSE","hash":"1440355648a72be5b7625fe6fa055b462fcc78b0","modified":1558081028397},{"_id":"themes/next/source/lib/bookmark/README.md","hash":"ecfb09270cf202fb2228e9a79fa970b60be69222","modified":1558081028397},{"_id":"themes/next/source/lib/bookmark/index.js","hash":"5e5cba645a1a4531ccbb4782df2f7a075626393f","modified":1558081028399},{"_id":"themes/next/source/lib/bookmark/package.json","hash":"013ff96fc03cd4ed7b17059af207e53f94953202","modified":1558081028399},{"_id":"themes/next/source/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1558081028398},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1557308061079},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"d8bf9cb15d9d91c7ad022ba2954b5b4d326f17f7","modified":1557308061078},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"a40db80eb6386b085ff810fd3e302f12e76b8df7","modified":1557308061079},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1557308061079},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1558081238273},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1558081238274},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"195a44ef23a22f166f7e56d37eaf27647b4f8b19","modified":1558081238275},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1558081238275},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1558081238276},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1558081238275},{"_id":"themes/next/source/lib/needsharebutton/README.md","hash":"46bb223bdf714a47a1449666f4f70556447786d1","modified":1558424880854},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1558424880854},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"75dee2bb4796ca66693831d769d9a105eed8c290","modified":1558424880855},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"70a34de41d0736f3727c98b6f17c0a24c9cc3537","modified":1554132490911},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1554132490911},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1554132490912},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1554132490913},{"_id":"themes/next/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1557719249117},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1557719249117},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1557719249118},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1557719249118},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1557719249119},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1557719249120},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1557719249121},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1557719249120},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1557719249121},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1557719249122},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1557719249122},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1557719249123},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1557719249124},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1557719249123},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1557719249124},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1557719249119},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1552801513561},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1552801513560},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1552801513560},{"_id":"themes/next/source/lib/pdf/README.md","hash":"f601f7acc4eaa2f17edfe3adcb6e94a01305bf8d","modified":1558448799640},{"_id":"themes/next/source/lib/pdf/LICENSE","hash":"a8a12e6867d7ee39c21d9b11a984066099b6fb6b","modified":1558448799640},{"_id":"themes/next/source/lib/quicklink/README.md","hash":"350a184f2d44ef0dd7e4dcece0b7cb1d16e15187","modified":1559566100832},{"_id":"themes/next/source/lib/quicklink/quicklink.umd.js","hash":"d18dc2633f75d7f3801649f4c4af4b11a291750c","modified":1559566100833},{"_id":"themes/next/source/lib/quicklink/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1559566100832},{"_id":"themes/next/source/lib/three/README.md","hash":"5096005b6bfa0e554b245c6c1ffe10e7edc8130d","modified":1554132631882},{"_id":"themes/next/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1554132631882},{"_id":"themes/next/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1554132631882},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"97f0e67570574dc8597c5819970508d4e7f7af25","modified":1554132631883},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"edd1868be72fde796b0b1f3a7a0316b3c896962a","modified":1554132631884},{"_id":"themes/next/source/lib/three/package.json","hash":"68c5104de7461d425a5dbe521cea0cf00af289c3","modified":1554132631885},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"704e860183acbaaf8de1be65fe5c958e8105f4bf","modified":1554132631887},{"_id":"themes/next/source/lib/three/yarn.lock","hash":"9c71c0a7c033fc709c1e683157b1f12037024694","modified":1554132631891},{"_id":"source/_posts/College-大学证书那点事/shixisheng.jpeg","hash":"b76ec6d82ee645cc17bc904e6c15099aef917c06","modified":1572780752625},{"_id":"source/_posts/College-大学证书那点事/yanjiushengzhunkaozheng.jpeg","hash":"d7315d15378271783f5d25f23833e9ff77bc5ba2","modified":1572780710257},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-shizuku.png","hash":"72d1348d46c8e86f614fe72c871ea49fa4ed9b01","modified":1558157316287},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_avatar.gif","hash":"d5c9d6e97e6088dbb23d52a6318d31ce2e2f2633","modified":1557909107758},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_pay.gif","hash":"95d56d75fe2cd07d8bfe50cf7af81a73994a3f72","modified":1557909261482},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_load.gif","hash":"db97567cc55ea0f088c1e39852a6177d3d71e7c3","modified":1577330669062},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_youhua_button.gif","hash":"22e887d3274c6d2f2ee519c0fcf073d9bcd70574","modified":1557909513590},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fangwenqingkuang.png","hash":"3afef50201e5ed30eb8e0ace08e2206cb220c1b7","modified":1567738169387},{"_id":"source/_posts/Hexo-基础命令学习/hexo_help.png","hash":"f28922a31315bebb74c5753f53b9a1f6ea0ca1e5","modified":1577331216260},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片/images/article_mutipicture_2.png","hash":"152b3553ebb911abc0148a5a830cc9d8f6fdd18f","modified":1557887862062},{"_id":"source/_posts/Hexo-tags与categories重构的教训/images/article_404.png","hash":"c40d772cfbce0bc366aaf1c6bcc7d464f8ba5ade","modified":1558873459378},{"_id":"source/_posts/Hexo-文章添加版权声明/images/article_banquanshengming.png","hash":"c7b4e9d277a7073581191a4ef333afa6e93be543","modified":1553690146372},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/images/article_search_show.png","hash":"6da18b08fd321bda8dfdd54e9f43caff9ee8a976","modified":1558435594028},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01/mountain.png","hash":"3d68d283196fd3f3175c218367840dda0c5fe3d0","modified":1577331123677},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_2.png","hash":"d4ae3afb4844500076d7839a0eb1c8e862d45493","modified":1577331423122},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_3.png","hash":"cd1b65dbbb95639aea139eed28ffef4c6c05adfb","modified":1577331425159},{"_id":"source/_posts/Python-制作天气数据api/article.png","hash":"02373dcdb0bb406f0956d6a36abcf7dc0947816e","modified":1557909847139},{"_id":"source/_posts/Travel-2019-06北京美食计划/images/article_beijing_eat_month.png","hash":"9c3c27cdc3cf02297f8eeaca9e72d692afbe9bcb","modified":1557388409036},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/bali_jiudian_1.png","hash":"f877da28db4f2bdff4e2cf4970770fe95241148d","modified":1561620085135},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/bali_jiudian_2.png","hash":"368cd61541091621d88e57df6fc97a775430bb9b","modified":1561620086852},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/checi.png","hash":"0b91dcf8087f34d5026bdfeca6cacf3b318eb386","modified":1564484397810},{"_id":"source/photo/images/balidaomiyue/meijing7.jpg","hash":"3b5e3a2928d05b3c55fc36ef7121af553d79ffa6","modified":1563329498929},{"_id":"source/photo/images/balidaomiyue/renwu1.jpg","hash":"f2562d6b28d4c043691d9e333fdf5852916ad493","modified":1563329487067},{"_id":"source/photo/images/balidaomiyue/renwu7.jpg","hash":"b55ceb589b91e474ad8498089e773f0004e8a6ec","modified":1563330116186},{"_id":"source/photo/images/wuzhenzhilv/renwu7.jpg","hash":"5928f9c4d7ae406a77fa49d4ea00dc505582e122","modified":1559117709483},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"f151bb5ba4a2cd334061bac27a1a155969b62cdb","modified":1558424880855},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"333fed4c256c7081e07c7844c097b7970b45b248","modified":1554132631883},{"_id":"source/_posts/College-大学证书那点事/gisgongchengshi.jpg","hash":"08e09653d43c7bd0adb4e2c79dba51532cd7e5bb","modified":1381839728000},{"_id":"source/_posts/Hadoop-1-2-1集群安装/images/article_hadoop.jpg","hash":"e762dad0a7d884382aba4516b9fa11ac2d13e91b","modified":1553008585010},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_bg.gif","hash":"664b13d8b8e1d549973c1cd4a7c4ea9a2eb6e5fa","modified":1557909405012},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/images/article_youhua_zengqiang.png","hash":"478d63eba4c8e7c4846dcb5db06a6db1f7d112b4","modified":1557888158691},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_server.gif","hash":"732adbba2580455e5bdd9aaa6888b0c84ce52465","modified":1577330726059},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片/images/article_mutipicture_1.png","hash":"6814b73c27600fb8c9397a791d36ffce080a9c06","modified":1557889244307},{"_id":"source/_posts/Hexo-添加鼠标点击效果/images/article_click.gif","hash":"6d96f912c21fa6e1dc706d5eaa0ca54041f66201","modified":1557888874373},{"_id":"source/_posts/Live-北京西单抓娃娃心得篇/article_zhuawawa_main.jpg","hash":"c74e59bdc5191ce92c0cbac7dc851d3ff4cb9f2a","modified":1567662001479},{"_id":"source/_posts/Tools-Confluence之延期/4.png","hash":"174da9a75e20ec850d1803175486dd46567d7473","modified":1586999037661},{"_id":"source/_posts/Travel-2019-06北京美食计划/images/article_beijing_beijing.jpg","hash":"393140ed6ef7060544b44616cd91238496b6ab29","modified":1557887782594},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/location.png","hash":"24bb7ae9835429e7dec53eb115c29e7df012e527","modified":1577331172694},{"_id":"source/photo/images/balidaomiyue/meijing1.jpg","hash":"92a44f2ca0d58c814d725e272f9aa342789d3a91","modified":1563329483490},{"_id":"source/photo/images/balidaomiyue/meijing6.jpg","hash":"c8a253e09d40761d669388e676d1007c044439c5","modified":1563329487486},{"_id":"source/photo/images/balidaomiyue/meishi3.jpg","hash":"98ae37d76357aa69553ae4aaac1f06d88684167c","modified":1563329921342},{"_id":"source/photo/images/balidaomiyue/meishi2.jpg","hash":"7cc8c8e95ecba6b8f9f8b951c687f4e97fcec80f","modified":1563329489228},{"_id":"source/photo/images/balidaomiyue/meishi1.jpg","hash":"5c6be040af9392c94102d6e0f91f0cdb9dea4c04","modified":1563329488820},{"_id":"source/photo/images/balidaomiyue/meishi5.jpg","hash":"f684a6d4deeb3e3b8a55c86c26c1b0f9fc24049e","modified":1563329924484},{"_id":"source/photo/images/balidaomiyue/renwu4.jpg","hash":"2966f942f1c2d2c1e9e5568b4c8aa88ba7547574","modified":1563329929657},{"_id":"source/photo/images/balidaomiyue/renwu6.jpg","hash":"227c4ef7009f5c1318f3f48b1a79a3fb6bccc730","modified":1563330116716},{"_id":"source/photo/images/balidaomiyue/renwu8.jpg","hash":"9b02c10dfb7c650a772a02ec37804a8ee422f526","modified":1563330114418},{"_id":"source/photo/images/fristniupai/11.jpg","hash":"b380f036d4b6b48c7f1cd49d95d60b9b716f5c75","modified":1559356280673},{"_id":"source/photo/images/tianjinzhilv/meijing4.jpg","hash":"a74704ef2bc85d30acf69618cb379b1777c1c3ba","modified":1567400158540},{"_id":"source/photo/images/tianjinzhilv/meijing3.jpg","hash":"0f8ca6ca03fee4bac83d6249dd85d064184d2a6c","modified":1567400159252},{"_id":"source/photo/images/tianjinzhilv/meijing5.jpg","hash":"efd4089b739e6a110123590cf8f7800068994099","modified":1567400158030},{"_id":"source/photo/images/tianjinzhilv/renwu1.jpg","hash":"88ededc28fb02e6899b7ff4bc933cf81feb883ee","modified":1567400083368},{"_id":"source/photo/images/tianjinzhilv/renwu5.jpg","hash":"99d7f0aef9362274d44ea11dbe789f68e02cbf57","modified":1567400766317},{"_id":"source/photo/images/wuzhenzhilv/meijing1.jpg","hash":"7b252baa0f7c397b1d6b25e1722ccb0fded4e176","modified":1559354108096},{"_id":"source/photo/images/wuzhenzhilv/meijing4.jpg","hash":"fab9cba78b2649572a18408105a62beac71c1ff7","modified":1559354106912},{"_id":"source/photo/images/tianjinzhilv/renwu3.jpg","hash":"81e7fc5b0a288c15b8fb6ae3a2fd54902c6e160d","modified":1567400082091},{"_id":"source/photo/images/wuzhenzhilv/meishi2.jpg","hash":"2ea0606c917211ae2af49165a1eb9dd09a475a00","modified":1559354087563},{"_id":"source/photo/images/wuzhenzhilv/renwu4.jpg","hash":"245d1b31cbdd5d4833c58eb986f25332f45c1c33","modified":1559354063468},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"072cb15842410de10ee4329da13b75b0365bb0ea","modified":1552801513486},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1552801513485},{"_id":"themes/next/.git/objects/pack/pack-8d4520b7593b17b4e74eca24f044d15e5425b9cd.idx","hash":"a1f5e53d33a95005557e4474bd4c2a815e8d452f","modified":1552801513471},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"7729491514f8ccdf96777de8f71420e6873c5423","modified":1552801513525},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1552801513525},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"8175b9a275d04718f6caf6dc6ae483035ad71b0c","modified":1552801513525},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1552801513538},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1552801513526},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"0c6cbc0c9d9111116cad27ffb0a14fa7d06a3f35","modified":1552801513526},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1552801513530},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"e53256fca6b1f4aeca8fdaf99bd4549ced700485","modified":1552801513532},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1552801513532},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0253d323e57f0bd57a13af1397f5591747d3d6c6","modified":1577321393634},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"e3ad313825d7ad03e24bb76d036deeb50587022b","modified":1552801513538},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"4fd38490b01af4f977b53aefc433cd2f981cde14","modified":1552801513539},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1552801513539},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"6f1a0fe6b45eb8849114b8b60ba600767d08b6df","modified":1552801513539},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1552801513539},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"fe03041c387347e0bcf8efd1b4cf205ece66c339","modified":1552801513541},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"0ce070b14eff003570e0b91da425ed7881ebff4c","modified":1552801513541},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1552801513541},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1552801513541},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fe2dc74726a515549956d233becda188da64f948","modified":1552801513541},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1552801513542},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1552801513542},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1552801513542},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"09b5054ae34ba83c0d614821e574da265af55a14","modified":1552801513544},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1ba399ca21e681cc9811e92e351dd920df71689a","modified":1552801513544},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"9b076c92abdadcf9acee75da64592ff3badd69b8","modified":1552801513544},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"47f93162fbf6b3917331fe2c2d8884cebc25b4a1","modified":1552801513544},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1552801513545},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1552801513543},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1552801513545},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1552801513543},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"936132428a0d35b3947ccedd4c379940abcf223a","modified":1552801513543},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1552801513543},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1552801513543},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1552801513552},{"_id":"themes/next/source/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1552801513551},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1552801513554},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1552801513554},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1552801513554},{"_id":"themes/next/source/lib/bookmark/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558081025654},{"_id":"themes/next/source/lib/bookmark/.git/config","hash":"7c5ec419dd0549da89bdd8376a1327f19049f461","modified":1558081028391},{"_id":"themes/next/source/lib/bookmark/.git/packed-refs","hash":"aae7f3f6192c7c6f511e300dadab479f006e07da","modified":1558081028386},{"_id":"themes/next/source/lib/bookmark/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558081028388},{"_id":"themes/next/source/lib/bookmark/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1558081028396},{"_id":"themes/next/source/lib/bookmark/.git/index","hash":"f74b5fd3c42aa1c35697730548b2bfa6cd7dac7d","modified":1576484955307},{"_id":"themes/next/source/lib/fancybox/.git/config","hash":"0bd9061daa1ae14bc8c15ccb2616123858620669","modified":1557308061075},{"_id":"themes/next/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1557308061073},{"_id":"themes/next/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1557308057776},{"_id":"themes/next/source/lib/fancybox/.git/index","hash":"8f9027b871fca86f8ea9c1b494dc01caae37bf2d","modified":1576484954592},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1552801513558},{"_id":"themes/next/source/lib/fancybox/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1557308061079},{"_id":"themes/next/source/lib/fancybox/.git/packed-refs","hash":"f2ee53ab24950dabb4d44575727b27e2d9e079b6","modified":1557308061070},{"_id":"themes/next/source/lib/jquery_lazyload/.git/config","hash":"6860ad6f2ec237c0ae97708790a172e4b3836cf8","modified":1558081238269},{"_id":"themes/next/source/lib/jquery_lazyload/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558081238267},{"_id":"themes/next/source/lib/jquery_lazyload/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558081235706},{"_id":"themes/next/source/lib/jquery_lazyload/.git/index","hash":"eda554068da94be822116dfcb598c1e676d638f0","modified":1576484955421},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1557308061080},{"_id":"themes/next/source/lib/jquery_lazyload/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1558081238274},{"_id":"themes/next/source/lib/jquery_lazyload/.git/packed-refs","hash":"29a0626d65e2a5a47d534d793a10d44c91358236","modified":1558081238265},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1557308061080},{"_id":"themes/next/source/lib/needsharebutton/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558424880844},{"_id":"themes/next/source/lib/needsharebutton/.git/config","hash":"3bd2fc1363cc36b469c252931084daa7b046d52a","modified":1558424880848},{"_id":"themes/next/source/lib/needsharebutton/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558424877188},{"_id":"themes/next/source/lib/needsharebutton/.git/index","hash":"e8784806107fc79d89e5b3af911527c712c61e97","modified":1576484955512},{"_id":"themes/next/source/lib/needsharebutton/.git/packed-refs","hash":"edb7a5b9a82d6f4b7e9e2b8279ff08b7e5e69d2c","modified":1558424880841},{"_id":"themes/next/source/lib/needsharebutton/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1558424880853},{"_id":"themes/next/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1554132487262},{"_id":"themes/next/source/lib/canvas-nest/.git/config","hash":"6aef6bbfcb8ccf9d042bf26defe7d08167b6d81e","modified":1554132490905},{"_id":"themes/next/source/lib/canvas-nest/.git/index","hash":"a6f08cf9ad80466881c8793d681652b3d9026bbc","modified":1576484954926},{"_id":"themes/next/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1554132490901},{"_id":"themes/next/source/lib/canvas-nest/.git/packed-refs","hash":"eac20c4e1edccad1fd1483618cca97e06d216ea3","modified":1554132490898},{"_id":"themes/next/source/lib/canvas-nest/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1554132490910},{"_id":"themes/next/source/lib/pace/.git/config","hash":"46d590e05dc25560a69d5cc71b337adad9654443","modified":1557719249112},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1557719249110},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1557719246355},{"_id":"themes/next/source/lib/pace/.git/index","hash":"bd1e098047aeb8ee6efaf16090b56ce8a8e8c11b","modified":1576484955468},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"a68869d7570e87c999c13c6066845d4c3c70fe92","modified":1557719249107},{"_id":"themes/next/source/lib/pace/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1557719249116},{"_id":"themes/next/source/lib/pdf/.git/config","hash":"52af4be64f28ae46254072a2afa6c32ecbd61808","modified":1558448799636},{"_id":"themes/next/source/lib/pdf/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1558448799634},{"_id":"themes/next/source/lib/pdf/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1558448689105},{"_id":"themes/next/source/lib/pdf/.git/index","hash":"618268b8ee4f5e1884f897d2abe4ba52169aabd8","modified":1576484955188},{"_id":"themes/next/source/lib/pdf/.git/packed-refs","hash":"168880243f58ce657baa2a98bd75c19a6bb26d6a","modified":1558448799632},{"_id":"themes/next/source/lib/pdf/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1558448799640},{"_id":"themes/next/source/lib/quicklink/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1559566100825},{"_id":"themes/next/source/lib/quicklink/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1559566097439},{"_id":"themes/next/source/lib/quicklink/.git/config","hash":"a352eef20ba117caba756bae1e60c5a07648c349","modified":1559566100827},{"_id":"themes/next/source/lib/quicklink/.git/packed-refs","hash":"aa50fd340c4e51ef25eb0fc08a9ab952d67d9bbe","modified":1559566100824},{"_id":"themes/next/source/lib/quicklink/.git/index","hash":"7b65b07f27da1794eba27d3e3a07ba4ccf22a6b3","modified":1576484954636},{"_id":"themes/next/source/lib/quicklink/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1559566100832},{"_id":"themes/next/source/lib/three/.git/config","hash":"65f90ae2568e8c72066580065d3e1df0d03f415c","modified":1554132631878},{"_id":"themes/next/source/lib/three/.git/index","hash":"41c43fa74298ce56e519ae6c3b4e85a0111dd073","modified":1576484955363},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1554132626927},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1554132631875},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"e6488f9f25ccf4e2b2885984eea4981d7845e016","modified":1554132631872},{"_id":"themes/next/source/lib/three/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1554132631882},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1554132631886},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1554132631886},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1554132631885},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1554132631887},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-ni-j.png","hash":"37e16cb86dabdf02069937b9caabe35cd05b9e5e","modified":1558156744561},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nito.png","hash":"db209a193b60e17422af7d4781ef145065216c77","modified":1558156895329},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-wanko.png","hash":"c91bb6b2ba58efd4bbf301e2f81d7afd11976646","modified":1558157049479},{"_id":"source/_posts/Tools-Confluence之延期/3.png","hash":"c1fc4a89e18d48c6ce05a02e3f34f55b4e8bf9e9","modified":1586998285551},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/images/article_balidao.jpg","hash":"8bba2afc796ce14f5a084a5b21c105ef3d5afa38","modified":1557915330510},{"_id":"source/photo/images/balidaomiyue/meijing2.jpg","hash":"f1325caea964ee864a173570628ed160943336aa","modified":1563329484294},{"_id":"source/photo/images/balidaomiyue/meishi6.jpg","hash":"252f7852b1fb429788a86be3df0bac03b0b0600a","modified":1563329928934},{"_id":"source/photo/images/fristniupai/10.jpg","hash":"ce8e04dc854ef811f4734e662d4bbeec93426f16","modified":1559356280527},{"_id":"source/photo/images/fristniupai/6.jpg","hash":"f258ee7ecc09ec95d8a2970814abb8827d317f38","modified":1559356277125},{"_id":"source/photo/images/fristniupai/4.jpg","hash":"d6ee65f2e87c0561401b3d2a3e92c1a46087a1da","modified":1559356274419},{"_id":"source/photo/images/fristniupai/8.jpg","hash":"e937fdc4974c8648b32b58e0e53aabba34d18f57","modified":1559356277375},{"_id":"source/photo/images/fristniupai/3.jpg","hash":"af76bb75534f56c1b1f7cb508de4780e96a6e371","modified":1559356273498},{"_id":"source/photo/images/tianjinzhilv/meijing12.jpg","hash":"28116df43f9c92429cf64ec433415ad69faa3af5","modified":1567400110258},{"_id":"source/photo/images/tianjinzhilv/meijing1.jpg","hash":"83cdd6af6e3b06de485297c4fdf751192245ee76","modified":1567400161368},{"_id":"source/photo/images/tianjinzhilv/meijing7.jpg","hash":"38f440a493f1ee670e3f2500e5736dd2d580a9fa","modified":1567400113074},{"_id":"source/photo/images/tianjinzhilv/meijing6.jpg","hash":"eecfff8f195fb8f5d68bf6718b10ae65dcc28922","modified":1567400157534},{"_id":"source/photo/images/wuzhenzhilv/meijing3.jpg","hash":"d15e919765d86a390b37816d1bd9d2a2aaf98ee3","modified":1559354107403},{"_id":"source/photo/images/wuzhenzhilv/meijing2.jpg","hash":"b3eb50a5d00293677442900a153d3d3c9a7dd9e8","modified":1559354105775},{"_id":"source/photo/images/wuzhenzhilv/meijing5.jpg","hash":"cca0a5b1472df4537510a7bde9db1ef021cf267b","modified":1559354104035},{"_id":"source/photo/images/wuzhenzhilv/meijing7.jpg","hash":"fed4642a2c810df08a6f469822386df0e5d18e71","modified":1559354085560},{"_id":"source/photo/images/wuzhenzhilv/meijing8.jpg","hash":"7b17b976714bfee81f71844bbb3a9fda5ba6c3bc","modified":1559354065795},{"_id":"source/photo/images/tianjinzhilv/renwu2.jpg","hash":"9243d2d714acc98981a0cd576af6d922a7a499fa","modified":1567400082976},{"_id":"source/photo/images/wuzhenzhilv/meijing9.jpg","hash":"884c85fc4afcfd226d7c9133a66906d47930eca9","modified":1559355471295},{"_id":"source/photo/images/wuzhenzhilv/renwu2.jpg","hash":"d8e6517582ff970e86908e16df2fc75bc010b1c8","modified":1559117702849},{"_id":"source/photo/images/wuzhenzhilv/renwu3.jpg","hash":"4fca0cc6ca645358851f93235fda557e2bd56a18","modified":1559117463627},{"_id":"source/photo/images/wuzhenzhilv/meishi3.jpg","hash":"7cb7c026f44e6a91a6c715a0504ef4c4f12bb733","modified":1559355470943},{"_id":"source/photo/images/wuzhenzhilv/renwu5.jpg","hash":"36b305330800297de1c047d39a163c46582a08db","modified":1559354063289},{"_id":"source/photo/images/wuzhenzhilv/renwu1.jpg","hash":"4c0f5e25841707bcd524a37ffbc68bc32a5ffc07","modified":1559354065306},{"_id":"source/photo/images/wuzhenzhilv/renwu6.jpg","hash":"dbba0c74144d0f817457dc51900b0c9c50d61340","modified":1559354061850},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552801513557},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552801513557},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1557308061081},{"_id":"themes/next/source/lib/pdf/web/debugger.js","hash":"1f6522ecedd73ad24ed3b76d1e13c935b64c6ddd","modified":1558448799742},{"_id":"themes/next/source/lib/pdf/web/viewer.html","hash":"ec2a94e016621a1b7a9dd4c0cb28f921c0814dde","modified":1558448799821},{"_id":"themes/next/source/lib/pdf/web/viewer.css","hash":"10d9c2bd05e7ae0ca51631a70cb1485a78a29643","modified":1558448799820},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1554132631884},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-hijiki.png","hash":"f064257baa5e509eec71d3abd880198ff735261d","modified":1558156585124},{"_id":"source/_posts/Linux-学习之基础篇-ls/images/article_linux_ls.png","hash":"28bed3eb4cced1b81ca01980a096b1333f15b818","modified":1557912348932},{"_id":"source/photo/images/balidaomiyue/meijing5.jpg","hash":"01f519dc3ca572b76eae43b96e92d6392a7d02cd","modified":1563329486600},{"_id":"source/photo/images/balidaomiyue/meijing4.jpg","hash":"051058e2bbe223bc7b0dc27a8f315618dc153702","modified":1563329486319},{"_id":"source/photo/images/balidaomiyue/renwu5.jpg","hash":"50b3e3d6f035e8c72ebe4f273fe1c3c2e76e7c34","modified":1563330119242},{"_id":"source/photo/images/balidaomiyue/renwu2.jpg","hash":"65f235216bfdeb47d132dc6f21fd4d42f22a9524","modified":1563329919427},{"_id":"source/photo/images/fristniupai/5.jpg","hash":"54f07f1cf282f6037d4a43861316510d893b7b71","modified":1559356277015},{"_id":"source/photo/images/fristniupai/9.jpg","hash":"f6b352e46bdaa42b1524c9021d551d8b65adfe55","modified":1559356280231},{"_id":"source/photo/images/tianjinzhilv/meijing10.jpg","hash":"3ba891312ca564c9d08c8469553877ab31cf0b96","modified":1567400763384},{"_id":"source/photo/images/tianjinzhilv/meijing9.jpg","hash":"47815a8796791d7425350e66a60b8549545d8eee","modified":1567400109635},{"_id":"source/photo/images/tianjinzhilv/meijing8.jpg","hash":"19ed2617fb7869e336f462cead67a99485e5466b","modified":1567400764406},{"_id":"source/photo/images/wuzhenzhilv/meijing6.jpg","hash":"d38e06fc1abff49c955b2cf94a741d74938eafed","modified":1559354103312},{"_id":"source/photo/images/wuzhenzhilv/meishi1.jpg","hash":"da687ba622052f6aac122870f9d5f0021d7617ed","modified":1559354105035},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"072cb15842410de10ee4329da13b75b0365bb0ea","modified":1552801513485},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1552801513526},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1552801513527},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"9e0f215868df17cb27a4a522fd31156c66428c2d","modified":1552801513526},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1552801513527},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1552801513527},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1552801513528},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"05e68adae13f4d99a6ac6493daab39c92e39a6bd","modified":1552801513527},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1552801513528},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1552801513527},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1552801513528},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1552801513528},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1552801513529},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1552801513529},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"61af2f656f6e916f9920277bd048c5d58ff32a60","modified":1552801513529},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1552801513529},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1552801513529},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1552801513530},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3b5a37ba5e70f92c1ee707c8053524e38adbb710","modified":1552801513530},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"4f00dc5a82e2cbe9d0e87dd527a01855e48a380a","modified":1553387289168},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1552801513530},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b89afe809c9b00777c438991230860c90c591759","modified":1552801513530},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"ca9df6ced5d29560e1628255e6f04b0013df6fba","modified":1553306967716},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"42a0769311856a7ea3ede1c8656fb5646994a238","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"0e8294d042d7d28c680ead48baa9e3c777d407c5","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"1cf64afd4b49143972f7617869539be3adb91a5e","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1552801513532},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1552801513532},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1552801513531},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1552801513532},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ad41e4460599647e75969152ad9b847732df9bcb","modified":1553583167342},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1552801513532},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"f40dbd838c8458820bb371931114d76ae78a279e","modified":1552801513533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-chat.styl","hash":"37237e512e7d6318d678e801641a91b421de0bf4","modified":1552801513533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1552801513533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"f9837075189e37c100675211076b5053788e7ba5","modified":1552801513533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"b05d7e8c387ba60c2abf16121b97cfb2548dcb85","modified":1552801513533},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"2eda2f3f8942b9384ee1e5d1077ca1a578daa43b","modified":1554522523598},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"f4342e4e06a8061fe02247c624728caf6dfc2c2c","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"b5e585d85aeb164c3141e6a3e7f8de11865223f8","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"7d2222f66a1c1a0a3cc90bfd5d817d9b859f4a68","modified":1552801513536},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1552801513536},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"859371a20acb2ea8a1baf23c2bbe23976448750b","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"9097db6f3ddd810b94ac4cbb0328e86792402090","modified":1552801513534},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"3ae254c97be53cd8a277391f4f43f96705202560","modified":1552801513537},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1552801513537},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"a2f61adb7dd48743f62c7a8f7900de201bae891e","modified":1552801513537},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1552801513536},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1552801513537},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1552801513537},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"36cfd06979b7f7070f645c11edc745c7bcda8fbd","modified":1552801513538},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"2d4f318644bf37c50e5b1fab8d62b2673fbab9e8","modified":1552801513538},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1552801513535},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1552801513535},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1552801513535},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"9e44a617d568780e9e51c0f1df59e77b6bca7ee0","modified":1557295260551},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"f466e92fa1466dd4d8957309623c8d661aeb1d8c","modified":1552801513535},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"deafbca5bc2e6bbc5923bbb2036ffa2896ce71fc","modified":1552801513536},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"344c0d7d3cd4fa0709744d2d0b611a05021fbdb1","modified":1552801513535},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"75f7876136fe1cae9b42d2c220e7f8b37b8d2f55","modified":1552801513536},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"47344d8e1a7478ce49c543fac12c5e27731f24bb","modified":1552801513536},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552801513542},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1552801513542},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552801513544},{"_id":"themes/next/source/lib/bookmark/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558081025656},{"_id":"themes/next/source/lib/bookmark/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558081025655},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558081025657},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558081025658},{"_id":"themes/next/source/lib/bookmark/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558081025657},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1558081025655},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558081025656},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552801513556},{"_id":"themes/next/source/lib/bookmark/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1558081025656},{"_id":"themes/next/source/lib/bookmark/.git/logs/HEAD","hash":"9e0af18e8fc935a11f16bd3536b46f56d748323b","modified":1558081028390},{"_id":"themes/next/source/lib/bookmark/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558081025654},{"_id":"themes/next/source/lib/bookmark/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1558081025655},{"_id":"themes/next/source/lib/bookmark/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558081025658},{"_id":"themes/next/source/lib/fancybox/.git/logs/HEAD","hash":"f00a974d580f60b9c64581476ff4a4b8a3e8a3e9","modified":1557308061074},{"_id":"themes/next/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1557308057778},{"_id":"themes/next/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1557308057779},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1557308057780},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1557308057778},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1557308057781},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1557308057777},{"_id":"themes/next/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1557308057779},{"_id":"themes/next/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1557308057777},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1557308057778},{"_id":"themes/next/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1557308057781},{"_id":"themes/next/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1557308057776},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558081235708},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558081235709},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/HEAD","hash":"d899657120186bf291b8ef846a82b3bb3bdbb3d8","modified":1558081238267},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1558081235708},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558081235707},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558081235710},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558081235710},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1558081235707},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558081235709},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1558081235709},{"_id":"themes/next/source/lib/jquery_lazyload/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558081235705},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558081235710},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558424877189},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1557308061082},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558424877191},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558424877190},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558424877191},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1558424877189},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1558424877189},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558424877190},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1558424877191},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558424877192},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558424877192},{"_id":"themes/next/source/lib/needsharebutton/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558424877188},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/HEAD","hash":"1a79db4d84e083f7f724e34bb944feb41d87e5ec","modified":1558424880846},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1554132487263},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1554132487262},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1554132487264},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1554132487265},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1554132487263},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1554132487263},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1554132487263},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1554132487265},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1554132487265},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1554132487264},{"_id":"themes/next/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1554132487262},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/HEAD","hash":"fc511c19306ac850beeb6d83ea4eb875f6fe164e","modified":1554132490903},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"a202595c46b688836d0912653e519a292bb1225e","modified":1557719249111},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1557719246355},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1557719246356},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1557719246357},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1557719246356},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1557719246356},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1557719246357},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1557719246357},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1557719246356},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1557719246357},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1557719246358},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1552801513559},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1557719246357},{"_id":"themes/next/source/lib/pdf/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1558448689106},{"_id":"themes/next/source/lib/pdf/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1558448689105},{"_id":"themes/next/source/lib/pdf/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1558448689108},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1558448689106},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1558448689109},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1558448689105},{"_id":"themes/next/source/lib/pdf/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1558448689107},{"_id":"themes/next/source/lib/pdf/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1558448689110},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1558448689106},{"_id":"themes/next/source/lib/pdf/.git/logs/HEAD","hash":"20bbb83bbb185c1dd8f8fd00a901075e0717d69e","modified":1558448799635},{"_id":"themes/next/source/lib/pdf/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1558448689108},{"_id":"themes/next/source/lib/pdf/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1558448689104},{"_id":"themes/next/source/lib/quicklink/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1559566097440},{"_id":"themes/next/source/lib/quicklink/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1559566097441},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1559566097442},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1559566097440},{"_id":"themes/next/source/lib/quicklink/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1559566097439},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1559566097442},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1559566097439},{"_id":"themes/next/source/lib/quicklink/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1559566097441},{"_id":"themes/next/source/lib/quicklink/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1559566097441},{"_id":"themes/next/source/lib/quicklink/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1559566097442},{"_id":"themes/next/source/lib/quicklink/.git/logs/HEAD","hash":"913a5f712633c7467b8e8f58145144890a37fff5","modified":1559566100826},{"_id":"themes/next/source/lib/quicklink/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1559566097439},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1558448799684},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1558448799684},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1558448799684},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1558448799685},{"_id":"themes/next/source/lib/pdf/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1558448799685},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1558448799684},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1558448799686},{"_id":"themes/next/source/lib/pdf/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1558448799685},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1558448799685},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1558448799686},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1558448799686},{"_id":"themes/next/source/lib/pdf/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1558448799686},{"_id":"themes/next/source/lib/pdf/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1558448799685},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1558448799687},{"_id":"themes/next/source/lib/pdf/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1558448799687},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1558448799687},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1558448799687},{"_id":"themes/next/source/lib/pdf/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1558448799687},{"_id":"themes/next/source/lib/pdf/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1558448799686},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1558448799688},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1558448799688},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1558448799688},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1558448799688},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1558448799688},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1558448799689},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1558448799689},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1558448799690},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1558448799690},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1558448799690},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1558448799691},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1558448799692},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1558448799689},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1558448799691},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1558448799692},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1558448799692},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1558448799692},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1558448799691},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1558448799693},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1558448799694},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1558448799693},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1558448799690},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1558448799694},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1558448799694},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1558448799693},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1558448799695},{"_id":"themes/next/source/lib/pdf/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1558448799695},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1558448799696},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1558448799697},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1558448799696},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1558448799697},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1558448799696},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1558448799699},{"_id":"themes/next/source/lib/pdf/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1558448799695},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1558448799698},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1558448799699},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1558448799700},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1558448799700},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1558448799700},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1558448799700},{"_id":"themes/next/source/lib/pdf/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1558448799701},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1558448799701},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1558448799702},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1558448799698},{"_id":"themes/next/source/lib/pdf/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1558448799701},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1558448799702},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1558448799702},{"_id":"themes/next/source/lib/pdf/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1558448799698},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1558448799703},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1558448799703},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1558448799702},{"_id":"themes/next/source/lib/pdf/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1558448799703},{"_id":"themes/next/source/lib/pdf/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1558448799702},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1558448799704},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1558448799705},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1558448799705},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1558448799703},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1558448799704},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1558448799705},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1558448799706},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1558448799706},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1558448799706},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1558448799705},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1558448799707},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1558448799706},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1558448799706},{"_id":"themes/next/source/lib/pdf/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1558448799707},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1558448799707},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1558448799707},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1558448799708},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1558448799708},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1558448799707},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1558448799708},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1558448799708},{"_id":"themes/next/source/lib/pdf/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1558448799704},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1558448799709},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1558448799709},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1558448799710},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1558448799709},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1558448799709},{"_id":"themes/next/source/lib/pdf/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1558448799710},{"_id":"themes/next/source/lib/pdf/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1558448799709},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1558448799710},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1558448799710},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1558448799711},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1558448799712},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1558448799712},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1558448799711},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1558448799712},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1558448799711},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1558448799712},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1558448799713},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1558448799713},{"_id":"themes/next/source/lib/pdf/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1558448799714},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1558448799714},{"_id":"themes/next/source/lib/pdf/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1558448799714},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1558448799715},{"_id":"themes/next/source/lib/pdf/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1558448799711},{"_id":"themes/next/source/lib/pdf/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1558448799716},{"_id":"themes/next/source/lib/pdf/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1558448799715},{"_id":"themes/next/source/lib/pdf/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1558448799713},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1558448799716},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1558448799717},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1558448799718},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1558448799719},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1558448799720},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1558448799720},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1558448799721},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1558448799722},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1558448799719},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1558448799721},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1558448799722},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1558448799723},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1558448799724},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1558448799724},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1558448799724},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1558448799723},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1558448799725},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1558448799725},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1558448799725},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1558448799726},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1558448799726},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1558448799727},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1558448799726},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1558448799728},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1558448799728},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1558448799728},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1558448799728},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1558448799729},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1558448799730},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1558448799731},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1558448799732},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1558448799731},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1558448799731},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1558448799732},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1558448799733},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1558448799733},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1558448799733},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1558448799734},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1558448799735},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1558448799736},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1558448799735},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1558448799735},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1558448799737},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1558448799736},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1558448799736},{"_id":"themes/next/source/lib/pdf/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1558448799737},{"_id":"themes/next/source/lib/pdf/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1558448799738},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1558448799737},{"_id":"themes/next/source/lib/pdf/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1558448799743},{"_id":"themes/next/source/lib/pdf/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1558448799743},{"_id":"themes/next/source/lib/pdf/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1558448799718},{"_id":"themes/next/source/lib/pdf/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1558448799743},{"_id":"themes/next/source/lib/pdf/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1558448799743},{"_id":"themes/next/source/lib/pdf/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1558448799744},{"_id":"themes/next/source/lib/pdf/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1558448799744},{"_id":"themes/next/source/lib/pdf/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1558448799743},{"_id":"themes/next/source/lib/pdf/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1558448799744},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1558448799745},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1558448799745},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next-rtl.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1558448799745},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl.png","hash":"4bcb69c72d25d822dd09a3999c6972c0c311f04b","modified":1558448799745},{"_id":"themes/next/source/lib/pdf/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1558448799744},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous.png","hash":"d02c4e9bf493dc83029098e59b6ece2363f3c760","modified":1558448799746},{"_id":"themes/next/source/lib/pdf/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1558448799747},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous-rtl@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1558448799746},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-next@2x.png","hash":"dca2a1a3bdbe036735dda32e5ed909b029829a3c","modified":1558448799745},{"_id":"themes/next/source/lib/pdf/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1558448799747},{"_id":"themes/next/source/lib/pdf/web/images/findbarButton-previous@2x.png","hash":"f9f2cea77208aa0e219f3bed69e22861c2858bc3","modified":1558448799746},{"_id":"themes/next/source/lib/pdf/web/images/loading-small.png","hash":"c1abf9b89af7392824f2228312785a899df224a0","modified":1558448799748},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties.png","hash":"6f1e0ce52dae6af31bb3c5b09bbb33a33849fd08","modified":1558448799749},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-documentProperties@2x.png","hash":"bd55401797e24ae5066afb9677dca1463e74c839","modified":1558448799749},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage.png","hash":"453a575f2676ba39eacc71c074420d6c97c87a42","modified":1558448799749},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool.png","hash":"8db06773a09e2f407bdf7ce448777398b40fd313","modified":1558448799750},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage.png","hash":"6819bdd3000af84c50df1b10b55b3af33944a261","modified":1558448799750},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-firstPage@2x.png","hash":"fd24d7a57e2a1205a67a11a760eb6dd50748da26","modified":1558448799749},{"_id":"themes/next/source/lib/pdf/web/images/loading-small@2x.png","hash":"171aeb1a90c2836c639438fa85c64cd9d94b3516","modified":1558448799748},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw.png","hash":"252e8a4adaf406c4e9c78033d8d8163333ce4c1c","modified":1558448799751},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw.png","hash":"548451d8a12570d66bce4c8922d8ccffb63ca61a","modified":1558448799751},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-lastPage@2x.png","hash":"2fb45311e8ee9658cc4276f1202ada9a55df774d","modified":1558448799750},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCw@2x.png","hash":"f37e80bc600112fa88251e53e953f14946967e19","modified":1558448799751},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-handTool@2x.png","hash":"eb8a16519da1e074f9ed07e8a350a6b0d52e5339","modified":1558448799750},{"_id":"themes/next/source/lib/pdf/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1558448799747},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal.png","hash":"67ec12c5bfe0d933f62e1bdfb2154db263e24712","modified":1558448799751},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-rotateCcw@2x.png","hash":"84f034b57d24f7371d1a605bd12afa1f71b50f1b","modified":1558448799751},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollHorizontal@2x.png","hash":"0f23b007fe6be937bc1072737e60cf10e4b8c7e1","modified":1558448799752},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped@2x.png","hash":"8b0ebf82e3f20a7e6cd93ef80b4ac932a02512c5","modified":1558448799753},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical@2x.png","hash":"a80753f432677766ba1cfbf3677bb9498998efd7","modified":1558448799752},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollVertical.png","hash":"3509cb4c7f355106103aa663fdcfbba6143f1d96","modified":1558448799752},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool.png","hash":"f62d271d5403f35e372b2cdf4c892aac7d364665","modified":1558448799753},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-selectTool@2x.png","hash":"9a10930334b9a42429c967b77f8c7e705e31cdaa","modified":1558448799753},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven.png","hash":"d27a628de5e1a4ce508c39fcb496b50f3d2d0fa0","modified":1558448799753},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadEven@2x.png","hash":"616b232b0f166467d0c37315709508953fb79358","modified":1558448799753},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-scrollWrapped.png","hash":"4409af25572feb6ac02d9f0ddcbd5ea689b3dd05","modified":1558448799752},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd.png","hash":"ff70929f97f54c2722e890a38070f749cefd12ee","modified":1558448799754},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadOdd@2x.png","hash":"07f1a8754f63dbb8d480e0923328c9fc0336fd2c","modified":1558448799754},{"_id":"themes/next/source/lib/pdf/web/images/texture.png","hash":"230a3d5e2dfacfa7228f58a559de5df3734118f5","modified":1558448799755},{"_id":"themes/next/source/lib/pdf/web/images/shadow.png","hash":"02b6adc1ca6ad8f57605ee92943b65c6250d73ba","modified":1558448799754},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark.png","hash":"0193cebc494facb8ba8733a1a8f50457e7189f56","modified":1558448799755},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone.png","hash":"a6648371ee01d687db409f5198f30dafaba76b6b","modified":1558448799754},{"_id":"themes/next/source/lib/pdf/web/images/secondaryToolbarButton-spreadNone@2x.png","hash":"5833ee8fa2394db83739ddbb5f9f0f3f0d39709d","modified":1558448799754},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-bookmark@2x.png","hash":"f822c6228ea6f9ad2ee5465ace31c725cf3289c3","modified":1558448799755},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows@2x.png","hash":"fdb29640d1f7ee31b09550163f85e01a70cebd13","modified":1558448799756},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download.png","hash":"b25abd4a3c95097a338b8b138476e22189cb235e","modified":1558448799756},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-menuArrows.png","hash":"acbbc7071a0641a10e1d50991d1abbfa26b5dce9","modified":1558448799756},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-download@2x.png","hash":"6c2ddead63c9a9ac3371bd7b8b8b914e2f81d605","modified":1558448799756},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl.png","hash":"641a0e2d711ec06176c046d8efcdff670da876ef","modified":1558448799757},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile.png","hash":"6b17acd1c4ea6a9d9859819456952eff133f3cc1","modified":1558448799757},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown.png","hash":"6e10286da3a52e0bba782d0fc4a7c33d10c8f4b9","modified":1558448799757},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown@2x.png","hash":"2b817130c3724f8a864845b03a142bd7e1cb61e9","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-openFile@2x.png","hash":"ae13be299d7c18dde70d975d0e229d3e20137afd","modified":1558448799757},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl@2x.png","hash":"1507890ff466f28f78ab7bd9f6eebfe2e4eeee8a","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp-rtl.png","hash":"0529bff456111ea1a264771afdcb2daebe68f79a","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp.png","hash":"b1eae4614fb964b6d0483f114f3dd2b49ec1b64a","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageUp@2x.png","hash":"9960af5e2ff7dfe8aba862d77305f409f5f1405c","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-pageDown-rtl@2x.png","hash":"445833e5eebdcc99270b879d0079bb54310f1615","modified":1558448799757},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search.png","hash":"14c3ef60d3979df9e8d13cf39cad10ed043f5578","modified":1558448799759},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print@2x.png","hash":"7577a46df5fcc89846737010a14878bffa85098e","modified":1558448799759},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-search@2x.png","hash":"25c50114436d8d598416a5c3eed9e1db282c43b3","modified":1558448799759},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl.png","hash":"990118984a946a8c63d95fd1a8d8af848383118b","modified":1558448799760},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode.png","hash":"3d206e303f9663dca95482df9abe55a08851c574","modified":1558448799758},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle-rtl@2x.png","hash":"51055db76ce1e9935fa3d91aaece874c6da14147","modified":1558448799760},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle@2x.png","hash":"6f1dca07696408ce28da5621ebcac57d0b2031a5","modified":1558448799760},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-secondaryToolbarToggle.png","hash":"6cedbeddac0d6191afe09cabed7b6d517f7c7b21","modified":1558448799760},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl.png","hash":"422b5ed725be51f60e6339da94e0c959ad67990b","modified":1558448799760},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-presentationMode@2x.png","hash":"c2d54d6f77f831963132555599e7314d4f07b49a","modified":1558448799759},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle-rtl@2x.png","hash":"29eade71266a6c4b1048eeacb1c29411435bdb41","modified":1558448799761},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle.png","hash":"ff7ef30371233abe8c548c2f3d5cbb335183ca92","modified":1558448799761},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-sidebarToggle@2x.png","hash":"04c42cddc1e2bdd5130c6fa477ff3fa594edda56","modified":1558448799761},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments.png","hash":"53c5a0c4c40f5f47fb6d2f57a82a4a6d0a83feb0","modified":1558448799761},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl.png","hash":"e6214527b9354eb920cbec85e6fe4e1296b7ae15","modified":1558448799762},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline-rtl@2x.png","hash":"6684f9d7964446ec66a8f3865445892187d16d21","modified":1558448799762},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-print.png","hash":"77463c425966b8a298a2d87863533e68092676bc","modified":1558448799759},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline.png","hash":"ec7aa605c063faf6a951c2d64a8d98933b60f6a4","modified":1558448799762},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail@2x.png","hash":"ececa7ff064700efde72fa1e3889c8a1a3073dbc","modified":1558448799763},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewAttachments@2x.png","hash":"eb96df312c7ff6fc0451795bc0de8ebadb72cf86","modified":1558448799761},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn@2x.png","hash":"5403ddbeed138cc733020c352ae3bcd8cac03bf7","modified":1558448799763},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut.png","hash":"63a719d5e6a708a22014f20abc0722cd54ffb0f6","modified":1558448799764},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewOutline@2x.png","hash":"76be930d871fbd1ebd6c4d76c4fa325f32efc624","modified":1558448799762},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-viewThumbnail.png","hash":"f62aad7c7719300f1d8e922155f451661d41d42d","modified":1558448799762},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomOut@2x.png","hash":"4006d4387f2b0a0f0856d691a8874f74f61d0f51","modified":1558448799764},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl.png","hash":"7c2ff883f666ac379b04d0d41e3e6ddb14ddf220","modified":1558448799765},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed-rtl@2x.png","hash":"0465b8f9e77135e2bddd5708d425d5e1fc4ab63c","modified":1558448799765},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed.png","hash":"4588ca9c86db15c10de4de3f340111d4ce211ebd","modified":1558448799765},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded.png","hash":"b0b4bca3d9bd0949da19a56214143db18f2a4f69","modified":1558448799766},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-expanded@2x.png","hash":"bf924ff993236e563dab83b41193bcb43120c0b6","modified":1558448799766},{"_id":"themes/next/source/lib/pdf/web/images/toolbarButton-zoomIn.png","hash":"838adbe15d84daceec25cfd4d8d6ac1580b4f693","modified":1558448799763},{"_id":"themes/next/source/lib/pdf/web/images/treeitem-collapsed@2x.png","hash":"3229d96b4fa4d7e5c26fc135264d134e1024baab","modified":1558448799766},{"_id":"themes/next/source/lib/pdf/web/locale/locale.properties","hash":"5056a590ce6e1ae37a90c573607788551e2b477d","modified":1558448799796},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1554132626928},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1554132626927},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1554132626929},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1554132626929},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1554132626929},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1554132626928},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1554132626928},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1554132626928},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1554132626929},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1554132626930},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"792bdf88b78ad7831b0a5ab2a32fffbf2e6b4afc","modified":1554132631876},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1554132626927},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haruto.png","hash":"24924c592faef5447397fc8ea68b1aa575732594","modified":1558156495648},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-unitychan.png","hash":"1e33d97fb429dd2ba4b34bc502da1de040a7becd","modified":1558157020450},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/images/article_liuyanban.png","hash":"d39bd9b19fa7e9a40c36314ae5bfa63d3bad09e9","modified":1557887860175},{"_id":"source/_posts/Linux-学习之增强篇-awk/papproval_dmeo.png","hash":"aa6ec4ef2d8ba201ebf0aa74fd0579432d86cbf7","modified":1577331427780},{"_id":"source/photo/images/balidaomiyue/meijing3.jpg","hash":"1cf892a74b19fba8f67d0181af771f159bf6bb95","modified":1563329485217},{"_id":"source/photo/images/balidaomiyue/meijing8.jpg","hash":"287f79fef32bfba8636230cc0ac68a1e9dd32fad","modified":1563329917961},{"_id":"source/photo/images/balidaomiyue/meishi4.jpg","hash":"91255fdb3830a513ad12017628e1327018a84237","modified":1563329923720},{"_id":"source/photo/images/balidaomiyue/renwu3.jpg","hash":"3c12dc7dddb037dcacd28753e8d3d0222d7e7ade","modified":1563329922979},{"_id":"source/photo/images/fristniupai/1.jpg","hash":"45e5b84f61b49df2fda6bfe9e4f30778c1f4d4a5","modified":1559356271023},{"_id":"source/photo/images/tianjinzhilv/meijing11.jpg","hash":"0c13ca78537287b0fc22ad378bd0eaabc72177c9","modified":1567400111069},{"_id":"source/photo/images/tianjinzhilv/renwu7.jpg","hash":"4ad3cbacf096d7afd33fae1b4b0edae394d261d8","modified":1567400765996},{"_id":"source/photo/images/tianjinzhilv/renwu6.jpg","hash":"7f20aad6307059aa89c5a913ed6680e56854299b","modified":1567400766811},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nico.png","hash":"e19e8714ec27b0cebd59cb4dc256213f66c311f1","modified":1558156815175},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nipsilon.png","hash":"36a29acda52a28ff95572ad43a5815f028c81302","modified":1558156869894},{"_id":"source/_posts/Tools-Confluence之延期/7.png","hash":"1edfc320593626385032cf9d479079ab071f9d9e","modified":1586998528218},{"_id":"source/photo/images/balidaomiyue/meijing9.jpg","hash":"be7f872a6d6e9529947a928ae721d2cb3f13cc2c","modified":1563329920332},{"_id":"source/photo/images/balidaomiyue/renwu9.jpg","hash":"17967ec3ce1f6c0faeb6ec3505612f11d06f78ce","modified":1563330120064},{"_id":"source/photo/images/fristniupai/7.jpg","hash":"7bcc04d49aaf8010f12e1b636b3b419c57ea8bcc","modified":1559356277275},{"_id":"themes/next/source/lib/bookmark/.git/refs/heads/master","hash":"fce63708909b2252a3ec110e5bb2519a3d702c79","modified":1558081028389},{"_id":"themes/next/source/lib/bookmark/.git/objects/07/4d4d38a37d506f5db482b5c27ad1143bba5aab","hash":"ee76158694b6490056328594b5d15a54faba253e","modified":1558081028348},{"_id":"themes/next/source/lib/bookmark/.git/objects/02/b27223487ca819cf7167dc23626af595112e25","hash":"e5bbb1906aa9a8e2696817d19d85aeedf82539ed","modified":1558081028359},{"_id":"themes/next/source/lib/bookmark/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1558081028259},{"_id":"themes/next/source/lib/bookmark/.git/objects/11/8348fe672067e7d9c32c73d586023804eeb565","hash":"2b73c34eb535ff7e7d91cefb5215feddd9f2c36f","modified":1558081028305},{"_id":"themes/next/source/lib/bookmark/.git/objects/16/75d42fcbd2aded2e9b42efe38c347ced893495","hash":"979ec745cfdc8dd979785b78c9be7645bb73d922","modified":1558081028298},{"_id":"themes/next/source/lib/bookmark/.git/objects/0a/9e6b66e9d710a68e08fcc295fca440eabcb4bc","hash":"aa0b269640b41735ba54a9279f10ddd19ecd5887","modified":1558081028254},{"_id":"themes/next/source/lib/bookmark/.git/objects/0d/61683ea74054da2645effdd51d0a3282d6a9ff","hash":"879563c866dbe7efa0074a1ebcd206723e552f27","modified":1558081028250},{"_id":"themes/next/source/lib/bookmark/.git/objects/18/77388dd9427b36d7c8703038a215b79f1218c2","hash":"8d48c7c0d7427116dbeb32552c576cc4edbe2d38","modified":1558081028362},{"_id":"themes/next/source/lib/bookmark/.git/objects/1b/db4ff581f77318e6c4783d8e1ce811c37f13bf","hash":"06b3da6e152ffd68ed4617db1c4e3912f41d8bec","modified":1558081028251},{"_id":"themes/next/source/lib/bookmark/.git/objects/25/42ea91169dbe9da086918ad02160e42310e185","hash":"3c942c82f3ef7fcd9a15276c82fcf59fa141521c","modified":1558081028366},{"_id":"themes/next/source/lib/bookmark/.git/objects/25/b729e9ad0151b51f50297ea35280111b953236","hash":"af4bf7f3feb175c6980ee81a84f679149f713987","modified":1558081028344},{"_id":"themes/next/source/lib/bookmark/.git/objects/2b/358da01f778126b38fc4ddf5ecafa625cad38b","hash":"d4613d86e15d9679b8f1f18950b71a182af4b5c8","modified":1558081028249},{"_id":"themes/next/source/lib/bookmark/.git/objects/2f/425e03cfa918b2d638bbd37279a8b1e7757508","hash":"283713eda90efb64849519db267b652facfdbd63","modified":1558081028303},{"_id":"themes/next/source/lib/bookmark/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1558081028260},{"_id":"themes/next/source/lib/bookmark/.git/objects/2b/d59834388b6377fd14413f2614f550e35e35f1","hash":"654763c707c65aa3f353f8a9edb0cc0ae4bcccfa","modified":1558081028258},{"_id":"themes/next/source/lib/bookmark/.git/objects/36/6ee3e25fa36be8ea88ed1c7913a8de8fd3b820","hash":"81c45f061381dd947da576758992b64b6101fbc8","modified":1558081028296},{"_id":"themes/next/source/lib/bookmark/.git/objects/42/c32aba927940c9e92b9928dceee88eacbf4874","hash":"2c7b6bb078f2eb52eead906df3ed4fa136a1e651","modified":1558081028187},{"_id":"themes/next/source/lib/bookmark/.git/objects/17/ad1e81c2805cc9c5c00846c8bf9bf16524b55a","hash":"8f779f28267873af1e5c71386603042dbaff6211","modified":1558081028345},{"_id":"themes/next/source/lib/bookmark/.git/objects/3f/30e2e442e4fdc1e91d5d1b642662e3900e5d6f","hash":"358397c32831b80fa4828334de7080bdaafe1c52","modified":1558081028361},{"_id":"themes/next/source/lib/bookmark/.git/objects/41/fcb40408cfe2e9e0d1796ce1384024f7ba2c1c","hash":"600f3ee28c5dc2f1b21f8d9043d271b9601750b1","modified":1558081028369},{"_id":"themes/next/source/lib/bookmark/.git/objects/40/b878db5b1c97fc77049537a71bb2e249abe5dc","hash":"929471c4b27858bbdae034381982f996144f6b3d","modified":1558081028261},{"_id":"themes/next/source/lib/bookmark/.git/objects/41/bde8ccd130442ef0b3f8b24764a6d72635a485","hash":"4a833bb669ac126a00dec7153f8c263eab47b024","modified":1558081028368},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/6e0d94cae4e01312054983b4e2e4007e3fd3b8","hash":"9eff6f1c82336ebdab0503e0ab0f753cd18f01ff","modified":1558081028256},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/16717bb5a449fab2291e6397c30c6cb34814f1","hash":"5e244da7b9b6dfc9ad924ee5259805d4ae272c2e","modified":1558081028306},{"_id":"themes/next/source/lib/bookmark/.git/objects/4a/7e8d64b8956ffd9339000e62d490f18dcd3ecd","hash":"3cc8fd65b3663a750887093f67bb28696492d5e5","modified":1558081028366},{"_id":"themes/next/source/lib/bookmark/.git/objects/29/de98ce86c01618ebbe3352e213db74feda0dc0","hash":"046bf7ab442c095f0150c96fe06d83855c92092f","modified":1558081028300},{"_id":"themes/next/source/lib/bookmark/.git/objects/4e/7ec652ef197de221d6576a717edf0b583a688a","hash":"e45f3b02a04d04eb3bcd6373ae79d86cbbd62798","modified":1558081028353},{"_id":"themes/next/source/lib/bookmark/.git/objects/47/1dd1f3ddf970ee3418f801ae787bf98191d47e","hash":"8634518aeeffc4b8b0dbe6ca6159480264cf1916","modified":1558081028178},{"_id":"themes/next/source/lib/bookmark/.git/objects/5c/02525c8b55f89f0ec0304cd0d266453bdf0541","hash":"51cab03e6cbebdb421eea45818b1ff7d9ec7783f","modified":1558081028347},{"_id":"themes/next/source/lib/bookmark/.git/objects/5c/ffa97fb277e628a550bc1d8f7fa7c5c776129f","hash":"8c4e4a79d14522f34280ef85c794df6f4886e040","modified":1558081028299},{"_id":"themes/next/source/lib/bookmark/.git/objects/48/7e5a296eebd45809199d2f557e340603931bad","hash":"6cf9f9b5ae990bbb0083b37b0c29b269cd8cc735","modified":1558081028355},{"_id":"themes/next/source/lib/bookmark/.git/objects/55/31419f7d03a523182be5373e246e43acdf60d7","hash":"274085edc584079218a79c199bd0c7360a700290","modified":1558081028248},{"_id":"themes/next/source/lib/bookmark/.git/objects/5f/1541db4b58002e45b9b5fe19426551a8239a49","hash":"9a50dcb663e39892adbfccab943fb8dc37add2d0","modified":1558081028356},{"_id":"themes/next/source/lib/bookmark/.git/objects/5e/038b5098480c14a29cefd944e3eb23109473b2","hash":"9c3aba7ff1afc70708a90e2f4f610499ee268d4a","modified":1558081028367},{"_id":"themes/next/source/lib/bookmark/.git/objects/58/b257bc636adc71871da51e615e6734c9479f3a","hash":"4e63de59c359c9bf480b47aa5e342ed78663fb58","modified":1558081028365},{"_id":"themes/next/source/lib/bookmark/.git/objects/69/d5670af93cd1d3f0acc082583b1d150c5d61b5","hash":"e6c6fdb25f5fc4949594e217ae14d309b2fba4a1","modified":1558081028178},{"_id":"themes/next/source/lib/bookmark/.git/objects/61/4795cc61f429929887fde3962027254db90a62","hash":"c4e415dda2e421df728dda51f953cc2f01296378","modified":1558081028364},{"_id":"themes/next/source/lib/bookmark/.git/objects/60/438c0c99eece781f9c7b2779ab7673ab34ba62","hash":"76032e20bf2916b03d9f795982831868f42a03af","modified":1558081028297},{"_id":"themes/next/source/lib/bookmark/.git/objects/62/150c9d8f54ca62e1af3c9d666bb5e35eb3bdbd","hash":"2998eaea45a0135e879da15851a535ae2940d85e","modified":1558081028248},{"_id":"themes/next/source/lib/bookmark/.git/objects/6d/1188177a8798893f9efe275d4d75d0f9301be9","hash":"b8652b3249ef6662a8dee7c01e5667f7e4f33cc4","modified":1558081028252},{"_id":"themes/next/source/lib/bookmark/.git/objects/74/dba5056028cc4bac4f79ffec7da1e076260ffd","hash":"cd7bbf512f3c0291badb58f0679485c18a98c034","modified":1558081028257},{"_id":"themes/next/source/lib/bookmark/.git/objects/84/08abfa6c03a2809cb160da5badc6d1050bfbb3","hash":"9d3f29a89223403d1a0292681a330cbf7616c190","modified":1558081028177},{"_id":"themes/next/source/lib/bookmark/.git/objects/8a/7f4f27cc671188881ca5cd80d941720a78be04","hash":"de24124a9660dad2ee4e1d25a3580ac87d42b3e0","modified":1558081028307},{"_id":"themes/next/source/lib/bookmark/.git/objects/75/4a45e75b8a6dc256755287312c729adc2fc6c9","hash":"e700708d93a902401e54d96d4d632ae4225cdf2c","modified":1558081028349},{"_id":"themes/next/source/lib/bookmark/.git/objects/79/c8a354ccacb4edc27acbcc503f26acf6119624","hash":"7a44189d1189ad7aedea595fc8a4ef387de7041d","modified":1558081028294},{"_id":"themes/next/source/lib/bookmark/.git/objects/7e/58471cd13382a6bafd05015cd0a5b5a8e899eb","hash":"21ae04d7ac48092d7b07b7278bf099cfc2691e57","modified":1558081028301},{"_id":"themes/next/source/lib/bookmark/.git/objects/85/839f2b88dfaef92ae7c84c10f446e98d07b852","hash":"9662dba024cf43e039d41f4253e7aa282e2141ba","modified":1558081028175},{"_id":"themes/next/source/lib/bookmark/.git/objects/96/353334c808a19403f7d2f0e880668bf8f0e320","hash":"dbcb9efdc52a50d5f0431394c24b35ff47f1833d","modified":1558081028183},{"_id":"themes/next/source/lib/bookmark/.git/objects/8e/b07c89ff54bda39a40d6448a6a8ef4df57c8f2","hash":"fadb84b2a2c5dee0b8f67dd53b4e2b8a5b270e92","modified":1558081028292},{"_id":"themes/next/source/lib/bookmark/.git/objects/8d/ae3702857a081653c16320999ed63f3c6fb719","hash":"cc5ed8d3d17451c722a3ebfa3251fff27d348218","modified":1558081028357},{"_id":"themes/next/source/lib/bookmark/.git/objects/9d/a80d05852c1c5aec3e8d31b63d429bcfecc0c5","hash":"392385eddea633b0bea1194c2c66db593c6a9c0a","modified":1558081028258},{"_id":"themes/next/source/lib/bookmark/.git/objects/97/b44840ca6d92e3e650428f433b75a501b1427c","hash":"a899d561a89c4ab798063c1df81d78015992ad15","modified":1558081028185},{"_id":"themes/next/source/lib/bookmark/.git/objects/a9/21fc59cd52b57fc3093fbdc04b446bae0a2f8a","hash":"a2e879b7fdb0cf153f8526064a6b8810b2cd8988","modified":1558081028348},{"_id":"themes/next/source/lib/bookmark/.git/objects/b5/c8b8aa1a6dba7c8152b49ef103a0952f1bb9ca","hash":"d070cad9094ddcf44be0e16b3872f1fb4f05ae0d","modified":1558081028186},{"_id":"themes/next/source/lib/bookmark/.git/objects/77/d7bbc93f0a411d2e50b7c67a2827dece42727f","hash":"6865e0eb54a9882e55e70669a44cdddb2da1665e","modified":1558081028253},{"_id":"themes/next/source/lib/bookmark/.git/objects/aa/d78f9de11c827340e4695cbc1f5a73f53ee577","hash":"0f5086a5818caf093dcf60126a7d0f72bc73928b","modified":1558081028351},{"_id":"themes/next/source/lib/bookmark/.git/objects/ad/b3297e18bb4d11be9f7305db144e5015f40738","hash":"b44f4417307f3dbb33d30c22700dbfb61c87f198","modified":1558081028353},{"_id":"themes/next/source/lib/bookmark/.git/objects/bc/0570da6c07cf361d794008e58455455a2580be","hash":"822af280dbbe78499a932faf9229f4c467d48cbe","modified":1558081028350},{"_id":"themes/next/source/lib/bookmark/.git/objects/92/f5900e81d1cf9e90787b7138f4285434e45c10","hash":"05c5b8557d69133fd01ebd1b85a5e009a822ca20","modified":1558081028346},{"_id":"themes/next/source/lib/bookmark/.git/objects/bf/05dfc0c17af4b48e94676e1e2feaba911d8c71","hash":"4d8adbebcb8ffb4bc3c61b9c97bd225f128b8e74","modified":1558081028253},{"_id":"themes/next/source/lib/bookmark/.git/objects/b8/e5e058b339881ced4b4b5c4d89f337ccfb67de","hash":"0d229cce5fbe7e41e4961070dd2e4d76c7b3efb6","modified":1558081028370},{"_id":"themes/next/source/lib/bookmark/.git/objects/bf/c91bf59adb7231937b98d35cb952b4bab01fff","hash":"016dc36835bb17ba3f54eebaef4d57f5498015da","modified":1558081028188},{"_id":"themes/next/source/lib/bookmark/.git/objects/c6/26688a33395276a262158e171027a61c56150c","hash":"3727c122ab41e9dd1abc6490a40eb28f212c5c8e","modified":1558081028180},{"_id":"themes/next/source/lib/bookmark/.git/objects/c3/75bd4420a3baa49b9a5d52f8040400491ac933","hash":"beb87437d1591c6bec51a6e85176f576092a83f2","modified":1558081028360},{"_id":"themes/next/source/lib/bookmark/.git/objects/ca/799c34c37f63bd64ed9b49413e7fc6db8ab2ef","hash":"4e6ee2dffc199b5954fb34b129fe2f012099463d","modified":1558081028255},{"_id":"themes/next/source/lib/bookmark/.git/objects/ce/70a57b7d6bcddae01e3434d416c27c84b24727","hash":"d8ccbf99469b51ae629347665f96354c264457b4","modified":1558081028342},{"_id":"themes/next/source/lib/bookmark/.git/objects/c1/7940ffb480f454472c9083efabce723ff53cd4","hash":"29bbded01d4399f509abd809c00957f182226432","modified":1558081028304},{"_id":"themes/next/source/lib/bookmark/.git/objects/c7/631242bf4ea5781b2d173d999b41c69fdd8ace","hash":"f2d3b9fb648bed7f61dc917d9ad45550c4c70e77","modified":1558081028369},{"_id":"themes/next/source/lib/bookmark/.git/objects/d2/45f9acfffc2e168c17bcc4e115527f21a77521","hash":"76d31ac0c9ca563b5854fe5b6c5ab46ebb202680","modified":1558081028356},{"_id":"themes/next/source/lib/bookmark/.git/objects/d6/31561b3edf93b81d38f81278d6574c77006e39","hash":"afaad8a2c6944b11695122cf45cedadbc3bd7605","modified":1558081028352},{"_id":"themes/next/source/lib/bookmark/.git/objects/d4/d4c40411de7936e90c6ebbc19e182ad225cb4c","hash":"f8d44f87905d5dfbeb1fdf5519a5256d27d00120","modified":1558081028363},{"_id":"themes/next/source/lib/bookmark/.git/objects/df/af7173f5d152681fb2bc7adfdebb54ad195281","hash":"7fc27717b2f7da8f6a6e40ac8d88c75485a505fa","modified":1558081028290},{"_id":"themes/next/source/lib/bookmark/.git/objects/de/52a356f671fa73a9d9910c26968d47100c655f","hash":"5bd5f521df149c8e24640151b6d83b3c6be1fd30","modified":1558081028181},{"_id":"themes/next/source/lib/bookmark/.git/objects/db/3b3566df6e7d89575c4150067f61087be1bedb","hash":"118afda770f93908ad97d6ad0bb6a42b21aab9cf","modified":1558081028182},{"_id":"themes/next/source/lib/bookmark/.git/objects/d3/a06b992cfe7d26e022b14abf5ba563e6e63c4a","hash":"6820962ea4a4da9e9de834c97c1630477c30ef20","modified":1558081028262},{"_id":"themes/next/source/lib/bookmark/.git/objects/e7/aba3f8ec35017b4dd2bc8f5ca94253a8674ce7","hash":"8fe85003f71bf38e6ae367366ae6e95a819d046d","modified":1558081028176},{"_id":"themes/next/source/lib/bookmark/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1558081028371},{"_id":"themes/next/source/lib/bookmark/.git/objects/ef/090e162cd7cc22d2da95d77acac1d7a1eb9c43","hash":"a6997644fb850bedaeeb01adfc90fc404cf80074","modified":1558081028293},{"_id":"themes/next/source/lib/bookmark/.git/objects/fb/0a1d42d6507805651dec61ecc4df11f37dc1a6","hash":"fcef8ee1a40833b2cf5ecae90bfa22002f46b29a","modified":1558081028358},{"_id":"themes/next/source/lib/bookmark/.git/objects/f7/bc8429b09417e69629d9fa0c2874dd5adc30d2","hash":"d8b3844ae942e165b59b6a57c5decdeb35582539","modified":1558081028354},{"_id":"themes/next/source/lib/bookmark/.git/objects/f6/c892849ea799eb017a3d5bf05edb602780cd38","hash":"3b568af69c7a3dc7439155fe36b64a65e8b0bb79","modified":1558081028184},{"_id":"themes/next/source/lib/bookmark/.git/objects/fc/63af0044284a5b08f20cf1444a062176d835fe","hash":"9994dd502452c757856b88aa0d1be86540dd7a82","modified":1558081028357},{"_id":"themes/next/source/lib/bookmark/.git/objects/cd/ea049768c3f2d2b89792c19a523584590292c5","hash":"5e69fbae98becc6ed3be947a2450511294252891","modified":1558081028351},{"_id":"themes/next/source/lib/fancybox/.git/refs/heads/master","hash":"d1840ae4717ac8eb10df2e61a7851f5542f70f90","modified":1557308061073},{"_id":"themes/next/source/lib/fancybox/.git/objects/16/b01254a56610f4c6b7721c534ed4fc40ae51dd","hash":"88ca5fd99322d3a4067e0711af79f41c078f2ef5","modified":1557308060610},{"_id":"themes/next/source/lib/fancybox/.git/objects/00/c03f6be011e8878608eec12f68caf42b73f38e","hash":"8516bd35bc8f9223e13de5877778c8d14d49d6db","modified":1557308060602},{"_id":"themes/next/source/lib/fancybox/.git/objects/19/3567a3107003507fafacd255c349857e417926","hash":"ef5eab75e8c6998cb223edb4eb8a26c4cfc9415c","modified":1557308060551},{"_id":"themes/next/source/lib/fancybox/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1557308060318},{"_id":"themes/next/source/lib/fancybox/.git/objects/36/9bab09306448a2970d378b59bb21c059edad63","hash":"877e0c15623d0d6ff8f09bb627fc60a489f3c105","modified":1557308060363},{"_id":"themes/next/source/lib/fancybox/.git/objects/47/d427b6c52396bbab53a05f57aaa82b52c805b1","hash":"c5626bbb62f4d1d1e39034e7f44baf4c509410d6","modified":1557308061058},{"_id":"themes/next/source/lib/fancybox/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1557308060317},{"_id":"themes/next/source/lib/fancybox/.git/objects/3d/521bfc64755e348870094e85323dc1b9c96a6b","hash":"e9660fc4f89ecb176b0ab6e4860579c1bfe9f9cb","modified":1557308060607},{"_id":"themes/next/source/lib/fancybox/.git/objects/51/cf05811ed7d35e92551db1ba5a6e267ce781a5","hash":"99c009035ea86e3876b586577677d4d62ae12379","modified":1557308060605},{"_id":"themes/next/source/lib/fancybox/.git/objects/1f/a2c5f332b7e304431213aec21012e53f8781d7","hash":"7632806182aa989d3b7029579d5c03c34b113ee3","modified":1557308060313},{"_id":"themes/next/source/lib/fancybox/.git/objects/54/0a7b36ee26decfc3f0f34bf73bc85c48899128","hash":"2e5447a9dd879d71368e9dddd34d93849d00b934","modified":1557308060603},{"_id":"themes/next/source/lib/fancybox/.git/objects/53/ceaabe0f8677333c5be196778b3e40840a1869","hash":"7bc1c1c42059d5402335b5293bfb5e54bee22557","modified":1557308060315},{"_id":"themes/next/source/lib/fancybox/.git/objects/63/c555caede30ab06d6dba16644a827e9574c8cb","hash":"846603220288272ad5d35ebdc3c917cc4adce424","modified":1557308060604},{"_id":"themes/next/source/lib/fancybox/.git/objects/64/c47e893a0fef71c8c0930975ef114d9812da56","hash":"eaad75fab15724f9c2b069fc1ce9b8216be149d7","modified":1557308060608},{"_id":"themes/next/source/lib/fancybox/.git/objects/7b/15d3cb03fda86241f8b2b335f04e9b9de0e1c4","hash":"d1fe3bd82c90f7d93874798a8ee8ebf1391d7207","modified":1557308060365},{"_id":"themes/next/source/lib/fancybox/.git/objects/78/068b93f813cecbbd50c8247de547035009d512","hash":"4bc2bee779bd7e3cca13ee34801cf1e12585e5ae","modified":1557308060364},{"_id":"themes/next/source/lib/fancybox/.git/objects/92/4369c371444afb18fb86309229f5b4c24c6cf4","hash":"9eb6fa8ff9081e6650f6bee350d21567df105737","modified":1557308060367},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/00ef8195b73793d477d22e723ecdac9553ebf3","hash":"fd8c4fd143b32fb3e86367f123feb7c35b305262","modified":1557308061053},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/c60b295fa2dcb82537a63792c9b3b3c2e74c33","hash":"b2dc23c71b13726c391aaefaa5312227a9b6ab7e","modified":1557308060715},{"_id":"themes/next/source/lib/fancybox/.git/objects/80/6b27034bd69d563e4243c2f12b43c7064b32dd","hash":"b7d3e8020767ae60a2029da8eccb0068623dc618","modified":1557308061058},{"_id":"themes/next/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1557308060363},{"_id":"themes/next/source/lib/fancybox/.git/objects/9b/fe9361836240600c1bcc3cab9d42b35e731fad","hash":"3d38ffc7ac1ae85224691ef15d7f32e40c40b3a2","modified":1557308060609},{"_id":"themes/next/source/lib/fancybox/.git/objects/aa/654e17af8c354994f706c4e33bba6b5b70caeb","hash":"22b1bdf0b0974bf5e9022953ac26066056c235ff","modified":1557308060601},{"_id":"themes/next/source/lib/fancybox/.git/objects/89/9d7a75b543fbed2a785f67d995bc77e06eb2e9","hash":"5651e2b80703225f642625c0fb2646543096d2cf","modified":1557308060314},{"_id":"themes/next/source/lib/fancybox/.git/objects/bd/e1f741357b44b49290d43fdd193125202fef81","hash":"9beefc75cc0c37d04e98dd13b51ad85df40e77b9","modified":1557308060316},{"_id":"themes/next/source/lib/fancybox/.git/objects/b3/b3098638624b56be968573e2dab1684f8a7f06","hash":"6fa11a2d904dff2b8f4ae1bd88bdbb66736438a1","modified":1557308060918},{"_id":"themes/next/source/lib/fancybox/.git/objects/ac/97c2cc9f61c52753abe4174a4a74b2064e5af0","hash":"272e74036b0612de83d9d0aa9604d3edf888b249","modified":1557308060549},{"_id":"themes/next/source/lib/fancybox/.git/objects/ad/569256343419017e8832a38faaa1c786716a1d","hash":"0538e4abd112b0a843035f28a511edabbe73f2ce","modified":1557308060604},{"_id":"themes/next/source/lib/fancybox/.git/objects/c2/fc5def1b6c38369e5e8b849adb956bd79b549e","hash":"27f03b9616e615b2724bac0fa4507d152697f3f1","modified":1557308060314},{"_id":"themes/next/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1557308060316},{"_id":"themes/next/source/lib/fancybox/.git/objects/d5/d10f6be62acc10fec6e11e8dc4affe1184a17b","hash":"cec51b2539349d2aba1ec5d11eaded3815eccdc5","modified":1557308060921},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/08/d4d5ef639d45881e2c31089252871109b3cb0e","hash":"e1d5e486a1d20a1cb219a6998fcb9549f84ca0a7","modified":1558081238247},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/heads/master","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1558081238267},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0d/fe01dbfc3817db9740f7d9593e6c0d0ce4bcfe","hash":"40d7c408638a545f5d206dacc7a666562ae863b6","modified":1558081238255},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/1e/6843316b3b3be83c6296e38edbcf7a1a389eaa","hash":"b85a7e69e5655a3e37e9fc6d0f7e2bacdbff58fc","modified":1558081238253},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/3a/9ca03dafb2e0a3ee0132e998e1f95146a1187b","hash":"b2a3ed46595b48486b9ba48cc3718cb981f62533","modified":1558081238255},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/49/94fde5a528c6dcf575d1300c9feb7a790580dd","hash":"849400735df951aba8ed44ba0a66b4d7c13c09a8","modified":1558081238256},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1558081238250},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1558081238251},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/92/9d3c446aba8ac3a7854bca3fa99071ec0f1b0a","hash":"324298d9a7b50c2a0640053f01aeaa53e8d1a7ca","modified":1558081238252},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/7e/6c9d90608b7b346b87da90c2aa3389822a5872","hash":"5a939a822a36748559b6b67651f48b82d6d9a209","modified":1558081238248},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1558081238249},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/99/99f3981a0f624ec98a63f2bef6b59ab5a4a130","hash":"e3318de2933bd40a6b707e06d63d97a72d2a41b6","modified":1558081238249},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/b8/7cfcee7b6c989840000d9f5e3bfe75287e7450","hash":"51ead0dc580f672ab9fab6ae4b4b49918b813574","modified":1558081238247},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/cb/5cc9434249607fc442175e3e6c31f3a8cb7a04","hash":"ee1bd67de46a7e6c3a47a1abe0487a2b741d6be4","modified":1558081238251},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/fe/a9333a5d0d257dd748e4348bd97a5b71075026","hash":"a093eb542e88824fac9dda1103bb8def2c565ec6","modified":1558081238246},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/a0/bb6371002f36c275d90ef0a78f4e951c1b36a4","hash":"e73b2d57d9528243fa4163d4078ff74f274aa159","modified":1558081238254},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/heads/master","hash":"414a643b841a756253dc0c2472b2f7a6e9b14778","modified":1558424880846},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/0c/97d452adf1f9aa29468c10dc5aca581c40d35d","hash":"8247b73544627904f1c49b2d48e8a5ca24c49d94","modified":1558424880672},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1558424880436},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1558424880435},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/10/7997cd9f09e787407d6a579bb0ead61ba0c44e","hash":"a7bb772e0f541b9f0c5e4682f88881faef7d2b87","modified":1558424880430},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/3c/673c6e10073f4cf715526c3ab99edf7461b267","hash":"9362453f89eefcc6988cd3a39548c90402f616a8","modified":1558424880434},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/1f/9bfac8ac3b22f100c85bb82877c7af973f011a","hash":"74f0088767a48b5b8874bb5e8953604058233105","modified":1558424880655},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/35/b5765a89abcc57439ad0e7b60dc67225e76570","hash":"b020fa3885506f64651a4a63d42b32c7874a072a","modified":1558424880668},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/34/73a532c76c2ec7eaafc9bba9bc37851cb5a349","hash":"991d675a7982030fef4e8103ecdf717e2e153143","modified":1558424880670},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/40/a8a2ab6075fb13a489aa2585f55518e03440cc","hash":"40a879b454bae72ba30ab918e7cbb3dee04c45c4","modified":1558424880664},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/46/66508d485306f48ac866f4a0eded896b01adb0","hash":"a37ee79e50b83b3a5a7f736cfc6b8eafc210ebca","modified":1558424880825},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/37/e84bbc9c853d9abc39b18361a67d09402a9fec","hash":"330ba4772d5feaf23bd85aa38be94a1b254cac8a","modified":1558424880426},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/41/f2acffe002ce9fa94904bdbb105c62697c08bf","hash":"6aca807e726bf9bbffdab1b97cae1132dd3570c8","modified":1558424880426},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/51/e4a626dc726971ce48b9d29531ec4fa11ab93c","hash":"8bc98d2bd4f224fbba56e0339ba9e1abfbd0e676","modified":1558424880430},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/72/38adfc9f0b65e7dd8e7eb39b53fd8dbd05728d","hash":"67f5fb35cbbb4625e049368c8ef7fef03e21315d","modified":1558424880826},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1558424880436},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/49/e08108a89c7bf4f1e03fdf9d23fa1841ddc40a","hash":"3a32bfdf83debfa739a05a12c77c9c8c9fad6baf","modified":1558424880424},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/63/ce5669cda10d9c600a65df1c509155a9dce354","hash":"e7eefb05c18a77c99c1044dc53cc0b33bc4bc723","modified":1558424880431},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/49/c5d2b0c8ded3a5465f659504d5654759b45ce9","hash":"133f2916c8dd706d9ea44203f671d42abed6d183","modified":1558424880664},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/80/8d63b637e30043e74f5150047c232028ffa3bf","hash":"c7cd9201316a2cf66b63cd0f520dc827912d8be8","modified":1558424880437},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/b1d62571d3374de0902fdf14c3fd925263c295","hash":"f0d087a62296e14072d250d0db5bfeb01e3e0f4c","modified":1558424880432},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/8a/e95435136e887fc30227f9fdab68ff72689315","hash":"f1225345f08eb5abbf849a40efdec16839268c9b","modified":1558424880433},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/ad104add4d67baba615eccfcc7876bdf60256f","hash":"787497f0b2a074be846ae940ba58475a830690d4","modified":1558424880826},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9a/563a770314159840897f1852b05f183911ae71","hash":"0949c3c36849e955c84cc66f544fbeeca266ae19","modified":1558424880824},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/99/ac01b3cae78a765c45566d5540596f71f0f9ed","hash":"394e54788569a0aef47f5c1867b7a617d314b677","modified":1558424880428},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/91/85a82ce05e0c4c6287e3ce6c31d79049a6c5de","hash":"d40af8a4f325b8b2d6eeb1f51497d2313aade46d","modified":1558424880669},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/96/b1227c70e63f95b099993321043a2e05abdbea","hash":"d1f0885e3a68fdfc87e68e5ba6b60de116c3c7a5","modified":1558424880823},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9c/850e429959950cfd82a30843ad130dfd24331a","hash":"001c3423e8a4bf2ccd3e0ad3080d5cace613d42c","modified":1558424880666},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/a1/5c0ab3f7ca37d06a7a3dc28f6375ac8fcaffe1","hash":"3aa24fa2254a71f9b408a01ad7154cc1cbf7cde6","modified":1558424880431},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/aa/f4e31e1d4ea073ad9f6926e146fea3c6d8b423","hash":"7c412d2a2243907dff0a1940f13a539675d76428","modified":1558424880824},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/a7/df932fbaa27cde88a4e1b6b222e445d24d88a9","hash":"65ed1fff3d6ea0eed90011b6c9c892381c0b4837","modified":1558424880658},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/bf/839b1a2dfd79af314506907196f817d1d540b0","hash":"196a52782c02c03b787cca10ca172a6be6ddb8e0","modified":1558424880827},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9f/e80d3fee719ad9953c0e8e8dec472bb727d17d","hash":"09516f8a3f62a9e286f3ac1985969d0913d53271","modified":1558424880659},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/da/3a5548a43813122821bf626fdd51a15f89afe3","hash":"1d8c39585806e5c7b051eb58d566a399b0e77006","modified":1558424880429},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/b4/8a9ad41dbacf220607a3854e23f2136ced96fb","hash":"81ee83b48edb7df4f08573cdd14200be5f62128a","modified":1558424880428},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/b2/8efd888e853a00d7c8ba8fc827ddb0edb6668b","hash":"8c17e115b7c8a860650191fc1b74e7861ab0f7b9","modified":1558424880667},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/e3/096992403adfd6ad955585273915bdeae3dc32","hash":"356ee4003511e7f9c9c4badd52af674adceec2d9","modified":1558424880425},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/ec/fd49187c43c81ad64c250eac1d63893c073e38","hash":"0e6f432ab1ec9a413655267ad3f62205e2e71f99","modified":1558424880671},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/e7/169e14c00f267f49acb69c1ba41dc9a3229d36","hash":"2b79081ef52aec5ca3896894e25e330aed84ac6f","modified":1558424880663},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/eb/83c3470835cc056d65fbaec5ba59fc01a341c6","hash":"a48447a56db4dce3b2ce99fcfd4cbb5d5902877f","modified":1558424880671},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/a400ecc881307dc0faa24170ae0a9bcbba861c","hash":"4b82935622bd12041cf7665503ae8e060705e7fd","modified":1558424880427},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/ec/efb0da782cd6bdfbd7aec14e8e186c2010beb3","hash":"002214074d8349ca4765414ee39cbeb0a3a443d6","modified":1558424880660},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/fc2c417f7156d25437bbe069fa10645b4c3a63","hash":"377e0fce80cab14d6966371260926ee78da12b09","modified":1558424880433},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/heads/master","hash":"42b96d49f5eae1a58b8413a60a0c2699e94df28d","modified":1554132490903},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1554132490887},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1554132490888},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/46/cad4f872aa93e813aed99547c4705322ca483f","hash":"b0465d3186e2d58a8a99c56c6e68aa2965a396d4","modified":1554132490873},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/51/7c5eb7dcc2cb9769efea2e7375ff6e04123150","hash":"ec53157077d47430f4729bf164999d18d370aeab","modified":1554132490884},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1554132490879},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1554132490882},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1554132490880},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1554132490880},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1554132490888},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/44/6ddf9b6c0e5ade17ca5cb99f9b3a5300919c57","hash":"fb72799ff98445f72fda041337da4cf105d9dcba","modified":1554132490883},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1554132490887},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1554132490881},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/50/dd2a6539498a70226c81a587db486b47e839ff","hash":"3844b0c815d0b4b32c6312c751a826bf9dc2c945","modified":1554132490874},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/7b/c7e3186212b6f2e06d3370502565e2c6326890","hash":"379f3c6486f589fc9c1ab07d0382adacf4f655a2","modified":1554132490875},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5e/8ae972c99b04af7dd56dabfc485e8fdae5094d","hash":"791b3349c5696ccacae00bffbdbb8d88a03e61a9","modified":1554132490874},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1554132490877},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/91/f99a0c53b26dd54f56b9e452c68f56b06f8f7e","hash":"3dca8a5629e66599b6e0f146aa32f1b7ce023d89","modified":1554132490886},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1554132490876},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1554132490876},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/ca/3466a8cbf05c2982c58199d6ee71ec6d0271ca","hash":"a9b80b5d827b5e84229b1afd7920d9218dce610f","modified":1554132490878},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/99/be66a33ab4ebc34f62f2880a0e0cc6d334d0f2","hash":"f2346fe8ddd7d7abf38f2946f3083d8150f502d2","modified":1554132490878},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/b1/bb278ca2e50dff1b343f9d5ca025272859432f","hash":"74f0afa72a30268d84613fb0d1d893bba866f01d","modified":1554132490885},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/bb/5755c22b6c1b7461319624f0f000bc947882ee","hash":"2b87a2a354a0fa77cbddf461b03b0b8e43c16a4f","modified":1554132490882},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1554132490885},{"_id":"themes/next/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1557719249094},{"_id":"themes/next/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1557719249083},{"_id":"themes/next/source/lib/pace/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1557719249081},{"_id":"themes/next/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1557719249095},{"_id":"themes/next/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1557719249094},{"_id":"themes/next/source/lib/pace/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1557719249080},{"_id":"themes/next/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1557719249087},{"_id":"themes/next/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1557719249096},{"_id":"themes/next/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1557719249091},{"_id":"themes/next/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1557719249078},{"_id":"themes/next/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1557719249092},{"_id":"themes/next/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1557719249093},{"_id":"themes/next/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1557719249078},{"_id":"themes/next/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1557719249085},{"_id":"themes/next/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1557719249082},{"_id":"themes/next/source/lib/pace/.git/objects/61/fcbe3a99ad371eacdf3a3703883f8e95e072c8","hash":"480b60d684f9a077ade5dda0acfc75bcd9597aff","modified":1557719249080},{"_id":"themes/next/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1557719249088},{"_id":"themes/next/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1557719249091},{"_id":"themes/next/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1557719249089},{"_id":"themes/next/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1557719249079},{"_id":"themes/next/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1557719249090},{"_id":"themes/next/source/lib/pace/.git/objects/da/79363b808519d44a7eda67d7bc81e1587a06e8","hash":"0dc5dc27991da9a09d705e488bc3f1fe5a4d4728","modified":1557719249077},{"_id":"themes/next/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1557719249088},{"_id":"themes/next/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1557719249096},{"_id":"themes/next/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1557719249086},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"2cf353bc3f5e2816a3a0e05d3f154a777200f091","modified":1557719249110},{"_id":"themes/next/source/lib/pdf/.git/objects/pack/pack-c5c83c7062ee61fcc4f772393d054e2cd82a5b64.idx","hash":"f6cd887fa62b3098d3e851d9fd129c82cdc9d892","modified":1558448799621},{"_id":"themes/next/source/lib/pdf/.git/refs/heads/master","hash":"c8bc5ea367768dda94fb652b220688067f600e8a","modified":1558448799634},{"_id":"themes/next/source/lib/quicklink/.git/refs/heads/master","hash":"7c249f2514a21beca73630f838d97414fac804a8","modified":1559566100826},{"_id":"themes/next/source/lib/quicklink/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1559566100808},{"_id":"themes/next/source/lib/quicklink/.git/objects/11/e8067e6c0cdae639117aecc2ca3ad6d888ca87","hash":"72dfc49c3c5a406882d490b97d76b66589382082","modified":1559566100809},{"_id":"themes/next/source/lib/quicklink/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1559566100807},{"_id":"themes/next/source/lib/quicklink/.git/objects/33/5378e4c80a1ceea43de63fa9b2432a728a9e38","hash":"bb4ddbf8b8cb3d5eca7c1598e094e72786bb3f61","modified":1559566100804},{"_id":"themes/next/source/lib/quicklink/.git/objects/41/178bb65983a8c9c5918e09607287edeb4a165f","hash":"7280554882baa8dd82fbfa1f8f1a3e4718c5fe7d","modified":1559566100807},{"_id":"themes/next/source/lib/quicklink/.git/objects/5b/fb1bff7b70e4efdd92493fc9c425448dbf67d2","hash":"31166d650cf0e8e585745153fedc6c90affd2164","modified":1559566100806},{"_id":"themes/next/source/lib/quicklink/.git/objects/52/042037798bcdd9a5726448028efaa17f772dca","hash":"95dd799d8f7c87b6a21c2e3a71b7b20eaf1e1ce3","modified":1559566100805},{"_id":"themes/next/source/lib/quicklink/.git/objects/82/237e12a9bc524318fd82791f3423a850ba4497","hash":"f59dd24cdc59455ef40a2d3574f46e35957fde8a","modified":1559566100814},{"_id":"themes/next/source/lib/quicklink/.git/objects/8f/acf79585e851e57f649f22f6975886e0ff8f9f","hash":"03e4deb2399a210e871c5b0b8a633d4bf1e34580","modified":1559566100810},{"_id":"themes/next/source/lib/quicklink/.git/objects/c2/54409c5a9195082e66cb0de96dd75dc32eee71","hash":"a8d5ec055ba13e049e47f4e3f6a675043ac42572","modified":1559566100805},{"_id":"themes/next/source/lib/quicklink/.git/objects/e8/a7b4ea5b53ee629d6133d59c80baf82e9f7fc1","hash":"8e7ea1bb1e6dabeac62afa7f90c0e12505a1818e","modified":1559566100811},{"_id":"themes/next/source/lib/quicklink/.git/objects/99/113457b4bc6c60dc08411fc5d217f2805dfaea","hash":"b29dc34f9f9330e2457f1188bc8ba8559a63c981","modified":1559566100813},{"_id":"themes/next/source/lib/quicklink/.git/objects/f1/85d082f90ee52bb436706f1fe28d9f2c67885b","hash":"9a713944eb485f928bda96af5ce74220f10cc5cc","modified":1559566100812},{"_id":"themes/next/source/lib/quicklink/.git/objects/ea/c7a903f1e20021b4a2e4ccb1c1ea3c10cdc37b","hash":"4d5363eb11fa64c9ca3f06d2ddae3a30d3f5ef05","modified":1559566100809},{"_id":"themes/next/source/lib/quicklink/.git/objects/f7/ee626c66d1cead9b19287aa61064219dee34cb","hash":"4541aceb19efe3a1a57f6d82d12ac219fcae2b61","modified":1559566100804},{"_id":"themes/next/source/lib/pdf/web/locale/ach/viewer.properties","hash":"5e8f73b253c0e10d11909b41b0c9774ccbffc7a4","modified":1558448799767},{"_id":"themes/next/source/lib/pdf/web/locale/ak/viewer.properties","hash":"7b32cf30fd16432bc4050919607659c5e7ac7fe3","modified":1558448799768},{"_id":"themes/next/source/lib/pdf/web/locale/af/viewer.properties","hash":"4f79c194d6b404ffbec112aaa55ad4b016b9d93f","modified":1558448799767},{"_id":"themes/next/source/lib/pdf/web/locale/ar/viewer.properties","hash":"5ea320267526aedc311afb71fcdb05ba98eed0b5","modified":1558448799769},{"_id":"themes/next/source/lib/pdf/web/locale/as/viewer.properties","hash":"9be87d26909520181cec8572c4b18e5e1dc11388","modified":1558448799769},{"_id":"themes/next/source/lib/pdf/web/locale/az/viewer.properties","hash":"8e1051d201a59c5dab81c6f1aa15e8feeac5b670","modified":1558448799770},{"_id":"themes/next/source/lib/pdf/web/locale/be/viewer.properties","hash":"e292a5477cf5435ea699a605809e47c42aefeb93","modified":1558448799770},{"_id":"themes/next/source/lib/pdf/web/locale/an/viewer.properties","hash":"a9505349d70da8f3b2821f2ee66b9074156cde3f","modified":1558448799768},{"_id":"themes/next/source/lib/pdf/web/locale/bg/viewer.properties","hash":"40860051d53e2d87860c1115c11d6a3e03ce7036","modified":1558448799771},{"_id":"themes/next/source/lib/pdf/web/locale/bn-BD/viewer.properties","hash":"179a25c28f14e46000cfc24fe65c49401e85419a","modified":1558448799771},{"_id":"themes/next/source/lib/pdf/web/locale/ast/viewer.properties","hash":"bf1dd77708dc0d84c11a99eec572c6131bc9404e","modified":1558448799769},{"_id":"themes/next/source/lib/pdf/web/locale/bn-IN/viewer.properties","hash":"91d38c2c46ef41753041da06f82c80c6d67e1540","modified":1558448799771},{"_id":"themes/next/source/lib/pdf/web/locale/bs/viewer.properties","hash":"5321ec163bf54b4a2be4830d796a5a5b732db76b","modified":1558448799773},{"_id":"themes/next/source/lib/pdf/web/locale/br/viewer.properties","hash":"1098685315a27674c10c4b82df8c686b01434efd","modified":1558448799772},{"_id":"themes/next/source/lib/pdf/web/locale/brx/viewer.properties","hash":"9a72c22a79eaf3821f092c1ca1802a0064fa3234","modified":1558448799772},{"_id":"themes/next/source/lib/pdf/web/locale/ca/viewer.properties","hash":"c5d698d7dd16d668b74fedee5a060a0e8419ea53","modified":1558448799773},{"_id":"themes/next/source/lib/pdf/web/locale/cak/viewer.properties","hash":"6605d8acb4fc0eca1f199d8fd1147e3765e89b1c","modified":1558448799773},{"_id":"themes/next/source/lib/pdf/web/locale/cs/viewer.properties","hash":"d75cb15bb1ca65a9a13f63fbd2fd4bc1cb90edf1","modified":1558448799774},{"_id":"themes/next/source/lib/pdf/web/locale/crh/viewer.properties","hash":"f5ab8fe602dc9f608d03de49ecd2b8dce7fb6166","modified":1558448799774},{"_id":"themes/next/source/lib/pdf/web/locale/csb/viewer.properties","hash":"17e840af72cb4451a586e70f5a7c7bfeb9c20683","modified":1558448799774},{"_id":"themes/next/source/lib/pdf/web/locale/cy/viewer.properties","hash":"15a81bb9d424efc911a4a9fa5a15d8815bfa6c14","modified":1558448799775},{"_id":"themes/next/source/lib/pdf/web/locale/da/viewer.properties","hash":"c01b92f27705d25742c330bfaaff9fcabf1c8031","modified":1558448799775},{"_id":"themes/next/source/lib/pdf/web/locale/el/viewer.properties","hash":"9b7d2c6377a129d3601e5e08ca4305d0361f7831","modified":1558448799776},{"_id":"themes/next/source/lib/pdf/web/locale/de/viewer.properties","hash":"a4c789f3b9478a6dc91bac0c999af6b7e61b4b16","modified":1558448799776},{"_id":"themes/next/source/lib/pdf/web/locale/en-GB/viewer.properties","hash":"5cf722fa2d9851d0ea07dc9a991c196ba7afbc91","modified":1558448799777},{"_id":"themes/next/source/lib/pdf/web/locale/en-ZA/viewer.properties","hash":"876db7adcaa8ead13b464e7dafd5d2a965e34a3d","modified":1558448799777},{"_id":"themes/next/source/lib/pdf/web/locale/en-CA/viewer.properties","hash":"c13cab0f6eccf5a86f0e1ce812fd49e6f93c66b7","modified":1558448799776},{"_id":"themes/next/source/lib/pdf/web/locale/eo/viewer.properties","hash":"a4c7652ee490e7f3be631c98f815310dfae3087a","modified":1558448799778},{"_id":"themes/next/source/lib/pdf/web/locale/es-CL/viewer.properties","hash":"54350aa5cc43a8b39c9cc36db31649a235ee68c2","modified":1558448799780},{"_id":"themes/next/source/lib/pdf/web/locale/es-ES/viewer.properties","hash":"7243b9a1f8b3f30d4af50b27be1ac233fed1c52c","modified":1558448799780},{"_id":"themes/next/source/lib/pdf/web/locale/en-US/viewer.properties","hash":"2536ef9222220c521eda3a60f9990c889626c9a4","modified":1558448799777},{"_id":"themes/next/source/lib/pdf/web/locale/et/viewer.properties","hash":"2d15eda3b985a02e65ab1084ef1123d884724eac","modified":1558448799781},{"_id":"themes/next/source/lib/pdf/web/locale/eu/viewer.properties","hash":"1c08ab0a71fdd6a5f0ec8e06800843d60823ba57","modified":1558448799782},{"_id":"themes/next/source/lib/pdf/web/locale/ff/viewer.properties","hash":"96e7c419cd176823ef2dc96f1cdbed099257042d","modified":1558448799783},{"_id":"themes/next/source/lib/pdf/web/locale/es-MX/viewer.properties","hash":"90c774aa365766e6def142c526e38d5dda266e94","modified":1558448799781},{"_id":"themes/next/source/lib/pdf/web/locale/es-AR/viewer.properties","hash":"791153e6ddcb771a5c4c41e692e368d1f695821d","modified":1558448799779},{"_id":"themes/next/source/lib/pdf/web/locale/fi/viewer.properties","hash":"9c414e369b40bbe83bda29f1bb791a35da0a74f9","modified":1558448799783},{"_id":"themes/next/source/lib/pdf/web/locale/fr/viewer.properties","hash":"c9c3cc9449f8926240a6a049eb04ad2b53aafd20","modified":1558448799784},{"_id":"themes/next/source/lib/pdf/web/locale/ga-IE/viewer.properties","hash":"f319b460b796b9c703927444f9013d0316cbe3c8","modified":1558448799784},{"_id":"themes/next/source/lib/pdf/web/locale/fa/viewer.properties","hash":"3bc05b658f9a7c3080a94a50c0c4a7f13db41953","modified":1558448799782},{"_id":"themes/next/source/lib/pdf/web/locale/gd/viewer.properties","hash":"43ff0f2581aae502f2f2444ec7704a4967104d0d","modified":1558448799785},{"_id":"themes/next/source/lib/pdf/web/locale/gl/viewer.properties","hash":"6b2ffe923eb04ec15d69d7d83ab0a2eb5658f124","modified":1558448799785},{"_id":"themes/next/source/lib/pdf/web/locale/fy-NL/viewer.properties","hash":"969a98b1fe26302725b6a4e64d0ec0139002fd8d","modified":1558448799784},{"_id":"themes/next/source/lib/pdf/web/locale/gn/viewer.properties","hash":"9fd3aeeffb5145beda9337d25d868c52c8307209","modified":1558448799785},{"_id":"themes/next/source/lib/pdf/web/locale/gu-IN/viewer.properties","hash":"386271a2d6be8e719fe84265b7acd12858c88428","modified":1558448799786},{"_id":"themes/next/source/lib/pdf/web/locale/hr/viewer.properties","hash":"f17d789e2997924de357b3130136ee428ce769fe","modified":1558448799787},{"_id":"themes/next/source/lib/pdf/web/locale/he/viewer.properties","hash":"0e83c42530863b9645985707fe5cfa4780f04dd2","modified":1558448799786},{"_id":"themes/next/source/lib/pdf/web/locale/hto/viewer.properties","hash":"4e6fc5d6b807cfe56ccca952a01c4630670f63f8","modified":1558448799788},{"_id":"themes/next/source/lib/pdf/web/locale/hi-IN/viewer.properties","hash":"f58f6c116a720e82dbafab295bb8000c8061ac53","modified":1558448799787},{"_id":"themes/next/source/lib/pdf/web/locale/hsb/viewer.properties","hash":"577d3de8fc4481f820188e7da7195c4c45044b7e","modified":1558448799788},{"_id":"themes/next/source/lib/pdf/web/locale/hu/viewer.properties","hash":"7e516f623273cb8f25355b558f951f9eb04bcb38","modified":1558448799788},{"_id":"themes/next/source/lib/pdf/web/locale/is/viewer.properties","hash":"6111931f3386ede499106d9901811dda041e830d","modified":1558448799790},{"_id":"themes/next/source/lib/pdf/web/locale/ia/viewer.properties","hash":"6df9228f1ad2de85e556a1ab97a927097dfc0e32","modified":1558448799789},{"_id":"themes/next/source/lib/pdf/web/locale/hy-AM/viewer.properties","hash":"d15feb0c6de4534c35cbe224448429785f9d1d9e","modified":1558448799789},{"_id":"themes/next/source/lib/pdf/web/locale/id/viewer.properties","hash":"eb47c0e94a5ab0c0cee2b89887e07de6ffc907ea","modified":1558448799790},{"_id":"themes/next/source/lib/pdf/web/locale/it/viewer.properties","hash":"0ae2e2e1b295cd39b6a9178f3c3d3ef9ec552f94","modified":1558448799790},{"_id":"themes/next/source/lib/pdf/web/locale/ka/viewer.properties","hash":"bbbccaa16bedd3b1c054030fbdc7c683e3aa200e","modified":1558448799791},{"_id":"themes/next/source/lib/pdf/web/locale/ja/viewer.properties","hash":"54040c86905557a0203905830b4dd52ff20b9312","modified":1558448799791},{"_id":"themes/next/source/lib/pdf/web/locale/kab/viewer.properties","hash":"d7dbeade966bce58aae41e04381cf6d02e732562","modified":1558448799792},{"_id":"themes/next/source/lib/pdf/web/locale/kk/viewer.properties","hash":"5b3825128cc8b4513d5f867055ca44af7201cb8a","modified":1558448799792},{"_id":"themes/next/source/lib/pdf/web/locale/km/viewer.properties","hash":"fa84c645561a6573737a401e0c14c512401f4220","modified":1558448799792},{"_id":"themes/next/source/lib/pdf/web/locale/ks/viewer.properties","hash":"4805e2e3aac56f9559516125daa1dcc6bc214875","modified":1558448799794},{"_id":"themes/next/source/lib/pdf/web/locale/kn/viewer.properties","hash":"7764695f91f82e74f29452d81b41bf634134f9e6","modified":1558448799793},{"_id":"themes/next/source/lib/pdf/web/locale/lg/viewer.properties","hash":"18c1b9f7ca30c648bd31e31b15d16c876242ee73","modified":1558448799795},{"_id":"themes/next/source/lib/pdf/web/locale/ko/viewer.properties","hash":"ecd2ed7a5cc7b4839a668ea7e92f89f3663c3f75","modified":1558448799793},{"_id":"themes/next/source/lib/pdf/web/locale/ku/viewer.properties","hash":"46739e80d58ab8559ccfb21d6b0692a37e16e6a9","modified":1558448799794},{"_id":"themes/next/source/lib/pdf/web/locale/lo/viewer.properties","hash":"625438b69b56a04f2e45464f8c113cac82c7e4af","modified":1558448799795},{"_id":"themes/next/source/lib/pdf/web/locale/kok/viewer.properties","hash":"d887d8a052a35be54159f58f7243372dbf7ec258","modified":1558448799793},{"_id":"themes/next/source/lib/pdf/web/locale/lij/viewer.properties","hash":"95778c1e028f04bfa8373df9b69deca8fd45974a","modified":1558448799795},{"_id":"themes/next/source/lib/pdf/web/locale/lt/viewer.properties","hash":"213c3ec08f601cfb3ac89ab61cdca39a481f1cb1","modified":1558448799796},{"_id":"themes/next/source/lib/pdf/web/locale/ltg/viewer.properties","hash":"eff20b98155297340728776fc6117091fc6c3661","modified":1558448799797},{"_id":"themes/next/source/lib/pdf/web/locale/mn/viewer.properties","hash":"7986acd89509d0467129b71ce25922ecfbd4817e","modified":1558448799800},{"_id":"themes/next/source/lib/pdf/web/locale/lv/viewer.properties","hash":"11556a8d2494811f17651c1eccfcb570d3dad35c","modified":1558448799798},{"_id":"themes/next/source/lib/pdf/web/locale/meh/viewer.properties","hash":"1c947bc1c8a256a5993523eebe61865a6c032553","modified":1558448799799},{"_id":"themes/next/source/lib/pdf/web/locale/mai/viewer.properties","hash":"6dffdd4313a49854702ae8c8ef81d0fe052324a6","modified":1558448799798},{"_id":"themes/next/source/lib/pdf/web/locale/mk/viewer.properties","hash":"33cbeaf98eae66a5d37ce2e21c52c6700d0b0eec","modified":1558448799799},{"_id":"themes/next/source/lib/pdf/web/locale/mr/viewer.properties","hash":"cef716acbbd9f92950cc1daa013cdb2804b05c36","modified":1558448799801},{"_id":"themes/next/source/lib/pdf/web/locale/ml/viewer.properties","hash":"8dab36ebe5b13dd5759979717f81a2fdf8e120e3","modified":1558448799800},{"_id":"themes/next/source/lib/pdf/web/locale/nb-NO/viewer.properties","hash":"aba427e6b82b854547b8db54cf928f835aed1624","modified":1558448799802},{"_id":"themes/next/source/lib/pdf/web/locale/ms/viewer.properties","hash":"d556fd6c1ae83c1e48f16efe0bbef62d75beb51d","modified":1558448799801},{"_id":"themes/next/source/lib/pdf/web/locale/my/viewer.properties","hash":"6ad0230851d6df7ca1df49afcbc692b76aca0dde","modified":1558448799801},{"_id":"themes/next/source/lib/pdf/web/locale/ne-NP/viewer.properties","hash":"276511a05f160ea500ac4060b4a5fd39d5735690","modified":1558448799802},{"_id":"themes/next/source/lib/pdf/web/locale/nn-NO/viewer.properties","hash":"a63474637c1087b0a044da8f9800ce245fb9fd03","modified":1558448799803},{"_id":"themes/next/source/lib/pdf/web/locale/oc/viewer.properties","hash":"d6fa7c4febc8c1d7bc4474670a60484ff0083083","modified":1558448799804},{"_id":"themes/next/source/lib/pdf/web/locale/nso/viewer.properties","hash":"176afe940078cca679275adf9dbc1ca1d6e8f7ce","modified":1558448799803},{"_id":"themes/next/source/lib/pdf/web/locale/nl/viewer.properties","hash":"72774939d8709183517b907ff5c7148f3867bccb","modified":1558448799802},{"_id":"themes/next/source/lib/pdf/web/locale/or/viewer.properties","hash":"8e0e153f102d7a24d6e0523b67c3aa2d0e3857f5","modified":1558448799804},{"_id":"themes/next/source/lib/pdf/web/locale/pt-BR/viewer.properties","hash":"cdaca10b2be90f6c33dcdb8788a13913c031c5ce","modified":1558448799806},{"_id":"themes/next/source/lib/pdf/web/locale/pa-IN/viewer.properties","hash":"9eee1d04d432ce66214571d1c20ac914c7f88857","modified":1558448799805},{"_id":"themes/next/source/lib/pdf/web/locale/pl/viewer.properties","hash":"b103b52e57e71a671f20b797a094c7ac9af1ce8a","modified":1558448799805},{"_id":"themes/next/source/lib/pdf/web/locale/rm/viewer.properties","hash":"40f35ae09bfcbf8a2fd2a82c6493efef7cfd33c7","modified":1558448799806},{"_id":"themes/next/source/lib/pdf/web/locale/pt-PT/viewer.properties","hash":"692bb4f63ad1cb641991a6957b48d25e58b5d0b8","modified":1558448799806},{"_id":"themes/next/source/lib/pdf/web/locale/sah/viewer.properties","hash":"ef69f15f4aa8ffcd0292b67519495ac962f0a846","modified":1558448799808},{"_id":"themes/next/source/lib/pdf/web/locale/ru/viewer.properties","hash":"6e7a9d73c26e3caffac1658d16748361503f5959","modified":1558448799807},{"_id":"themes/next/source/lib/pdf/web/locale/si/viewer.properties","hash":"8b43afbd734dcff0b498cc92921d994675c9e503","modified":1558448799809},{"_id":"themes/next/source/lib/pdf/web/locale/ro/viewer.properties","hash":"0eda2ed6fb64c2166305796318edd8f914e0754d","modified":1558448799807},{"_id":"themes/next/source/lib/pdf/web/locale/rw/viewer.properties","hash":"7d96bc96802f37a1c9ead373524a425d08e1dbcf","modified":1558448799807},{"_id":"themes/next/source/lib/pdf/web/locale/sat/viewer.properties","hash":"02709cba9da0380bdc9e174094769f5ae60bf8ad","modified":1558448799808},{"_id":"themes/next/source/lib/pdf/web/locale/sl/viewer.properties","hash":"61adebf15ea0c9a9eede2192c5da7bd8f5cdc78f","modified":1558448799810},{"_id":"themes/next/source/lib/pdf/web/locale/sk/viewer.properties","hash":"8d0f204a9e35bcbcbb1b2dca3b4ce29820d17d15","modified":1558448799809},{"_id":"themes/next/source/lib/pdf/web/locale/son/viewer.properties","hash":"89384fd7cb2359b1360345c7169031b0509f8df1","modified":1558448799810},{"_id":"themes/next/source/lib/pdf/web/locale/sr/viewer.properties","hash":"987c57c1ef644ad80e65cce437a7dfaf693c1512","modified":1558448799811},{"_id":"themes/next/source/lib/pdf/web/locale/sq/viewer.properties","hash":"86d5b8c6b1b8c03df7c448f4593a26547ee04c27","modified":1558448799810},{"_id":"themes/next/source/lib/pdf/web/locale/sv-SE/viewer.properties","hash":"4aa908ef62d54198a2c496fc1e8a32382f766f01","modified":1558448799811},{"_id":"themes/next/source/lib/pdf/web/locale/ta-LK/viewer.properties","hash":"646e2182307793f70a61584fc436886c946482c4","modified":1558448799812},{"_id":"themes/next/source/lib/pdf/web/locale/tl/viewer.properties","hash":"0a97a129a36601a19c5774b68de0f3fc96b8b546","modified":1558448799814},{"_id":"themes/next/source/lib/pdf/web/locale/te/viewer.properties","hash":"562c504aff2a7c0e4d2c8982302b718cb4f11634","modified":1558448799813},{"_id":"themes/next/source/lib/pdf/web/locale/sw/viewer.properties","hash":"7e5b770e8155a7465f77d1b2d7792fa22e50bcd0","modified":1558448799811},{"_id":"themes/next/source/lib/pdf/web/locale/tr/viewer.properties","hash":"de8065484969c955cb17b2dbf9458d461ce219c5","modified":1558448799815},{"_id":"themes/next/source/lib/pdf/web/locale/uk/viewer.properties","hash":"dd1d46cc1bf5411b98477d402d4e6b89153f37ff","modified":1558448799816},{"_id":"themes/next/source/lib/pdf/web/locale/th/viewer.properties","hash":"1ffc3a5b59264aa0590f5fb2515958bf463be217","modified":1558448799814},{"_id":"themes/next/source/lib/pdf/web/locale/ta/viewer.properties","hash":"1428a3ae798b137138993313b0ccbfaf13cb26d4","modified":1558448799812},{"_id":"themes/next/source/lib/pdf/web/locale/tn/viewer.properties","hash":"b1839a14243baf851f7811e5be779d8e0e147105","modified":1558448799815},{"_id":"themes/next/source/lib/pdf/web/locale/ur/viewer.properties","hash":"e8eb253f73bd06463abd606e90ccbd37d740d3d5","modified":1558448799816},{"_id":"themes/next/source/lib/pdf/web/locale/vi/viewer.properties","hash":"d3e271d82bdeaa40dbc1f2fb0f3c4f03350d677c","modified":1558448799817},{"_id":"themes/next/source/lib/pdf/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1558448799817},{"_id":"themes/next/source/lib/pdf/web/locale/uz/viewer.properties","hash":"331a3fc72e3572d5cae07672b872f2d89b324286","modified":1558448799817},{"_id":"themes/next/source/lib/pdf/web/locale/xh/viewer.properties","hash":"4ce7fd8d9366220b4264e4ae712cf88348f4f83d","modified":1558448799818},{"_id":"themes/next/source/lib/pdf/web/locale/tsz/viewer.properties","hash":"0e3086f1dea298a35dcc91dd78d5a24250f1c908","modified":1558448799816},{"_id":"themes/next/source/lib/pdf/web/locale/zh-CN/viewer.properties","hash":"065a0a60d8143e6ab3b438c80b45a07845a5c4aa","modified":1558448799819},{"_id":"themes/next/source/lib/pdf/web/locale/zh-TW/viewer.properties","hash":"8b7acccbed76fecb3b660cd481d922146297f825","modified":1558448799819},{"_id":"themes/next/source/lib/pdf/web/locale/zam/viewer.properties","hash":"a186e34704f3a1ba4cbf22fce81c576ab6487ed7","modified":1558448799818},{"_id":"themes/next/source/lib/pdf/web/locale/zu/viewer.properties","hash":"1c283ba7792aa61cad501198bd8e4d7b13fa5bb3","modified":1558448799820},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"c4eb74ff2d41c043f28b886ac88aa60782e75c9e","modified":1554132631876},{"_id":"themes/next/source/lib/three/.git/objects/09/3d290f60c3b467d503633531d7ce7cdd42dd75","hash":"ab09bc8bfc9079e408dc6facc1bfd9aa5d6bdef9","modified":1554132631858},{"_id":"themes/next/source/lib/three/.git/objects/0b/de10292fcd5dd4b66d1bf60f62ea7d7a30b310","hash":"37710386189fe435ea20541a69c1a9b833b5f50b","modified":1554132631122},{"_id":"themes/next/source/lib/three/.git/objects/03/eb19e6b3194a820c462bc63177b6fc2bda245f","hash":"0be88820832fa6ea30d56905e98b27798805dc92","modified":1554132631119},{"_id":"themes/next/source/lib/three/.git/objects/21/77c1416c8e91ed918b6d3cf7f333d99d659a24","hash":"7330016805a652c2153bfcfbdd4c3c50e5b5a642","modified":1554132631860},{"_id":"themes/next/source/lib/three/.git/objects/1a/f9d30697fd2194a4132a3a6647722be2eb75dc","hash":"0f686b4e26b1e751509ded8a2db697b1d7938004","modified":1554132630956},{"_id":"themes/next/source/lib/three/.git/objects/03/c40a4b50e21c63a0e27b1fbcd014168ae3f6da","hash":"987ca2a1169e875a5ac73e8a1a906b9ae88d4d22","modified":1554132630968},{"_id":"themes/next/source/lib/three/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1554132630964},{"_id":"themes/next/source/lib/three/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1554132630964},{"_id":"themes/next/source/lib/three/.git/objects/1f/0b95a965630f47a7264fe9e9456ed7da36c2aa","hash":"6e98b6d7740bf53074339ce383089320fe1962b9","modified":1554132631842},{"_id":"themes/next/source/lib/three/.git/objects/1b/3d1cd16f3e6ce99ea92c7e9c0b78ee30a8c346","hash":"16569e1c4912fd762f32b13de839d05b9c319e54","modified":1554132630961},{"_id":"themes/next/source/lib/three/.git/objects/3a/4c8581b3aa0d4f9192de158bd4223a90d646b5","hash":"a64efe9f8e2db0ff3cfb7b5e71fedf229ce290fd","modified":1554132630965},{"_id":"themes/next/source/lib/three/.git/objects/3a/cef7449b991ee78bb5b7f2f121996b9ec9bba4","hash":"d9165d5939be17750b9edad5d0fc32029e4a23d6","modified":1554132631122},{"_id":"themes/next/source/lib/three/.git/objects/29/4f11136ee13277ee96ec3bb56d810f43655298","hash":"a294c3770aa5e7ed386075202f5b88048e1d170d","modified":1554132631856},{"_id":"themes/next/source/lib/three/.git/objects/3c/6fef4314903036253335d4550346f6b927c721","hash":"1ee4e7d110363dc5e2676b675c7f7030731cf3a5","modified":1554132631850},{"_id":"themes/next/source/lib/three/.git/objects/3f/f2616b188ab71e1abf2029d7d55834c5643fc5","hash":"65bbc360ee3cc66fba71b9fb0baa3cff744327b9","modified":1554132630969},{"_id":"themes/next/source/lib/three/.git/objects/52/71f18c203d24b27ec7bd977c2d5c61300cea1a","hash":"cdae53ba376df246585a2f44a86d0c7da98bca1f","modified":1554132631847},{"_id":"themes/next/source/lib/three/.git/objects/36/3db3ce197d25b8c64db663aa9000a181511461","hash":"f87bc2ce87e37d0ee60eceef8be89dae4c52e01d","modified":1554132631117},{"_id":"themes/next/source/lib/three/.git/objects/6b/128053933889f264c239abe0d381523daa8fa5","hash":"23df1e6daed83528bc2f36980678ecc31e17f09e","modified":1554132631118},{"_id":"themes/next/source/lib/three/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1554132630966},{"_id":"themes/next/source/lib/three/.git/objects/70/0960a662785b70b5c72909810794e1c18e9891","hash":"ea3c3330dd0a213a3cebdc42ee57d43fb8f9813c","modified":1554132631842},{"_id":"themes/next/source/lib/three/.git/objects/6e/a4473e91dc2dbc452ff446e7cb04cb2ff16da0","hash":"710066cce498e372a932ff272d3d0eb4345fe3cf","modified":1554132630957},{"_id":"themes/next/source/lib/three/.git/objects/67/6b9f6189356d0201fd72dd6f98db19628a2ff5","hash":"250795ea0af79524945e66b28f233eb8bd9ee7dd","modified":1554132631845},{"_id":"themes/next/source/lib/three/.git/objects/79/ae5f64ea4be7e1a108b2f1fc8afbca7bfa1fba","hash":"4e28517d80599b1a6051b1d3f657654aca6333b9","modified":1554132630966},{"_id":"themes/next/source/lib/three/.git/objects/80/5e5d92b903742c45e359b26a06cf86376301d8","hash":"6d39f5d10ed1e3acaaef5ac5999945b65ab12b88","modified":1554132630963},{"_id":"themes/next/source/lib/three/.git/objects/7f/6a7ddb8a04644dc980d83c9878b4621acf82f5","hash":"c517caf5d47c9f1eba2ced6800dab03e2e29a130","modified":1554132630961},{"_id":"themes/next/source/lib/three/.git/objects/7d/d7c1e8f79dc9a9a99e290147528d7a47d46830","hash":"c2104c89bcf686b243061b456ddc86d916b84360","modified":1554132631123},{"_id":"themes/next/source/lib/three/.git/objects/82/69b6fd29a514f9bd746497b298176228bd4061","hash":"cf527c08b5d88d72939a61446d128eba2fb94be2","modified":1554132631844},{"_id":"themes/next/source/lib/three/.git/objects/89/b7ae569312ae577534d7b58647232fb48bfb08","hash":"a265c0a7e24267bd82d11a48f091d2241edc0080","modified":1554132631857},{"_id":"themes/next/source/lib/three/.git/objects/8a/2159d7a0c70d394071e8dcc79502d5cd1fc5e4","hash":"58ff19b7a9a65c9e562b9e1c7ee0ed3ac005b15d","modified":1554132631852},{"_id":"themes/next/source/lib/three/.git/objects/87/782e1008d1f88a9cb63d59407b1cb9e47b0861","hash":"0af5c5e17b27d8114fddd53d7cae8bb3284ae9af","modified":1554132630959},{"_id":"themes/next/source/lib/three/.git/objects/8e/3ea1a067348d2a9c066fbf201663b462a3ed6c","hash":"f3168176590ac08570ef75b73ecae2b4a455d753","modified":1554132631116},{"_id":"themes/next/source/lib/three/.git/objects/a4/6866ca175f7c27daaf6b39c94d930bc27d4ce5","hash":"fc416f7f3f62c338bda28bb56bfa6f8fb49421ff","modified":1554132631841},{"_id":"themes/next/source/lib/three/.git/objects/ce/175226253f7f31da632b93ab6560debab1bf6d","hash":"55c41b0948cb31fad3a52ab7ac91ba93e6c22751","modified":1554132630960},{"_id":"themes/next/source/lib/three/.git/objects/a9/27aca23c7f27f5d1ebf2c4baea3aa5d8676143","hash":"dc3e5c853a502fbe7ea3e35c2f7a2bf94318ade4","modified":1554132631861},{"_id":"themes/next/source/lib/three/.git/objects/b0/2d36d33210bc68d3e6451c663eb567ebc5721c","hash":"8d3bac2fa021a8f4609a134167edb84fd46254b2","modified":1554132631115},{"_id":"themes/next/source/lib/three/.git/objects/ae/8fa980e909988af2ebd9423658213d2e7e6bba","hash":"9978e4f223de97e23a047986bf21cbf48663a150","modified":1554132630958},{"_id":"themes/next/source/lib/three/.git/objects/d0/32ce3fe05be57b72cc925f86149497229cda13","hash":"59e5036e95b496852ad3b918eac2e4b28a5951f2","modified":1554132631859},{"_id":"themes/next/source/lib/three/.git/objects/d9/0026fb76d55bba50ee4a221c887a0f1a8e8102","hash":"ac0ac5756be4b24f2249be101665ff29ed93d1f9","modified":1554132631851},{"_id":"themes/next/source/lib/three/.git/objects/d9/90e2654ec49768cd50d630db99ee00bee2b13c","hash":"6c5cc041391cb5a6b3e0f2f15f30bd62735ac7fa","modified":1554132631121},{"_id":"themes/next/source/lib/three/.git/objects/d8/8d5765694f92039daac0f944405d4cf61a0d13","hash":"70d2b236fcd955aa4fa95efc2e18c98919003ec6","modified":1554132630962},{"_id":"themes/next/source/lib/three/.git/objects/d2/a00ca1067b93b81dae8ea7d0c9838e935595e8","hash":"4b1ecd5271cdf94c10c2e413c7378adb22e940bb","modified":1554132631854},{"_id":"themes/next/source/lib/three/.git/objects/df/932438893faefc6b9f5ba9191913dfeedc2a1c","hash":"ac939ae39ab04abc99c0caaef00849585ff4886d","modified":1554132631857},{"_id":"themes/next/source/lib/three/.git/objects/e5/6e96bd99ebe3f0dc8f02c979703c3666f6dd9e","hash":"b971fcaae8424ea1b507379afdcdff74359a1525","modified":1554132631859},{"_id":"themes/next/source/lib/three/.git/objects/e0/52c7542703df4969a95779bd4dc58b568bcb5e","hash":"b1ccf1650011f74939f07233834bdff21baf4952","modified":1554132630962},{"_id":"themes/next/source/lib/three/.git/objects/e0/ced7e71c43a729f9653b1c4434b95724fc02ed","hash":"98c61b57d8e5e03cf30d402cfcb840c6e610aaa6","modified":1554132631848},{"_id":"themes/next/source/lib/three/.git/objects/fa/be1d6949c228188d07df0f4b99b217c7b7f92e","hash":"de53b76740aff0953bcd79853d8addfabfc29f95","modified":1554132631862},{"_id":"themes/next/source/lib/three/.git/objects/ea/7a1bbd08eb930b5f777ec025493ae0c8cb12d4","hash":"3c428fd65f982afbabbf683163bcc88a4eb4cda0","modified":1554132630958},{"_id":"themes/next/source/lib/three/.git/objects/ec/00e107b97a0b7a9850219894bf4e533c68bf87","hash":"5b7f94788c3c19c8a0f73f1b712d5d79e0236668","modified":1554132631120},{"_id":"themes/next/source/lib/three/.git/objects/fe/47fa8f2d9edef52a8ea859537c9286363ee168","hash":"dfaa57c592a229b220a7241bbd0567ec38f4e578","modified":1554132631114},{"_id":"themes/next/source/lib/three/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1554132631862},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-koharu.png","hash":"c3df6e493ae21f9efe57a01575ae644911e18bcf","modified":1558156658064},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nietzsche.png","hash":"453467603c1673b3352371806480f518846d7d0b","modified":1558156845427},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-hibiki.png","hash":"cad165c9e8ce67ccf54f78ce8e9534fbbee2b2d1","modified":1558156548525},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-chitose.png","hash":"cfa77614dcce07a960ba2d0f5282d6d2f7f8f513","modified":1558156327910},{"_id":"source/photo/images/fristniupai/2.jpg","hash":"cf01b8333a518f1e46da9e64f88daeaf9c0bb814","modified":1559356272929},{"_id":"source/photo/images/tianjinzhilv/renwu4.jpg","hash":"c3a2a265790263a35f7ecddc65e5411f0e5f5927","modified":1567400160574},{"_id":"themes/next/source/lib/bookmark/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558081028388},{"_id":"themes/next/source/lib/bookmark/.git/logs/refs/heads/master","hash":"9e0af18e8fc935a11f16bd3536b46f56d748323b","modified":1558081028390},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/heads/master","hash":"f00a974d580f60b9c64581476ff4a4b8a3e8a3e9","modified":1557308061074},{"_id":"themes/next/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1557308061072},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/heads/master","hash":"d899657120186bf291b8ef846a82b3bb3bdbb3d8","modified":1558081238268},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558081238266},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/heads/master","hash":"1a79db4d84e083f7f724e34bb944feb41d87e5ec","modified":1558424880846},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558424880844},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"fc511c19306ac850beeb6d83ea4eb875f6fe164e","modified":1554132490903},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1554132490901},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"a202595c46b688836d0912653e519a292bb1225e","modified":1557719249111},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1557719249109},{"_id":"themes/next/source/lib/pdf/.git/logs/refs/heads/master","hash":"20bbb83bbb185c1dd8f8fd00a901075e0717d69e","modified":1558448799635},{"_id":"themes/next/source/lib/pdf/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1558448799633},{"_id":"themes/next/source/lib/quicklink/.git/logs/refs/heads/master","hash":"913a5f712633c7467b8e8f58145144890a37fff5","modified":1559566100826},{"_id":"themes/next/source/lib/quicklink/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1559566100825},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1554132631874},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"792bdf88b78ad7831b0a5ab2a32fffbf2e6b4afc","modified":1554132631877},{"_id":"themes/next/source/lib/three/.git/objects/76/310b5a7e93e66e7d98aaab2960d6354b2288c5","hash":"84de52193b47c83d01eb8800b063ccd83ad42cf9","modified":1554132631839},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-gf.png","hash":"21ac20a6b1ee31f5de6a640e7ac887fa0881e269","modified":1558156405862},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-izumi.png","hash":"f52a5160d82183c9b3f831d0c0eb4994a169cfc7","modified":1558156619679},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-tsumiki.png","hash":"fa3b8c25f642c990566800e6a2d317520c9bcbd2","modified":1558156987789},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-tororo.png","hash":"8cfa5f8d45b934c4e7f5d59da845c1f71f6c82bd","modified":1558156961125},{"_id":"source/photo/images/tianjinzhilv/meijing2.jpg","hash":"c0190f69aff4b0f4e07ff0522f377db57152fa72","modified":1567400765246},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-epsilon2_1.png","hash":"070460b0d9c02c71a30dcfc41eecf277a5d35a12","modified":1558156367920},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-z16.png","hash":"ec8c2ca564e7c76f51efd1dcfd62c7e594b522bc","modified":1558157080763},{"_id":"source/_posts/Hexo-Next添加TagCloud/images/article_tagcloud.gif","hash":"54f2689a9988b27ee666af552178bb0ea5d93614","modified":1557834160403},{"_id":"themes/next/source/lib/bookmark/.git/logs/refs/remotes/origin/HEAD","hash":"9e0af18e8fc935a11f16bd3536b46f56d748323b","modified":1558081028388},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"f00a974d580f60b9c64581476ff4a4b8a3e8a3e9","modified":1557308061072},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/remotes/origin/HEAD","hash":"d899657120186bf291b8ef846a82b3bb3bdbb3d8","modified":1558081238266},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/remotes/origin/HEAD","hash":"1a79db4d84e083f7f724e34bb944feb41d87e5ec","modified":1558424880843},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"fc511c19306ac850beeb6d83ea4eb875f6fe164e","modified":1554132490900},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"a202595c46b688836d0912653e519a292bb1225e","modified":1557719249109},{"_id":"themes/next/source/lib/pdf/.git/logs/refs/remotes/origin/HEAD","hash":"20bbb83bbb185c1dd8f8fd00a901075e0717d69e","modified":1558448799633},{"_id":"themes/next/source/lib/quicklink/.git/logs/refs/remotes/origin/HEAD","hash":"913a5f712633c7467b8e8f58145144890a37fff5","modified":1559566100825},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"792bdf88b78ad7831b0a5ab2a32fffbf2e6b4afc","modified":1554132631874},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haru:02.png","hash":"47a9b0883cd1607bde4fecd9a37ca7346ede5a24","modified":1558156468661},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1554132631890},{"_id":"themes/next/source/lib/pdf/web/viewer.js","hash":"71da2a7cd76abd03af79a38b2b3224d7db59c3d8","modified":1558448799824},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haru:01.png","hash":"2d59d0c7e49a417871b2754e01c5013dd2233974","modified":1558156436257},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-miku.png","hash":"30f2a5e4f5336b925ff1979b986a17a63366c906","modified":1558156706341},{"_id":"themes/next/source/lib/pdf/web/viewer.js.map","hash":"a7ae584397f178eaf0c124e16794979550f15084","modified":1558448799829},{"_id":"themes/next/source/lib/pdf/build/pdf.js","hash":"dd3387e7a0eb66f57b1b99be39d38fb946b2676f","modified":1558448799649},{"_id":"source/_posts/Python-爬虫之糗百笑话/qiubaipachong.gif","hash":"5c3e35dfbab22baf7de143207d8f7315a37ec18a","modified":1572779552393},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-shizuku.png","hash":"6032cfa39b2c6c4c011ab1966db23a657517fcf2","modified":1558156928456},{"_id":"themes/next/source/lib/pdf/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1558448799742},{"_id":"themes/next/source/lib/pdf/build/pdf.js.map","hash":"698ac4d064bc39f6206b210110b91904323e8118","modified":1558448799656},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js","hash":"73bdc1a6a241c81d997e7e18cd759ee81c6e7a95","modified":1558448799659},{"_id":"source/_posts/debug.log","hash":"c7d021e6021dfb3f65b9ec69c3f6966518e8d170","modified":1577520111522},{"_id":"themes/next/source/lib/pdf/build/pdf.worker.js.map","hash":"5e62344fe4f32dbc2c8dfcf5e4fb028fa8799be0","modified":1558448799682},{"_id":"themes/next/source/lib/pdf/.git/objects/pack/pack-c5c83c7062ee61fcc4f772393d054e2cd82a5b64.pack","hash":"506fe78eb0d41015f2b949f12adff9624795818a","modified":1558448799621},{"_id":"themes/next/.git/objects/pack/pack-8d4520b7593b17b4e74eca24f044d15e5425b9cd.pack","hash":"8af702df98934647200ca74e10152ec2241b1c5b","modified":1552801513468},{"_id":"public/calendar.json","hash":"ec2b1b99972e22462680735e82911dbc99a757cd","modified":1594193054277},{"_id":"public/atom.xml","hash":"d69bb5ab2cac7cee7a291d2c872720629addb94a","modified":1594442882665},{"_id":"public/search.xml","hash":"1ad352b502b74e8bcb5ddcd936301d09b2d0c69c","modified":1594442885279},{"_id":"public/baidusitemap.xml","hash":"caa6f900aeac5ef2ff28f80f494bc58046cc837d","modified":1594193056735},{"_id":"public/sitemap.xml","hash":"56b25f895e80b3828a6d2be651580aadca554a98","modified":1594193056736},{"_id":"public/about/index.html","hash":"934887c5243b7c5d7d198b1b462a93b514487175","modified":1594193057146},{"_id":"public/categories/index.html","hash":"471414b07618bd100bcadc85dfe329fc89259fd2","modified":1594193057197},{"_id":"public/messagepad/index.html","hash":"68cd28f099f7e627d7d15102fa5420ff0b05330e","modified":1594193057197},{"_id":"public/photo/index.html","hash":"48f84f12501c1adee034b41b1f3d88f1b456e549","modified":1594193057200},{"_id":"public/tags/index.html","hash":"051a5b9bc8caead58cb841ccf9bad00e934c8972","modified":1594193057200},{"_id":"public/articles/39160/index.html","hash":"17d1a232b5ffb3cdbe1a150bbbf40377c0564b83","modified":1594193057200},{"_id":"public/articles/23692/index.html","hash":"5d8aa9a6da756925d8cc7090c3da95e8804c5f14","modified":1594193057200},{"_id":"public/articles/34145/index.html","hash":"05047d568c26f1c7e22205fbada712c1cf4891d5","modified":1594193057200},{"_id":"public/articles/40314/index.html","hash":"6d4e70f2722727891b1616bfcf0f455ea6ffd8a5","modified":1594193057200},{"_id":"public/articles/60013/index.html","hash":"6e035e456d333864bb60fba7fa3bcc5fb67a5e71","modified":1594193057200},{"_id":"public/articles/9834/index.html","hash":"411782aee65c0e133a62fb586127e2a55ad43d8d","modified":1594193057200},{"_id":"public/articles/24462/index.html","hash":"7aad06841149ac5af100e3b1cdd3282361c2b14d","modified":1594193057200},{"_id":"public/articles/21862/index.html","hash":"14cc6debebb34a65cca621ccadb3c8494e4f33a7","modified":1594193057200},{"_id":"public/articles/33336/index.html","hash":"57107f735d6caa09ab74f0de28a8edd45dc3a885","modified":1594193057200},{"_id":"public/articles/19515/index.html","hash":"e8f7494002f918eae67a7f3bf432320ff3732bbb","modified":1594193057201},{"_id":"public/articles/12867/index.html","hash":"25bb981f8e02e4660a272ee7385839cc209519c6","modified":1594193057201},{"_id":"public/articles/7544/index.html","hash":"e5e1c333c2868232a7941dcb2c76ed27b8d15174","modified":1594193057201},{"_id":"public/articles/30667/index.html","hash":"d9be69e9b6aa38bd43cfbaf30288582a947569a3","modified":1594193057201},{"_id":"public/articles/52265/index.html","hash":"e95e164361730e0ed1500277617e111d9865b84c","modified":1594193057201},{"_id":"public/articles/10512/index.html","hash":"acc3147afb64c6679a36edd3e73eac99b3088a11","modified":1594193057201},{"_id":"public/articles/37692/index.html","hash":"49dc65d79c2acf19919a49e3741a07610c1d7055","modified":1594193057201},{"_id":"public/articles/13168/index.html","hash":"b61afa2dd9d7a36fc73d31d8ac0bc291a4d4ef19","modified":1594193057201},{"_id":"public/articles/35042/index.html","hash":"2dc9e324526d9c7f47202a8015fdcee12372809e","modified":1594193057201},{"_id":"public/articles/43681/index.html","hash":"44fd7184afa0889a0227ac0ba54c0d14d3da01b9","modified":1594193057202},{"_id":"public/articles/17077/index.html","hash":"b93ec5bef6115524930299a0519eab709638ba70","modified":1594193057202},{"_id":"public/articles/32384/index.html","hash":"bb520eb948db07d33e8d57f49aa7e0b1cf8a9d0f","modified":1594193057202},{"_id":"public/articles/43171/index.html","hash":"e29e2549ba59ba2de99ec921ee3201ef6f4b5818","modified":1594193057202},{"_id":"public/articles/65231/index.html","hash":"980b98a28707eb0a27dd8acceceff654a3954579","modified":1594193057202},{"_id":"public/articles/24280/index.html","hash":"f983cb6c10ee089cacfc03287973da722c756dbb","modified":1594193057202},{"_id":"public/articles/17252/index.html","hash":"75ff77746571ddbeab60129beda1eb60941b0c9b","modified":1594193057202},{"_id":"public/articles/62041/index.html","hash":"e0461c047817e8bc3efa9b6f1a998f32ed5a3b2e","modified":1594193057202},{"_id":"public/articles/30296/index.html","hash":"cb4252278858a7afd38ac9164d5ab509f9fe880a","modified":1594193057202},{"_id":"public/articles/8059/index.html","hash":"c54790e9bf3c914ca573cfa267ddf347b8daec56","modified":1594193057202},{"_id":"public/articles/28340/index.html","hash":"b120a4ccfdc37aba7fd9744badcad41db2395043","modified":1594193057203},{"_id":"public/articles/64874/index.html","hash":"d6e3e9fa68cf86bdbb5cb9eeb43a411edf71a968","modified":1594193057203},{"_id":"public/articles/22143/index.html","hash":"4f5b6ddd78f7ffc91fab6327ff2b04c67d8ad4a2","modified":1594193057203},{"_id":"public/articles/46739/index.html","hash":"a406a767ea5805f904986b9585e31483abd7f0ed","modified":1594193057203},{"_id":"public/articles/9458/index.html","hash":"9b4e86c4a268649936f05c642b2d3586f5214bba","modified":1594193057203},{"_id":"public/articles/3035/index.html","hash":"ca88decd3e9095027fcc793e739336c66510c5d7","modified":1594193057203},{"_id":"public/articles/53227/index.html","hash":"22faf76157d07f91551aca0f29aa3126753ef69e","modified":1594193057203},{"_id":"public/articles/41680/index.html","hash":"82c083804a5ba37f055b9241ba6bc627b2428d28","modified":1594193057203},{"_id":"public/articles/24640/index.html","hash":"984d9f5d7d99a7fda27310a7e09312391e5359f6","modified":1594193057203},{"_id":"public/articles/5369/index.html","hash":"2d426e5a479d84f3eec4a2cc6dd16bbfaa6c966c","modified":1594193057203},{"_id":"public/articles/58192/index.html","hash":"89804b81b863d617f08e551f253ef2f4bf8866b8","modified":1594193057203},{"_id":"public/articles/21353/index.html","hash":"5f787ce1c21462d8067a4a37ac3f271c4071dad4","modified":1594193057204},{"_id":"public/articles/34936/index.html","hash":"0e619c8f68a8143796ba75727b870ed373f6ea8f","modified":1594193057204},{"_id":"public/articles/29188/index.html","hash":"a02a5549cb96cb66bec6f0c3213bc8620021e0a4","modified":1594193057204},{"_id":"public/articles/23626/index.html","hash":"9660ff174feb689831f1b6bb81652e3d3a6ed6b4","modified":1594193057205},{"_id":"public/articles/44359/index.html","hash":"977e3261a1dedd2ae2f60b2ebae18c69d7ee3c8a","modified":1594193057205},{"_id":"public/articles/25456/index.html","hash":"ba3df0687179ef7b25ed787d2058f4fab232afb7","modified":1594193057205},{"_id":"public/articles/15926/index.html","hash":"673327296a713c10536ccfe9e6f2d1f88bd3d91e","modified":1594193057205},{"_id":"public/articles/43145/index.html","hash":"4ac961b40b4ab61fa77761f9de01162b93a93edd","modified":1594193057205},{"_id":"public/articles/35151/index.html","hash":"49640e1996c8be8b9bc03dedb2ca261eaaa9af67","modified":1594193057205},{"_id":"public/articles/21643/index.html","hash":"de654070755741d772d312d100870be81645edf4","modified":1594193057205},{"_id":"public/articles/34296/index.html","hash":"f707cb4067eb096be40299ac3c93487ed046b754","modified":1594193057205},{"_id":"public/articles/13876/index.html","hash":"dd57058ed642026f29a9f08ddccb6e60b4c783f1","modified":1594193057205},{"_id":"public/articles/16168/index.html","hash":"68ae122d6380e7488f91a61a622593ae41719db5","modified":1594193057206},{"_id":"public/articles/43239/index.html","hash":"59451edbad4341b00688a68e49781bde231c51d3","modified":1594193057206},{"_id":"public/articles/62177/index.html","hash":"e6a6f04ac4eb8dd8d36ef86f98ce4262d1ac635b","modified":1594193057206},{"_id":"public/articles/42646/index.html","hash":"7a131c713eb31c119b33142a896989675645082b","modified":1594193057206},{"_id":"public/articles/36954/index.html","hash":"04e75474bc1000638027f6a8248f6bf70dee7f55","modified":1594193057206},{"_id":"public/articles/18454/index.html","hash":"d03e8d7d299931b6dc6b759f76abae7c6348f643","modified":1594193057206},{"_id":"public/articles/18391/index.html","hash":"e6e424b0c5c11908c817dce86925510b786a5994","modified":1594193057206},{"_id":"public/articles/28748/index.html","hash":"bc91c3c171bd80d70907d33607f9535198226ce4","modified":1594193057206},{"_id":"public/articles/37795/index.html","hash":"7b06e59a2050f305d8b9ba3ed63e24765231ea8b","modified":1594193057206},{"_id":"public/articles/25933/index.html","hash":"738d4e7de5f65c0666acfa66a8fda6a329bee47a","modified":1594193057207},{"_id":"public/articles/26442/index.html","hash":"9d0c25ab617b547ecbd0c550385b0897d54d8150","modified":1594193057207},{"_id":"public/articles/4445/index.html","hash":"30302170c28e4951ee85756290934cca829a6506","modified":1594193057207},{"_id":"public/articles/8728/index.html","hash":"979276f63128359e02a0b3312f0748119edcb83c","modified":1594193057207},{"_id":"public/articles/7953/index.html","hash":"92e953ce70b5c7ccd86ca10a52119e7bdf3271d8","modified":1594193057207},{"_id":"public/articles/41065/index.html","hash":"025ec6b73380573d98de7875bf5755f27cf2c82d","modified":1594193057207},{"_id":"public/articles/58065/index.html","hash":"e5cf63a6f8fc4c2b67fe60d4be80554929075acb","modified":1594193057207},{"_id":"public/articles/14093/index.html","hash":"317eaaaeceaa27d086d3d221b8a8d691b5548440","modified":1594193057207},{"_id":"public/articles/16195/index.html","hash":"fa3f67e4016c6a6c997421e24cf998cd70a41363","modified":1594193057207},{"_id":"public/articles/31753/index.html","hash":"81aa790fc47aaa03418124d52480ebae17b92d07","modified":1594193057207},{"_id":"public/articles/46750/index.html","hash":"92fe1931c2e1a8c9e06c18a9422b38b3589bc0c4","modified":1594193057207},{"_id":"public/articles/3412/index.html","hash":"193b3d603af96e1ee6bc02520192aaa0e4f5d255","modified":1594193057208},{"_id":"public/articles/33202/index.html","hash":"579c8e757fef3d27fbf153b0457190bb9f680be1","modified":1594193057208},{"_id":"public/articles/39009/index.html","hash":"511c24d07ec127ee11bbe70f14f4e920b49c5447","modified":1594193057208},{"_id":"public/articles/57737/index.html","hash":"9eb309ee491c90e18cc890104fbb4825b11593e6","modified":1594193057208},{"_id":"public/articles/59864/index.html","hash":"db0388fd793573983d13f9563d12836278c8279f","modified":1594193057208},{"_id":"public/articles/12618/index.html","hash":"ee078b97c1d4f9a4b8053fe78bf86b6d41e93e4b","modified":1594193057208},{"_id":"public/articles/45934/index.html","hash":"596fccbc35b151579e4888f104881c39f2897f91","modified":1594193057208},{"_id":"public/articles/18602/index.html","hash":"9af9ecb7a81ed8a05d1d59afe8af4d8ef7307e4c","modified":1594193057208},{"_id":"public/articles/53966/index.html","hash":"7ea0307d7f753389d621c28f85a7c6c158ca61e7","modified":1594193057208},{"_id":"public/articles/36812/index.html","hash":"07f6d814fe46d59cb14ab8f3fe250413b3ed705b","modified":1594193057208},{"_id":"public/articles/9742/index.html","hash":"278f665458357524211440f6ebeb2a48ba215b04","modified":1594193057209},{"_id":"public/articles/17366/index.html","hash":"5c0e2bc740e5507eb3e53e39e566abf39f38f798","modified":1594193057209},{"_id":"public/articles/31296/index.html","hash":"d3ee1dd39d115376dbd3862db28ac07a46e15664","modified":1594193057209},{"_id":"public/articles/39125/index.html","hash":"65df14d33d7b6b6869126d104a3bfcab31f838c7","modified":1594193057209},{"_id":"public/articles/9420/index.html","hash":"1f508d83fd613861083809044d30f5a2643109df","modified":1594193057209},{"_id":"public/articles/22308/index.html","hash":"7c1982e8de7480b89a3848428ab9d4820922dd8a","modified":1594193057209},{"_id":"public/articles/35054/index.html","hash":"a449404d9b18540791c656657d15fccbf42f07f2","modified":1594193057209},{"_id":"public/articles/15891/index.html","hash":"d13306df5fbe3d50668f04fb188bc036597138da","modified":1594193057209},{"_id":"public/articles/56827/index.html","hash":"692febf5b8e1a6c8a33bf821fcd3cb66f44c436f","modified":1594193057209},{"_id":"public/articles/29844/index.html","hash":"5c8170fe9c711cab254c81ccddfa794407f4d22b","modified":1594193057209},{"_id":"public/articles/42764/index.html","hash":"90e668d07c7e50789e9712047f38cca375fa29bb","modified":1594193057210},{"_id":"public/articles/22857/index.html","hash":"e0bc31767d7fd6b7566c342a7edb93a6af8e818c","modified":1594193057210},{"_id":"public/articles/4591/index.html","hash":"ed3f2b6f7f22f4219bb2287aadcac2391b0297bd","modified":1594193057210},{"_id":"public/articles/36621/index.html","hash":"166f79f1865056ae7466db983fce3f5403b7531a","modified":1594193057210},{"_id":"public/articles/61166/index.html","hash":"1c6e199f28b9d2f30591b9667b015eb3c10932c3","modified":1594193057210},{"_id":"public/categories/杂七杂八/index.html","hash":"85094173a2dde175c1094300dab13b092561845a","modified":1594193057210},{"_id":"public/categories/大学/index.html","hash":"02b2cae54725292968e218e5d9ea144e332b55c1","modified":1594193057210},{"_id":"public/categories/数据库/index.html","hash":"1f901e1355b87fac7c09e8166b274fc18f56ef5d","modified":1594193057210},{"_id":"public/categories/娱乐/index.html","hash":"2acf1fdc25ad07adb6f80b0e2efb6d12c7423751","modified":1594193057210},{"_id":"public/categories/节日/index.html","hash":"5dd0bcd82224e2c4c2589dd6d39c489342b84105","modified":1594193057210},{"_id":"public/categories/公务员/index.html","hash":"b853fd59925a1541e71df8d1eb4dc2d70892b7c7","modified":1594193057210},{"_id":"public/categories/Hexo/index.html","hash":"de736f1544b1263d0f298b7800ce812f3c1c66a4","modified":1594193057210},{"_id":"public/categories/Hexo/page/2/index.html","hash":"ff3b013087a2eb258fcd199650502e300048676f","modified":1594193057211},{"_id":"public/categories/Hexo/page/3/index.html","hash":"71e0f5f817549290d3413778a70c3629a36ffbfe","modified":1594193057211},{"_id":"public/categories/Hexo/page/4/index.html","hash":"96511bc944aa1c5e1475b45b7bffdefffa243bbb","modified":1594193057211},{"_id":"public/categories/Hadoop/index.html","hash":"79751df57e7731b14ed4d2cecc7e6c39fd62bea8","modified":1594193057211},{"_id":"public/categories/seo优化/index.html","hash":"9e83f54ff056e7afb295114237155206c6a9e96b","modified":1594193057211},{"_id":"public/categories/前端/index.html","hash":"65ac76da7130c83c06bd99ad89832cbb8c169799","modified":1594193057211},{"_id":"public/categories/LDAP/index.html","hash":"5f78dd07f86b8fad1178e43fa80f6911d75b4484","modified":1594193057211},{"_id":"public/categories/Python/index.html","hash":"81f7f4014401af4fc7f245629c58d0c03556cbe0","modified":1594193057211},{"_id":"public/categories/Python/page/2/index.html","hash":"12d2b061d879cbe4ac66975ab39fcdb0cb89d90c","modified":1594193057211},{"_id":"public/categories/Python/page/3/index.html","hash":"e825437f76a6a31c59bd802479b0902c2e5a0f13","modified":1594193057211},{"_id":"public/categories/编译器/index.html","hash":"1318ea046c41072644e1495cb87c9d7a05d825aa","modified":1594193057212},{"_id":"public/categories/Linux/index.html","hash":"91dffc9ec191afbee18279835dd3d1ac82fdf6b8","modified":1594193057212},{"_id":"public/categories/Linux/page/2/index.html","hash":"8f156fba3fd9736e015bdaf8809ac06af25dbc25","modified":1594193057212},{"_id":"public/categories/生活/index.html","hash":"3b63670e415349ba2d479ce043e0ee262ec1850c","modified":1594193057212},{"_id":"public/categories/影视说/index.html","hash":"bdb78e762ed13f993df2dd7ac756eed2fe76032b","modified":1594193057212},{"_id":"public/categories/ArcGIS/index.html","hash":"b60160b3c0b7049be53078ace43c812cde013fff","modified":1594193057212},{"_id":"public/categories/服务器/index.html","hash":"0667b0452d4650cafee86452209dabd6761ef412","modified":1594193057212},{"_id":"public/categories/工具集/index.html","hash":"161561b3540b3332a47a3b690df9707e056d519d","modified":1594193057212},{"_id":"public/categories/旅行记/index.html","hash":"83f59296445fb99336efad2dca1764c08704fbad","modified":1594193057212},{"_id":"public/categories/协议类/index.html","hash":"e01f9e8cfb165b3f9de2b0c87a89a356a8fbacd9","modified":1594193057213},{"_id":"public/categories/不明类别/index.html","hash":"1be5da4af4ddb1b928984a78af20b564940ca7a3","modified":1594193057213},{"_id":"public/categories/Qunar项目/index.html","hash":"4737c08aecb2223e1441fec97484ffb654d43803","modified":1594193057213},{"_id":"public/index.html","hash":"4e50b14aba1ad13b131cf1d1f14c2bacffc73e7c","modified":1594442885425},{"_id":"public/page/2/index.html","hash":"681b359c6a8695a42cd9a1c2da1bf1d8d9aac80d","modified":1594193057213},{"_id":"public/page/3/index.html","hash":"a1034240a95eeb4d8ff4b38b406906af9c6c3c45","modified":1594193057213},{"_id":"public/page/4/index.html","hash":"4472848537a22d373464e9b7365b71b1f7e25b94","modified":1594193057213},{"_id":"public/page/5/index.html","hash":"4cb416b34f1fdee4db529c5b12b29da232e7092a","modified":1594193057213},{"_id":"public/page/6/index.html","hash":"2dcd863d16e8eb26add2f77e532207d204eec000","modified":1594193057213},{"_id":"public/page/7/index.html","hash":"5b2f662b65fb0f3546fc3a248116b75781a2f99d","modified":1594193057213},{"_id":"public/page/8/index.html","hash":"aae39ff7e060ee5690adfdec79330271c28e39da","modified":1594193057214},{"_id":"public/page/9/index.html","hash":"4aa67b4e257edb10981f6284436866bfd773fd30","modified":1594193057214},{"_id":"public/page/10/index.html","hash":"56dc49216a79db9e567cea4a4799d6fc02dfa39b","modified":1594193057214},{"_id":"public/archives/index.html","hash":"7cbbc1c99871b04c0112047abe19d8c43a83578f","modified":1594193057214},{"_id":"public/archives/page/2/index.html","hash":"d4c80057e085f974f22d9a7cd2cbb8d1d4986a34","modified":1594193057214},{"_id":"public/archives/page/3/index.html","hash":"56cce54e8255a7b22226ee583b3c06b05c8b7461","modified":1594193057214},{"_id":"public/archives/page/4/index.html","hash":"349bda5fb4b8b12ca3841a8d5130a3aa5e950de5","modified":1594193057214},{"_id":"public/archives/page/5/index.html","hash":"a8f67b3324f60efdc9beec7992d3eaa94dc06b34","modified":1594193057214},{"_id":"public/archives/page/6/index.html","hash":"c3a3d6c63016bac3e6bc7be672be57dbc4f5daf2","modified":1594193057214},{"_id":"public/archives/page/7/index.html","hash":"f5bb61e5c99126b499f980679a9b431ef428f4c4","modified":1594193057215},{"_id":"public/archives/page/8/index.html","hash":"02e944528aaa2b8f71ab944b14f2411211f86049","modified":1594193057215},{"_id":"public/archives/page/9/index.html","hash":"d9fed933f715371e444ef38b13e2c53667631edc","modified":1594193057215},{"_id":"public/archives/page/10/index.html","hash":"d5d2a876c7326ce397714b44381630663286de81","modified":1594193057215},{"_id":"public/archives/page/11/index.html","hash":"56e49aa9b6f0d428644819848c438982069e9310","modified":1594193057215},{"_id":"public/archives/page/12/index.html","hash":"a484b4d35f9a6bb04802faf2e44406089936bf40","modified":1594193057215},{"_id":"public/archives/2015/index.html","hash":"6cc673fa3a6655fda18f957a67734d4628686f89","modified":1594193057215},{"_id":"public/archives/2015/10/index.html","hash":"50e600169cec9e1d575ecf77b4c828d9c0ae33e5","modified":1594193057215},{"_id":"public/archives/2016/index.html","hash":"a6570c045323b8590df3a95bf42b437dbf6f0d03","modified":1594193057215},{"_id":"public/archives/2016/09/index.html","hash":"3cc1977e5b7301445e650760d5c7753caa124bc6","modified":1594193057215},{"_id":"public/archives/2017/index.html","hash":"2b6c111d57defe466eb5688cf999d7ab3cc55474","modified":1594193057215},{"_id":"public/archives/2017/05/index.html","hash":"05fb42dc7cb5e69d67d2d44f28f9586b82a2b31a","modified":1594193057216},{"_id":"public/archives/2017/06/index.html","hash":"bc59dbbee4a4820fb4d0e362717f18645ceede1c","modified":1594193057216},{"_id":"public/archives/2017/07/index.html","hash":"68ce4da3e675f1f6feb1d92473ca1c42af1779d4","modified":1594193057216},{"_id":"public/archives/2017/10/index.html","hash":"e3fa8a2ee76ebccc0012a9962295b3038be05e5b","modified":1594193057216},{"_id":"public/archives/2017/12/index.html","hash":"06dd4a687583094936ffb5e0c05c81eef90a8fc3","modified":1594193057216},{"_id":"public/archives/2018/index.html","hash":"c43316df5f929e17c6be0628fbce5cfc6cefe091","modified":1594193057216},{"_id":"public/archives/2018/page/2/index.html","hash":"eb24e6c27538078d298f8c05d62a83e90ef72ef1","modified":1594193057216},{"_id":"public/archives/2018/page/3/index.html","hash":"5cf5d8fd1c90041338d7d49497722363ec58c85c","modified":1594193057216},{"_id":"public/archives/2018/page/4/index.html","hash":"2a45401abb87827e629829934cae0ebc786f0714","modified":1594193057216},{"_id":"public/archives/2018/03/index.html","hash":"b1dd6d88a4a9543bbc143ddb8e638d089a3f14ed","modified":1594193057216},{"_id":"public/archives/2018/08/index.html","hash":"a571903c5c26f9ffcc8e7895c03c36a13d41c2c6","modified":1594193057217},{"_id":"public/archives/2018/09/index.html","hash":"60d544f9c879fe816a9d1c43e9d765edfe4b893c","modified":1594193057217},{"_id":"public/archives/2018/10/index.html","hash":"4a7c02ad863b086e04f8e07550aa4379075824bc","modified":1594193057217},{"_id":"public/archives/2018/11/index.html","hash":"972f672947b843ac63dfc5b3fc6918be8adec846","modified":1594193057217},{"_id":"public/archives/2019/index.html","hash":"7682858c2d6931497aa9470ebd9c5e726829c583","modified":1594193057217},{"_id":"public/archives/2018/12/index.html","hash":"36f55e92b9ea6cd8ec5fbc2b17f58fc0503dd2de","modified":1594193057217},{"_id":"public/archives/2019/page/2/index.html","hash":"428fcd160cecd96d7d9faa119312baf3add3e385","modified":1594193057217},{"_id":"public/archives/2019/page/3/index.html","hash":"6ecdc867374b513a33169f664096292c5cfaf997","modified":1594193057217},{"_id":"public/archives/2019/page/4/index.html","hash":"27d61af0e7d58b13ca4e409923044d0baeb99e50","modified":1594193057217},{"_id":"public/archives/2019/page/5/index.html","hash":"06d805e225afb61c54ddce124d83a7744b67a705","modified":1594193057217},{"_id":"public/archives/2019/page/6/index.html","hash":"0b82a059bf87831035841778f4ebf73efb7d7069","modified":1594193057217},{"_id":"public/archives/2019/page/7/index.html","hash":"193ce184a71ea9aed978100f73d1f497aa15f2ad","modified":1594193057218},{"_id":"public/archives/2019/01/index.html","hash":"5d0f29079c5f5691c5fa5f05ebc3f24810a266a2","modified":1594193057218},{"_id":"public/archives/2019/03/index.html","hash":"7a1968b9b52959de0e7b989a50d7cae3c91ff6ca","modified":1594193057221},{"_id":"public/archives/2019/04/index.html","hash":"e06352aafd930b86a0430ab8be493e7876fdc7ad","modified":1594193057221},{"_id":"public/archives/2019/05/index.html","hash":"7d55551efc1d9af28e9f22d87b149c445c9bf22d","modified":1594193057221},{"_id":"public/archives/2019/05/page/2/index.html","hash":"433306e0e2f5aa3db45220a80cc18e3c9a5a22c7","modified":1594193057221},{"_id":"public/archives/2019/06/index.html","hash":"2cc6142caecab62de8da7993af3be33bc4178b77","modified":1594193057222},{"_id":"public/archives/2019/07/index.html","hash":"78252f0866ffeaa79f15902ab766696780abc2bd","modified":1594193057222},{"_id":"public/archives/2019/08/index.html","hash":"45827bdc898102be072e98185511186c436f43be","modified":1594193057222},{"_id":"public/archives/2019/09/index.html","hash":"dce81bac356fca7959c9fcfcf645b8184b33909e","modified":1594193057222},{"_id":"public/archives/2019/10/index.html","hash":"53f39f813091d66d14b42b4a9ba3641dd8468604","modified":1594193057222},{"_id":"public/archives/2019/11/index.html","hash":"d3dfd7f12d559ca2c459f0663b9ea2d415756737","modified":1594193057222},{"_id":"public/archives/2019/12/index.html","hash":"0033640d682ea9913c422abca3a86a3e59a0d2fc","modified":1594193057222},{"_id":"public/archives/2019/12/page/2/index.html","hash":"3139aa55866988448bc64f9aaf7ed55dc9ce9d08","modified":1594193057222},{"_id":"public/archives/2020/index.html","hash":"7372badbfc96feb1713a3da2ab1bebdb23cc17d3","modified":1594193057222},{"_id":"public/archives/2020/01/index.html","hash":"329e1f2db6e12893692a654d039131d6526e9d06","modified":1594193057222},{"_id":"public/archives/2020/page/2/index.html","hash":"59ad27ae238b21c99942cd08c1509299f146699d","modified":1594193057222},{"_id":"public/archives/2020/02/index.html","hash":"edbc627cc5ac37ecdc1f3a31e9fe98d85256b6dc","modified":1594193057223},{"_id":"public/archives/2020/04/index.html","hash":"62499c6ec53a8b33a5831ce237fe20975c2c153d","modified":1594193057223},{"_id":"public/archives/2020/03/index.html","hash":"11af0132765683c99e256e6514977a5a7e4eff56","modified":1594193057223},{"_id":"public/archives/2020/05/index.html","hash":"4ab8908ffdec1d9db2b22167a533df8b0a906b9e","modified":1594193057223},{"_id":"public/tags/证书/index.html","hash":"864b259ed711106edbdb54b6b35696cd45dc2e5d","modified":1594193057223},{"_id":"public/tags/回忆录/index.html","hash":"08c413331166aab24c9b09fd8e0f4ac6623a4c51","modified":1594193057223},{"_id":"public/tags/Mysql/index.html","hash":"0704df7b05b61bbcc79ce794dfb0164c0b457f83","modified":1594193057223},{"_id":"public/tags/Postgresql/index.html","hash":"0684ff582a623218c78b6541975002bd94e01b09","modified":1594193057223},{"_id":"public/tags/看图笑话/index.html","hash":"93b3e1704366e781823a2cecde3ae7e6ce5ba282","modified":1594193057223},{"_id":"public/tags/纯文笑话/index.html","hash":"f4d3acd1abdfcc8d48be3e1814fd29693cf6577d","modified":1594193057223},{"_id":"public/tags/中国节/index.html","hash":"306369c08623a5031ccfb8a5fe38f4ed4a2277f3","modified":1594193057223},{"_id":"public/tags/节日/index.html","hash":"01cbb34763e706bc4f495546f6de1b2b360f9f6b","modified":1594193057223},{"_id":"public/tags/西方节/index.html","hash":"d819a9632fe57c946dbd38b51f0f9de87fa007f9","modified":1594193057224},{"_id":"public/tags/国际节/index.html","hash":"debf36a5fa95f6c95cb86f63de1b4fb4929bf921","modified":1594193057224},{"_id":"public/tags/历史/index.html","hash":"63e5d6f09311e1c81993a18cdcdd0ed0e49ae286","modified":1594193057224},{"_id":"public/tags/Hexo/index.html","hash":"ac25c2b3c9793ab015060642cae8e50332452506","modified":1594193057224},{"_id":"public/tags/Hexo/page/2/index.html","hash":"1d68fc8c8aeb912fef459409fb23c8d6ca4e26b1","modified":1594193057224},{"_id":"public/tags/Hexo/page/3/index.html","hash":"023e5406337a3378f6a39fdb7cef3753194ce381","modified":1594193057224},{"_id":"public/tags/Hexo/page/4/index.html","hash":"fffaf37f64cac4024274c2b6b766d104e0d66884","modified":1594193057224},{"_id":"public/tags/Hexo美化/index.html","hash":"f7de39b5944684ed2b3c80033d7c0310878e2168","modified":1594193057224},{"_id":"public/tags/Hexo美化/page/2/index.html","hash":"b326481e9f587394b2210e4e69bf153e54d83eb5","modified":1594193057224},{"_id":"public/tags/Python/index.html","hash":"a018704c9063c78573978b59bd5eca721fed4e1d","modified":1594193057224},{"_id":"public/tags/Python/page/2/index.html","hash":"9291ca6f5aae6594019297f60c2513586b4679a1","modified":1594193057224},{"_id":"public/tags/前端/index.html","hash":"9762ea88b3fb12e5bd2fd8d41b8bb5f3c7a21b0f","modified":1594193057224},{"_id":"public/tags/Hadoop/index.html","hash":"d3729cf8cedf4e20e955bf841d40d81783232c55","modified":1594193057225},{"_id":"public/tags/Python/page/3/index.html","hash":"c60419929671f202a75c0d014cd4f27cdff0104a","modified":1594193057225},{"_id":"public/tags/Ubuntu/index.html","hash":"8bb35b17c390c2c97c499f7067b27577db7da1fe","modified":1594193057225},{"_id":"public/tags/Python程序篇/index.html","hash":"d6d81b71a4be4d48e44b74eed816955f45ad2381","modified":1594193057226},{"_id":"public/tags/Python程序篇/page/2/index.html","hash":"aaed35ccbf544e9d7ff5081a14b3b9cded397630","modified":1594193057226},{"_id":"public/tags/Hexo插件/index.html","hash":"8a97c91115b661a53b520a29c69d2be8852e0ce2","modified":1594193057226},{"_id":"public/tags/Hexo插件/page/2/index.html","hash":"58f4e7c863056a3631da83fe3e473b192c959575","modified":1594193057226},{"_id":"public/tags/seo优化/index.html","hash":"c55826c9833e2bef9369091d8fcc4f3376d74ac9","modified":1594193057226},{"_id":"public/tags/LDAP/index.html","hash":"7eaca06f1c0e4efb7ae3b047a8c595538cdef0b7","modified":1594193057226},{"_id":"public/tags/Atom/index.html","hash":"d50cf54c11852dcd22de369dd59b75a14871cdaf","modified":1594193057226},{"_id":"public/tags/Linux/index.html","hash":"2114d32e93b83282349203c01e3919925452b3d8","modified":1594193057226},{"_id":"public/tags/编译器/index.html","hash":"1ceccd1846d74d17c23dea2f9a61b864051d500c","modified":1594193057226},{"_id":"public/tags/Linux/page/2/index.html","hash":"fd29693a461bf9f2ebff15bf92c7ecc38f7160e7","modified":1594193057226},{"_id":"public/tags/Linux基础篇/index.html","hash":"98383d162e690698ea296deb81cf85e4fa1d6a8f","modified":1594193057226},{"_id":"public/tags/Nginx/index.html","hash":"cfdc770e26ee9a0358a24b4c3c7befa811119aab","modified":1594193057226},{"_id":"public/tags/Linux增强篇/index.html","hash":"6a4f391582a30d61c2146aff4487021651369a19","modified":1594193057226},{"_id":"public/tags/Linux番外篇/index.html","hash":"e2b35181f725383717e24ce8a8b77fb6c4a367da","modified":1594193057227},{"_id":"public/tags/英语学习/index.html","hash":"8ffcfa1e8f009ef77aa1136e554987272e46822f","modified":1594193057227},{"_id":"public/tags/生活/index.html","hash":"26568734cc1574137fa18f519d44d18f815f6ee0","modified":1594193057227},{"_id":"public/tags/电视剧/index.html","hash":"f43e9bb9e1ec4e71cea7a57de12b189251beb35b","modified":1594193057227},{"_id":"public/tags/烧脑剧/index.html","hash":"2324ec6a58dd770054c50155b29c2632c6697595","modified":1594193057227},{"_id":"public/tags/动漫/index.html","hash":"eff265af64e6cfe3ce672f1dd49b3b9f47d10cee","modified":1594193057227},{"_id":"public/tags/抓娃娃/index.html","hash":"650aaa1c54bfb517dc6d8c2028e2a90d89fc249a","modified":1594193057227},{"_id":"public/tags/美国大片/index.html","hash":"2bde8e75dd9239fbe3261036ea1fcb757caa4eec","modified":1594193057227},{"_id":"public/tags/Github/index.html","hash":"b6b7cadb0dee5c1c72b51d4da862b42a5995399d","modified":1594193057227},{"_id":"public/tags/Python基础篇/index.html","hash":"cde56dc83397612f47b2896227c7c5bdb0f85054","modified":1594193057227},{"_id":"public/tags/Python包/index.html","hash":"d84193594f1788b084c36850a482d2e595001d1b","modified":1594193057228},{"_id":"public/tags/爬虫/index.html","hash":"d0468c4ddef4850953b60803eb9c8054385a95d4","modified":1594193057228},{"_id":"public/tags/ArcGIS/index.html","hash":"0e0e3f0e4c5f7a24cac087eb63575edbc44bec28","modified":1594193057228},{"_id":"public/tags/爬虫系列/index.html","hash":"1479738553cf8708b881f75dfcc9fd92ecaa2ef8","modified":1594193057228},{"_id":"public/tags/协议类/index.html","hash":"075a89dee649796c932d3161568f94b9065a0248","modified":1594193057228},{"_id":"public/tags/SSH/index.html","hash":"f62c936d3c04f2471beca4599c2551337b219e08","modified":1594193057229},{"_id":"public/tags/Mac/index.html","hash":"8ea6f28139a808de41aa6c0b4a576f237608e238","modified":1594193057229},{"_id":"public/tags/WIKI/index.html","hash":"47877ea2082d4f4124f4defa8763bc7a25d5c7fd","modified":1594193057229},{"_id":"public/tags/运维工具/index.html","hash":"1b8ded2359c5335b9eb52cc4ee7548d5d18450da","modified":1594193057229},{"_id":"public/tags/旅行记/index.html","hash":"fcf9e9a7ef7ac0eeb710418a2a7e5f1ea4af9601","modified":1594193057229},{"_id":"public/tags/美食/index.html","hash":"0b2853a897dc551abea8c71d98af6ba13c76e7be","modified":1594193057229},{"_id":"public/tags/项目/index.html","hash":"6c4b6aa2b8285e0d3d03a3753e0f44de5e787886","modified":1594193057229},{"_id":"public/tags/ffmpeg/index.html","hash":"3906adc81cd91845055bf41beffbcb7e88279de5","modified":1594193057230},{"_id":"public/tags/etherpad/index.html","hash":"c52d24a49ca5a3494057e17a502def49a2ae18cd","modified":1594193057230},{"_id":"public/lib/blog-encrypt.js","hash":"24b097141e36e24d93a30894eecb94307185141d","modified":1594193057230},{"_id":"public/articles/14802/index.html","hash":"5081d15db897a8910423d4abcaa2babe65187b05","modified":1594442885423},{"_id":"public/articles/16635/index.html","hash":"ecd42e8ce22d9b6971f04af5b1833665768a806d","modified":1594193057238},{"_id":"public/articles/12268/index.html","hash":"eed0bd795959b5b481ba259dc3c4ba5f63b3f556","modified":1594193057238},{"_id":"public/archives/page/13/index.html","hash":"560d39d8c95615cd97901ffd68748a078a546561","modified":1594193057238},{"_id":"public/archives/2020/06/index.html","hash":"bf25ba3d7d9c64d4fb730e23b4a9b025faa13477","modified":1594193057239},{"_id":"public/archives/2020/07/index.html","hash":"51db815c1413780ef8e97bd20949f281b0b01bb2","modified":1594193057239},{"_id":"public/live2dw/assets/package.json","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1594193057239},{"_id":"public/live2dw/assets/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f02.exp.json","hash":"461fe8077a2289e309ffc7edf561501a7edcce88","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f03.exp.json","hash":"a65382a1a8d8f7034eac2c811b9f122a8b3f1403","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f04.exp.json","hash":"3156286d7e0281e15c637a889aa415eef3224fa7","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f05.exp.json","hash":"1123786fb0bb9c31f7d30cf14b2299f898cdc207","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f06.exp.json","hash":"d962889ec7c563d818ddb5ab1e58cd337b5e62db","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f07.exp.json","hash":"d55366c9bcf382e8273cf1803f65cdb8a4a0d336","modified":1594193057251},{"_id":"public/live2dw/assets/assets/exp/f08.exp.json","hash":"4a9ba4b11d9797f59c7b043d2b807ed8253f3cc4","modified":1594193057251},{"_id":"public/live2dw/assets/assets/haru02.model.json","hash":"ffed6d4654deeb772e389213f84701940ee0126f","modified":1594193057251},{"_id":"public/live2dw/assets/assets/haru02.physics.json","hash":"490ab4735f5cddca766344468591c0eb90cda1f7","modified":1594193057251},{"_id":"public/live2dw/assets/assets/haru02.pose.json","hash":"4fb902065bd3f309fa0029fe2505424851fd489f","modified":1594193057251},{"_id":"public/css/blog-encrypt.css","hash":"262922c3f49cb8cca7b3ea982c49b57de2af53d6","modified":1594193057252},{"_id":"public/live2dw/assets/assets/moc/haru02.1024/texture_00.png","hash":"f3c4103630bbf0660f793f90a14b51fdb7dfb7ea","modified":1594193057252},{"_id":"public/live2dw/assets/assets/mtn/idle_01.mtn","hash":"035c196f276ed177239ea05eeaece68b0fda2935","modified":1594193057252},{"_id":"public/live2dw/assets/assets/mtn/idle_00.mtn","hash":"bbaaafe4de159dd4fb73d137d283c640d3fede53","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/idle_02.mtn","hash":"82291b3b78339d52f559a65d02b78e0b30180503","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/flickHead_00.mtn","hash":"66577f6dde2bec905930fba0dd5f06de939c8f1e","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/pinchIn_00.mtn","hash":"ed792ed8226aa5a3e5bf059285b2c95855c11303","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/pinchOut_00.mtn","hash":"db831991287e3a4724578f068a68e48168081d5a","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/shake_00.mtn","hash":"7e938c4abe83273766c4562a571301811dea1de6","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_00.mtn","hash":"4041b2f1f2f4a84454180f9dab14e46d99e135c0","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_01.mtn","hash":"91fbfe1870f7a0a5f5fdb87c213c41b2a8cb5648","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_04.mtn","hash":"557811c5f4ddbd393542366ef95794b19fc60387","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_02.mtn","hash":"e93a2163cbb85525338e11a520e317329b11fb65","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_03.mtn","hash":"fcd573576112ad5f4e4b7dc0b750de79f150f971","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_05.mtn","hash":"5f48e50e938f98636519c370745a39b921907719","modified":1594193057253},{"_id":"public/live2dw/assets/assets/mtn/tapBody_07.mtn","hash":"d299747aaf27377d552ef1f8b4fce9871a65c37d","modified":1594193057254},{"_id":"public/live2dw/assets/assets/mtn/tapBody_08.mtn","hash":"64a03a904d701039bf81e1296ee79537c2e8800e","modified":1594193057254},{"_id":"public/live2dw/assets/assets/mtn/tapBody_09.mtn","hash":"4f50c17dcf352995e51a4d462b9ca7a9e9197d5c","modified":1594193057254},{"_id":"public/live2dw/assets/assets/mtn/tapBody_06.mtn","hash":"3d06ac66c04eb12c64d36551dd85389f0b0ee51f","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/flickHead_00.mp3","hash":"0b447e7e38eb20f3f7e8ba2a5ea5f521f6e37a26","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/pinchIn_00.mp3","hash":"d143662d2c8cfb1150f719d3d55c75d454535690","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/pinchOut_00.mp3","hash":"6872da79e1b515b2c996eecee4ca150e22aa48c0","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/tapBody_00.mp3","hash":"23c998ca4549b7908aef029d28b6ae22cbfcdc82","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/tapBody_01.mp3","hash":"d3d5607dbe394225e2ee858531b7767f567c4e10","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/tapBody_02.mp3","hash":"be111df9ecd006e992f94cb4280c2b66d9cd23ed","modified":1594193057254},{"_id":"public/live2dw/assets/assets/snd/shake_00.mp3","hash":"28b245865f200b61cb009dfbd3811d9e9b0748fb","modified":1594193057254},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1594193057254},{"_id":"public/live2dw/assets/assets/moc/haru02.1024/texture_01.png","hash":"dd05d6b7f8f0d0c167b040f41ffd7c10a3747d96","modified":1594193057260},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1594193057260},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1594193057270},{"_id":"public/live2dw/assets/assets/moc/haru02.1024/texture_02.png","hash":"df02ff8355fca1389bbed5153dc1dadd8cd1c704","modified":1594193057310},{"_id":"public/lib/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1594193057312},{"_id":"public/live2dw/assets/assets/moc/haru02.moc","hash":"748cf01b45bebb3b217d6363f9d5ff81ab942787","modified":1594193057316},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1594193057319}],"Category":[{"name":"杂七杂八","_id":"ckcd0s2m10004tabjd7f9u35d"},{"name":"大学","_id":"ckcd0s2ma000btabj5hgizln6"},{"name":"数据库","_id":"ckcd0s2mh000htabj1vtqxo5r"},{"name":"娱乐","_id":"ckcd0s2nt000ytabjwgdp4mqs"},{"name":"节日","_id":"ckcd0s2qw001stabjlf8jcxzz"},{"name":"公务员","_id":"ckcd0s2sh002ztabjncd5uupm"},{"name":"Hexo","_id":"ckcd0s2t0003btabjscp1waw9"},{"name":"Hadoop","_id":"ckcd0s2td003htabjn1v3teub"},{"name":"seo优化","_id":"ckcd0s2v5004rtabjyu4qdzt1"},{"name":"前端","_id":"ckcd0s2xs0076tabjci6pm2d6"},{"name":"LDAP","_id":"ckcd0s2xw007ctabjqvlb6rvz"},{"name":"Python","_id":"ckcd0s2xx007itabju3zfrw0u"},{"name":"编译器","_id":"ckcd0s2y0007ttabj8lewamb1"},{"name":"Linux","_id":"ckcd0s2y1007ytabjhjbfr6z0"},{"name":"生活","_id":"ckcd0s2yc008utabjrnxgku95"},{"name":"影视说","_id":"ckcd0s2ye008ztabjv403jy9c"},{"name":"ArcGIS","_id":"ckcd0s2yu00actabjqa7wf4ba"},{"name":"服务器","_id":"ckcd0s2z200b4tabjsjtacvsi"},{"name":"工具集","_id":"ckcd0s2z500bgtabjwi2q4o9h"},{"name":"旅行记","_id":"ckcd0s2z700bmtabjb0329tuj"},{"name":"协议类","_id":"ckcd0s2z900butabjjou8atb7"},{"name":"不明类别","_id":"ckcd0s2z900bztabjdpuiw64k"},{"name":"Qunar项目","_id":"ckcd0s38f00gktabjt76gvufn"}],"Data":[],"Page":[{"layout":"about","title":"Hi","date":"2017-12-31T16:00:00.000Z","comments":0,"type":"about","_content":"> #### 个人简述\n\n1991，网名<font color=#D35400 size=7 face=\"黑体\">***PyGo²***</font>(人一定要2一点)，曾任职去哪儿网python开发工程师。\n\n> #### MyLove\n\n<a href=\"../love/index.html\" target=\"view_window\">My Angel</a>\n\n\n> #### 博客统计\n\n{% raw %}\n<script src=\"/publicfiles/echarts.min.js\"></script>\n{% endraw %}\n\n{% echarts 400 '85%' %}\n{\n    color: ['#F39C12'],\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'category',\n            data : ['Python','Linux','Hexo','娱乐','影视说','旅行记','数据库', '其他'],\n            axisTick: {\n                alignWithLabel: true\n            }\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'直接访问',\n            type:'bar',\n            barWidth: '60%',\n            data: [17, 7, 29, 5, 3, 2, 2, 22]\n        }\n    ]\n};\n{% endecharts %}\n\n<img src=\"/images/blog_tags.jpg\"  alt=\"tags cloud\" width=\"88%\"/>\n\n> #### 人生经历\n\n{% raw %}\n\n<ul class=\"timeline\" style=\"text-align:center;\">\n    <!-- Item 1 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">追求阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2016/07 ~ 2019/**</span></span>\n            </div>\n            <div class=\"desc\">生活的理想就是理想的生活</div>\n        </div>\n    </li>\n    <!-- Item 2 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-l\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">盲目阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2014/03 ~ 2016/06</span></span>\n            </div>\n            <div class=\"desc\">一艘没有航行目标的船</div>\n        </div>\n    </li>\n    <!-- Item 3 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">上学阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">1997/09 ~ 2013/07</span></span>\n            </div>\n            <div class=\"desc\">书中自有黄金屋，书中自有颜如玉</div>\n        </div>\n    </li>\n</ul>\n\n{% endraw %}\n\n> #### 相关荣誉\n\n| 时间 | 证书 | 成绩 |\n| :------: | :------: | :------: |\n|   2010/6   |    大学英语四级    |  CET-4   |\n|   2010/12   |    全国计算机等级证书    |     NCRE-二级   |\n|   2012/4   |    ESRI制图大赛    |   优秀   |\n|   2012/6    |    普通话水平测试等级证书    |   二级乙等    |\n|   2012/10   |    全国GIS信息化工程师    |   GIS应用工程师    |\n|   2012/12   |    奖学金    |   学院级   |\n|   2012/12   |    优秀实习生    |   校优    |\n\n> #### 个人评价\n\n- <font color=\"red\">**非程序猿性格**</font>\n本人以幽默，大胆，搞笑为主，性格不闷，善于沟通，干的虽然是程序猿工作，但是具有非程序员的性格，不符合大众程序猿性格，沟通协调方面不是问题，以具备程序猿能力开发为基础。\n- <font color=\"red\">**技术控**</font>\n喜欢专研潮流先发展的IT技术，对于现在来说比较热的就是人工智能，Python在做这方面有着自己独特的特点，在OsChina，技术论坛，GitHub上进行活动，偶尔发发技术博客。\n- <font color=\"red\">**做点事**</font>\n今年终于认识到男人不容易，想认真的做点实实在在的事。\n\n> #### 联系方式\n\n* ***Github:*** https://github.com/GIS90\n\n* ***Email:*** gaoming971366@163.com\n\n* ***Weibo:*** https://weibo.com/u/1989571513\n\n> #### 简历下载\n\n{% btn /publicfiles/rusume.docx, 个人简历, download fa-lg fa-fw, 个人简历 %}\n\n> #### 座右铭\n\n<font color=#1E90FF size=7 face=\"黑体\">*** Enjoy the good lift everyday ！！！***</font>\n\n![](life.jpg)\n","source":"about/index.md","raw":"---\nlayout: about\ntitle: Hi\ndate: 2018-01-01\ncomments: false\ntype: about\n---\n> #### 个人简述\n\n1991，网名<font color=#D35400 size=7 face=\"黑体\">***PyGo²***</font>(人一定要2一点)，曾任职去哪儿网python开发工程师。\n\n> #### MyLove\n\n<a href=\"../love/index.html\" target=\"view_window\">My Angel</a>\n\n\n> #### 博客统计\n\n{% raw %}\n<script src=\"/publicfiles/echarts.min.js\"></script>\n{% endraw %}\n\n{% echarts 400 '85%' %}\n{\n    color: ['#F39C12'],\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'category',\n            data : ['Python','Linux','Hexo','娱乐','影视说','旅行记','数据库', '其他'],\n            axisTick: {\n                alignWithLabel: true\n            }\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'直接访问',\n            type:'bar',\n            barWidth: '60%',\n            data: [17, 7, 29, 5, 3, 2, 2, 22]\n        }\n    ]\n};\n{% endecharts %}\n\n<img src=\"/images/blog_tags.jpg\"  alt=\"tags cloud\" width=\"88%\"/>\n\n> #### 人生经历\n\n{% raw %}\n\n<ul class=\"timeline\" style=\"text-align:center;\">\n    <!-- Item 1 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">追求阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2016/07 ~ 2019/**</span></span>\n            </div>\n            <div class=\"desc\">生活的理想就是理想的生活</div>\n        </div>\n    </li>\n    <!-- Item 2 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-l\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">盲目阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2014/03 ~ 2016/06</span></span>\n            </div>\n            <div class=\"desc\">一艘没有航行目标的船</div>\n        </div>\n    </li>\n    <!-- Item 3 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">上学阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">1997/09 ~ 2013/07</span></span>\n            </div>\n            <div class=\"desc\">书中自有黄金屋，书中自有颜如玉</div>\n        </div>\n    </li>\n</ul>\n\n{% endraw %}\n\n> #### 相关荣誉\n\n| 时间 | 证书 | 成绩 |\n| :------: | :------: | :------: |\n|   2010/6   |    大学英语四级    |  CET-4   |\n|   2010/12   |    全国计算机等级证书    |     NCRE-二级   |\n|   2012/4   |    ESRI制图大赛    |   优秀   |\n|   2012/6    |    普通话水平测试等级证书    |   二级乙等    |\n|   2012/10   |    全国GIS信息化工程师    |   GIS应用工程师    |\n|   2012/12   |    奖学金    |   学院级   |\n|   2012/12   |    优秀实习生    |   校优    |\n\n> #### 个人评价\n\n- <font color=\"red\">**非程序猿性格**</font>\n本人以幽默，大胆，搞笑为主，性格不闷，善于沟通，干的虽然是程序猿工作，但是具有非程序员的性格，不符合大众程序猿性格，沟通协调方面不是问题，以具备程序猿能力开发为基础。\n- <font color=\"red\">**技术控**</font>\n喜欢专研潮流先发展的IT技术，对于现在来说比较热的就是人工智能，Python在做这方面有着自己独特的特点，在OsChina，技术论坛，GitHub上进行活动，偶尔发发技术博客。\n- <font color=\"red\">**做点事**</font>\n今年终于认识到男人不容易，想认真的做点实实在在的事。\n\n> #### 联系方式\n\n* ***Github:*** https://github.com/GIS90\n\n* ***Email:*** gaoming971366@163.com\n\n* ***Weibo:*** https://weibo.com/u/1989571513\n\n> #### 简历下载\n\n{% btn /publicfiles/rusume.docx, 个人简历, download fa-lg fa-fw, 个人简历 %}\n\n> #### 座右铭\n\n<font color=#1E90FF size=7 face=\"黑体\">*** Enjoy the good lift everyday ！！！***</font>\n\n![](life.jpg)\n","updated":"2020-07-15T04:37:27.338Z","path":"about/index.html","_id":"ckcd0s2lo0000tabjr7ri0h14","content":"<blockquote>\n<h4 id=\"个人简述\"><a href=\"#个人简述\" class=\"headerlink\" title=\"个人简述\"></a>个人简述</h4></blockquote>\n<p>1991，网名<font color=\"#D35400\" size=\"7\" face=\"黑体\"><strong><em>PyGo²</em></strong></font>(人一定要2一点)，曾任职去哪儿网python开发工程师。</p>\n<blockquote>\n<h4 id=\"MyLove\"><a href=\"#MyLove\" class=\"headerlink\" title=\"MyLove\"></a>MyLove</h4></blockquote>\n<p><a href=\"../love/index.html\" target=\"view_window\">My Angel</a></p>\n<blockquote>\n<h4 id=\"博客统计\"><a href=\"#博客统计\" class=\"headerlink\" title=\"博客统计\"></a>博客统计</h4></blockquote>\n\n<script src=\"/publicfiles/echarts.min.js\"></script>\n\n<div id=\"echarts8546\" style=\"width: 85%;height: 400px;margin: 0 auto\"></div>\r\n<script type=\"text/javascript\">\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('echarts8546'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\n    color: ['#F39C12'],\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'category',\n            data : ['Python','Linux','Hexo','娱乐','影视说','旅行记','数据库', '其他'],\n            axisTick: {\n                alignWithLabel: true\n            }\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'直接访问',\n            type:'bar',\n            barWidth: '60%',\n            data: [17, 7, 29, 5, 3, 2, 2, 22]\n        }\n    ]\n};\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n</script>\n<p><img src=\"/images/blog_tags.jpg\" alt=\"tags cloud\" width=\"88%\"></p>\n<blockquote>\n<h4 id=\"人生经历\"><a href=\"#人生经历\" class=\"headerlink\" title=\"人生经历\"></a>人生经历</h4></blockquote>\n\n\n<ul class=\"timeline\" style=\"text-align:center;\">\n    <!-- Item 1 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">追求阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2016/07 ~ 2019/**</span></span>\n            </div>\n            <div class=\"desc\">生活的理想就是理想的生活</div>\n        </div>\n    </li>\n    <!-- Item 2 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-l\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">盲目阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2014/03 ~ 2016/06</span></span>\n            </div>\n            <div class=\"desc\">一艘没有航行目标的船</div>\n        </div>\n    </li>\n    <!-- Item 3 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">上学阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">1997/09 ~ 2013/07</span></span>\n            </div>\n            <div class=\"desc\">书中自有黄金屋，书中自有颜如玉</div>\n        </div>\n    </li>\n</ul>\n\n\n<blockquote>\n<h4 id=\"相关荣誉\"><a href=\"#相关荣誉\" class=\"headerlink\" title=\"相关荣誉\"></a>相关荣誉</h4></blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">证书</th>\n<th style=\"text-align:center\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2010/6</td>\n<td style=\"text-align:center\">大学英语四级</td>\n<td style=\"text-align:center\">CET-4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2010/12</td>\n<td style=\"text-align:center\">全国计算机等级证书</td>\n<td style=\"text-align:center\">NCRE-二级</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/4</td>\n<td style=\"text-align:center\">ESRI制图大赛</td>\n<td style=\"text-align:center\">优秀</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/6</td>\n<td style=\"text-align:center\">普通话水平测试等级证书</td>\n<td style=\"text-align:center\">二级乙等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/10</td>\n<td style=\"text-align:center\">全国GIS信息化工程师</td>\n<td style=\"text-align:center\">GIS应用工程师</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/12</td>\n<td style=\"text-align:center\">奖学金</td>\n<td style=\"text-align:center\">学院级</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/12</td>\n<td style=\"text-align:center\">优秀实习生</td>\n<td style=\"text-align:center\">校优</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<h4 id=\"个人评价\"><a href=\"#个人评价\" class=\"headerlink\" title=\"个人评价\"></a>个人评价</h4></blockquote>\n<ul>\n<li><font color=\"red\"><strong>非程序猿性格</strong></font><br>本人以幽默，大胆，搞笑为主，性格不闷，善于沟通，干的虽然是程序猿工作，但是具有非程序员的性格，不符合大众程序猿性格，沟通协调方面不是问题，以具备程序猿能力开发为基础。</li>\n<li><font color=\"red\"><strong>技术控</strong></font><br>喜欢专研潮流先发展的IT技术，对于现在来说比较热的就是人工智能，Python在做这方面有着自己独特的特点，在OsChina，技术论坛，GitHub上进行活动，偶尔发发技术博客。</li>\n<li><font color=\"red\"><strong>做点事</strong></font><br>今年终于认识到男人不容易，想认真的做点实实在在的事。</li>\n</ul>\n<blockquote>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4></blockquote>\n<ul>\n<li><p><strong><em>Github:</em></strong> <a href=\"https://github.com/GIS90\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90</a></p>\n</li>\n<li><p><strong><em>Email:</em></strong> <a href=\"mailto:gaoming971366@163.com\" target=\"_blank\" rel=\"noopener\">gaoming971366@163.com</a></p>\n</li>\n<li><p><strong><em>Weibo:</em></strong> <a href=\"https://weibo.com/u/1989571513\" target=\"_blank\" rel=\"noopener\">https://weibo.com/u/1989571513</a></p>\n</li>\n</ul>\n<blockquote>\n<h4 id=\"简历下载\"><a href=\"#简历下载\" class=\"headerlink\" title=\"简历下载\"></a>简历下载</h4></blockquote>\n<a class=\"btn\" href=\"/publicfiles/rusume.docx\" title=\"个人简历\"><i class=\"fa fa-download fa-lg fa-fw\"></i>个人简历</a>\n<blockquote>\n<h4 id=\"座右铭\"><a href=\"#座右铭\" class=\"headerlink\" title=\"座右铭\"></a>座右铭</h4></blockquote>\n<font color=\"#1E90FF\" size=\"7\" face=\"黑体\"><strong><em> Enjoy the good lift everyday ！！！</em></strong></font>\n\n<p><img src=\"life.jpg\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<h4 id=\"个人简述\"><a href=\"#个人简述\" class=\"headerlink\" title=\"个人简述\"></a>个人简述</h4></blockquote>\n<p>1991，网名<font color=\"#D35400\" size=\"7\" face=\"黑体\"><strong><em>PyGo²</em></strong></font>(人一定要2一点)，曾任职去哪儿网python开发工程师。</p>\n<blockquote>\n<h4 id=\"MyLove\"><a href=\"#MyLove\" class=\"headerlink\" title=\"MyLove\"></a>MyLove</h4></blockquote>\n<p><a href=\"../love/index.html\" target=\"view_window\">My Angel</a></p>\n<blockquote>\n<h4 id=\"博客统计\"><a href=\"#博客统计\" class=\"headerlink\" title=\"博客统计\"></a>博客统计</h4></blockquote>\n\n<script src=\"/publicfiles/echarts.min.js\"></script>\n\n<div id=\"echarts8546\" style=\"width: 85%;height: 400px;margin: 0 auto\"></div>\r\n<script type=\"text/javascript\">\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('echarts8546'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\n    color: ['#F39C12'],\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'category',\n            data : ['Python','Linux','Hexo','娱乐','影视说','旅行记','数据库', '其他'],\n            axisTick: {\n                alignWithLabel: true\n            }\n        }\n    ],\n    yAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    series : [\n        {\n            name:'直接访问',\n            type:'bar',\n            barWidth: '60%',\n            data: [17, 7, 29, 5, 3, 2, 2, 22]\n        }\n    ]\n};\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n</script>\n<p><img src=\"/images/blog_tags.jpg\" alt=\"tags cloud\" width=\"88%\"></p>\n<blockquote>\n<h4 id=\"人生经历\"><a href=\"#人生经历\" class=\"headerlink\" title=\"人生经历\"></a>人生经历</h4></blockquote>\n\n\n<ul class=\"timeline\" style=\"text-align:center;\">\n    <!-- Item 1 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">追求阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2016/07 ~ 2019/**</span></span>\n            </div>\n            <div class=\"desc\">生活的理想就是理想的生活</div>\n        </div>\n    </li>\n    <!-- Item 2 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-l\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">盲目阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">2014/03 ~ 2016/06</span></span>\n            </div>\n            <div class=\"desc\">一艘没有航行目标的船</div>\n        </div>\n    </li>\n    <!-- Item 3 -->\n    <li style=\"list-style:none;\">\n        <div class=\"direction-r\">\n            <div class=\"flag-wrapper\">\n                <span class=\"flag\">上学阶段</span>\n                <span class=\"time-wrapper\"><span class=\"time\">1997/09 ~ 2013/07</span></span>\n            </div>\n            <div class=\"desc\">书中自有黄金屋，书中自有颜如玉</div>\n        </div>\n    </li>\n</ul>\n\n\n<blockquote>\n<h4 id=\"相关荣誉\"><a href=\"#相关荣誉\" class=\"headerlink\" title=\"相关荣誉\"></a>相关荣誉</h4></blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">证书</th>\n<th style=\"text-align:center\">成绩</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2010/6</td>\n<td style=\"text-align:center\">大学英语四级</td>\n<td style=\"text-align:center\">CET-4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2010/12</td>\n<td style=\"text-align:center\">全国计算机等级证书</td>\n<td style=\"text-align:center\">NCRE-二级</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/4</td>\n<td style=\"text-align:center\">ESRI制图大赛</td>\n<td style=\"text-align:center\">优秀</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/6</td>\n<td style=\"text-align:center\">普通话水平测试等级证书</td>\n<td style=\"text-align:center\">二级乙等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/10</td>\n<td style=\"text-align:center\">全国GIS信息化工程师</td>\n<td style=\"text-align:center\">GIS应用工程师</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/12</td>\n<td style=\"text-align:center\">奖学金</td>\n<td style=\"text-align:center\">学院级</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2012/12</td>\n<td style=\"text-align:center\">优秀实习生</td>\n<td style=\"text-align:center\">校优</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<h4 id=\"个人评价\"><a href=\"#个人评价\" class=\"headerlink\" title=\"个人评价\"></a>个人评价</h4></blockquote>\n<ul>\n<li><font color=\"red\"><strong>非程序猿性格</strong></font><br>本人以幽默，大胆，搞笑为主，性格不闷，善于沟通，干的虽然是程序猿工作，但是具有非程序员的性格，不符合大众程序猿性格，沟通协调方面不是问题，以具备程序猿能力开发为基础。</li>\n<li><font color=\"red\"><strong>技术控</strong></font><br>喜欢专研潮流先发展的IT技术，对于现在来说比较热的就是人工智能，Python在做这方面有着自己独特的特点，在OsChina，技术论坛，GitHub上进行活动，偶尔发发技术博客。</li>\n<li><font color=\"red\"><strong>做点事</strong></font><br>今年终于认识到男人不容易，想认真的做点实实在在的事。</li>\n</ul>\n<blockquote>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4></blockquote>\n<ul>\n<li><p><strong><em>Github:</em></strong> <a href=\"https://github.com/GIS90\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90</a></p>\n</li>\n<li><p><strong><em>Email:</em></strong> <a href=\"mailto:gaoming971366@163.com\" target=\"_blank\" rel=\"noopener\">gaoming971366@163.com</a></p>\n</li>\n<li><p><strong><em>Weibo:</em></strong> <a href=\"https://weibo.com/u/1989571513\" target=\"_blank\" rel=\"noopener\">https://weibo.com/u/1989571513</a></p>\n</li>\n</ul>\n<blockquote>\n<h4 id=\"简历下载\"><a href=\"#简历下载\" class=\"headerlink\" title=\"简历下载\"></a>简历下载</h4></blockquote>\n<a class=\"btn\" href=\"/publicfiles/rusume.docx\" title=\"个人简历\"><i class=\"fa fa-download fa-lg fa-fw\"></i>个人简历</a>\n<blockquote>\n<h4 id=\"座右铭\"><a href=\"#座右铭\" class=\"headerlink\" title=\"座右铭\"></a>座右铭</h4></blockquote>\n<font color=\"#1E90FF\" size=\"7\" face=\"黑体\"><strong><em> Enjoy the good lift everyday ！！！</em></strong></font>\n\n<p><img src=\"life.jpg\" alt></p>\n"},{"title":"博文分类","date":"2018-10-22T05:58:10.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 博文分类\ndate: 2018-10-22 13:58:10\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-06-05T14:52:59.773Z","path":"categories/index.html","layout":"page","_id":"ckcd0s2lx0002tabjlwnoycfn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"欢迎大家留言","_content":"<!-- <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/> -->\n\n{% cq %}\n<font color=#1E90FF size=7 face=\"黑体\">** Enjoy the good lift everyday ！！！**</font>\n<font color=\"red\" size=\"5\">***PyGo²***</font>\n{% endcq %}\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","source":"messagepad/index.md","raw":"---\ntitle: 欢迎大家留言\n---\n<!-- <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/> -->\n\n{% cq %}\n<font color=#1E90FF size=7 face=\"黑体\">** Enjoy the good lift everyday ！！！**</font>\n<font color=\"red\" size=\"5\">***PyGo²***</font>\n{% endcq %}\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","date":"2019-06-03T15:35:17.482Z","updated":"2019-06-03T15:35:17.482Z","path":"messagepad/index.html","comments":1,"layout":"page","_id":"ckcd0s2m30006tabjvkobj4ot","content":"<!-- <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/> -->\n<blockquote class=\"blockquote-center\"><font color=\"#1E90FF\" size=\"7\" face=\"黑体\"><strong> Enjoy the good lift everyday ！！！</strong></font><br><font color=\"red\" size=\"5\"><strong><em>PyGo²</em></strong></font></blockquote>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n","site":{"data":{}},"excerpt":"","more":"<!-- <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/> -->\n<blockquote class=\"blockquote-center\"><font color=\"#1E90FF\" size=\"7\" face=\"黑体\"><strong> Enjoy the good lift everyday ！！！</strong></font><br><font color=\"red\" size=\"5\"><strong><em>PyGo²</em></strong></font></blockquote>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n"},{"title":"个人相册","date":"2019-05-28T14:54:16.000Z","comments":0,"_content":"\n{% cq %}\n<font size=\"5\" color=\"blue\">**持续更新中～**</font>\n<font size=\"4\" color=\"red\">**记录美好生活的点点滴滴🥰**</font>\n{% endcq%}\n\n\n<hr />\n\n### 2019-08-02【天津之旅】\n\n{% tabs 2019-08-02天津之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing6.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing5.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing1.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing10.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing8.jpg\">\n            <img src=\"images/tianjinzhilv/meijing2.jpg\">\n            <img src=\"images/tianjinzhilv/meijing7.jpg\">\n            <img src=\"images/tianjinzhilv/meijing11.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing3.jpg\">\n            <img src=\"images/tianjinzhilv/meijing4.jpg\">\n            <img src=\"images/tianjinzhilv/meijing9.jpg\">\n            <img src=\"images/tianjinzhilv/meijing12.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu3.jpg\">\n        <img src=\"images/tianjinzhilv/renwu2.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu4.jpg\">\n        <img src=\"images/tianjinzhilv/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu1.jpg\">\n        <img src=\"images/tianjinzhilv/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2019-07-08【巴厘岛蜜月之旅】\n\n{% tabs 2019-07-08巴厘岛蜜月之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing6.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meijing5.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meijing1.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing8.jpg\">\n            <img src=\"images/balidaomiyue/meijing2.jpg\">\n            <img src=\"images/balidaomiyue/meijing7.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing3.jpg\">\n            <img src=\"images/balidaomiyue/meijing4.jpg\">\n            <img src=\"images/balidaomiyue/meijing9.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 美食 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi1.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi2.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi3.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi4.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi5.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi6.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu7.jpg\">\n        <img src=\"images/balidaomiyue/renwu2.jpg\">\n        <img src=\"images/balidaomiyue/renwu3.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu4.jpg\">\n        <img src=\"images/balidaomiyue/renwu8.jpg\">\n        <img src=\"images/balidaomiyue/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu1.jpg\">\n        <img src=\"images/balidaomiyue/renwu9.jpg\">\n        <img src=\"images/balidaomiyue/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2018-08-05【第一次吃牛排】\n\n{% tabs 2018-08-05第一次吃牛排 %}\n<!-- tab 点点滴滴 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/1.jpg\">\n\t\t\t<img src=\"images/fristniupai/5.jpg\">\n\t\t\t<img src=\"images/fristniupai/9.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/8.jpg\">\n            <img src=\"images/fristniupai/2.jpg\">\n            <img src=\"images/fristniupai/6.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/3.jpg\">\n            <img src=\"images/fristniupai/7.jpg\">\n            <img src=\"images/fristniupai/11.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n            <img src=\"images/fristniupai/4.jpg\">\n            <img src=\"images/fristniupai/10.jpg\">\n        </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2018-07-27【乌镇之旅】\n\n{% tabs 2018-07-27乌镇之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing6.jpg\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing5.jpg\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing1.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing8.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing2.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing7.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing3.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing4.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing9.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 美食 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi3.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi2.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi1.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu7.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu2.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu3.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu4.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu1.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n","source":"photo/index.md","raw":"---\ntitle: 个人相册\ndate: 2019-05-28 22:54:16\ncomments: false\n---\n\n{% cq %}\n<font size=\"5\" color=\"blue\">**持续更新中～**</font>\n<font size=\"4\" color=\"red\">**记录美好生活的点点滴滴🥰**</font>\n{% endcq%}\n\n\n<hr />\n\n### 2019-08-02【天津之旅】\n\n{% tabs 2019-08-02天津之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing6.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing5.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing1.jpg\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing10.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing8.jpg\">\n            <img src=\"images/tianjinzhilv/meijing2.jpg\">\n            <img src=\"images/tianjinzhilv/meijing7.jpg\">\n            <img src=\"images/tianjinzhilv/meijing11.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/tianjinzhilv/meijing3.jpg\">\n            <img src=\"images/tianjinzhilv/meijing4.jpg\">\n            <img src=\"images/tianjinzhilv/meijing9.jpg\">\n            <img src=\"images/tianjinzhilv/meijing12.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu3.jpg\">\n        <img src=\"images/tianjinzhilv/renwu2.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu4.jpg\">\n        <img src=\"images/tianjinzhilv/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/tianjinzhilv/renwu1.jpg\">\n        <img src=\"images/tianjinzhilv/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2019-07-08【巴厘岛蜜月之旅】\n\n{% tabs 2019-07-08巴厘岛蜜月之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing6.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meijing5.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meijing1.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing8.jpg\">\n            <img src=\"images/balidaomiyue/meijing2.jpg\">\n            <img src=\"images/balidaomiyue/meijing7.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meijing3.jpg\">\n            <img src=\"images/balidaomiyue/meijing4.jpg\">\n            <img src=\"images/balidaomiyue/meijing9.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 美食 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi1.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi2.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi3.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi4.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n\t\t\t<img src=\"images/balidaomiyue/meishi5.jpg\">\n\t\t\t<img src=\"images/balidaomiyue/meishi6.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu7.jpg\">\n        <img src=\"images/balidaomiyue/renwu2.jpg\">\n        <img src=\"images/balidaomiyue/renwu3.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu4.jpg\">\n        <img src=\"images/balidaomiyue/renwu8.jpg\">\n        <img src=\"images/balidaomiyue/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/balidaomiyue/renwu1.jpg\">\n        <img src=\"images/balidaomiyue/renwu9.jpg\">\n        <img src=\"images/balidaomiyue/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2018-08-05【第一次吃牛排】\n\n{% tabs 2018-08-05第一次吃牛排 %}\n<!-- tab 点点滴滴 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/1.jpg\">\n\t\t\t<img src=\"images/fristniupai/5.jpg\">\n\t\t\t<img src=\"images/fristniupai/9.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/8.jpg\">\n            <img src=\"images/fristniupai/2.jpg\">\n            <img src=\"images/fristniupai/6.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/3.jpg\">\n            <img src=\"images/fristniupai/7.jpg\">\n            <img src=\"images/fristniupai/11.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n            <img src=\"images/fristniupai/4.jpg\">\n            <img src=\"images/fristniupai/10.jpg\">\n        </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n\n### 2018-07-27【乌镇之旅】\n\n{% tabs 2018-07-27乌镇之旅 %}\n<!-- tab 美景 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing6.jpg\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing5.jpg\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing1.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing8.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing2.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing7.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meijing3.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing4.jpg\">\n            <img src=\"images/wuzhenzhilv/meijing9.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 美食 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi3.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi2.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n\t\t\t<img src=\"images/wuzhenzhilv/meishi1.jpg\">\n\t\t</div>\n\t</div>\n</div>\n<!-- endtab -->\n<!-- tab 人物 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu7.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu2.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu3.jpg\">\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu4.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu5.jpg\">\n\n    </div>\n    <div class=\"phote-column\">\n        <img src=\"images/wuzhenzhilv/renwu1.jpg\">\n        <img src=\"images/wuzhenzhilv/renwu6.jpg\">\n    </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n\n<hr />\n","updated":"2019-09-02T05:11:57.479Z","path":"photo/index.html","layout":"page","_id":"ckcd0s2m50008tabjrt7pui8j","content":"<blockquote class=\"blockquote-center\"><font size=\"5\" color=\"blue\"><strong>持续更新中～</strong></font><br><font size=\"4\" color=\"red\"><strong>记录美好生活的点点滴滴🥰</strong></font></blockquote>\n<hr>\n\n<h3 id=\"2019-08-02【天津之旅】\"><a href=\"#2019-08-02【天津之旅】\" class=\"headerlink\" title=\"2019-08-02【天津之旅】\"></a>2019-08-02【天津之旅】</h3><div class=\"tabs\" id=\"2019-08-02天津之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-08-02天津之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2019-08-02天津之旅-2\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-08-02天津之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing6.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing5.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing1.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing10.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing8.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing2.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing7.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing11.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing3.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing4.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing9.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing12.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-08-02天津之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu3.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu2.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu4.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu1.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2019-07-08【巴厘岛蜜月之旅】\"><a href=\"#2019-07-08【巴厘岛蜜月之旅】\" class=\"headerlink\" title=\"2019-07-08【巴厘岛蜜月之旅】\"></a>2019-07-08【巴厘岛蜜月之旅】</h3><div class=\"tabs\" id=\"2019-07-08巴厘岛蜜月之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-07-08巴厘岛蜜月之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2019-07-08巴厘岛蜜月之旅-2\">美食</a></li><li class=\"tab\"><a href=\"#2019-07-08巴厘岛蜜月之旅-3\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-07-08巴厘岛蜜月之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing6.jpg\"><br>            <img src=\"images/balidaomiyue/meijing5.jpg\"><br>            <img src=\"images/balidaomiyue/meijing1.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing8.jpg\"><br>            <img src=\"images/balidaomiyue/meijing2.jpg\"><br>            <img src=\"images/balidaomiyue/meijing7.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing3.jpg\"><br>            <img src=\"images/balidaomiyue/meijing4.jpg\"><br>            <img src=\"images/balidaomiyue/meijing9.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-07-08巴厘岛蜜月之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi1.jpg\"><br>            <img src=\"images/balidaomiyue/meishi2.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi3.jpg\"><br>            <img src=\"images/balidaomiyue/meishi4.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi5.jpg\"><br>            <img src=\"images/balidaomiyue/meishi6.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-07-08巴厘岛蜜月之旅-3\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu7.jpg\"><br>        <img src=\"images/balidaomiyue/renwu2.jpg\"><br>        <img src=\"images/balidaomiyue/renwu3.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu4.jpg\"><br>        <img src=\"images/balidaomiyue/renwu8.jpg\"><br>        <img src=\"images/balidaomiyue/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu1.jpg\"><br>        <img src=\"images/balidaomiyue/renwu9.jpg\"><br>        <img src=\"images/balidaomiyue/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2018-08-05【第一次吃牛排】\"><a href=\"#2018-08-05【第一次吃牛排】\" class=\"headerlink\" title=\"2018-08-05【第一次吃牛排】\"></a>2018-08-05【第一次吃牛排】</h3><div class=\"tabs\" id=\"2018-08-05第一次吃牛排\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2018-08-05第一次吃牛排-1\">点点滴滴</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2018-08-05第一次吃牛排-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/1.jpg\"><br>            <img src=\"images/fristniupai/5.jpg\"><br>            <img src=\"images/fristniupai/9.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/8.jpg\"><br>            <img src=\"images/fristniupai/2.jpg\"><br>            <img src=\"images/fristniupai/6.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/3.jpg\"><br>            <img src=\"images/fristniupai/7.jpg\"><br>            <img src=\"images/fristniupai/11.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/4.jpg\"><br>            <img src=\"images/fristniupai/10.jpg\"><br>        </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2018-07-27【乌镇之旅】\"><a href=\"#2018-07-27【乌镇之旅】\" class=\"headerlink\" title=\"2018-07-27【乌镇之旅】\"></a>2018-07-27【乌镇之旅】</h3><div class=\"tabs\" id=\"2018-07-27乌镇之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2018-07-27乌镇之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2018-07-27乌镇之旅-2\">美食</a></li><li class=\"tab\"><a href=\"#2018-07-27乌镇之旅-3\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2018-07-27乌镇之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing6.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing5.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing1.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing8.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing2.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing7.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing3.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing4.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing9.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2018-07-27乌镇之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi3.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi2.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi1.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2018-07-27乌镇之旅-3\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu7.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu2.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu3.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu4.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu1.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<blockquote class=\"blockquote-center\"><font size=\"5\" color=\"blue\"><strong>持续更新中～</strong></font><br><font size=\"4\" color=\"red\"><strong>记录美好生活的点点滴滴🥰</strong></font></blockquote>\n<hr>\n\n<h3 id=\"2019-08-02【天津之旅】\"><a href=\"#2019-08-02【天津之旅】\" class=\"headerlink\" title=\"2019-08-02【天津之旅】\"></a>2019-08-02【天津之旅】</h3><div class=\"tabs\" id=\"2019-08-02天津之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-08-02天津之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2019-08-02天津之旅-2\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-08-02天津之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing6.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing5.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing1.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing10.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing8.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing2.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing7.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing11.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/tianjinzhilv/meijing3.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing4.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing9.jpg\"><br>            <img src=\"images/tianjinzhilv/meijing12.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-08-02天津之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu3.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu2.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu4.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/tianjinzhilv/renwu1.jpg\"><br>        <img src=\"images/tianjinzhilv/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2019-07-08【巴厘岛蜜月之旅】\"><a href=\"#2019-07-08【巴厘岛蜜月之旅】\" class=\"headerlink\" title=\"2019-07-08【巴厘岛蜜月之旅】\"></a>2019-07-08【巴厘岛蜜月之旅】</h3><div class=\"tabs\" id=\"2019-07-08巴厘岛蜜月之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-07-08巴厘岛蜜月之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2019-07-08巴厘岛蜜月之旅-2\">美食</a></li><li class=\"tab\"><a href=\"#2019-07-08巴厘岛蜜月之旅-3\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-07-08巴厘岛蜜月之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing6.jpg\"><br>            <img src=\"images/balidaomiyue/meijing5.jpg\"><br>            <img src=\"images/balidaomiyue/meijing1.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing8.jpg\"><br>            <img src=\"images/balidaomiyue/meijing2.jpg\"><br>            <img src=\"images/balidaomiyue/meijing7.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meijing3.jpg\"><br>            <img src=\"images/balidaomiyue/meijing4.jpg\"><br>            <img src=\"images/balidaomiyue/meijing9.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-07-08巴厘岛蜜月之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi1.jpg\"><br>            <img src=\"images/balidaomiyue/meishi2.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi3.jpg\"><br>            <img src=\"images/balidaomiyue/meishi4.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/balidaomiyue/meishi5.jpg\"><br>            <img src=\"images/balidaomiyue/meishi6.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2019-07-08巴厘岛蜜月之旅-3\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu7.jpg\"><br>        <img src=\"images/balidaomiyue/renwu2.jpg\"><br>        <img src=\"images/balidaomiyue/renwu3.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu4.jpg\"><br>        <img src=\"images/balidaomiyue/renwu8.jpg\"><br>        <img src=\"images/balidaomiyue/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/balidaomiyue/renwu1.jpg\"><br>        <img src=\"images/balidaomiyue/renwu9.jpg\"><br>        <img src=\"images/balidaomiyue/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2018-08-05【第一次吃牛排】\"><a href=\"#2018-08-05【第一次吃牛排】\" class=\"headerlink\" title=\"2018-08-05【第一次吃牛排】\"></a>2018-08-05【第一次吃牛排】</h3><div class=\"tabs\" id=\"2018-08-05第一次吃牛排\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2018-08-05第一次吃牛排-1\">点点滴滴</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2018-08-05第一次吃牛排-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/1.jpg\"><br>            <img src=\"images/fristniupai/5.jpg\"><br>            <img src=\"images/fristniupai/9.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/8.jpg\"><br>            <img src=\"images/fristniupai/2.jpg\"><br>            <img src=\"images/fristniupai/6.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/3.jpg\"><br>            <img src=\"images/fristniupai/7.jpg\"><br>            <img src=\"images/fristniupai/11.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/fristniupai/4.jpg\"><br>            <img src=\"images/fristniupai/10.jpg\"><br>        </div><br>    </div><br></div></div></div></div>\n<hr>\n\n<h3 id=\"2018-07-27【乌镇之旅】\"><a href=\"#2018-07-27【乌镇之旅】\" class=\"headerlink\" title=\"2018-07-27【乌镇之旅】\"></a>2018-07-27【乌镇之旅】</h3><div class=\"tabs\" id=\"2018-07-27乌镇之旅\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2018-07-27乌镇之旅-1\">美景</a></li><li class=\"tab\"><a href=\"#2018-07-27乌镇之旅-2\">美食</a></li><li class=\"tab\"><a href=\"#2018-07-27乌镇之旅-3\">人物</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2018-07-27乌镇之旅-1\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing6.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing5.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing1.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing8.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing2.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing7.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meijing3.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing4.jpg\"><br>            <img src=\"images/wuzhenzhilv/meijing9.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2018-07-27乌镇之旅-2\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi3.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi2.jpg\"><br>        </div><br>        <div class=\"phote-column\"><br>            <img src=\"images/wuzhenzhilv/meishi1.jpg\"><br>        </div><br>    </div><br></div></div><div class=\"tab-pane\" id=\"2018-07-27乌镇之旅-3\"><div class=\"phote-page\"><br>    <div class=\"phote-list\"><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu7.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu2.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu3.jpg\"><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu4.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu5.jpg\"><br><br>    </div><br>    <div class=\"phote-column\"><br>        <img src=\"images/wuzhenzhilv/renwu1.jpg\"><br>        <img src=\"images/wuzhenzhilv/renwu6.jpg\"><br>    </div><br>    </div><br></div></div></div></div>\n<hr>\n"},{"title":"博文标签","date":"2018-10-22T05:58:44.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 博文标签\ndate: 2018-10-22 13:58:44\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-06-05T14:53:57.234Z","path":"tags/index.html","layout":"page","_id":"ckcd0s38100g5tabjwi1wtn03","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"test","desc":"est","abbrlink":63534,"date":"2019-05-15T12:22:27.000Z","updated":"2019-05-15T12:22:27.000Z","_content":"\n> cq\n\n{% cq %}\n一个爱老婆的Python程序猿。。。。。。\n**PyGo²**\n{% endcq %}\n\n> button\n\n{% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw, 百度首页标题 %}\n\n> video\n\n{% video /publicfiles/xiao6.mp4 %}\n\n<!--more-->\n\n> exturl\n\n{% exturl https://www.baidu.com 百度首页 %}\n\n> fi-images\n\n{% fi /images/article_wdyxxy.jpg %}\n<img src=\"/images/article_wdyxxy.jpg\" style=\"border:1.5px solid blue\" alt=\"\"/>\n\n> note\n\n{% note default %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary %}\nprimary 提示块标签\n{% endnote %}\n\n> pdf\n\n{% pdf /publicfiles/PythonStudy.pdf %}\n\n> mermaid\n\n{% mermaid graph TD %}\nA[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n{% endmermaid %}\n\n\n\n{% mermaid graph LR %}\n47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n{% endmermaid %}\n\n{% mermaid sequenceDiagram %}\nparticipant Alice\nparticipant Bob\nparticipant John as John<br/>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n{% endmermaid %}\n\n{% note success %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger %}\ndanger 提示块标签\n{% endnote %}\n\n> tabs\n\n{% tabs test1 %}\n<!-- tab base1 -->\n**选项卡 1**\n<!-- endtab -->\n<!-- tab base2 -->\n**选项卡 2**\n<!-- endtab -->\n<!-- tab base3 -->\n**选项卡 3** 名字为A\n<!-- endtab -->\n{% endtabs %}\nprimary，success，info，warning，danger\n\n{% label default@default %}\n{% label primary@primary %}\n{% label success@success %}\n{% label info@info %}\n{% label warning@warning %}\n{% label danger@danger %}\n\n{% echarts 400 '85%' %}\n{\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    legend: {\n        data:['利润', '支出', '收入']\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    yAxis : [\n        {\n            type : 'category',\n            axisTick : {show: false},\n            data : ['周一','周二','周三','周四','周五','周六','周日']\n        }\n    ],\n    series : [\n        {\n            name:'利润',\n            type:'bar',\n            itemStyle : {\n                normal: {\n                    label: {show: true, position: 'inside'}\n                }\n            },\n            data:[200, 170, 240, 244, 200, 220, 210]\n        },\n        {\n            name:'收入',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {\n                normal: {\n                    label : {show: true}\n                }\n            },\n            data:[320, 302, 341, 374, 390, 450, 420]\n        },\n        {\n            name:'支出',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {normal: {\n                label : {show: true, position: 'left'}\n            }},\n            data:[-120, -132, -101, -134, -190, -230, -210]\n        }\n    ]\n};\n{% endecharts %}\n","source":"_drafts/test.md","raw":"---\ntitle: test\ndesc: est\ncategories:\n  - 杂七杂八\ntags:\n  - 实验\nabbrlink: 63534\ndate: 2019-05-15 20:22:27\nupdated: 2019-05-15 20:22:27\n---\n\n> cq\n\n{% cq %}\n一个爱老婆的Python程序猿。。。。。。\n**PyGo²**\n{% endcq %}\n\n> button\n\n{% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw, 百度首页标题 %}\n\n> video\n\n{% video /publicfiles/xiao6.mp4 %}\n\n<!--more-->\n\n> exturl\n\n{% exturl https://www.baidu.com 百度首页 %}\n\n> fi-images\n\n{% fi /images/article_wdyxxy.jpg %}\n<img src=\"/images/article_wdyxxy.jpg\" style=\"border:1.5px solid blue\" alt=\"\"/>\n\n> note\n\n{% note default %}\ndefault 提示块标签\n{% endnote %}\n\n{% note primary %}\nprimary 提示块标签\n{% endnote %}\n\n> pdf\n\n{% pdf /publicfiles/PythonStudy.pdf %}\n\n> mermaid\n\n{% mermaid graph TD %}\nA[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n{% endmermaid %}\n\n\n\n{% mermaid graph LR %}\n47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n{% endmermaid %}\n\n{% mermaid sequenceDiagram %}\nparticipant Alice\nparticipant Bob\nparticipant John as John<br/>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br/>long time, so long<br/>that the text does<br/>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n{% endmermaid %}\n\n{% note success %}\nsuccess 提示块标签\n{% endnote %}\n\n{% note info %}\ninfo 提示块标签\n{% endnote %}\n\n{% note warning %}\nwarning 提示块标签\n{% endnote %}\n\n{% note danger %}\ndanger 提示块标签\n{% endnote %}\n\n> tabs\n\n{% tabs test1 %}\n<!-- tab base1 -->\n**选项卡 1**\n<!-- endtab -->\n<!-- tab base2 -->\n**选项卡 2**\n<!-- endtab -->\n<!-- tab base3 -->\n**选项卡 3** 名字为A\n<!-- endtab -->\n{% endtabs %}\nprimary，success，info，warning，danger\n\n{% label default@default %}\n{% label primary@primary %}\n{% label success@success %}\n{% label info@info %}\n{% label warning@warning %}\n{% label danger@danger %}\n\n{% echarts 400 '85%' %}\n{\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    legend: {\n        data:['利润', '支出', '收入']\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    yAxis : [\n        {\n            type : 'category',\n            axisTick : {show: false},\n            data : ['周一','周二','周三','周四','周五','周六','周日']\n        }\n    ],\n    series : [\n        {\n            name:'利润',\n            type:'bar',\n            itemStyle : {\n                normal: {\n                    label: {show: true, position: 'inside'}\n                }\n            },\n            data:[200, 170, 240, 244, 200, 220, 210]\n        },\n        {\n            name:'收入',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {\n                normal: {\n                    label : {show: true}\n                }\n            },\n            data:[320, 302, 341, 374, 390, 450, 420]\n        },\n        {\n            name:'支出',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {normal: {\n                label : {show: true, position: 'left'}\n            }},\n            data:[-120, -132, -101, -134, -190, -230, -210]\n        }\n    ]\n};\n{% endecharts %}\n","slug":"test","published":0,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2lr0001tabj6ungeb1p","content":"<blockquote>\n<p>cq</p>\n</blockquote>\n<blockquote class=\"blockquote-center\"><p>一个爱老婆的Python程序猿。。。。。。<br><strong>PyGo²</strong></p>\n</blockquote>\n<blockquote>\n<p>button</p>\n</blockquote>\n<a class=\"btn\" href=\"https://www.baidu.com\" title=\"百度首页标题\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-download fa-lg fa-fw\"></i>百度首页</a>\n<blockquote>\n<p>video</p>\n</blockquote>\n<video src=\"/publicfiles/xiao6.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>\n<a id=\"more\"></a>\n<blockquote>\n<p>exturl</p>\n</blockquote>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29t\" title=\"百度首页\"><i class=\"fa fa-external-link\"></i></span>\n<blockquote>\n<p>fi-images</p>\n</blockquote>\n<span itemprop=\"image\" itemscope itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/images/article_wdyxxy.jpg\" class=\"full-image\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span>\n<p><img src=\"/images/article_wdyxxy.jpg\" style=\"border:1.5px solid blue\" alt></p>\n<blockquote>\n<p>note</p>\n</blockquote>\n<div class=\"note default\">\n            <p>default 提示块标签</p>\n          </div>\n<div class=\"note primary\">\n            <p>primary 提示块标签</p>\n          </div>\n<blockquote>\n<p>pdf</p>\n</blockquote>\n<div class=\"pdf\" target=\"/publicfiles/PythonStudy.pdf\" height></div>\n<blockquote>\n<p>mermaid</p>\n</blockquote>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph TD\n            A[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n          </pre>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n          </pre>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            sequenceDiagram\n            participant Alice\nparticipant Bob\nparticipant John as John<br>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n          </pre>\n<div class=\"note success\">\n            <p>success 提示块标签</p>\n          </div>\n<div class=\"note info\">\n            <p>info 提示块标签</p>\n          </div>\n<div class=\"note warning\">\n            <p>warning 提示块标签</p>\n          </div>\n<div class=\"note danger\">\n            <p>danger 提示块标签</p>\n          </div>\n<blockquote>\n<p>tabs</p>\n</blockquote>\n<div class=\"tabs\" id=\"test1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#test1-1\">base1</a></li><li class=\"tab\"><a href=\"#test1-2\">base2</a></li><li class=\"tab\"><a href=\"#test1-3\">base3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"test1-1\"><p><strong>选项卡 1</strong></p></div><div class=\"tab-pane\" id=\"test1-2\"><p><strong>选项卡 2</strong></p></div><div class=\"tab-pane\" id=\"test1-3\"><p><strong>选项卡 3</strong> 名字为A</p></div></div></div>\n<p>primary，success，info，warning，danger</p>\n<span class=\"label default\">default</span>\n<span class=\"label primary\">primary</span>\n<span class=\"label success\">success</span>\n<span class=\"label info\">info</span>\n<span class=\"label warning\">warning</span>\n<span class=\"label danger\">danger</span>\n<div id=\"echarts2110\" style=\"width: 85%;height: 400px;margin: 0 auto\"></div>\r\n<script type=\"text/javascript\">\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('echarts2110'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    legend: {\n        data:['利润', '支出', '收入']\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    yAxis : [\n        {\n            type : 'category',\n            axisTick : {show: false},\n            data : ['周一','周二','周三','周四','周五','周六','周日']\n        }\n    ],\n    series : [\n        {\n            name:'利润',\n            type:'bar',\n            itemStyle : {\n                normal: {\n                    label: {show: true, position: 'inside'}\n                }\n            },\n            data:[200, 170, 240, 244, 200, 220, 210]\n        },\n        {\n            name:'收入',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {\n                normal: {\n                    label : {show: true}\n                }\n            },\n            data:[320, 302, 341, 374, 390, 450, 420]\n        },\n        {\n            name:'支出',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {normal: {\n                label : {show: true, position: 'left'}\n            }},\n            data:[-120, -132, -101, -134, -190, -230, -210]\n        }\n    ]\n};\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n</script>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>cq</p>\n</blockquote>\n<blockquote class=\"blockquote-center\"><p>一个爱老婆的Python程序猿。。。。。。<br><strong>PyGo²</strong></p>\n</blockquote>\n<blockquote>\n<p>button</p>\n</blockquote>\n<a class=\"btn\" href=\"https://www.baidu.com\" title=\"百度首页标题\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-download fa-lg fa-fw\"></i>百度首页</a>\n<blockquote>\n<p>video</p>\n</blockquote>\n<video src=\"/publicfiles/xiao6.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>","more":"<blockquote>\n<p>exturl</p>\n</blockquote>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29t\" title=\"百度首页\"><i class=\"fa fa-external-link\"></i></span>\n<blockquote>\n<p>fi-images</p>\n</blockquote>\n<span itemprop=\"image\" itemscope itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/images/article_wdyxxy.jpg\" class=\"full-image\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span>\n<p><img src=\"/images/article_wdyxxy.jpg\" style=\"border:1.5px solid blue\" alt></p>\n<blockquote>\n<p>note</p>\n</blockquote>\n<div class=\"note default\">\n            <p>default 提示块标签</p>\n          </div>\n<div class=\"note primary\">\n            <p>primary 提示块标签</p>\n          </div>\n<blockquote>\n<p>pdf</p>\n</blockquote>\n<div class=\"pdf\" target=\"/publicfiles/PythonStudy.pdf\" height></div>\n<blockquote>\n<p>mermaid</p>\n</blockquote>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph TD\n            A[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n          </pre>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph LR\n            47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget)\n35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary)\n41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary)\n44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary)\n46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary)\n40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary)\n38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary)\n43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary)\n42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary)\n45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity)\n35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity)\n41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers)\n39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays)\n39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays)\n39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost)\n39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits)\n35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails)\n36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails)\n          </pre>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            sequenceDiagram\n            participant Alice\nparticipant Bob\nparticipant John as John<br>Second Line\nAlice ->> Bob: Hello Bob, how are you?\nBob-->>John: How about you John?\nBob--x Alice: I am good thanks!\nBob-x John: I am good thanks!\nNote right of John: Bob thinks a long<br>long time, so long<br>that the text does<br>not fit on a row.\nBob-->Alice: Checking with John...\nalt either this\nAlice->>John: Yes\nelse or this\nAlice->>John: No\nelse or this will happen\nAlice->John: Maybe\nend\npar this happens in parallel\nAlice -->> Bob: Parallel message 1\nand\nAlice -->> John: Parallel message 2\nend\n          </pre>\n<div class=\"note success\">\n            <p>success 提示块标签</p>\n          </div>\n<div class=\"note info\">\n            <p>info 提示块标签</p>\n          </div>\n<div class=\"note warning\">\n            <p>warning 提示块标签</p>\n          </div>\n<div class=\"note danger\">\n            <p>danger 提示块标签</p>\n          </div>\n<blockquote>\n<p>tabs</p>\n</blockquote>\n<div class=\"tabs\" id=\"test1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#test1-1\">base1</a></li><li class=\"tab\"><a href=\"#test1-2\">base2</a></li><li class=\"tab\"><a href=\"#test1-3\">base3</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"test1-1\"><p><strong>选项卡 1</strong></p></div><div class=\"tab-pane\" id=\"test1-2\"><p><strong>选项卡 2</strong></p></div><div class=\"tab-pane\" id=\"test1-3\"><p><strong>选项卡 3</strong> 名字为A</p></div></div></div>\n<p>primary，success，info，warning，danger</p>\n<span class=\"label default\">default</span>\n<span class=\"label primary\">primary</span>\n<span class=\"label success\">success</span>\n<span class=\"label info\">info</span>\n<span class=\"label warning\">warning</span>\n<span class=\"label danger\">danger</span>\n<div id=\"echarts2110\" style=\"width: 85%;height: 400px;margin: 0 auto\"></div>\r\n<script type=\"text/javascript\">\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = echarts.init(document.getElementById('echarts2110'));\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    legend: {\n        data:['利润', '支出', '收入']\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis : [\n        {\n            type : 'value'\n        }\n    ],\n    yAxis : [\n        {\n            type : 'category',\n            axisTick : {show: false},\n            data : ['周一','周二','周三','周四','周五','周六','周日']\n        }\n    ],\n    series : [\n        {\n            name:'利润',\n            type:'bar',\n            itemStyle : {\n                normal: {\n                    label: {show: true, position: 'inside'}\n                }\n            },\n            data:[200, 170, 240, 244, 200, 220, 210]\n        },\n        {\n            name:'收入',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {\n                normal: {\n                    label : {show: true}\n                }\n            },\n            data:[320, 302, 341, 374, 390, 450, 420]\n        },\n        {\n            name:'支出',\n            type:'bar',\n            stack: '总量',\n            itemStyle: {normal: {\n                label : {show: true, position: 'left'}\n            }},\n            data:[-120, -132, -101, -134, -190, -230, -210]\n        }\n    ]\n};\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n</script>"},{"title":"大学之证书那点事","comments":0,"top":false,"abbrlink":22143,"date":"2019-06-23T13:24:01.000Z","updated":"2019-06-23T13:24:01.000Z","desc":"回顾一下在大学那4年得到证书的那点事","keywords":"大学, 证书, 生活, 照片, 回忆","_content":"\n{% cq %}\n回顾一下\n大学4年得到的证书\n{% endcq %}\n\n<!--more-->\n<hr />\n\n#### CET\n\n> CET-4准考证\n\n{% tabs CET4准考证 %}\n<!-- tab 时间 -->\n**2011-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet4zhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> CET-4准考证\n\n{% tabs CET4成绩 %}\n<!-- tab 时间 -->\n**2011-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet4.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> CET-6准考证\n\n{% tabs CET6准考证 %}\n<!-- tab 时间 -->\n**2012-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet6zhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### NCRE\n\n> NCRE-3数据库\n\n{% tabs NCRE-3数据库 %}\n<!-- tab 时间 -->\n**2011-09**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"jisuanjizhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### 研究生\n\n> 准考证\n\n{% tabs 研究生准考证 %}\n<!-- tab 时间 -->\n**2013-01**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"yanjiushengzhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 成绩\n\n{% tabs 研究生成绩 %}\n<!-- tab 时间 -->\n**2013-01**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"kaoyan.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### GIS\n\n> GIS工程师\n\n{% tabs GIS工程师 %}\n<!-- tab 时间 -->\n**2012-11**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"gisgongchengshi.jpg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 作品\n\n{% tabs GIS作品 %}\n<!-- tab 时间 -->\n**2010-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"giszuopin.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### 表彰\n\n> 校优实习生\n\n{% tabs 校优实习生 %}\n<!-- tab 时间 -->\n**2013-05**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"shixisheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 奖学金\n\n{% tabs 奖学金 %}\n<!-- tab 时间 -->\n**2013-06**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"jiangxuejin.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n #### 其他\n\n > 普通话\n\n {% tabs 普通话 %}\n <!-- tab 时间 -->\n **2012-06**\n <!-- endtab -->\n <!-- tab 图片 -->\n<img src=\"putonghua.jpeg\" width=\"\" alt=\"\"/>\n <!-- endtab -->\n {% endtabs %}\n","source":"_posts/College-大学证书那点事.md","raw":"---\ntitle: 大学之证书那点事\ncomments: false\ncategories:\n  - [大学]\ntags: [证书, 回忆录]\ntop: false\nabbrlink: 22143\ndate: 2019-06-23 21:24:01\nupdated: 2019-06-23 21:24:01\ndesc: 回顾一下在大学那4年得到证书的那点事\nkeywords: 大学, 证书, 生活, 照片, 回忆\n---\n\n{% cq %}\n回顾一下\n大学4年得到的证书\n{% endcq %}\n\n<!--more-->\n<hr />\n\n#### CET\n\n> CET-4准考证\n\n{% tabs CET4准考证 %}\n<!-- tab 时间 -->\n**2011-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet4zhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> CET-4准考证\n\n{% tabs CET4成绩 %}\n<!-- tab 时间 -->\n**2011-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet4.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> CET-6准考证\n\n{% tabs CET6准考证 %}\n<!-- tab 时间 -->\n**2012-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"cet6zhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### NCRE\n\n> NCRE-3数据库\n\n{% tabs NCRE-3数据库 %}\n<!-- tab 时间 -->\n**2011-09**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"jisuanjizhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### 研究生\n\n> 准考证\n\n{% tabs 研究生准考证 %}\n<!-- tab 时间 -->\n**2013-01**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"yanjiushengzhunkaozheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 成绩\n\n{% tabs 研究生成绩 %}\n<!-- tab 时间 -->\n**2013-01**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"kaoyan.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### GIS\n\n> GIS工程师\n\n{% tabs GIS工程师 %}\n<!-- tab 时间 -->\n**2012-11**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"gisgongchengshi.jpg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 作品\n\n{% tabs GIS作品 %}\n<!-- tab 时间 -->\n**2010-12**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"giszuopin.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n#### 表彰\n\n> 校优实习生\n\n{% tabs 校优实习生 %}\n<!-- tab 时间 -->\n**2013-05**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"shixisheng.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n> 奖学金\n\n{% tabs 奖学金 %}\n<!-- tab 时间 -->\n**2013-06**\n<!-- endtab -->\n<!-- tab 图片 -->\n<img src=\"jiangxuejin.jpeg\" width=\"\" alt=\"\"/>\n<!-- endtab -->\n{% endtabs %}\n\n #### 其他\n\n > 普通话\n\n {% tabs 普通话 %}\n <!-- tab 时间 -->\n **2012-06**\n <!-- endtab -->\n <!-- tab 图片 -->\n<img src=\"putonghua.jpeg\" width=\"\" alt=\"\"/>\n <!-- endtab -->\n {% endtabs %}\n","slug":"College-大学证书那点事","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ly0003tabj2s60mri6","content":"<blockquote class=\"blockquote-center\"><p>回顾一下<br>大学4年得到的证书</p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"CET\"><a href=\"#CET\" class=\"headerlink\" title=\"CET\"></a>CET</h4><blockquote>\n<p>CET-4准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet4准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet4准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#cet4准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet4准考证-1\"><p><strong>2011-12</strong></p></div><div class=\"tab-pane\" id=\"cet4准考证-2\"><p><img src=\"cet4zhunkaozheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>CET-4准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet4成绩\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet4成绩-1\">时间</a></li><li class=\"tab\"><a href=\"#cet4成绩-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet4成绩-1\"><p><strong>2011-12</strong></p></div><div class=\"tab-pane\" id=\"cet4成绩-2\"><p><img src=\"cet4.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>CET-6准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet6准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet6准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#cet6准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet6准考证-1\"><p><strong>2012-12</strong></p></div><div class=\"tab-pane\" id=\"cet6准考证-2\"><p><img src=\"cet6zhunkaozheng.jpeg\" width alt></p></div></div></div>\n<h4 id=\"NCRE\"><a href=\"#NCRE\" class=\"headerlink\" title=\"NCRE\"></a>NCRE</h4><blockquote>\n<p>NCRE-3数据库</p>\n</blockquote>\n<div class=\"tabs\" id=\"ncre-3数据库\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#ncre-3数据库-1\">时间</a></li><li class=\"tab\"><a href=\"#ncre-3数据库-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"ncre-3数据库-1\"><p><strong>2011-09</strong></p></div><div class=\"tab-pane\" id=\"ncre-3数据库-2\"><p><img src=\"jisuanjizhunkaozheng.jpeg\" width alt></p></div></div></div>\n<h4 id=\"研究生\"><a href=\"#研究生\" class=\"headerlink\" title=\"研究生\"></a>研究生</h4><blockquote>\n<p>准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"研究生准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#研究生准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#研究生准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"研究生准考证-1\"><p><strong>2013-01</strong></p></div><div class=\"tab-pane\" id=\"研究生准考证-2\"><p><img src=\"yanjiushengzhunkaozheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>成绩</p>\n</blockquote>\n<div class=\"tabs\" id=\"研究生成绩\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#研究生成绩-1\">时间</a></li><li class=\"tab\"><a href=\"#研究生成绩-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"研究生成绩-1\"><p><strong>2013-01</strong></p></div><div class=\"tab-pane\" id=\"研究生成绩-2\"><p><img src=\"kaoyan.jpeg\" width alt></p></div></div></div>\n<h4 id=\"GIS\"><a href=\"#GIS\" class=\"headerlink\" title=\"GIS\"></a>GIS</h4><blockquote>\n<p>GIS工程师</p>\n</blockquote>\n<div class=\"tabs\" id=\"gis工程师\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gis工程师-1\">时间</a></li><li class=\"tab\"><a href=\"#gis工程师-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gis工程师-1\"><p><strong>2012-11</strong></p></div><div class=\"tab-pane\" id=\"gis工程师-2\"><p><img src=\"gisgongchengshi.jpg\" width alt></p></div></div></div>\n<blockquote>\n<p>作品</p>\n</blockquote>\n<div class=\"tabs\" id=\"gis作品\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gis作品-1\">时间</a></li><li class=\"tab\"><a href=\"#gis作品-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gis作品-1\"><p><strong>2010-12</strong></p></div><div class=\"tab-pane\" id=\"gis作品-2\"><p><img src=\"giszuopin.jpeg\" width alt></p></div></div></div>\n<h4 id=\"表彰\"><a href=\"#表彰\" class=\"headerlink\" title=\"表彰\"></a>表彰</h4><blockquote>\n<p>校优实习生</p>\n</blockquote>\n<div class=\"tabs\" id=\"校优实习生\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#校优实习生-1\">时间</a></li><li class=\"tab\"><a href=\"#校优实习生-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"校优实习生-1\"><p><strong>2013-05</strong></p></div><div class=\"tab-pane\" id=\"校优实习生-2\"><p><img src=\"shixisheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>奖学金</p>\n</blockquote>\n<div class=\"tabs\" id=\"奖学金\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#奖学金-1\">时间</a></li><li class=\"tab\"><a href=\"#奖学金-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"奖学金-1\"><p><strong>2013-06</strong></p></div><div class=\"tab-pane\" id=\"奖学金-2\"><p><img src=\"jiangxuejin.jpeg\" width alt></p></div></div></div>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><blockquote>\n<p>普通话</p>\n</blockquote>\n <div class=\"tabs\" id=\"普通话\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#普通话-1\">时间</a></li><li class=\"tab\"><a href=\"#普通话-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"普通话-1\"><p> <strong>2012-06</strong></p></div><div class=\"tab-pane\" id=\"普通话-2\"><p><img src=\"putonghua.jpeg\" width alt></p></div></div></div>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>回顾一下<br>大学4年得到的证书</p>\n</blockquote>","more":"<hr>\n\n<h4 id=\"CET\"><a href=\"#CET\" class=\"headerlink\" title=\"CET\"></a>CET</h4><blockquote>\n<p>CET-4准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet4准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet4准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#cet4准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet4准考证-1\"><p><strong>2011-12</strong></p></div><div class=\"tab-pane\" id=\"cet4准考证-2\"><p><img src=\"cet4zhunkaozheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>CET-4准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet4成绩\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet4成绩-1\">时间</a></li><li class=\"tab\"><a href=\"#cet4成绩-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet4成绩-1\"><p><strong>2011-12</strong></p></div><div class=\"tab-pane\" id=\"cet4成绩-2\"><p><img src=\"cet4.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>CET-6准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"cet6准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#cet6准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#cet6准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"cet6准考证-1\"><p><strong>2012-12</strong></p></div><div class=\"tab-pane\" id=\"cet6准考证-2\"><p><img src=\"cet6zhunkaozheng.jpeg\" width alt></p></div></div></div>\n<h4 id=\"NCRE\"><a href=\"#NCRE\" class=\"headerlink\" title=\"NCRE\"></a>NCRE</h4><blockquote>\n<p>NCRE-3数据库</p>\n</blockquote>\n<div class=\"tabs\" id=\"ncre-3数据库\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#ncre-3数据库-1\">时间</a></li><li class=\"tab\"><a href=\"#ncre-3数据库-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"ncre-3数据库-1\"><p><strong>2011-09</strong></p></div><div class=\"tab-pane\" id=\"ncre-3数据库-2\"><p><img src=\"jisuanjizhunkaozheng.jpeg\" width alt></p></div></div></div>\n<h4 id=\"研究生\"><a href=\"#研究生\" class=\"headerlink\" title=\"研究生\"></a>研究生</h4><blockquote>\n<p>准考证</p>\n</blockquote>\n<div class=\"tabs\" id=\"研究生准考证\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#研究生准考证-1\">时间</a></li><li class=\"tab\"><a href=\"#研究生准考证-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"研究生准考证-1\"><p><strong>2013-01</strong></p></div><div class=\"tab-pane\" id=\"研究生准考证-2\"><p><img src=\"yanjiushengzhunkaozheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>成绩</p>\n</blockquote>\n<div class=\"tabs\" id=\"研究生成绩\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#研究生成绩-1\">时间</a></li><li class=\"tab\"><a href=\"#研究生成绩-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"研究生成绩-1\"><p><strong>2013-01</strong></p></div><div class=\"tab-pane\" id=\"研究生成绩-2\"><p><img src=\"kaoyan.jpeg\" width alt></p></div></div></div>\n<h4 id=\"GIS\"><a href=\"#GIS\" class=\"headerlink\" title=\"GIS\"></a>GIS</h4><blockquote>\n<p>GIS工程师</p>\n</blockquote>\n<div class=\"tabs\" id=\"gis工程师\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gis工程师-1\">时间</a></li><li class=\"tab\"><a href=\"#gis工程师-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gis工程师-1\"><p><strong>2012-11</strong></p></div><div class=\"tab-pane\" id=\"gis工程师-2\"><p><img src=\"gisgongchengshi.jpg\" width alt></p></div></div></div>\n<blockquote>\n<p>作品</p>\n</blockquote>\n<div class=\"tabs\" id=\"gis作品\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#gis作品-1\">时间</a></li><li class=\"tab\"><a href=\"#gis作品-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"gis作品-1\"><p><strong>2010-12</strong></p></div><div class=\"tab-pane\" id=\"gis作品-2\"><p><img src=\"giszuopin.jpeg\" width alt></p></div></div></div>\n<h4 id=\"表彰\"><a href=\"#表彰\" class=\"headerlink\" title=\"表彰\"></a>表彰</h4><blockquote>\n<p>校优实习生</p>\n</blockquote>\n<div class=\"tabs\" id=\"校优实习生\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#校优实习生-1\">时间</a></li><li class=\"tab\"><a href=\"#校优实习生-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"校优实习生-1\"><p><strong>2013-05</strong></p></div><div class=\"tab-pane\" id=\"校优实习生-2\"><p><img src=\"shixisheng.jpeg\" width alt></p></div></div></div>\n<blockquote>\n<p>奖学金</p>\n</blockquote>\n<div class=\"tabs\" id=\"奖学金\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#奖学金-1\">时间</a></li><li class=\"tab\"><a href=\"#奖学金-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"奖学金-1\"><p><strong>2013-06</strong></p></div><div class=\"tab-pane\" id=\"奖学金-2\"><p><img src=\"jiangxuejin.jpeg\" width alt></p></div></div></div>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><blockquote>\n<p>普通话</p>\n</blockquote>\n <div class=\"tabs\" id=\"普通话\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#普通话-1\">时间</a></li><li class=\"tab\"><a href=\"#普通话-2\">图片</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"普通话-1\"><p> <strong>2012-06</strong></p></div><div class=\"tab-pane\" id=\"普通话-2\"><p><img src=\"putonghua.jpeg\" width alt></p></div></div></div>"},{"title":"Mysql常用命令","comments":0,"top":false,"desc":"Mysql数据库常用命令记录","keywords":"Mysql, 数据库, 常用命令, select, create, user, table, database","abbrlink":14802,"date":"2020-07-07T13:00:04.000Z","updated":"2020-07-07T13:00:04.000Z","_content":"\n![](/images/article_mysql.png)\n\n{% note primary %}\n记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> #### 创建数据库\n\n```\ncreate database 数据库名称 default character set utf8 collate utf8_general_ci;\n```\n\n> #### 创建用户\n\n```\ncreate user '用户名'@'%' IDENTIFIED BY '密码';\n-- % 表示通配符，任意远程主机都可以连接主机【常用】\n\ncreate user '用户名'@'localhost' IDENTIFIED BY '123456';\n-- localhost 表示本机，用户只有通过本机进行连接主机\n\ncreate user '用户名'@'XXX.XXX.XX.XXX' IDENTIFIED BY '123456';\n-- XXX.XXX.XX.XXX 表示ip，用户只有通过指定的ip主机进行连接\n```\n\n> #### 授权\n\n```\n# 所有权限 所有表【常用】\ngrant all on *.* to '用户名称';\n\n# 所有权限 指定数据库【常用】\ngrant * on 数据库名称.* to '用户名称';\n\n# 指定权限 指定数据库\ngrant select,insert,update,delete,create on 数据库名称.* to '用户名称';\n\nflush  privileges;\n\n# 查看权限\nshow grants for '用户名称';\n```\n\n> #### 其他\n\n数据库列表：show database;\n表列表：show tables;\n切换数据库：use 数据库;\n\n{% raw %}\n<div class=\"post_cus_note\">查询方面略</div>\n{% endraw %}\n","source":"_posts/DB-Mysql常用命令.md","raw":"---\ntitle: Mysql常用命令\ncomments: false\ncategories:\n  - - 数据库\ntags:\n  - Mysql\ntop: false\ndesc: Mysql数据库常用命令记录\nkeywords: 'Mysql, 数据库, 常用命令, select, create, user, table, database'\nabbrlink: 14802\ndate: 2020-07-07 21:00:04\nupdated: 2020-07-07 21:00:04\n---\n\n![](/images/article_mysql.png)\n\n{% note primary %}\n记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> #### 创建数据库\n\n```\ncreate database 数据库名称 default character set utf8 collate utf8_general_ci;\n```\n\n> #### 创建用户\n\n```\ncreate user '用户名'@'%' IDENTIFIED BY '密码';\n-- % 表示通配符，任意远程主机都可以连接主机【常用】\n\ncreate user '用户名'@'localhost' IDENTIFIED BY '123456';\n-- localhost 表示本机，用户只有通过本机进行连接主机\n\ncreate user '用户名'@'XXX.XXX.XX.XXX' IDENTIFIED BY '123456';\n-- XXX.XXX.XX.XXX 表示ip，用户只有通过指定的ip主机进行连接\n```\n\n> #### 授权\n\n```\n# 所有权限 所有表【常用】\ngrant all on *.* to '用户名称';\n\n# 所有权限 指定数据库【常用】\ngrant * on 数据库名称.* to '用户名称';\n\n# 指定权限 指定数据库\ngrant select,insert,update,delete,create on 数据库名称.* to '用户名称';\n\nflush  privileges;\n\n# 查看权限\nshow grants for '用户名称';\n```\n\n> #### 其他\n\n数据库列表：show database;\n表列表：show tables;\n切换数据库：use 数据库;\n\n{% raw %}\n<div class=\"post_cus_note\">查询方面略</div>\n{% endraw %}\n","slug":"DB-Mysql常用命令","published":1,"_id":"ckcd0s2m40007tabjnj68fmhz","layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/article_mysql.png\" alt></p>\n<div class=\"note primary\">\n            <p>记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<blockquote>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database 数据库名称 default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create user &apos;用户名&apos;@&apos;%&apos; IDENTIFIED BY &apos;密码&apos;;</span><br><span class=\"line\">-- % 表示通配符，任意远程主机都可以连接主机【常用】</span><br><span class=\"line\"></span><br><span class=\"line\">create user &apos;用户名&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">-- localhost 表示本机，用户只有通过本机进行连接主机</span><br><span class=\"line\"></span><br><span class=\"line\">create user &apos;用户名&apos;@&apos;XXX.XXX.XX.XXX&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">-- XXX.XXX.XX.XXX 表示ip，用户只有通过指定的ip主机进行连接</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 所有权限 所有表【常用】</span><br><span class=\"line\">grant all on *.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 所有权限 指定数据库【常用】</span><br><span class=\"line\">grant * on 数据库名称.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定权限 指定数据库</span><br><span class=\"line\">grant select,insert,update,delete,create on 数据库名称.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">flush  privileges;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看权限</span><br><span class=\"line\">show grants for &apos;用户名称&apos;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4></blockquote>\n<p>数据库列表：show database;<br>表列表：show tables;<br>切换数据库：use 数据库;</p>\n\n<div class=\"post_cus_note\">查询方面略</div>\n\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_mysql.png\" alt></p>\n<div class=\"note primary\">\n            <p>记录一下常用的命令，虽然关于查询相关的命令常用（select、order by、where、join等），但是关于建立数据库、建立用户、授权等并不常用的命令，做个整理，也方便了自己进行查询和使用</p>\n          </div>","more":"<hr>\n\n<blockquote>\n<h4 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database 数据库名称 default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create user &apos;用户名&apos;@&apos;%&apos; IDENTIFIED BY &apos;密码&apos;;</span><br><span class=\"line\">-- % 表示通配符，任意远程主机都可以连接主机【常用】</span><br><span class=\"line\"></span><br><span class=\"line\">create user &apos;用户名&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">-- localhost 表示本机，用户只有通过本机进行连接主机</span><br><span class=\"line\"></span><br><span class=\"line\">create user &apos;用户名&apos;@&apos;XXX.XXX.XX.XXX&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">-- XXX.XXX.XX.XXX 表示ip，用户只有通过指定的ip主机进行连接</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4></blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 所有权限 所有表【常用】</span><br><span class=\"line\">grant all on *.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 所有权限 指定数据库【常用】</span><br><span class=\"line\">grant * on 数据库名称.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定权限 指定数据库</span><br><span class=\"line\">grant select,insert,update,delete,create on 数据库名称.* to &apos;用户名称&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">flush  privileges;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看权限</span><br><span class=\"line\">show grants for &apos;用户名称&apos;;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4></blockquote>\n<p>数据库列表：show database;<br>表列表：show tables;<br>切换数据库：use 数据库;</p>\n\n<div class=\"post_cus_note\">查询方面略</div>"},{"title":"Mysql的表复制","comments":0,"top":false,"abbrlink":34145,"date":"2020-04-15T06:12:43.000Z","updated":"2020-04-15T06:12:43.000Z","desc":"关于Postgresql、Mysql等数据库的表复制","keywords":"Mysql, 数据库, 复制, 数据","_content":"\n#### 背景\n\n![](/images/article_mariadb.jpeg)\n\n{% note primary %}\n玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 正文\n\n表复制分为表结构复制、表数据复制与整表（表结构+表数据）复制。\n\n> 表结构\n\n```\n# 创建表结构\nCREATE TABLE 新表 LIKE 旧表;\n\nCREATE TABLE 新表 SELECT * FROM 旧表 WHERE 1=2;\n\nSELECT * INTO 表2 FROM 表1 WHERE 1=2;\n\n# 查看创建表的sql\nSHOW CREATE TABLE 旧表;\n```\n\n> 表数据\n\n```\nSELECT * INTO 新表 FROM 旧表;\n\nINSERT INTO 新表 SELECT * FROM 旧表;\n```\n\n> 表结构+表数据\n\n```\nCREATE TABLE 新表 SELECT * FROM 旧表;\n```\n\n{% note danger %}\n<font size=5.5 color='red'>弊端：</font>\n新表中没有旧表的primary key、auto_increment等属性，需要通过alter进行添加。\n{% endnote %}\n\n#### 建议\n\n如果是想复制出一个一模一样的表，建议使用：\n```\n# 查看创建表的sql\nSHOW CREATE TABLE 旧表;\n\nINSERT INTO 新表 SELECT * FROM 旧表;\n```\n","source":"_posts/DB-Mysql复制表.md","raw":"---\ntitle: Mysql的表复制\ncomments: false\ncategories:\n  - [数据库]\ntags: [Mysql]\ntop: false\nabbrlink: 34145\ndate: 2020-04-15 14:12:43\nupdated: 2020-04-15 14:12:43\ndesc: 关于Postgresql、Mysql等数据库的表复制\nkeywords: Mysql, 数据库, 复制, 数据\n---\n\n#### 背景\n\n![](/images/article_mariadb.jpeg)\n\n{% note primary %}\n玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 正文\n\n表复制分为表结构复制、表数据复制与整表（表结构+表数据）复制。\n\n> 表结构\n\n```\n# 创建表结构\nCREATE TABLE 新表 LIKE 旧表;\n\nCREATE TABLE 新表 SELECT * FROM 旧表 WHERE 1=2;\n\nSELECT * INTO 表2 FROM 表1 WHERE 1=2;\n\n# 查看创建表的sql\nSHOW CREATE TABLE 旧表;\n```\n\n> 表数据\n\n```\nSELECT * INTO 新表 FROM 旧表;\n\nINSERT INTO 新表 SELECT * FROM 旧表;\n```\n\n> 表结构+表数据\n\n```\nCREATE TABLE 新表 SELECT * FROM 旧表;\n```\n\n{% note danger %}\n<font size=5.5 color='red'>弊端：</font>\n新表中没有旧表的primary key、auto_increment等属性，需要通过alter进行添加。\n{% endnote %}\n\n#### 建议\n\n如果是想复制出一个一模一样的表，建议使用：\n```\n# 查看创建表的sql\nSHOW CREATE TABLE 旧表;\n\nINSERT INTO 新表 SELECT * FROM 旧表;\n```\n","slug":"DB-Mysql复制表","published":1,"_id":"ckcd0s2m60009tabjof26t5sc","layout":"post","photos":[],"link":"","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p><img src=\"/images/article_mariadb.jpeg\" alt></p>\n<div class=\"note primary\">\n            <p>玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>表复制分为表结构复制、表数据复制与整表（表结构+表数据）复制。</p>\n<blockquote>\n<p>表结构</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建表结构</span><br><span class=\"line\">CREATE TABLE 新表 LIKE 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE 新表 SELECT * FROM 旧表 WHERE 1=2;</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT * INTO 表2 FROM 表1 WHERE 1=2;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看创建表的sql</span><br><span class=\"line\">SHOW CREATE TABLE 旧表;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表数据</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * INTO 新表 FROM 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表结构+表数据</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure>\n<div class=\"note danger\">\n            <p><font size=\"5.5\" color=\"red\">弊端：</font><br>新表中没有旧表的primary key、auto_increment等属性，需要通过alter进行添加。</p>\n          </div>\n<h4 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h4><p>如果是想复制出一个一模一样的表，建议使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看创建表的sql</span><br><span class=\"line\">SHOW CREATE TABLE 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p><img src=\"/images/article_mariadb.jpeg\" alt></p>\n<div class=\"note primary\">\n            <p>玩数据的都会涉及数据库，虽然Navicate带来了许多便利，但是本人还是喜欢使用sql，本篇介绍一下关于表复制的相关sql。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>表复制分为表结构复制、表数据复制与整表（表结构+表数据）复制。</p>\n<blockquote>\n<p>表结构</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建表结构</span><br><span class=\"line\">CREATE TABLE 新表 LIKE 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE TABLE 新表 SELECT * FROM 旧表 WHERE 1=2;</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT * INTO 表2 FROM 表1 WHERE 1=2;</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看创建表的sql</span><br><span class=\"line\">SHOW CREATE TABLE 旧表;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表数据</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT * INTO 新表 FROM 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>表结构+表数据</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure>\n<div class=\"note danger\">\n            <p><font size=\"5.5\" color=\"red\">弊端：</font><br>新表中没有旧表的primary key、auto_increment等属性，需要通过alter进行添加。</p>\n          </div>\n<h4 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h4><p>如果是想复制出一个一模一样的表，建议使用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看创建表的sql</span><br><span class=\"line\">SHOW CREATE TABLE 旧表;</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT INTO 新表 SELECT * FROM 旧表;</span><br></pre></td></tr></table></figure></p>"},{"title":"Postgresql的导表","comments":0,"top":false,"abbrlink":9742,"date":"2018-09-05T13:01:08.000Z","updated":"2019-09-05T13:00:54.000Z","desc":"关于Postgresql的数据导出方案，导表备份","keywords":"Postgresql, 导表, psql, 备份, 数据","_content":"\n![](/images/postgresql.jpg)\n\n#### 背景\n{% note primary %}\n前面已经介绍了常用的备份与恢复了，接下来介绍一下<font color='red' size=4.5>导表</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 正文\n\n很多情况，会有把数据导出的需求，轻重缓急总会有特别紧急的情况，但是又不是专业干db的人，还是记录下来，以防不时之需。\n\n针对于导表，个人总结了主要有2种方案，方案主要针对于服务器使用，具体能用Navicat等客户端能直连数据库的用户不用看了。\n\n> 客户端\n\n```\npsql --dbname=my_db_name --host=db_host_ip --username=my_username -c \"COPY (select id as COL_ID, name as COL_NAME from my_tab order by id) TO PATH with csv header\"\n```\n\n> 服务器\n\n```\nCOPY (select id as ID, description as TNAME from my_table order by id) to ‘path’ with csv header;\n```\n","source":"_posts/DB-postgresql的导表.md","raw":"---\ntitle: Postgresql的导表\ncomments: false\ncategories:\n  - [数据库]\ntags: [Postgresql]\ntop: false\nabbrlink: 9742\ndate: 2018-09-05 21:01:08\nupdated: 2019-09-05 21:00:54\ndesc: 关于Postgresql的数据导出方案，导表备份\nkeywords: Postgresql, 导表, psql, 备份, 数据\n---\n\n![](/images/postgresql.jpg)\n\n#### 背景\n{% note primary %}\n前面已经介绍了常用的备份与恢复了，接下来介绍一下<font color='red' size=4.5>导表</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 正文\n\n很多情况，会有把数据导出的需求，轻重缓急总会有特别紧急的情况，但是又不是专业干db的人，还是记录下来，以防不时之需。\n\n针对于导表，个人总结了主要有2种方案，方案主要针对于服务器使用，具体能用Navicat等客户端能直连数据库的用户不用看了。\n\n> 客户端\n\n```\npsql --dbname=my_db_name --host=db_host_ip --username=my_username -c \"COPY (select id as COL_ID, name as COL_NAME from my_tab order by id) TO PATH with csv header\"\n```\n\n> 服务器\n\n```\nCOPY (select id as ID, description as TNAME from my_table order by id) to ‘path’ with csv header;\n```\n","slug":"DB-postgresql的导表","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2m8000atabjq420kzmq","content":"<p><img src=\"/images/postgresql.jpg\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>前面已经介绍了常用的备份与恢复了，接下来介绍一下<font color=\"red\" size=\"4.5\">导表</font>。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>很多情况，会有把数据导出的需求，轻重缓急总会有特别紧急的情况，但是又不是专业干db的人，还是记录下来，以防不时之需。</p>\n<p>针对于导表，个人总结了主要有2种方案，方案主要针对于服务器使用，具体能用Navicat等客户端能直连数据库的用户不用看了。</p>\n<blockquote>\n<p>客户端</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql --dbname=my_db_name --host=db_host_ip --username=my_username -c &quot;COPY (select id as COL_ID, name as COL_NAME from my_tab order by id) TO PATH with csv header&quot;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>服务器</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COPY (select id as ID, description as TNAME from my_table order by id) to ‘path’ with csv header;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/postgresql.jpg\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>前面已经介绍了常用的备份与恢复了，接下来介绍一下<font color=\"red\" size=\"4.5\">导表</font>。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>很多情况，会有把数据导出的需求，轻重缓急总会有特别紧急的情况，但是又不是专业干db的人，还是记录下来，以防不时之需。</p>\n<p>针对于导表，个人总结了主要有2种方案，方案主要针对于服务器使用，具体能用Navicat等客户端能直连数据库的用户不用看了。</p>\n<blockquote>\n<p>客户端</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql --dbname=my_db_name --host=db_host_ip --username=my_username -c &quot;COPY (select id as COL_ID, name as COL_NAME from my_tab order by id) TO PATH with csv header&quot;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>服务器</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COPY (select id as ID, description as TNAME from my_table order by id) to ‘path’ with csv header;</span><br></pre></td></tr></table></figure>"},{"title":"加强版小黄车<font color=\"blue\" size=\"4\">【图】</font>","comments":0,"desc":"博客的娱乐休闲时间，来个看图笑话","keywords":"娱乐, 看图笑话, enjoy, 休闲, 笑话","abbrlink":36812,"date":"2018-09-13T10:33:53.000Z","updated":"2018-09-13T10:33:53.000Z","_content":"\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n<img src=\"enjoy_xiaohuangche.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n\n<br/>\n\n{% note info %}\n想必是个技术不错的手艺人。\n{% endnote %}\n","source":"_posts/Enjoy-加强版小黄车.md","raw":"---\ntitle: 加强版小黄车<font color=\"blue\" size=\"4\">【图】</font>\ncomments: false\ndesc: 博客的娱乐休闲时间，来个看图笑话\ncategories:\n  - [娱乐]\ntags: [看图笑话]\nkeywords: 娱乐, 看图笑话, enjoy, 休闲, 笑话\nabbrlink: 36812\ndate: 2018-09-13 18:33:53\nupdated: 2018-09-13 18:33:53\n---\n\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n<img src=\"enjoy_xiaohuangche.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n\n<br/>\n\n{% note info %}\n想必是个技术不错的手艺人。\n{% endnote %}\n","slug":"Enjoy-加强版小黄车","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2mb000etabjsvsr9h1t","content":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<p><img src=\"enjoy_xiaohuangche.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></p>\n<p><br></p>\n<div class=\"note info\">\n            <p>想必是个技术不错的手艺人。</p>\n          </div>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>","more":"<hr>\n\n<p><img src=\"enjoy_xiaohuangche.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></p>\n<p><br></p>\n<div class=\"note info\">\n            <p>想必是个技术不错的手艺人。</p>\n          </div>"},{"title":"加班版耳机<font color=\"blue\" size=\"4\">【图】</font>","comments":0,"desc":"博客的娱乐休闲时间，来个看图笑话，关于程序员加班的","keywords":"娱乐, 看图笑话, enjoy, 休闲, 笑话","abbrlink":45934,"date":"2018-10-16T01:09:07.000Z","updated":"2018-10-16T01:09:07.000Z","_content":"\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n<img src=\"enjoy_jiaban.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n\n<br/>\n\n{% note info %}\n程序猿加班必备神器。\n{% endnote %}\n","source":"_posts/Enjoy-加班版耳机.md","raw":"---\ntitle: 加班版耳机<font color=\"blue\" size=\"4\">【图】</font>\ncomments: false\ndesc: 博客的娱乐休闲时间，来个看图笑话，关于程序员加班的\ncategories:\n  - [娱乐]\ntags: [看图笑话]\nkeywords: 娱乐, 看图笑话, enjoy, 休闲, 笑话\nabbrlink: 45934\ndate: 2018-10-16 09:09:07\nupdated: 2018-10-16 09:09:07\n---\n\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n<img src=\"enjoy_jiaban.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n\n<br/>\n\n{% note info %}\n程序猿加班必备神器。\n{% endnote %}\n","slug":"Enjoy-加班版耳机","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2me000ftabj92vxhjnn","content":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<p><img src=\"enjoy_jiaban.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></p>\n<p><br></p>\n<div class=\"note info\">\n            <p>程序猿加班必备神器。</p>\n          </div>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>","more":"<hr>\n\n<p><img src=\"enjoy_jiaban.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></p>\n<p><br></p>\n<div class=\"note info\">\n            <p>程序猿加班必备神器。</p>\n          </div>"},{"title":"席梦思<font color=\"#dd0000\" size=\"4\">【文】</font>","comments":0,"desc":"博客的娱乐休闲时间，文字笑话","keywords":"娱乐, 纯文笑话, enjoy, 休闲, 笑话","abbrlink":18602,"date":"2018-10-09T10:22:22.000Z","updated":"2018-10-09T10:22:22.000Z","_content":"{% cq %}\n<font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n突然想起了初中的一起糗事，说出来跟大家分享一下。记得还是语文课，我特困就趴在桌子上睡觉，当时桌子前面还有两摞厚厚的书挡着，可能是机智的老师发现了我在睡觉，突然叫我起来背课文，我被我同桌捅鼓起来，眼睛还是半睁状态，老师又说：要不我给你半个席梦思放在这，我逗比的回了一句：我又不洗头，给我那个干嘛，永远忘不了班级同学的笑声。。。😭😭😭\n{% endcq %}\n\n<!--more-->\n","source":"_posts/Enjoy-席梦思.md","raw":"---\ntitle: '席梦思<font color=\"#dd0000\" size=\"4\">【文】</font>'\ncomments: false\ndesc: 博客的娱乐休闲时间，文字笑话\ncategories:\n  - [娱乐]\ntags: [纯文笑话]\nkeywords: 娱乐, 纯文笑话, enjoy, 休闲, 笑话\nabbrlink: 18602\ndate: 2018-10-09 18:22:22\nupdated: 2018-10-09 18:22:22\n---\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n突然想起了初中的一起糗事，说出来跟大家分享一下。记得还是语文课，我特困就趴在桌子上睡觉，当时桌子前面还有两摞厚厚的书挡着，可能是机智的老师发现了我在睡觉，突然叫我起来背课文，我被我同桌捅鼓起来，眼睛还是半睁状态，老师又说：要不我给你半个席梦思放在这，我逗比的回了一句：我又不洗头，给我那个干嘛，永远忘不了班级同学的笑声。。。😭😭😭\n{% endcq %}\n\n<!--more-->\n","slug":"Enjoy-席梦思","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2mn000jtabji6xfr9oa","content":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n<p>突然想起了初中的一起糗事，说出来跟大家分享一下。记得还是语文课，我特困就趴在桌子上睡觉，当时桌子前面还有两摞厚厚的书挡着，可能是机智的老师发现了我在睡觉，突然叫我起来背课文，我被我同桌捅鼓起来，眼睛还是半睁状态，老师又说：要不我给你半个席梦思放在这，我逗比的回了一句：我又不洗头，给我那个干嘛，永远忘不了班级同学的笑声。。。😭😭😭</p>\n</blockquote>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n<p>突然想起了初中的一起糗事，说出来跟大家分享一下。记得还是语文课，我特困就趴在桌子上睡觉，当时桌子前面还有两摞厚厚的书挡着，可能是机智的老师发现了我在睡觉，突然叫我起来背课文，我被我同桌捅鼓起来，眼睛还是半睁状态，老师又说：要不我给你半个席梦思放在这，我逗比的回了一句：我又不洗头，给我那个干嘛，永远忘不了班级同学的笑声。。。😭😭😭</p>\n</blockquote>","more":""},{"title":"正常点6、7下班<font color=\"#dd0000\" size=\"4\">【文】</font>","comments":0,"desc":"博客的娱乐休闲时间，文字笑话","keywords":"娱乐, 纯文笑话, enjoy, 休闲, 笑话","abbrlink":15891,"date":"2017-07-20T13:09:07.000Z","updated":"2019-07-20T13:09:07.000Z","_content":"{% cq %}\n\n<font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n面试去哪儿网offer拿到手之后，就问hr，咱们这边一般几点下班，hr说一般6、7点，也可以吃个饭回来打个卡再走。md入职后10天了，lz才发现原来hr说的是自己😄😄😄。\n{% endcq %}\n\n<!--more-->\n\n***<font color=\"blue\" size=\"4\">不要走得太快，错过沿路的风景，适当娱乐，继续奔波未来的路程！！！</font>***\n","source":"_posts/Enjoy-正常点6、7下班.md","raw":"---\ntitle: '正常点6、7下班<font color=\"#dd0000\" size=\"4\">【文】</font>'\ncomments: false\ndesc: 博客的娱乐休闲时间，文字笑话\ncategories:\n  - [娱乐]\ntags: [纯文笑话]\nkeywords: 娱乐, 纯文笑话, enjoy, 休闲, 笑话\nabbrlink: 15891\ndate: 2017-07-20 21:09:07\nupdated: 2019-07-20 21:09:07\n---\n{% cq %}\n\n<font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n面试去哪儿网offer拿到手之后，就问hr，咱们这边一般几点下班，hr说一般6、7点，也可以吃个饭回来打个卡再走。md入职后10天了，lz才发现原来hr说的是自己😄😄😄。\n{% endcq %}\n\n<!--more-->\n\n***<font color=\"blue\" size=\"4\">不要走得太快，错过沿路的风景，适当娱乐，继续奔波未来的路程！！！</font>***\n","slug":"Enjoy-正常点6、7下班","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2mt000ktabjs1g405u3","content":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n<p>面试去哪儿网offer拿到手之后，就问hr，咱们这边一般几点下班，hr说一般6、7点，也可以吃个饭回来打个卡再走。md入职后10天了，lz才发现原来hr说的是自己😄😄😄。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><strong><em><font color=\"blue\" size=\"4\">不要走得太快，错过沿路的风景，适当娱乐，继续奔波未来的路程！！！</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">纯文笑话</font>\n\n<p>面试去哪儿网offer拿到手之后，就问hr，咱们这边一般几点下班，hr说一般6、7点，也可以吃个饭回来打个卡再走。md入职后10天了，lz才发现原来hr说的是自己😄😄😄。</p>\n</blockquote>","more":"<p><strong><em><font color=\"blue\" size=\"4\">不要走得太快，错过沿路的风景，适当娱乐，继续奔波未来的路程！！！</font></em></strong></p>"},{"title":"选词填空<font color=\"blue\" size=\"4\">【图】</font>","comments":0,"top":false,"abbrlink":9458,"date":"2019-06-13T01:51:43.000Z","updated":"2019-06-13T01:51:43.000Z","desc":"博客的娱乐休闲时间，来个看图笑话，关于小学生的作业题选词填空","keywords":"娱乐, 看图笑话, enjoy, 休闲, 笑话","_content":"\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n{% gp 2-2 %}\n<img src=\"enjoy_xuance_1.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n<img src=\"enjoy_xuance_2.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n{% endgp %}\n\n<br/>\n\n{% note info %}\n感叹！现在的小学生都这么任性吗？\n{% endnote %}\n","source":"_posts/Enjoy-选词填空.md","raw":"---\ntitle: 选词填空<font color=\"blue\" size=\"4\">【图】</font>\ncomments: false\ncategories:\n  - [娱乐]\ntags: [看图笑话]\ntop: false\nabbrlink: 9458\ndate: 2019-06-13 09:51:43\nupdated: 2019-06-13 09:51:43\ndesc: 博客的娱乐休闲时间，来个看图笑话，关于小学生的作业题选词填空\nkeywords: 娱乐, 看图笑话, enjoy, 休闲, 笑话\n---\n\n{% cq %}\n<font color=\"#dd0000\" size=\"5\">看图笑话</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n{% gp 2-2 %}\n<img src=\"enjoy_xuance_1.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n<img src=\"enjoy_xuance_2.jpg\" width=\"350\" style=\"border:1.5px solid blue\"/>\n{% endgp %}\n\n<br/>\n\n{% note info %}\n感叹！现在的小学生都这么任性吗？\n{% endnote %}\n","slug":"Enjoy-选词填空","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2n0000ntabjzbl56b0f","content":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"enjoy_xuance_1.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"enjoy_xuance_2.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></div></div></div></div>\n<p><br></p>\n<div class=\"note info\">\n            <p>感叹！现在的小学生都这么任性吗？</p>\n          </div>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><font color=\"#dd0000\" size=\"5\">看图笑话</font></blockquote>","more":"<hr>\n\n<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"enjoy_xuance_1.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"enjoy_xuance_2.jpg\" width=\"350\" style=\"border:1.5px solid blue\"></div></div></div></div>\n<p><br></p>\n<div class=\"note info\">\n            <p>感叹！现在的小学生都这么任性吗？</p>\n          </div>"},{"title":"中秋节【<font color=\"red\" size=\"5\">中国节</font>】","comments":0,"top":false,"abbrlink":65231,"date":"2019-09-13T10:49:27.000Z","updated":"2019-09-13T10:49:27.000Z","desc":"中国的传统节日-中秋节","keywords":"节日, 生活, 中国节, 传统, 中秋, 十五, 月亮, 屈原","_content":"\n{% raw %}\n<div class=\"post_cus_note\">中国节-中秋节</div>\n{% endraw %}\n\n![](/images/article_jieri_zhongqiujie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-09-13 | 保康 |\n","source":"_posts/Festival-中秋节.md","raw":"---\ntitle: 中秋节【<font color=\"red\" size=\"5\">中国节</font>】\ncomments: false\ncategories:\n  - 节日\ntags: [节日, 中国节]\ntop: false\nabbrlink: 65231\ndate: 2019-09-13 18:49:27\nupdated: 2019-09-13 18:49:27\ndesc: 中国的传统节日-中秋节\nkeywords: 节日, 生活, 中国节, 传统, 中秋, 十五, 月亮, 屈原\n---\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-中秋节</div>\n{% endraw %}\n\n![](/images/article_jieri_zhongqiujie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-09-13 | 保康 |\n","slug":"Festival-中秋节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2n5000qtabjm29qmji3","content":"\n<div class=\"post_cus_note\">中国节-中秋节</div>\n\n<p><img src=\"/images/article_jieri_zhongqiujie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-09-13</td>\n<td style=\"text-align:center\">保康</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">中国节-中秋节</div>\n\n<p><img src=\"/images/article_jieri_zhongqiujie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-09-13</td>\n<td style=\"text-align:center\">保康</td>\n</tr>\n</tbody>\n</table>"},{"title":"元旦节【<font color=\"red\" size=\"5\">中国节</font>】","comments":0,"top":false,"desc":"中国的传统节日元旦节，代表一年新的开始","keywords":"节日, 生活, 中国节, 传统, 元旦, 新年","abbrlink":33336,"date":"2020-01-01T08:46:55.000Z","updated":"2020-01-01T08:46:55.000Z","_content":"\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-元旦节</div>\n{% endraw %}\n\n![](/images/article_jieri_yuandan.jpeg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2020-01-01 | 保康 |\n","source":"_posts/Festival-元旦.md","raw":"---\ntitle: 元旦节【<font color=\"red\" size=\"5\">中国节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 中国节]\ntop: false\ndesc: 中国的传统节日元旦节，代表一年新的开始\nkeywords: 节日, 生活, 中国节, 传统, 元旦, 新年\nabbrlink: 33336\ndate: 2020-01-01 16:46:55\nupdated: 2020-01-01 16:46:55\n---\n\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-元旦节</div>\n{% endraw %}\n\n![](/images/article_jieri_yuandan.jpeg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2020-01-01 | 保康 |\n","slug":"Festival-元旦","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ne000utabjoc8p8qt8","content":"\n<div class=\"post_cus_note\">中国节-元旦节</div>\n\n<p><img src=\"/images/article_jieri_yuandan.jpeg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2020-01-01</td>\n<td style=\"text-align:center\">保康</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">中国节-元旦节</div>\n\n<p><img src=\"/images/article_jieri_yuandan.jpeg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2020-01-01</td>\n<td style=\"text-align:center\">保康</td>\n</tr>\n</tbody>\n</table>"},{"title":"儿童节【<font color=\"red\" size=\"5\">中国节</font>】","comments":0,"top":false,"desc":"中国的传统节日儿童节","keywords":"节日, 生活, 中国节, 传统, 六一, 儿童节, 6.1","abbrlink":24640,"date":"2019-06-01T02:30:06.000Z","updated":"2019-06-01T02:30:06.000Z","_content":"\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-儿童节</div>\n{% endraw %}\n\n![](/images/article_jieri_ertongjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-01 | 北京 |\n","source":"_posts/Festival-儿童节.md","raw":"---\ntitle: 儿童节【<font color=\"red\" size=\"5\">中国节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 中国节]\ntop: false\ndesc: 中国的传统节日儿童节\nkeywords: 节日, 生活, 中国节, 传统, 六一, 儿童节, 6.1\nabbrlink: 24640\ndate: 2019-06-01 10:30:06\nupdated: 2019-06-01 10:30:06\n---\n\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-儿童节</div>\n{% endraw %}\n\n![](/images/article_jieri_ertongjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-01 | 北京 |\n","slug":"Festival-儿童节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2no000xtabjnttix8dj","content":"\n<div class=\"post_cus_note\">中国节-儿童节</div>\n\n<p><img src=\"/images/article_jieri_ertongjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-01</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">中国节-儿童节</div>\n\n<p><img src=\"/images/article_jieri_ertongjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-01</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>"},{"title":"圣诞节【<font color=\"#00BB00\" size=\"5\">西方节</font>】","comments":0,"top":false,"abbrlink":30667,"date":"2019-12-24T06:43:18.000Z","updated":"2019-12-25T06:43:18.000Z","desc":"西方的节日-母亲节","keywords":"节日, 生活, 西方节, 圣诞节, 西方","_content":"\n\n{% raw %}\n<div class=\"post_cus_note\">西方节-圣诞节</div>\n{% endraw %}\n\n![](/images/article_jieri_shengdanjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    |  地点  |\n|:----------:|:------:|\n| 2019-12-25 | 满洲里 |\n","source":"_posts/Festival-圣诞节.md","raw":"---\ntitle: 圣诞节【<font color=\"#00BB00\" size=\"5\">西方节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 西方节]\ntop: false\nabbrlink: 30667\ndate: 2019-12-24 14:43:18\nupdated: 2019-12-25 14:43:18\ndesc: 西方的节日-母亲节\nkeywords: 节日, 生活, 西方节, 圣诞节, 西方\n---\n\n\n{% raw %}\n<div class=\"post_cus_note\">西方节-圣诞节</div>\n{% endraw %}\n\n![](/images/article_jieri_shengdanjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    |  地点  |\n|:----------:|:------:|\n| 2019-12-25 | 满洲里 |\n","slug":"Festival-圣诞节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2nu0010tabjc46ityvg","content":"\n<div class=\"post_cus_note\">西方节-圣诞节</div>\n\n<p><img src=\"/images/article_jieri_shengdanjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-12-25</td>\n<td style=\"text-align:center\">满洲里</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">西方节-圣诞节</div>\n\n<p><img src=\"/images/article_jieri_shengdanjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-12-25</td>\n<td style=\"text-align:center\">满洲里</td>\n</tr>\n</tbody>\n</table>"},{"title":"母亲节【<font color=\"blue\" size=\"5\">国际节</font>】","comments":0,"top":false,"desc":"世界的节日-母亲节","keywords":"节日, 生活, 世界节, 传统, 母亲","abbrlink":29188,"date":"2019-05-12T11:37:59.000Z","updated":"2019-05-12T11:37:59.000Z","_content":"\n{% raw %}\n<div class=\"post_cus_note\">国际节-母亲节</div>\n{% endraw %}\n\n![](/images/article_jieri_muqinjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-05-12 | 北京 |\n","source":"_posts/Festival-母亲节.md","raw":"---\ntitle: 母亲节【<font color=\"blue\" size=\"5\">国际节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 国际节]\ntop: false\ndesc: 世界的节日-母亲节\nkeywords: 节日, 生活, 世界节, 传统, 母亲\nabbrlink: 29188\ndate: 2019-05-12 19:37:59\nupdated: 2019-05-12 19:37:59\n---\n\n{% raw %}\n<div class=\"post_cus_note\">国际节-母亲节</div>\n{% endraw %}\n\n![](/images/article_jieri_muqinjie.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-05-12 | 北京 |\n","slug":"Festival-母亲节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2o40013tabj5ihcgdne","content":"\n<div class=\"post_cus_note\">国际节-母亲节</div>\n\n<p><img src=\"/images/article_jieri_muqinjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-05-12</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">国际节-母亲节</div>\n\n<p><img src=\"/images/article_jieri_muqinjie.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-05-12</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>"},{"title":"父亲节【<font color=\"blue\" size=\"5\">国际节</font>】","comments":0,"top":false,"abbrlink":46739,"date":"2019-06-16T00:45:20.000Z","updated":"2019-06-16T00:45:20.000Z","desc":"世界的节日-父亲节","keywords":"节日, 生活, 世界节, 传统, 父亲","_content":"\n{% raw %}\n<div class=\"post_cus_note\">国际节-父亲节</div>\n{% endraw %}\n\n![](/images/article_jieri_fuqinjie.jpeg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-16 | 北京 |\n","source":"_posts/Festival-父亲节.md","raw":"---\ntitle: 父亲节【<font color=\"blue\" size=\"5\">国际节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 国际节]\ntop: false\nabbrlink: 46739\ndate: 2019-06-16 08:45:20\nupdated: 2019-06-16 08:45:20\ndesc: 世界的节日-父亲节\nkeywords: 节日, 生活, 世界节, 传统, 父亲\n---\n\n{% raw %}\n<div class=\"post_cus_note\">国际节-父亲节</div>\n{% endraw %}\n\n![](/images/article_jieri_fuqinjie.jpeg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-16 | 北京 |\n","slug":"Festival-父亲节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2og0015tabj3og30j2p","content":"\n<div class=\"post_cus_note\">国际节-父亲节</div>\n\n<p><img src=\"/images/article_jieri_fuqinjie.jpeg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-16</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">国际节-父亲节</div>\n\n<p><img src=\"/images/article_jieri_fuqinjie.jpeg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-16</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n</tbody>\n</table>"},{"title":"端午节【<font color=\"red\" size=\"5\">中国节</font>】","comments":0,"top":false,"abbrlink":53227,"date":"2019-06-07T10:49:47.000Z","updated":"2019-06-07T10:49:47.000Z","desc":"中国的传统节日-端午节","keywords":"节日, 生活, 中国节, 传统, 粽子, 鸡蛋","_content":"\n{% raw %}\n<div class=\"post_cus_note\">中国节-端午节</div>\n{% endraw %}\n\n![](/images/article_jieri_duanwujie.png)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-07 | 北京 |\n| 2020-06-25 | 河北 |\n","source":"_posts/Festival-端午节.md","raw":"---\ntitle: 端午节【<font color=\"red\" size=\"5\">中国节</font>】\ncomments: false\ncategories:\n  - [节日]\ntags: [节日, 中国节]\ntop: false\nabbrlink: 53227\ndate: 2019-06-07 18:49:47\nupdated: 2019-06-07 18:49:47\ndesc: 中国的传统节日-端午节\nkeywords: 节日, 生活, 中国节, 传统, 粽子, 鸡蛋\n---\n\n{% raw %}\n<div class=\"post_cus_note\">中国节-端午节</div>\n{% endraw %}\n\n![](/images/article_jieri_duanwujie.png)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n<!--more-->\n<hr />\n\n|    时间    | 地点 |\n|:----------:|:----:|\n| 2019-06-07 | 北京 |\n| 2020-06-25 | 河北 |\n","slug":"Festival-端午节","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2oz0019tabjjbe8vcgh","content":"\n<div class=\"post_cus_note\">中国节-端午节</div>\n\n<p><img src=\"/images/article_jieri_duanwujie.png\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-07</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2020-06-25</td>\n<td style=\"text-align:center\">河北</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">中国节-端午节</div>\n\n<p><img src=\"/images/article_jieri_duanwujie.png\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">时间</th>\n<th style=\"text-align:center\">地点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-07</td>\n<td style=\"text-align:center\">北京</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2020-06-25</td>\n<td style=\"text-align:center\">河北</td>\n</tr>\n</tbody>\n</table>"},{"title":"三大作风三大法宝三大灵魂【<font color=\"red\" size=\"4.5\">历史</font>】","comments":0,"top":false,"abbrlink":17252,"date":"2019-08-24T13:09:54.000Z","updated":"2019-08-24T13:09:54.000Z","desc":"介绍党的三大作风、三大法宝、三大灵魂","keywords":"党, 政治, 公务员, 三大作风, 三大法宝, 三大灵魂, 常识","_content":"\n{% cq %}\n三大作风\n三大法宝\n三大灵魂\n{% endcq %}\n\n<!--more-->\n<hr />\n\n\n#### 三大作风\n中国共产党的三大作风\n\n- 理论和实际相结合\n- 密切联系群众\n- 批评与自我批评\n\n出自《论联合政府》\n\n#### 三大法宝\n中国革命的三大法宝\n\n- 武装斗争\n- 统一战线\n- 党的建设\n\n出自《<共产党人>发刊词》\n\n#### 三大灵魂\n毛泽东思想的三大灵魂\n\n- 实事求是\n- 群众路线\n- 独立自主\n","source":"_posts/Gongwuyuan-History-三大作风三大法宝三大灵魂.md","raw":"---\ntitle: 三大作风三大法宝三大灵魂【<font color=\"red\" size=\"4.5\">历史</font>】\ncomments: false\ncategories:\n  - [公务员]\ntags: [历史]\ntop: false\nabbrlink: 17252\ndate: 2019-08-24 21:09:54\nupdated: 2019-08-24 21:09:54\ndesc: 介绍党的三大作风、三大法宝、三大灵魂\nkeywords: 党, 政治, 公务员, 三大作风, 三大法宝, 三大灵魂, 常识\n---\n\n{% cq %}\n三大作风\n三大法宝\n三大灵魂\n{% endcq %}\n\n<!--more-->\n<hr />\n\n\n#### 三大作风\n中国共产党的三大作风\n\n- 理论和实际相结合\n- 密切联系群众\n- 批评与自我批评\n\n出自《论联合政府》\n\n#### 三大法宝\n中国革命的三大法宝\n\n- 武装斗争\n- 统一战线\n- 党的建设\n\n出自《<共产党人>发刊词》\n\n#### 三大灵魂\n毛泽东思想的三大灵魂\n\n- 实事求是\n- 群众路线\n- 独立自主\n","slug":"Gongwuyuan-History-三大作风三大法宝三大灵魂","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2pd001btabj6adlibzu","content":"<blockquote class=\"blockquote-center\"><p>三大作风<br>三大法宝<br>三大灵魂</p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n\n<h4 id=\"三大作风\"><a href=\"#三大作风\" class=\"headerlink\" title=\"三大作风\"></a>三大作风</h4><p>中国共产党的三大作风</p>\n<ul>\n<li>理论和实际相结合</li>\n<li>密切联系群众</li>\n<li>批评与自我批评</li>\n</ul>\n<p>出自《论联合政府》</p>\n<h4 id=\"三大法宝\"><a href=\"#三大法宝\" class=\"headerlink\" title=\"三大法宝\"></a>三大法宝</h4><p>中国革命的三大法宝</p>\n<ul>\n<li>武装斗争</li>\n<li>统一战线</li>\n<li>党的建设</li>\n</ul>\n<p>出自《&lt;共产党人&gt;发刊词》</p>\n<h4 id=\"三大灵魂\"><a href=\"#三大灵魂\" class=\"headerlink\" title=\"三大灵魂\"></a>三大灵魂</h4><p>毛泽东思想的三大灵魂</p>\n<ul>\n<li>实事求是</li>\n<li>群众路线</li>\n<li>独立自主</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>三大作风<br>三大法宝<br>三大灵魂</p>\n</blockquote>","more":"<hr>\n\n\n<h4 id=\"三大作风\"><a href=\"#三大作风\" class=\"headerlink\" title=\"三大作风\"></a>三大作风</h4><p>中国共产党的三大作风</p>\n<ul>\n<li>理论和实际相结合</li>\n<li>密切联系群众</li>\n<li>批评与自我批评</li>\n</ul>\n<p>出自《论联合政府》</p>\n<h4 id=\"三大法宝\"><a href=\"#三大法宝\" class=\"headerlink\" title=\"三大法宝\"></a>三大法宝</h4><p>中国革命的三大法宝</p>\n<ul>\n<li>武装斗争</li>\n<li>统一战线</li>\n<li>党的建设</li>\n</ul>\n<p>出自《&lt;共产党人&gt;发刊词》</p>\n<h4 id=\"三大灵魂\"><a href=\"#三大灵魂\" class=\"headerlink\" title=\"三大灵魂\"></a>三大灵魂</h4><p>毛泽东思想的三大灵魂</p>\n<ul>\n<li>实事求是</li>\n<li>群众路线</li>\n<li>独立自主</li>\n</ul>"},{"title":"新、旧民主主义革命的异同【<font color=\"red\" size=\"4.5\">历史</font>】","comments":0,"top":false,"abbrlink":43171,"date":"2019-09-16T11:24:01.000Z","updated":"2019-09-16T11:24:01.000Z","desc":"新民主主义革命与旧民主主义革命的异同点","keywords":"历史, 新民主主义革命, 旧民主主义革命, 政治, 常识","_content":"\n{% cq %}\n论述新、旧民主主义革命的异同\n{% endcq %}\n\n<!--more-->\n<hr />\n\n#### 不同点\n\n{% raw %}\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">社会背景</th>\n        <th style=\"text-align:center;\">革命对象</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">半殖民地半封建社会</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">反帝反封建</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n    </tr>\n</table>\n{% endraw %}\n\n#### 相同点\n\n{% raw %}\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">领导阶级</th>\n        <th style=\"text-align:center;\">指导思想</th>\n        <th style=\"text-align:center;\">革命前景</th>\n        <th style=\"text-align:center;\">革命性质</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td style=\"text-align:center;\">无产阶级</td>\n        <td style=\"text-align:center;\">马克思列宁主义</td>\n        <td style=\"text-align:center;\">建立人民民主专政的国家，走社会主义路线</td>\n        <td style=\"text-align:center;\">无产阶级革命</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n        <td style=\"text-align:center;\">资产阶级</td>\n        <td style=\"text-align:center;\">三民主义（民权、民主、民生）</td>\n        <td style=\"text-align:center;\">建立资产阶级共和国，走资本主义路线</td>\n        <td style=\"text-align:center;\">资产阶级革命</td>\n    </tr>\n</table>\n{% endraw %}\n","source":"_posts/Gongwuyuan-History-新旧民主主义革命.md","raw":"---\ntitle: 新、旧民主主义革命的异同【<font color=\"red\" size=\"4.5\">历史</font>】\ncomments: false\ncategories:\n  - [公务员]\ntags: [历史]\ntop: false\nabbrlink: 43171\ndate: 2019-09-16 19:24:01\nupdated: 2019-09-16 19:24:01\ndesc: 新民主主义革命与旧民主主义革命的异同点\nkeywords: 历史, 新民主主义革命, 旧民主主义革命, 政治, 常识\n---\n\n{% cq %}\n论述新、旧民主主义革命的异同\n{% endcq %}\n\n<!--more-->\n<hr />\n\n#### 不同点\n\n{% raw %}\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">社会背景</th>\n        <th style=\"text-align:center;\">革命对象</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">半殖民地半封建社会</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">反帝反封建</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n    </tr>\n</table>\n{% endraw %}\n\n#### 相同点\n\n{% raw %}\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">领导阶级</th>\n        <th style=\"text-align:center;\">指导思想</th>\n        <th style=\"text-align:center;\">革命前景</th>\n        <th style=\"text-align:center;\">革命性质</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td style=\"text-align:center;\">无产阶级</td>\n        <td style=\"text-align:center;\">马克思列宁主义</td>\n        <td style=\"text-align:center;\">建立人民民主专政的国家，走社会主义路线</td>\n        <td style=\"text-align:center;\">无产阶级革命</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n        <td style=\"text-align:center;\">资产阶级</td>\n        <td style=\"text-align:center;\">三民主义（民权、民主、民生）</td>\n        <td style=\"text-align:center;\">建立资产阶级共和国，走资本主义路线</td>\n        <td style=\"text-align:center;\">资产阶级革命</td>\n    </tr>\n</table>\n{% endraw %}\n","slug":"Gongwuyuan-History-新旧民主主义革命","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2po001etabja3130t9o","content":"<blockquote class=\"blockquote-center\"><p>论述新、旧民主主义革命的异同</p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h4>\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">社会背景</th>\n        <th style=\"text-align:center;\">革命对象</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">半殖民地半封建社会</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">反帝反封建</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n    </tr>\n</table>\n\n<h4 id=\"相同点\"><a href=\"#相同点\" class=\"headerlink\" title=\"相同点\"></a>相同点</h4>\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">领导阶级</th>\n        <th style=\"text-align:center;\">指导思想</th>\n        <th style=\"text-align:center;\">革命前景</th>\n        <th style=\"text-align:center;\">革命性质</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td style=\"text-align:center;\">无产阶级</td>\n        <td style=\"text-align:center;\">马克思列宁主义</td>\n        <td style=\"text-align:center;\">建立人民民主专政的国家，走社会主义路线</td>\n        <td style=\"text-align:center;\">无产阶级革命</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n        <td style=\"text-align:center;\">资产阶级</td>\n        <td style=\"text-align:center;\">三民主义（民权、民主、民生）</td>\n        <td style=\"text-align:center;\">建立资产阶级共和国，走资本主义路线</td>\n        <td style=\"text-align:center;\">资产阶级革命</td>\n    </tr>\n</table>\n\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>论述新、旧民主主义革命的异同</p>\n</blockquote>","more":"<hr>\n\n<h4 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h4>\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">社会背景</th>\n        <th style=\"text-align:center;\">革命对象</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">半殖民地半封建社会</td>\n        <td rowspan=\"2\" style=\"text-align:center;\">反帝反封建</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n    </tr>\n</table>\n\n<h4 id=\"相同点\"><a href=\"#相同点\" class=\"headerlink\" title=\"相同点\"></a>相同点</h4>\n<table border=\"1\" cellspacing=\"0\" width=\"50%\" height=\"150\">\n    <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">领导阶级</th>\n        <th style=\"text-align:center;\">指导思想</th>\n        <th style=\"text-align:center;\">革命前景</th>\n        <th style=\"text-align:center;\">革命性质</th>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">新民主主义革命</td>\n        <td style=\"text-align:center;\">无产阶级</td>\n        <td style=\"text-align:center;\">马克思列宁主义</td>\n        <td style=\"text-align:center;\">建立人民民主专政的国家，走社会主义路线</td>\n        <td style=\"text-align:center;\">无产阶级革命</td>\n    </tr>\n    <tr>\n        <td style=\"text-align:center;\">旧民主主义革命</td>\n        <td style=\"text-align:center;\">资产阶级</td>\n        <td style=\"text-align:center;\">三民主义（民权、民主、民生）</td>\n        <td style=\"text-align:center;\">建立资产阶级共和国，走资本主义路线</td>\n        <td style=\"text-align:center;\">资产阶级革命</td>\n    </tr>\n</table>"},{"title":"鼠标自定义样式","comments":0,"top":false,"abbrlink":3035,"date":"2019-06-10T11:03:44.000Z","updated":"2019-06-10T11:03:44.000Z","desc":"关于修改博客鼠标自定义样式的教程","keywords":"Hexo, 美化, 前端, 鼠标, 自定义, 样式, 美化, blog","_content":"\n### 背景\n{% note success %}\n**自定义鼠标样式**，将blog的优化进行到底，让每天更加美化。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n### 正文\n\n- {% btn /images/custome_style.7z, 压缩包, download fa-lg fa-fw, 压缩包 %}点击下载样式文件，把**.cur**样式文件copy到**blog/public**目录下。\n\n- 打开自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**，加入以下代码：\n\n{% code %}\nbody {\n    background:url(/images/background.jpg);\n    cursor: url('/images/shubiao_guangmingxi.cur'), auto !important;\n}\n{% endcode %}\n\n我只定义了正常状态的鼠标样式，其他状态的样式根据自己的喜欢定义即可。\n\n### 学习\n\n详细教程：https://juejin.im/post/5b4876b66fb9a04f9e230066\n\n{% note info %}\n### 说明\n鼠标样式文件我是从网上下载的，下载过程十分曲折，显示关注公众号，在网页百度网盘下载，在安装百度网盘。。。。。。麻烦的要死。百度的东西，你懂的，下载完我就卸载了。\n{% endnote %}\n","source":"_posts/Front-鼠标自定义样式.md","raw":"---\ntitle: 鼠标自定义样式\ncomments: false\ncategories:\n  - [Hexo]\n  - [前端]\ntags: [Hexo, Hexo美化, 前端]\ntop: false\nabbrlink: 3035\ndate: 2019-06-10 19:03:44\nupdated: 2019-06-10 19:03:44\ndesc: 关于修改博客鼠标自定义样式的教程\nkeywords: Hexo, 美化, 前端, 鼠标, 自定义, 样式, 美化, blog\n---\n\n### 背景\n{% note success %}\n**自定义鼠标样式**，将blog的优化进行到底，让每天更加美化。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n### 正文\n\n- {% btn /images/custome_style.7z, 压缩包, download fa-lg fa-fw, 压缩包 %}点击下载样式文件，把**.cur**样式文件copy到**blog/public**目录下。\n\n- 打开自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**，加入以下代码：\n\n{% code %}\nbody {\n    background:url(/images/background.jpg);\n    cursor: url('/images/shubiao_guangmingxi.cur'), auto !important;\n}\n{% endcode %}\n\n我只定义了正常状态的鼠标样式，其他状态的样式根据自己的喜欢定义即可。\n\n### 学习\n\n详细教程：https://juejin.im/post/5b4876b66fb9a04f9e230066\n\n{% note info %}\n### 说明\n鼠标样式文件我是从网上下载的，下载过程十分曲折，显示关注公众号，在网页百度网盘下载，在安装百度网盘。。。。。。麻烦的要死。百度的东西，你懂的，下载完我就卸载了。\n{% endnote %}\n","slug":"Front-鼠标自定义样式","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2q0001htabj0u3sun06","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p><strong>自定义鼠标样式</strong>，将blog的优化进行到底，让每天更加美化。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><ul>\n<li><p><a class=\"btn\" href=\"/images/custome_style.7z\" title=\"压缩包\"><i class=\"fa fa-download fa-lg fa-fw\"></i>压缩包</a>点击下载样式文件，把<strong>.cur</strong>样式文件copy到<strong>blog/public</strong>目录下。</p>\n</li>\n<li><p>打开自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong>，加入以下代码：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_guangmingxi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我只定义了正常状态的鼠标样式，其他状态的样式根据自己的喜欢定义即可。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>详细教程：<a href=\"https://juejin.im/post/5b4876b66fb9a04f9e230066\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5b4876b66fb9a04f9e230066</a></p>\n<div class=\"note info\">\n            <h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p>鼠标样式文件我是从网上下载的，下载过程十分曲折，显示关注公众号，在网页百度网盘下载，在安装百度网盘。。。。。。麻烦的要死。百度的东西，你懂的，下载完我就卸载了。</p>\n          </div>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p><strong>自定义鼠标样式</strong>，将blog的优化进行到底，让每天更加美化。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><ul>\n<li><p><a class=\"btn\" href=\"/images/custome_style.7z\" title=\"压缩包\"><i class=\"fa fa-download fa-lg fa-fw\"></i>压缩包</a>点击下载样式文件，把<strong>.cur</strong>样式文件copy到<strong>blog/public</strong>目录下。</p>\n</li>\n<li><p>打开自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong>，加入以下代码：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_guangmingxi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我只定义了正常状态的鼠标样式，其他状态的样式根据自己的喜欢定义即可。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>详细教程：<a href=\"https://juejin.im/post/5b4876b66fb9a04f9e230066\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5b4876b66fb9a04f9e230066</a></p>\n<div class=\"note info\">\n            <h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p>鼠标样式文件我是从网上下载的，下载过程十分曲折，显示关注公众号，在网页百度网盘下载，在安装百度网盘。。。。。。麻烦的要死。百度的东西，你懂的，下载完我就卸载了。</p>\n          </div>"},{"title":"Hadoop1.2.1集群安装","comments":0,"desc":"大数据时代，初学hadoop在Ubuntu环境上搭建Hadoop1.2.1版本集群","keywords":"Python, Hadoop, Ubuntu, 大数据, Hadoop集群, VMware, java, JDK, 数据处理","abbrlink":36621,"date":"2016-09-20T10:34:25.000Z","_content":"\n<img src=\"/images/article_hadoop.jpg\" width=\"750\" alt=\"\"/>\n\n> Hadoop1.2.1 + Python2.7 + Ubuntu15.10\n\n<!-- more -->\n<hr />\n\n### 摘要\n最近BigData貌似很火，本人也跟着一起凑凑热闹，初学hadoop，由于Ubuntu对于python的支持很好，个人也觉得Ubuntu确实不错，所以使用的是Ubuntu15.10系统，处理大数据采用python + hadoop的方式进行处理。\n\n### 版本信息\n|  name  | vsersion |       remark       |\n|:------:|:--------:|:--------------------:|\n| Ubuntu |  15.10   |      系统的版本      |\n| Python |   2.7    |       开发语言       |\n|  JDK   |   1.7    | hadoop运行的基础环境 |\n| Hadoop |  1.2.1   |    大数据处理工具    |\n| VMware |   6.0    |        虚拟机        |\n\n### 正文\n\n    本文主要讲述hadoop集群的安装过程，有什么不准确之处可以留言，一起交流share。\n\n#### 虚拟机安装\n首先VMware上安装4台虚拟机，分别是Ubuntu15.10系统，具体安装百度即可so easy。安装时候对电脑的机器名直接命名为master，node01，node02，node03（1个主节点，3个子节点），接下来2-7的操作是针对于这4台虚拟机分别进行同样的操作。\n#### 创建hadoop用户组\n命令：***sudo addgroup hadoop***\n![addgroup](addgroup.jpg)\n#### 创建hadoop用户\n命令：***sudo adduser -ingroup hadoop***\n![adduser](adduser.jpg)\n回车后会提示输入新的UNIX密码，这是新建用户hadoop的密码，输入回车即可。如果不输入密码，回车后会重新提示输入密码，即密码不能为空。最后确认信息是否正确，如果没问题，输入 Y，回车即可。\n#### 添加hadoop root权限\n命令：***sudo gedit /etc/sudoers***\n![gedit](gedit.jpg)\n打开sudoers 文件，在root\tALL=(ALL:ALL) ALL这行下面添加：\nhadoop\tALL=(ALL:ALL) ALL\n修改完保存关闭即可。\n** 注：如果系统的gedit用不了，自行上网解决，这里给出的方案是用vi或vim。**\n#### 切换到hadoop用户\n命令：***su hadoop***，输入密码即可登录hadoop用户。\n![su_hadoop](su_hadoop.jpg)\n#### 安装ssh\n命令：***sudo apt-get install openssh-server***\n![openssh](openssh.jpg)\n安装完成后启动ssh服务，命令：***sudo /etc/init.d/ssh start***\n查看ssh服务是否启动，命令：***ps -ef | grep ssh***\n![grep](grep.jpg)\n服务存在之后，设置实现ssh免密码登录，命令：***ssh-keygen -t rsa -P \"\"***\n![ssh](ssh.jpg)\n下面我们将公钥追加到authorized_keys中，它用户保存所有允许以当前用户身份登录到ssh客户端用户的公钥内容，命令：\n***cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys***\n![cat](cat.jpg)\n#### 登录ssh\n命令：***ssh localhost***，退出，命令：***exit***\n![ssh_localhost](ssh_localhost.jpg)\n#### 安装Java环境\n命令：***sudo apt-get install openjdk-7-jdk***\n![install_java](install_java.jpg)\n查看安装结果，输入命令：***java -version***，结果如下表示安装成功。\n![java_version](java_version.jpg)\n注：java安装默认路径：/usr/lib/jvm/java-7-openjdk-amd64\n以上操作基于hadoop用户，并且每个电脑配置一致\n#### hadoop配置\n    正餐开始了，仔细看！！！\n* hadoop-env配置：\n进入到hadoop文件的conf文件夹，使用命令：***sudo gedit hadoop-env.sh***\n![gedit_hadoop_env](gedit_hadoop_env.jpg)\n添加以下信息到文件中，保存即可。\n解释下内容：JAVA_HOME是java的安装路径，HADOOP_INSTALL是hadoop的安装路径，PATH是系统文件路径:\n```\nexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\nexport HADOOP_INSTALL=/usr/local/hadoop\nexport PATH=$PATH:/usr/local/hadoop/bin\n```\n![hadoop_path](hadoop_path.jpg)\n* core-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit core-site.xml***\n![gedit_core_site](gedit_core_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>fs.default.name</name>\n    <value>hdfs:192.168.2.139:9000</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>hadoop.tmp.dir</name>\n    <value>/home/hadoop/hadoop/tmp</value>\n    <description>A base for other temporary directory</description>\n  </property>\n</configuration>\n```\n* hdfs-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit hdfs-site.xml***\n![gedit_hdfs_site](gedit_hdfs_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>dfs.name.dir</name>\n    <value>/home/hadoop/hadoop/name</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>dfs.data.dir</name>\n    <value>/home/hadoop/hadoop/data</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>dfs.replication</name>\n    <value>3</value>\n    <final>true</final>\n  </property>\n</configuration>\n```\n* mapred-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit mapred-site.xml***\n![gedit_mapred_site](gedit_mapred_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>mapred.job.tracker</name>\n    <value>192.168.2.139:9001</value>\n  </property>\n</configuration>\n```\n* master和slaves配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit master***，***sudo gedit slaves***\n![gedit_master_slaves](gedit_master_slaves.jpg)\n在master文件中添加主节点计算机名称/IP即可。\n在slaves文件中添加子节点计算机名称/IP即可。\n\n#### 复制hadoop\n把hadoop分别向其他机器上复制一份，放到相同目录。\n命令：scp（自行百度用法，这里不做详述）\n\n#### 建立hadoop所需文件夹\n在每个机器上建立所需要的文件夹，在步骤8中有core中配置的hadoop.tmp.dir文件夹，hdfs中配置的dfs.data.dir文件夹，需要进行建立以及是hadoop用户，读写权限。\n执行命令：***sudo mkdir***\n\n#### 格式化namenode\n进入到hadoop/bin目录，在主节点机器上执行命令：***hadooop namenode -fomat***，出现successfully字样成功，不成功大部分都是配置文件的问题。\n\n#### 启动hadoop\n在主节点机器上进入hadoop/bin目录下，执行命令:***hadoop-start.sh***，分别会启动NameNode,Jobtracker,SecondaryNameNode,DataNodeTaskTracker\n\n#### 查看hadoop\n在主节点机器上执行命令：***jps***，在主节点机器上会出现以下进程\n![master_jps](master_jps.jpg)\n在子节点机器上执行命令：***jps***，在子节点机器上会出现以下进程\n![slaves_jps](slaves_jps.jpg)\n#### 查看运行状态\n在浏览器中输入主机IP:50030，会出现hadoop运行状态。\n![hadoop](hadoop.jpg)\n#### 停止hadoop\n在主节点机器上进入到hadoop/bin目录下，执行命令：***stop-all.sh***，这样hadoop停止运行。\n\n### 建议\n    本人也初学，有不对的希望大家谅解。\n","source":"_posts/Hadoop-1-2-1集群安装.md","raw":"---\ntitle: Hadoop1.2.1集群安装\ncategories:\n  - [Hadoop]\n  - [Python]\ntags: [Python, Hadoop, Ubuntu, Python程序篇]\ncomments: false\ndesc: 大数据时代，初学hadoop在Ubuntu环境上搭建Hadoop1.2.1版本集群\nkeywords: Python, Hadoop, Ubuntu, 大数据, Hadoop集群, VMware, java, JDK, 数据处理\nabbrlink: 36621\ndate: 2016-09-20 18:34:25\n---\n\n<img src=\"/images/article_hadoop.jpg\" width=\"750\" alt=\"\"/>\n\n> Hadoop1.2.1 + Python2.7 + Ubuntu15.10\n\n<!-- more -->\n<hr />\n\n### 摘要\n最近BigData貌似很火，本人也跟着一起凑凑热闹，初学hadoop，由于Ubuntu对于python的支持很好，个人也觉得Ubuntu确实不错，所以使用的是Ubuntu15.10系统，处理大数据采用python + hadoop的方式进行处理。\n\n### 版本信息\n|  name  | vsersion |       remark       |\n|:------:|:--------:|:--------------------:|\n| Ubuntu |  15.10   |      系统的版本      |\n| Python |   2.7    |       开发语言       |\n|  JDK   |   1.7    | hadoop运行的基础环境 |\n| Hadoop |  1.2.1   |    大数据处理工具    |\n| VMware |   6.0    |        虚拟机        |\n\n### 正文\n\n    本文主要讲述hadoop集群的安装过程，有什么不准确之处可以留言，一起交流share。\n\n#### 虚拟机安装\n首先VMware上安装4台虚拟机，分别是Ubuntu15.10系统，具体安装百度即可so easy。安装时候对电脑的机器名直接命名为master，node01，node02，node03（1个主节点，3个子节点），接下来2-7的操作是针对于这4台虚拟机分别进行同样的操作。\n#### 创建hadoop用户组\n命令：***sudo addgroup hadoop***\n![addgroup](addgroup.jpg)\n#### 创建hadoop用户\n命令：***sudo adduser -ingroup hadoop***\n![adduser](adduser.jpg)\n回车后会提示输入新的UNIX密码，这是新建用户hadoop的密码，输入回车即可。如果不输入密码，回车后会重新提示输入密码，即密码不能为空。最后确认信息是否正确，如果没问题，输入 Y，回车即可。\n#### 添加hadoop root权限\n命令：***sudo gedit /etc/sudoers***\n![gedit](gedit.jpg)\n打开sudoers 文件，在root\tALL=(ALL:ALL) ALL这行下面添加：\nhadoop\tALL=(ALL:ALL) ALL\n修改完保存关闭即可。\n** 注：如果系统的gedit用不了，自行上网解决，这里给出的方案是用vi或vim。**\n#### 切换到hadoop用户\n命令：***su hadoop***，输入密码即可登录hadoop用户。\n![su_hadoop](su_hadoop.jpg)\n#### 安装ssh\n命令：***sudo apt-get install openssh-server***\n![openssh](openssh.jpg)\n安装完成后启动ssh服务，命令：***sudo /etc/init.d/ssh start***\n查看ssh服务是否启动，命令：***ps -ef | grep ssh***\n![grep](grep.jpg)\n服务存在之后，设置实现ssh免密码登录，命令：***ssh-keygen -t rsa -P \"\"***\n![ssh](ssh.jpg)\n下面我们将公钥追加到authorized_keys中，它用户保存所有允许以当前用户身份登录到ssh客户端用户的公钥内容，命令：\n***cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys***\n![cat](cat.jpg)\n#### 登录ssh\n命令：***ssh localhost***，退出，命令：***exit***\n![ssh_localhost](ssh_localhost.jpg)\n#### 安装Java环境\n命令：***sudo apt-get install openjdk-7-jdk***\n![install_java](install_java.jpg)\n查看安装结果，输入命令：***java -version***，结果如下表示安装成功。\n![java_version](java_version.jpg)\n注：java安装默认路径：/usr/lib/jvm/java-7-openjdk-amd64\n以上操作基于hadoop用户，并且每个电脑配置一致\n#### hadoop配置\n    正餐开始了，仔细看！！！\n* hadoop-env配置：\n进入到hadoop文件的conf文件夹，使用命令：***sudo gedit hadoop-env.sh***\n![gedit_hadoop_env](gedit_hadoop_env.jpg)\n添加以下信息到文件中，保存即可。\n解释下内容：JAVA_HOME是java的安装路径，HADOOP_INSTALL是hadoop的安装路径，PATH是系统文件路径:\n```\nexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64\nexport HADOOP_INSTALL=/usr/local/hadoop\nexport PATH=$PATH:/usr/local/hadoop/bin\n```\n![hadoop_path](hadoop_path.jpg)\n* core-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit core-site.xml***\n![gedit_core_site](gedit_core_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>fs.default.name</name>\n    <value>hdfs:192.168.2.139:9000</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>hadoop.tmp.dir</name>\n    <value>/home/hadoop/hadoop/tmp</value>\n    <description>A base for other temporary directory</description>\n  </property>\n</configuration>\n```\n* hdfs-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit hdfs-site.xml***\n![gedit_hdfs_site](gedit_hdfs_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>dfs.name.dir</name>\n    <value>/home/hadoop/hadoop/name</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>dfs.data.dir</name>\n    <value>/home/hadoop/hadoop/data</value>\n    <final>true</final>\n  </property>\n  <property>\n    <name>dfs.replication</name>\n    <value>3</value>\n    <final>true</final>\n  </property>\n</configuration>\n```\n* mapred-site.xml配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit mapred-site.xml***\n![gedit_mapred_site](gedit_mapred_site.jpg)\n添加以下信息到文件中，保存即可。\n```\n<configuration>\n  <property>\n    <name>mapred.job.tracker</name>\n    <value>192.168.2.139:9001</value>\n  </property>\n</configuration>\n```\n* master和slaves配置\nhadoop文件的conf文件夹，使用命令：***sudo gedit master***，***sudo gedit slaves***\n![gedit_master_slaves](gedit_master_slaves.jpg)\n在master文件中添加主节点计算机名称/IP即可。\n在slaves文件中添加子节点计算机名称/IP即可。\n\n#### 复制hadoop\n把hadoop分别向其他机器上复制一份，放到相同目录。\n命令：scp（自行百度用法，这里不做详述）\n\n#### 建立hadoop所需文件夹\n在每个机器上建立所需要的文件夹，在步骤8中有core中配置的hadoop.tmp.dir文件夹，hdfs中配置的dfs.data.dir文件夹，需要进行建立以及是hadoop用户，读写权限。\n执行命令：***sudo mkdir***\n\n#### 格式化namenode\n进入到hadoop/bin目录，在主节点机器上执行命令：***hadooop namenode -fomat***，出现successfully字样成功，不成功大部分都是配置文件的问题。\n\n#### 启动hadoop\n在主节点机器上进入hadoop/bin目录下，执行命令:***hadoop-start.sh***，分别会启动NameNode,Jobtracker,SecondaryNameNode,DataNodeTaskTracker\n\n#### 查看hadoop\n在主节点机器上执行命令：***jps***，在主节点机器上会出现以下进程\n![master_jps](master_jps.jpg)\n在子节点机器上执行命令：***jps***，在子节点机器上会出现以下进程\n![slaves_jps](slaves_jps.jpg)\n#### 查看运行状态\n在浏览器中输入主机IP:50030，会出现hadoop运行状态。\n![hadoop](hadoop.jpg)\n#### 停止hadoop\n在主节点机器上进入到hadoop/bin目录下，执行命令：***stop-all.sh***，这样hadoop停止运行。\n\n### 建议\n    本人也初学，有不对的希望大家谅解。\n","slug":"Hadoop-1-2-1集群安装","published":1,"updated":"2019-12-22T05:30:31.260Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2q7001ktabjlmb4tivt","content":"<p><img src=\"/images/article_hadoop.jpg\" width=\"750\" alt></p>\n<blockquote>\n<p>Hadoop1.2.1 + Python2.7 + Ubuntu15.10</p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h3><p>最近BigData貌似很火，本人也跟着一起凑凑热闹，初学hadoop，由于Ubuntu对于python的支持很好，个人也觉得Ubuntu确实不错，所以使用的是Ubuntu15.10系统，处理大数据采用python + hadoop的方式进行处理。</p>\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">vsersion</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Ubuntu</td>\n<td style=\"text-align:center\">15.10</td>\n<td style=\"text-align:center\">系统的版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n<td style=\"text-align:center\">开发语言</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JDK</td>\n<td style=\"text-align:center\">1.7</td>\n<td style=\"text-align:center\">hadoop运行的基础环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Hadoop</td>\n<td style=\"text-align:center\">1.2.1</td>\n<td style=\"text-align:center\">大数据处理工具</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">VMware</td>\n<td style=\"text-align:center\">6.0</td>\n<td style=\"text-align:center\">虚拟机</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><pre><code>本文主要讲述hadoop集群的安装过程，有什么不准确之处可以留言，一起交流share。\n</code></pre><h4 id=\"虚拟机安装\"><a href=\"#虚拟机安装\" class=\"headerlink\" title=\"虚拟机安装\"></a>虚拟机安装</h4><p>首先VMware上安装4台虚拟机，分别是Ubuntu15.10系统，具体安装百度即可so easy。安装时候对电脑的机器名直接命名为master，node01，node02，node03（1个主节点，3个子节点），接下来2-7的操作是针对于这4台虚拟机分别进行同样的操作。</p>\n<h4 id=\"创建hadoop用户组\"><a href=\"#创建hadoop用户组\" class=\"headerlink\" title=\"创建hadoop用户组\"></a>创建hadoop用户组</h4><p>命令：<strong><em>sudo addgroup hadoop</em></strong><br><img src=\"addgroup.jpg\" alt=\"addgroup\"></p>\n<h4 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h4><p>命令：<strong><em>sudo adduser -ingroup hadoop</em></strong><br><img src=\"adduser.jpg\" alt=\"adduser\"><br>回车后会提示输入新的UNIX密码，这是新建用户hadoop的密码，输入回车即可。如果不输入密码，回车后会重新提示输入密码，即密码不能为空。最后确认信息是否正确，如果没问题，输入 Y，回车即可。</p>\n<h4 id=\"添加hadoop-root权限\"><a href=\"#添加hadoop-root权限\" class=\"headerlink\" title=\"添加hadoop root权限\"></a>添加hadoop root权限</h4><p>命令：<strong><em>sudo gedit /etc/sudoers</em></strong><br><img src=\"gedit.jpg\" alt=\"gedit\"><br>打开sudoers 文件，在root    ALL=(ALL:ALL) ALL这行下面添加：<br>hadoop    ALL=(ALL:ALL) ALL<br>修改完保存关闭即可。<br><strong> 注：如果系统的gedit用不了，自行上网解决，这里给出的方案是用vi或vim。</strong></p>\n<h4 id=\"切换到hadoop用户\"><a href=\"#切换到hadoop用户\" class=\"headerlink\" title=\"切换到hadoop用户\"></a>切换到hadoop用户</h4><p>命令：<strong><em>su hadoop</em></strong>，输入密码即可登录hadoop用户。<br><img src=\"su_hadoop.jpg\" alt=\"su_hadoop\"></p>\n<h4 id=\"安装ssh\"><a href=\"#安装ssh\" class=\"headerlink\" title=\"安装ssh\"></a>安装ssh</h4><p>命令：<strong><em>sudo apt-get install openssh-server</em></strong><br><img src=\"openssh.jpg\" alt=\"openssh\"><br>安装完成后启动ssh服务，命令：<strong><em>sudo /etc/init.d/ssh start</em></strong><br>查看ssh服务是否启动，命令：<strong><em>ps -ef | grep ssh</em></strong><br><img src=\"grep.jpg\" alt=\"grep\"><br>服务存在之后，设置实现ssh免密码登录，命令：<strong><em>ssh-keygen -t rsa -P “”</em></strong><br><img src=\"ssh.jpg\" alt=\"ssh\"><br>下面我们将公钥追加到authorized_keys中，它用户保存所有允许以当前用户身份登录到ssh客户端用户的公钥内容，命令：<br><strong><em>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</em></strong><br><img src=\"cat.jpg\" alt=\"cat\"></p>\n<h4 id=\"登录ssh\"><a href=\"#登录ssh\" class=\"headerlink\" title=\"登录ssh\"></a>登录ssh</h4><p>命令：<strong><em>ssh localhost</em></strong>，退出，命令：<strong><em>exit</em></strong><br><img src=\"ssh_localhost.jpg\" alt=\"ssh_localhost\"></p>\n<h4 id=\"安装Java环境\"><a href=\"#安装Java环境\" class=\"headerlink\" title=\"安装Java环境\"></a>安装Java环境</h4><p>命令：<strong><em>sudo apt-get install openjdk-7-jdk</em></strong><br><img src=\"install_java.jpg\" alt=\"install_java\"><br>查看安装结果，输入命令：<strong><em>java -version</em></strong>，结果如下表示安装成功。<br><img src=\"java_version.jpg\" alt=\"java_version\"><br>注：java安装默认路径：/usr/lib/jvm/java-7-openjdk-amd64<br>以上操作基于hadoop用户，并且每个电脑配置一致</p>\n<h4 id=\"hadoop配置\"><a href=\"#hadoop配置\" class=\"headerlink\" title=\"hadoop配置\"></a>hadoop配置</h4><pre><code>正餐开始了，仔细看！！！\n</code></pre><ul>\n<li>hadoop-env配置：<br>进入到hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit hadoop-env.sh</em></strong><br><img src=\"gedit_hadoop_env.jpg\" alt=\"gedit_hadoop_env\"><br>添加以下信息到文件中，保存即可。<br>解释下内容：JAVA_HOME是java的安装路径，HADOOP_INSTALL是hadoop的安装路径，PATH是系统文件路径:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</span><br><span class=\"line\">export HADOOP_INSTALL=/usr/local/hadoop</span><br><span class=\"line\">export PATH=$PATH:/usr/local/hadoop/bin</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"hadoop_path.jpg\" alt=\"hadoop_path\"></p>\n<ul>\n<li><p>core-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit core-site.xml</em></strong><br><img src=\"gedit_core_site.jpg\" alt=\"gedit_core_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs:192.168.2.139:9000&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;A base for other temporary directory&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>hdfs-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit hdfs-site.xml</em></strong><br><img src=\"gedit_hdfs_site.jpg\" alt=\"gedit_hdfs_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/name&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/data&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;3&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mapred-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit mapred-site.xml</em></strong><br><img src=\"gedit_mapred_site.jpg\" alt=\"gedit_mapred_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;192.168.2.139:9001&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>master和slaves配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit master</em></strong>，<strong><em>sudo gedit slaves</em></strong><br><img src=\"gedit_master_slaves.jpg\" alt=\"gedit_master_slaves\"><br>在master文件中添加主节点计算机名称/IP即可。<br>在slaves文件中添加子节点计算机名称/IP即可。</p>\n</li>\n</ul>\n<h4 id=\"复制hadoop\"><a href=\"#复制hadoop\" class=\"headerlink\" title=\"复制hadoop\"></a>复制hadoop</h4><p>把hadoop分别向其他机器上复制一份，放到相同目录。<br>命令：scp（自行百度用法，这里不做详述）</p>\n<h4 id=\"建立hadoop所需文件夹\"><a href=\"#建立hadoop所需文件夹\" class=\"headerlink\" title=\"建立hadoop所需文件夹\"></a>建立hadoop所需文件夹</h4><p>在每个机器上建立所需要的文件夹，在步骤8中有core中配置的hadoop.tmp.dir文件夹，hdfs中配置的dfs.data.dir文件夹，需要进行建立以及是hadoop用户，读写权限。<br>执行命令：<strong><em>sudo mkdir</em></strong></p>\n<h4 id=\"格式化namenode\"><a href=\"#格式化namenode\" class=\"headerlink\" title=\"格式化namenode\"></a>格式化namenode</h4><p>进入到hadoop/bin目录，在主节点机器上执行命令：<strong><em>hadooop namenode -fomat</em></strong>，出现successfully字样成功，不成功大部分都是配置文件的问题。</p>\n<h4 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h4><p>在主节点机器上进入hadoop/bin目录下，执行命令:<strong><em>hadoop-start.sh</em></strong>，分别会启动NameNode,Jobtracker,SecondaryNameNode,DataNodeTaskTracker</p>\n<h4 id=\"查看hadoop\"><a href=\"#查看hadoop\" class=\"headerlink\" title=\"查看hadoop\"></a>查看hadoop</h4><p>在主节点机器上执行命令：<strong><em>jps</em></strong>，在主节点机器上会出现以下进程<br><img src=\"master_jps.jpg\" alt=\"master_jps\"><br>在子节点机器上执行命令：<strong><em>jps</em></strong>，在子节点机器上会出现以下进程<br><img src=\"slaves_jps.jpg\" alt=\"slaves_jps\"></p>\n<h4 id=\"查看运行状态\"><a href=\"#查看运行状态\" class=\"headerlink\" title=\"查看运行状态\"></a>查看运行状态</h4><p>在浏览器中输入主机IP:50030，会出现hadoop运行状态。<br><img src=\"hadoop.jpg\" alt=\"hadoop\"></p>\n<h4 id=\"停止hadoop\"><a href=\"#停止hadoop\" class=\"headerlink\" title=\"停止hadoop\"></a>停止hadoop</h4><p>在主节点机器上进入到hadoop/bin目录下，执行命令：<strong><em>stop-all.sh</em></strong>，这样hadoop停止运行。</p>\n<h3 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h3><pre><code>本人也初学，有不对的希望大家谅解。\n</code></pre>","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_hadoop.jpg\" width=\"750\" alt></p>\n<blockquote>\n<p>Hadoop1.2.1 + Python2.7 + Ubuntu15.10</p>\n</blockquote>","more":"<hr>\n\n<h3 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h3><p>最近BigData貌似很火，本人也跟着一起凑凑热闹，初学hadoop，由于Ubuntu对于python的支持很好，个人也觉得Ubuntu确实不错，所以使用的是Ubuntu15.10系统，处理大数据采用python + hadoop的方式进行处理。</p>\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">vsersion</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Ubuntu</td>\n<td style=\"text-align:center\">15.10</td>\n<td style=\"text-align:center\">系统的版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n<td style=\"text-align:center\">开发语言</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JDK</td>\n<td style=\"text-align:center\">1.7</td>\n<td style=\"text-align:center\">hadoop运行的基础环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Hadoop</td>\n<td style=\"text-align:center\">1.2.1</td>\n<td style=\"text-align:center\">大数据处理工具</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">VMware</td>\n<td style=\"text-align:center\">6.0</td>\n<td style=\"text-align:center\">虚拟机</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><pre><code>本文主要讲述hadoop集群的安装过程，有什么不准确之处可以留言，一起交流share。\n</code></pre><h4 id=\"虚拟机安装\"><a href=\"#虚拟机安装\" class=\"headerlink\" title=\"虚拟机安装\"></a>虚拟机安装</h4><p>首先VMware上安装4台虚拟机，分别是Ubuntu15.10系统，具体安装百度即可so easy。安装时候对电脑的机器名直接命名为master，node01，node02，node03（1个主节点，3个子节点），接下来2-7的操作是针对于这4台虚拟机分别进行同样的操作。</p>\n<h4 id=\"创建hadoop用户组\"><a href=\"#创建hadoop用户组\" class=\"headerlink\" title=\"创建hadoop用户组\"></a>创建hadoop用户组</h4><p>命令：<strong><em>sudo addgroup hadoop</em></strong><br><img src=\"addgroup.jpg\" alt=\"addgroup\"></p>\n<h4 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h4><p>命令：<strong><em>sudo adduser -ingroup hadoop</em></strong><br><img src=\"adduser.jpg\" alt=\"adduser\"><br>回车后会提示输入新的UNIX密码，这是新建用户hadoop的密码，输入回车即可。如果不输入密码，回车后会重新提示输入密码，即密码不能为空。最后确认信息是否正确，如果没问题，输入 Y，回车即可。</p>\n<h4 id=\"添加hadoop-root权限\"><a href=\"#添加hadoop-root权限\" class=\"headerlink\" title=\"添加hadoop root权限\"></a>添加hadoop root权限</h4><p>命令：<strong><em>sudo gedit /etc/sudoers</em></strong><br><img src=\"gedit.jpg\" alt=\"gedit\"><br>打开sudoers 文件，在root    ALL=(ALL:ALL) ALL这行下面添加：<br>hadoop    ALL=(ALL:ALL) ALL<br>修改完保存关闭即可。<br><strong> 注：如果系统的gedit用不了，自行上网解决，这里给出的方案是用vi或vim。</strong></p>\n<h4 id=\"切换到hadoop用户\"><a href=\"#切换到hadoop用户\" class=\"headerlink\" title=\"切换到hadoop用户\"></a>切换到hadoop用户</h4><p>命令：<strong><em>su hadoop</em></strong>，输入密码即可登录hadoop用户。<br><img src=\"su_hadoop.jpg\" alt=\"su_hadoop\"></p>\n<h4 id=\"安装ssh\"><a href=\"#安装ssh\" class=\"headerlink\" title=\"安装ssh\"></a>安装ssh</h4><p>命令：<strong><em>sudo apt-get install openssh-server</em></strong><br><img src=\"openssh.jpg\" alt=\"openssh\"><br>安装完成后启动ssh服务，命令：<strong><em>sudo /etc/init.d/ssh start</em></strong><br>查看ssh服务是否启动，命令：<strong><em>ps -ef | grep ssh</em></strong><br><img src=\"grep.jpg\" alt=\"grep\"><br>服务存在之后，设置实现ssh免密码登录，命令：<strong><em>ssh-keygen -t rsa -P “”</em></strong><br><img src=\"ssh.jpg\" alt=\"ssh\"><br>下面我们将公钥追加到authorized_keys中，它用户保存所有允许以当前用户身份登录到ssh客户端用户的公钥内容，命令：<br><strong><em>cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</em></strong><br><img src=\"cat.jpg\" alt=\"cat\"></p>\n<h4 id=\"登录ssh\"><a href=\"#登录ssh\" class=\"headerlink\" title=\"登录ssh\"></a>登录ssh</h4><p>命令：<strong><em>ssh localhost</em></strong>，退出，命令：<strong><em>exit</em></strong><br><img src=\"ssh_localhost.jpg\" alt=\"ssh_localhost\"></p>\n<h4 id=\"安装Java环境\"><a href=\"#安装Java环境\" class=\"headerlink\" title=\"安装Java环境\"></a>安装Java环境</h4><p>命令：<strong><em>sudo apt-get install openjdk-7-jdk</em></strong><br><img src=\"install_java.jpg\" alt=\"install_java\"><br>查看安装结果，输入命令：<strong><em>java -version</em></strong>，结果如下表示安装成功。<br><img src=\"java_version.jpg\" alt=\"java_version\"><br>注：java安装默认路径：/usr/lib/jvm/java-7-openjdk-amd64<br>以上操作基于hadoop用户，并且每个电脑配置一致</p>\n<h4 id=\"hadoop配置\"><a href=\"#hadoop配置\" class=\"headerlink\" title=\"hadoop配置\"></a>hadoop配置</h4><pre><code>正餐开始了，仔细看！！！\n</code></pre><ul>\n<li>hadoop-env配置：<br>进入到hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit hadoop-env.sh</em></strong><br><img src=\"gedit_hadoop_env.jpg\" alt=\"gedit_hadoop_env\"><br>添加以下信息到文件中，保存即可。<br>解释下内容：JAVA_HOME是java的安装路径，HADOOP_INSTALL是hadoop的安装路径，PATH是系统文件路径:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</span><br><span class=\"line\">export HADOOP_INSTALL=/usr/local/hadoop</span><br><span class=\"line\">export PATH=$PATH:/usr/local/hadoop/bin</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><img src=\"hadoop_path.jpg\" alt=\"hadoop_path\"></p>\n<ul>\n<li><p>core-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit core-site.xml</em></strong><br><img src=\"gedit_core_site.jpg\" alt=\"gedit_core_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;fs.default.name&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;hdfs:192.168.2.139:9000&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/tmp&lt;/value&gt;</span><br><span class=\"line\">    &lt;description&gt;A base for other temporary directory&lt;/description&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>hdfs-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit hdfs-site.xml</em></strong><br><img src=\"gedit_hdfs_site.jpg\" alt=\"gedit_hdfs_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.name.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/name&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.data.dir&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;/home/hadoop/hadoop/data&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;3&lt;/value&gt;</span><br><span class=\"line\">    &lt;final&gt;true&lt;/final&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mapred-site.xml配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit mapred-site.xml</em></strong><br><img src=\"gedit_mapred_site.jpg\" alt=\"gedit_mapred_site\"><br>添加以下信息到文件中，保存即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;configuration&gt;</span><br><span class=\"line\">  &lt;property&gt;</span><br><span class=\"line\">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</span><br><span class=\"line\">    &lt;value&gt;192.168.2.139:9001&lt;/value&gt;</span><br><span class=\"line\">  &lt;/property&gt;</span><br><span class=\"line\">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>master和slaves配置<br>hadoop文件的conf文件夹，使用命令：<strong><em>sudo gedit master</em></strong>，<strong><em>sudo gedit slaves</em></strong><br><img src=\"gedit_master_slaves.jpg\" alt=\"gedit_master_slaves\"><br>在master文件中添加主节点计算机名称/IP即可。<br>在slaves文件中添加子节点计算机名称/IP即可。</p>\n</li>\n</ul>\n<h4 id=\"复制hadoop\"><a href=\"#复制hadoop\" class=\"headerlink\" title=\"复制hadoop\"></a>复制hadoop</h4><p>把hadoop分别向其他机器上复制一份，放到相同目录。<br>命令：scp（自行百度用法，这里不做详述）</p>\n<h4 id=\"建立hadoop所需文件夹\"><a href=\"#建立hadoop所需文件夹\" class=\"headerlink\" title=\"建立hadoop所需文件夹\"></a>建立hadoop所需文件夹</h4><p>在每个机器上建立所需要的文件夹，在步骤8中有core中配置的hadoop.tmp.dir文件夹，hdfs中配置的dfs.data.dir文件夹，需要进行建立以及是hadoop用户，读写权限。<br>执行命令：<strong><em>sudo mkdir</em></strong></p>\n<h4 id=\"格式化namenode\"><a href=\"#格式化namenode\" class=\"headerlink\" title=\"格式化namenode\"></a>格式化namenode</h4><p>进入到hadoop/bin目录，在主节点机器上执行命令：<strong><em>hadooop namenode -fomat</em></strong>，出现successfully字样成功，不成功大部分都是配置文件的问题。</p>\n<h4 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h4><p>在主节点机器上进入hadoop/bin目录下，执行命令:<strong><em>hadoop-start.sh</em></strong>，分别会启动NameNode,Jobtracker,SecondaryNameNode,DataNodeTaskTracker</p>\n<h4 id=\"查看hadoop\"><a href=\"#查看hadoop\" class=\"headerlink\" title=\"查看hadoop\"></a>查看hadoop</h4><p>在主节点机器上执行命令：<strong><em>jps</em></strong>，在主节点机器上会出现以下进程<br><img src=\"master_jps.jpg\" alt=\"master_jps\"><br>在子节点机器上执行命令：<strong><em>jps</em></strong>，在子节点机器上会出现以下进程<br><img src=\"slaves_jps.jpg\" alt=\"slaves_jps\"></p>\n<h4 id=\"查看运行状态\"><a href=\"#查看运行状态\" class=\"headerlink\" title=\"查看运行状态\"></a>查看运行状态</h4><p>在浏览器中输入主机IP:50030，会出现hadoop运行状态。<br><img src=\"hadoop.jpg\" alt=\"hadoop\"></p>\n<h4 id=\"停止hadoop\"><a href=\"#停止hadoop\" class=\"headerlink\" title=\"停止hadoop\"></a>停止hadoop</h4><p>在主节点机器上进入到hadoop/bin目录下，执行命令：<strong><em>stop-all.sh</em></strong>，这样hadoop停止运行。</p>\n<h3 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h3><pre><code>本人也初学，有不对的希望大家谅解。\n</code></pre>"},{"title":"Live2d喵星人模型s","comments":0,"desc":"给博客注入一只博客添加喵星人（live2d）【Hexo+Next】","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, live2d, 喵星人","abbrlink":26442,"date":"2018-12-23T04:56:51.000Z","updated":"2018-12-23T04:56:51.000Z","_content":"\n***<font color=\"#dd0000\" size=\"5\">每天进步一点点！！！</font>***\n\n{% note success %}\n上篇文章已经介绍怎么实现喵星人入住博客，实现完了之后根本不知道使用哪个模型，索性我都尝试了一下，把每个模型以及对应的截图总结一下，给自己、给大家节约时间。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n#### chitose\n\n<img src=\"live2d-widget-model-chitose.png\" width=\"250\"/>\n\n#### epsilon2_1\n\n<img src=\"live2d-widget-model-epsilon2_1.png\" width=\"250\"/>\n\n#### gf\n\n<img src=\"live2d-widget-model-gf.png\" width=\"250\"/>\n\n#### haru_01\n\n<img src=\"live2d-widget-model-haru_01.png\" width=\"250\"/>\n\n#### haru_02\n\n<img src=\"live2d-widget-model-haru_02.png\" width=\"250\"/>\n\n#### haruto\n\n<img src=\"live2d-widget-model-haruto.png\" width=\"250\"/>\n\n#### hibiki\n\n<img src=\"live2d-widget-model-hibiki.png\" width=\"250\"/>\n\n#### hijiki\n\n<img src=\"live2d-widget-model-hijiki.png\" width=\"250\"/>\n\n#### izumi\n\n<img src=\"live2d-widget-model-izumi.png\" width=\"250\"/>\n\n#### koharu\n\n<img src=\"live2d-widget-model-koharu.png\" width=\"250\"/>\n\n#### miku\n\n<img src=\"live2d-widget-model-miku.png\" width=\"250\"/>\n\n#### ni-j\n\n<img src=\"live2d-widget-model-ni-j.png\" width=\"250\"/>\n\n#### nico\n\n<img src=\"live2d-widget-model-nico.png\" width=\"250\"/>\n\n#### nietzsche\n\n<img src=\"live2d-widget-model-nietzsche.png\" width=\"250\"/>\n\n#### nipsilon\n\n<img src=\"live2d-widget-model-nipsilon.png\" width=\"250\"/>\n\n#### nito\n\n<img src=\"live2d-widget-model-nito.png\" width=\"250\"/>\n\n#### shizuku\n\n<img src=\"live2d-widget-model-shizuku.png\" width=\"250\"/>\n\n#### tororo\n\n<img src=\"live2d-widget-model-tororo.png\" width=\"250\"/>\n\n#### ltsumiki\n\n<img src=\"live2d-widget-model-tsumiki.png\" width=\"250\"/>\n\n#### unitychan\n\n<img src=\"live2d-widget-model-unitychan.png\" width=\"250\"/>\n\n#### wanko\n\n<img src=\"live2d-widget-model-wanko.png\" width=\"250\"/>\n\n\n#### z16\n\n<img src=\"live2d-widget-model-z16.png\" width=\"250\"/>\n","source":"_posts/Hexo-Live2d喵星人模型s.md","raw":"---\ntitle: Live2d喵星人模型s\ncomments: false\ndesc: 给博客注入一只博客添加喵星人（live2d）【Hexo+Next】\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, live2d, 喵星人\nabbrlink: 26442\ndate: 2018-12-23 12:56:51\nupdated: 2018-12-23 12:56:51\n---\n\n***<font color=\"#dd0000\" size=\"5\">每天进步一点点！！！</font>***\n\n{% note success %}\n上篇文章已经介绍怎么实现喵星人入住博客，实现完了之后根本不知道使用哪个模型，索性我都尝试了一下，把每个模型以及对应的截图总结一下，给自己、给大家节约时间。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n#### chitose\n\n<img src=\"live2d-widget-model-chitose.png\" width=\"250\"/>\n\n#### epsilon2_1\n\n<img src=\"live2d-widget-model-epsilon2_1.png\" width=\"250\"/>\n\n#### gf\n\n<img src=\"live2d-widget-model-gf.png\" width=\"250\"/>\n\n#### haru_01\n\n<img src=\"live2d-widget-model-haru_01.png\" width=\"250\"/>\n\n#### haru_02\n\n<img src=\"live2d-widget-model-haru_02.png\" width=\"250\"/>\n\n#### haruto\n\n<img src=\"live2d-widget-model-haruto.png\" width=\"250\"/>\n\n#### hibiki\n\n<img src=\"live2d-widget-model-hibiki.png\" width=\"250\"/>\n\n#### hijiki\n\n<img src=\"live2d-widget-model-hijiki.png\" width=\"250\"/>\n\n#### izumi\n\n<img src=\"live2d-widget-model-izumi.png\" width=\"250\"/>\n\n#### koharu\n\n<img src=\"live2d-widget-model-koharu.png\" width=\"250\"/>\n\n#### miku\n\n<img src=\"live2d-widget-model-miku.png\" width=\"250\"/>\n\n#### ni-j\n\n<img src=\"live2d-widget-model-ni-j.png\" width=\"250\"/>\n\n#### nico\n\n<img src=\"live2d-widget-model-nico.png\" width=\"250\"/>\n\n#### nietzsche\n\n<img src=\"live2d-widget-model-nietzsche.png\" width=\"250\"/>\n\n#### nipsilon\n\n<img src=\"live2d-widget-model-nipsilon.png\" width=\"250\"/>\n\n#### nito\n\n<img src=\"live2d-widget-model-nito.png\" width=\"250\"/>\n\n#### shizuku\n\n<img src=\"live2d-widget-model-shizuku.png\" width=\"250\"/>\n\n#### tororo\n\n<img src=\"live2d-widget-model-tororo.png\" width=\"250\"/>\n\n#### ltsumiki\n\n<img src=\"live2d-widget-model-tsumiki.png\" width=\"250\"/>\n\n#### unitychan\n\n<img src=\"live2d-widget-model-unitychan.png\" width=\"250\"/>\n\n#### wanko\n\n<img src=\"live2d-widget-model-wanko.png\" width=\"250\"/>\n\n\n#### z16\n\n<img src=\"live2d-widget-model-z16.png\" width=\"250\"/>\n","slug":"Hexo-Live2d喵星人模型s","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2qi001ntabjcam9el8u","content":"<p><strong><em><font color=\"#dd0000\" size=\"5\">每天进步一点点！！！</font></em></strong></p>\n<div class=\"note success\">\n            <p>上篇文章已经介绍怎么实现喵星人入住博客，实现完了之后根本不知道使用哪个模型，索性我都尝试了一下，把每个模型以及对应的截图总结一下，给自己、给大家节约时间。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"chitose\"><a href=\"#chitose\" class=\"headerlink\" title=\"chitose\"></a>chitose</h4><p><img src=\"live2d-widget-model-chitose.png\" width=\"250\"></p>\n<h4 id=\"epsilon2-1\"><a href=\"#epsilon2-1\" class=\"headerlink\" title=\"epsilon2_1\"></a>epsilon2_1</h4><p><img src=\"live2d-widget-model-epsilon2_1.png\" width=\"250\"></p>\n<h4 id=\"gf\"><a href=\"#gf\" class=\"headerlink\" title=\"gf\"></a>gf</h4><p><img src=\"live2d-widget-model-gf.png\" width=\"250\"></p>\n<h4 id=\"haru-01\"><a href=\"#haru-01\" class=\"headerlink\" title=\"haru_01\"></a>haru_01</h4><p><img src=\"live2d-widget-model-haru_01.png\" width=\"250\"></p>\n<h4 id=\"haru-02\"><a href=\"#haru-02\" class=\"headerlink\" title=\"haru_02\"></a>haru_02</h4><p><img src=\"live2d-widget-model-haru_02.png\" width=\"250\"></p>\n<h4 id=\"haruto\"><a href=\"#haruto\" class=\"headerlink\" title=\"haruto\"></a>haruto</h4><p><img src=\"live2d-widget-model-haruto.png\" width=\"250\"></p>\n<h4 id=\"hibiki\"><a href=\"#hibiki\" class=\"headerlink\" title=\"hibiki\"></a>hibiki</h4><p><img src=\"live2d-widget-model-hibiki.png\" width=\"250\"></p>\n<h4 id=\"hijiki\"><a href=\"#hijiki\" class=\"headerlink\" title=\"hijiki\"></a>hijiki</h4><p><img src=\"live2d-widget-model-hijiki.png\" width=\"250\"></p>\n<h4 id=\"izumi\"><a href=\"#izumi\" class=\"headerlink\" title=\"izumi\"></a>izumi</h4><p><img src=\"live2d-widget-model-izumi.png\" width=\"250\"></p>\n<h4 id=\"koharu\"><a href=\"#koharu\" class=\"headerlink\" title=\"koharu\"></a>koharu</h4><p><img src=\"live2d-widget-model-koharu.png\" width=\"250\"></p>\n<h4 id=\"miku\"><a href=\"#miku\" class=\"headerlink\" title=\"miku\"></a>miku</h4><p><img src=\"live2d-widget-model-miku.png\" width=\"250\"></p>\n<h4 id=\"ni-j\"><a href=\"#ni-j\" class=\"headerlink\" title=\"ni-j\"></a>ni-j</h4><p><img src=\"live2d-widget-model-ni-j.png\" width=\"250\"></p>\n<h4 id=\"nico\"><a href=\"#nico\" class=\"headerlink\" title=\"nico\"></a>nico</h4><p><img src=\"live2d-widget-model-nico.png\" width=\"250\"></p>\n<h4 id=\"nietzsche\"><a href=\"#nietzsche\" class=\"headerlink\" title=\"nietzsche\"></a>nietzsche</h4><p><img src=\"live2d-widget-model-nietzsche.png\" width=\"250\"></p>\n<h4 id=\"nipsilon\"><a href=\"#nipsilon\" class=\"headerlink\" title=\"nipsilon\"></a>nipsilon</h4><p><img src=\"live2d-widget-model-nipsilon.png\" width=\"250\"></p>\n<h4 id=\"nito\"><a href=\"#nito\" class=\"headerlink\" title=\"nito\"></a>nito</h4><p><img src=\"live2d-widget-model-nito.png\" width=\"250\"></p>\n<h4 id=\"shizuku\"><a href=\"#shizuku\" class=\"headerlink\" title=\"shizuku\"></a>shizuku</h4><p><img src=\"live2d-widget-model-shizuku.png\" width=\"250\"></p>\n<h4 id=\"tororo\"><a href=\"#tororo\" class=\"headerlink\" title=\"tororo\"></a>tororo</h4><p><img src=\"live2d-widget-model-tororo.png\" width=\"250\"></p>\n<h4 id=\"ltsumiki\"><a href=\"#ltsumiki\" class=\"headerlink\" title=\"ltsumiki\"></a>ltsumiki</h4><p><img src=\"live2d-widget-model-tsumiki.png\" width=\"250\"></p>\n<h4 id=\"unitychan\"><a href=\"#unitychan\" class=\"headerlink\" title=\"unitychan\"></a>unitychan</h4><p><img src=\"live2d-widget-model-unitychan.png\" width=\"250\"></p>\n<h4 id=\"wanko\"><a href=\"#wanko\" class=\"headerlink\" title=\"wanko\"></a>wanko</h4><p><img src=\"live2d-widget-model-wanko.png\" width=\"250\"></p>\n<h4 id=\"z16\"><a href=\"#z16\" class=\"headerlink\" title=\"z16\"></a>z16</h4><p><img src=\"live2d-widget-model-z16.png\" width=\"250\"></p>\n","site":{"data":{}},"excerpt":"<p><strong><em><font color=\"#dd0000\" size=\"5\">每天进步一点点！！！</font></em></strong></p>\n<div class=\"note success\">\n            <p>上篇文章已经介绍怎么实现喵星人入住博客，实现完了之后根本不知道使用哪个模型，索性我都尝试了一下，把每个模型以及对应的截图总结一下，给自己、给大家节约时间。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"chitose\"><a href=\"#chitose\" class=\"headerlink\" title=\"chitose\"></a>chitose</h4><p><img src=\"live2d-widget-model-chitose.png\" width=\"250\"></p>\n<h4 id=\"epsilon2-1\"><a href=\"#epsilon2-1\" class=\"headerlink\" title=\"epsilon2_1\"></a>epsilon2_1</h4><p><img src=\"live2d-widget-model-epsilon2_1.png\" width=\"250\"></p>\n<h4 id=\"gf\"><a href=\"#gf\" class=\"headerlink\" title=\"gf\"></a>gf</h4><p><img src=\"live2d-widget-model-gf.png\" width=\"250\"></p>\n<h4 id=\"haru-01\"><a href=\"#haru-01\" class=\"headerlink\" title=\"haru_01\"></a>haru_01</h4><p><img src=\"live2d-widget-model-haru_01.png\" width=\"250\"></p>\n<h4 id=\"haru-02\"><a href=\"#haru-02\" class=\"headerlink\" title=\"haru_02\"></a>haru_02</h4><p><img src=\"live2d-widget-model-haru_02.png\" width=\"250\"></p>\n<h4 id=\"haruto\"><a href=\"#haruto\" class=\"headerlink\" title=\"haruto\"></a>haruto</h4><p><img src=\"live2d-widget-model-haruto.png\" width=\"250\"></p>\n<h4 id=\"hibiki\"><a href=\"#hibiki\" class=\"headerlink\" title=\"hibiki\"></a>hibiki</h4><p><img src=\"live2d-widget-model-hibiki.png\" width=\"250\"></p>\n<h4 id=\"hijiki\"><a href=\"#hijiki\" class=\"headerlink\" title=\"hijiki\"></a>hijiki</h4><p><img src=\"live2d-widget-model-hijiki.png\" width=\"250\"></p>\n<h4 id=\"izumi\"><a href=\"#izumi\" class=\"headerlink\" title=\"izumi\"></a>izumi</h4><p><img src=\"live2d-widget-model-izumi.png\" width=\"250\"></p>\n<h4 id=\"koharu\"><a href=\"#koharu\" class=\"headerlink\" title=\"koharu\"></a>koharu</h4><p><img src=\"live2d-widget-model-koharu.png\" width=\"250\"></p>\n<h4 id=\"miku\"><a href=\"#miku\" class=\"headerlink\" title=\"miku\"></a>miku</h4><p><img src=\"live2d-widget-model-miku.png\" width=\"250\"></p>\n<h4 id=\"ni-j\"><a href=\"#ni-j\" class=\"headerlink\" title=\"ni-j\"></a>ni-j</h4><p><img src=\"live2d-widget-model-ni-j.png\" width=\"250\"></p>\n<h4 id=\"nico\"><a href=\"#nico\" class=\"headerlink\" title=\"nico\"></a>nico</h4><p><img src=\"live2d-widget-model-nico.png\" width=\"250\"></p>\n<h4 id=\"nietzsche\"><a href=\"#nietzsche\" class=\"headerlink\" title=\"nietzsche\"></a>nietzsche</h4><p><img src=\"live2d-widget-model-nietzsche.png\" width=\"250\"></p>\n<h4 id=\"nipsilon\"><a href=\"#nipsilon\" class=\"headerlink\" title=\"nipsilon\"></a>nipsilon</h4><p><img src=\"live2d-widget-model-nipsilon.png\" width=\"250\"></p>\n<h4 id=\"nito\"><a href=\"#nito\" class=\"headerlink\" title=\"nito\"></a>nito</h4><p><img src=\"live2d-widget-model-nito.png\" width=\"250\"></p>\n<h4 id=\"shizuku\"><a href=\"#shizuku\" class=\"headerlink\" title=\"shizuku\"></a>shizuku</h4><p><img src=\"live2d-widget-model-shizuku.png\" width=\"250\"></p>\n<h4 id=\"tororo\"><a href=\"#tororo\" class=\"headerlink\" title=\"tororo\"></a>tororo</h4><p><img src=\"live2d-widget-model-tororo.png\" width=\"250\"></p>\n<h4 id=\"ltsumiki\"><a href=\"#ltsumiki\" class=\"headerlink\" title=\"ltsumiki\"></a>ltsumiki</h4><p><img src=\"live2d-widget-model-tsumiki.png\" width=\"250\"></p>\n<h4 id=\"unitychan\"><a href=\"#unitychan\" class=\"headerlink\" title=\"unitychan\"></a>unitychan</h4><p><img src=\"live2d-widget-model-unitychan.png\" width=\"250\"></p>\n<h4 id=\"wanko\"><a href=\"#wanko\" class=\"headerlink\" title=\"wanko\"></a>wanko</h4><p><img src=\"live2d-widget-model-wanko.png\" width=\"250\"></p>\n<h4 id=\"z16\"><a href=\"#z16\" class=\"headerlink\" title=\"z16\"></a>z16</h4><p><img src=\"live2d-widget-model-z16.png\" width=\"250\"></p>"},{"title":"Next主题优化-增强篇（Gemini）","comments":0,"desc":"Next主题优化系统教程的增强篇，主题是基于next的Gemini","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, tags, Fork me on github, 链接, 样式, 鼠标样式, 加载条","abbrlink":41065,"date":"2018-12-07T02:12:46.000Z","updated":"2019-12-07T02:12:46.000Z","_content":"\n### 问题简述\n{% note success %}\nNext主题优化之增强篇，前几天写了一篇通过配置相关的优化，继续介绍一下代码相关更改的优化。\n{% endnote %}\n\n![](/images/article_youhua_zengqiang.png)\n\n<!--more-->\n<hr />\n\n### 目录结构\n\n![初始化目录](next_youhua_catalog.png)\n\n- _config.yml：blog全局配置文件\n- node_modules：npm安装的第三方包\n- public：执行***hexo generate***命令，输出的静态网页内容目录\n- package.json：hexo-site安装的第三方插件\n- scaffolds：layout模板文件目录\n- source：文章源码目录，该目录下的markdown和html文件均会被hexo处理\n- themes：主题文件目录\n\n### 优化Catalog\n\n- ***<font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g && hexo server -p 8888 --debug***\n\n1. #### Fork me on github\n\n    位置：blog/themes/next/layout/_layout.swig\n    打开上述文件，搜索关键字<font size=\"4\" color=\"red\">***headband***</font>，在这个div标签下添加文字/图标链接的代码，并把href改为自己的github地址。\n    ```\n    <div class=\"headband\"></div>\n    ```\n    文字：https://github.blog/2008-12-19-github-ribbons/\n    图标：http://tholman.com/github-corners/\n    ![Fork_me_on_github](next_youhua_github.png)\n\n    {% note info %}\n    新版实现方式\n    {% endnote %}\n\n    在新版只需要配置一下就OK，打开next的配置文件，搜索<font size=\"4\" color=\"red\">***github_banner***</font>，配置一下：\n    ```\n    github_banner:\n      enable: true\n      permalink: https://github.com/GIS90\n      title: Follow me on GitHub\n    ```\n\n2. #### 文章内链接文本样式\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，样式根据自己的喜爱定义就好，添加如下代码：\n    ```\n    .post-body p a{\n      color: #0593d3;\n      border-bottom: none;\n      border-bottom: 1px solid #0593d3;\n      &:hover {\n        color: #fc6423;\n        border-bottom: none;\n        border-bottom: 1px solid #fc6423;\n      }\n    }\n    ```\n    ![超链接](next_youhua_a.gif)\n\n3. #### 添加顶部加载条\n\n    添加顶部加载条，步骤如下：\n    - 下载js文件，不清楚的也可以直接看github官方介绍：https://github.com/theme-next/theme-next-pace\n    ```\n    cd themes/next\n    git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n    ```\n    - 打开配置文件，搜索<font size=\"4\" color=\"red\">***pace***</font>，更改如下\n    位置：blog/theme/next/_config.yml\n    ```\n    # Dependencies: https://github.com/theme-next/theme-next-pace\n    pace: true\n    # Themes list:\n    # pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom\n    # pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator\n    # pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal\n    pace_theme: pace-theme-mac-osx\n    ```\n    大家可以根据自己喜欢的样式配置。\n    ![顶部加载条](next_youhua_load.gif)\n\n4. #### tags页样式修改\n\n    位置：blog/theme/next/_config.yml\n    打开配置文件，搜索<font size=\"4\" color=\"red\">***tagcloud***</font>，更改配置如下：\n    ```\n    tagcloud:\n      # If true, font size, font color and amount of tags can be customized\n      enable: true\n\n      # All values below are same as default, change them by yourself\n      min: 12 # min font size in px\n      max: 36 # max font size in px\n      start: \"#FF9900\" # start color (hex, rgba, hsla or color keywords)\n      end: \"#FF00FF\" # end color (hex, rgba, hsla or color keywords)\n      amount: 80 # amount of tags, chage it if you have more than 200 tags\n    ```\n    ![tags](next_youhua_tags.png)\n\n5. #### 鼠标样式修改\n\n    - 鼠标样式文件\n    把下载好的鼠标样式文件（.cur）放到**blog\\public**目录下。\n    - 自定义样式\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl。\n    打开上述文件，添加如下代码：\n    ```\n    // 光明西-背景\n    body {\n        background:url(/images/background.jpg);\n        cursor: url('/images/shubiao_guangmingxi.cur'), auto !important;\n    }\n    // 自制主题切换功能样式-暗黑系\n    body.dark-theme {\n        background: #282c34;\n        cursor: url('/images/shubiao_anheixi.cur'), auto !important;\n    }\n    ```\n    鼠标样式根据自己的喜好做相关调整。\n    - 刷新。\n\n### 学习\n\nhexo官方配置手册：https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\nhexo图标选取地址：https://fontawesome.com/icons\n\n### 结束\n\n本篇内容主要解决Hexo、Next更改代码相关的优化，如果想通过配置优化，请查看***Next主题优化-基础篇***。内容持续更新中，如有bugs，欢迎大家评论指出。\n待续。。。。。。（未完结）\n\n***<font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font>***\n","source":"_posts/Hexo-Next主题优化-增强篇（Gemini）.md","raw":"---\ntitle: Next主题优化-增强篇（Gemini）\ncomments: false\ndesc: Next主题优化系统教程的增强篇，主题是基于next的Gemini\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, tags, Fork me on github, 链接, 样式, 鼠标样式, 加载条\nabbrlink: 41065\ndate: 2018-12-07 10:12:46\nupdated: 2019-12-07 10:12:46\n---\n\n### 问题简述\n{% note success %}\nNext主题优化之增强篇，前几天写了一篇通过配置相关的优化，继续介绍一下代码相关更改的优化。\n{% endnote %}\n\n![](/images/article_youhua_zengqiang.png)\n\n<!--more-->\n<hr />\n\n### 目录结构\n\n![初始化目录](next_youhua_catalog.png)\n\n- _config.yml：blog全局配置文件\n- node_modules：npm安装的第三方包\n- public：执行***hexo generate***命令，输出的静态网页内容目录\n- package.json：hexo-site安装的第三方插件\n- scaffolds：layout模板文件目录\n- source：文章源码目录，该目录下的markdown和html文件均会被hexo处理\n- themes：主题文件目录\n\n### 优化Catalog\n\n- ***<font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g && hexo server -p 8888 --debug***\n\n1. #### Fork me on github\n\n    位置：blog/themes/next/layout/_layout.swig\n    打开上述文件，搜索关键字<font size=\"4\" color=\"red\">***headband***</font>，在这个div标签下添加文字/图标链接的代码，并把href改为自己的github地址。\n    ```\n    <div class=\"headband\"></div>\n    ```\n    文字：https://github.blog/2008-12-19-github-ribbons/\n    图标：http://tholman.com/github-corners/\n    ![Fork_me_on_github](next_youhua_github.png)\n\n    {% note info %}\n    新版实现方式\n    {% endnote %}\n\n    在新版只需要配置一下就OK，打开next的配置文件，搜索<font size=\"4\" color=\"red\">***github_banner***</font>，配置一下：\n    ```\n    github_banner:\n      enable: true\n      permalink: https://github.com/GIS90\n      title: Follow me on GitHub\n    ```\n\n2. #### 文章内链接文本样式\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，样式根据自己的喜爱定义就好，添加如下代码：\n    ```\n    .post-body p a{\n      color: #0593d3;\n      border-bottom: none;\n      border-bottom: 1px solid #0593d3;\n      &:hover {\n        color: #fc6423;\n        border-bottom: none;\n        border-bottom: 1px solid #fc6423;\n      }\n    }\n    ```\n    ![超链接](next_youhua_a.gif)\n\n3. #### 添加顶部加载条\n\n    添加顶部加载条，步骤如下：\n    - 下载js文件，不清楚的也可以直接看github官方介绍：https://github.com/theme-next/theme-next-pace\n    ```\n    cd themes/next\n    git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n    ```\n    - 打开配置文件，搜索<font size=\"4\" color=\"red\">***pace***</font>，更改如下\n    位置：blog/theme/next/_config.yml\n    ```\n    # Dependencies: https://github.com/theme-next/theme-next-pace\n    pace: true\n    # Themes list:\n    # pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom\n    # pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator\n    # pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal\n    pace_theme: pace-theme-mac-osx\n    ```\n    大家可以根据自己喜欢的样式配置。\n    ![顶部加载条](next_youhua_load.gif)\n\n4. #### tags页样式修改\n\n    位置：blog/theme/next/_config.yml\n    打开配置文件，搜索<font size=\"4\" color=\"red\">***tagcloud***</font>，更改配置如下：\n    ```\n    tagcloud:\n      # If true, font size, font color and amount of tags can be customized\n      enable: true\n\n      # All values below are same as default, change them by yourself\n      min: 12 # min font size in px\n      max: 36 # max font size in px\n      start: \"#FF9900\" # start color (hex, rgba, hsla or color keywords)\n      end: \"#FF00FF\" # end color (hex, rgba, hsla or color keywords)\n      amount: 80 # amount of tags, chage it if you have more than 200 tags\n    ```\n    ![tags](next_youhua_tags.png)\n\n5. #### 鼠标样式修改\n\n    - 鼠标样式文件\n    把下载好的鼠标样式文件（.cur）放到**blog\\public**目录下。\n    - 自定义样式\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl。\n    打开上述文件，添加如下代码：\n    ```\n    // 光明西-背景\n    body {\n        background:url(/images/background.jpg);\n        cursor: url('/images/shubiao_guangmingxi.cur'), auto !important;\n    }\n    // 自制主题切换功能样式-暗黑系\n    body.dark-theme {\n        background: #282c34;\n        cursor: url('/images/shubiao_anheixi.cur'), auto !important;\n    }\n    ```\n    鼠标样式根据自己的喜好做相关调整。\n    - 刷新。\n\n### 学习\n\nhexo官方配置手册：https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\nhexo图标选取地址：https://fontawesome.com/icons\n\n### 结束\n\n本篇内容主要解决Hexo、Next更改代码相关的优化，如果想通过配置优化，请查看***Next主题优化-基础篇***。内容持续更新中，如有bugs，欢迎大家评论指出。\n待续。。。。。。（未完结）\n\n***<font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font>***\n","slug":"Hexo-Next主题优化-增强篇（Gemini）","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2qo001qtabj61486820","content":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>Next主题优化之增强篇，前几天写了一篇通过配置相关的优化，继续介绍一下代码相关更改的优化。</p>\n          </div>\n<p><img src=\"/images/article_youhua_zengqiang.png\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h3><p><img src=\"next_youhua_catalog.png\" alt=\"初始化目录\"></p>\n<ul>\n<li>_config.yml：blog全局配置文件</li>\n<li>node_modules：npm安装的第三方包</li>\n<li>public：执行<strong><em>hexo generate</em></strong>命令，输出的静态网页内容目录</li>\n<li>package.json：hexo-site安装的第三方插件</li>\n<li>scaffolds：layout模板文件目录</li>\n<li>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理</li>\n<li>themes：主题文件目录</li>\n</ul>\n<h3 id=\"优化Catalog\"><a href=\"#优化Catalog\" class=\"headerlink\" title=\"优化Catalog\"></a>优化Catalog</h3><ul>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g &amp;&amp; hexo server -p 8888 –debug</font></em></strong></li>\n</ul>\n<ol>\n<li><h4 id=\"Fork-me-on-github\"><a href=\"#Fork-me-on-github\" class=\"headerlink\" title=\"Fork me on github\"></a>Fork me on github</h4><p> 位置：blog/themes/next/layout/_layout.swig<br> 打开上述文件，搜索关键字<font size=\"4\" color=\"red\"><strong><em>headband</em></strong></font>，在这个div标签下添加文字/图标链接的代码，并把href改为自己的github地址。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p> 文字：<a href=\"https://github.blog/2008-12-19-github-ribbons/\" target=\"_blank\" rel=\"noopener\">https://github.blog/2008-12-19-github-ribbons/</a><br> 图标：<a href=\"http://tholman.com/github-corners/\" target=\"_blank\" rel=\"noopener\">http://tholman.com/github-corners/</a><br> <img src=\"next_youhua_github.png\" alt=\"Fork_me_on_github\"></p>\n <div class=\"note info\">\n            <p>新版实现方式</p>\n          </div>\n<p> 在新版只需要配置一下就OK，打开next的配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>github_banner</em></strong></font>，配置一下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github_banner:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  permalink: https://github.com/GIS90</span><br><span class=\"line\">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"文章内链接文本样式\"><a href=\"#文章内链接文本样式\" class=\"headerlink\" title=\"文章内链接文本样式\"></a>文章内链接文本样式</h4><p> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br> 打开上述文件，样式根据自己的喜爱定义就好，添加如下代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.post-body p a&#123;</span><br><span class=\"line\">  color: #0593d3;</span><br><span class=\"line\">  border-bottom: none;</span><br><span class=\"line\">  border-bottom: 1px solid #0593d3;</span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    color: #fc6423;</span><br><span class=\"line\">    border-bottom: none;</span><br><span class=\"line\">    border-bottom: 1px solid #fc6423;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_a.gif\" alt=\"超链接\"></p>\n</li>\n<li><h4 id=\"添加顶部加载条\"><a href=\"#添加顶部加载条\" class=\"headerlink\" title=\"添加顶部加载条\"></a>添加顶部加载条</h4><p> 添加顶部加载条，步骤如下：</p>\n<ul>\n<li><p>下载js文件，不清楚的也可以直接看github官方介绍：<a href=\"https://github.com/theme-next/theme-next-pace\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-pace</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>pace</em></strong></font>，更改如下<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-pace</span><br><span class=\"line\">pace: true</span><br><span class=\"line\"># Themes list:</span><br><span class=\"line\"># pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom</span><br><span class=\"line\"># pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator</span><br><span class=\"line\"># pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal</span><br><span class=\"line\">pace_theme: pace-theme-mac-osx</span><br></pre></td></tr></table></figure>\n<p>大家可以根据自己喜欢的样式配置。<br><img src=\"next_youhua_load.gif\" alt=\"顶部加载条\"></p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"tags页样式修改\"><a href=\"#tags页样式修改\" class=\"headerlink\" title=\"tags页样式修改\"></a>tags页样式修改</h4><p> 位置：blog/theme/next/_config.yml<br> 打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>tagcloud</em></strong></font>，更改配置如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tagcloud:</span><br><span class=\"line\">  # If true, font size, font color and amount of tags can be customized</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # All values below are same as default, change them by yourself</span><br><span class=\"line\">  min: 12 # min font size in px</span><br><span class=\"line\">  max: 36 # max font size in px</span><br><span class=\"line\">  start: &quot;#FF9900&quot; # start color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  end: &quot;#FF00FF&quot; # end color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  amount: 80 # amount of tags, chage it if you have more than 200 tags</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_tags.png\" alt=\"tags\"></p>\n</li>\n<li><h4 id=\"鼠标样式修改\"><a href=\"#鼠标样式修改\" class=\"headerlink\" title=\"鼠标样式修改\"></a>鼠标样式修改</h4><ul>\n<li>鼠标样式文件<br>把下载好的鼠标样式文件（.cur）放到<strong>blog\\public</strong>目录下。</li>\n<li><p>自定义样式<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl。<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 光明西-背景</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_guangmingxi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 自制主题切换功能样式-暗黑系</span><br><span class=\"line\">body.dark-theme &#123;</span><br><span class=\"line\">    background: #282c34;</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_anheixi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>鼠标样式根据自己的喜好做相关调整。</p>\n</li>\n<li>刷新。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>hexo官方配置手册：<a href=\"https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo-guide.readthedocs.io/zh_CN/latest/index.html</a><br>hexo图标选取地址：<a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/icons</a></p>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>本篇内容主要解决Hexo、Next更改代码相关的优化，如果想通过配置优化，请查看<strong><em>Next主题优化-基础篇</em></strong>。内容持续更新中，如有bugs，欢迎大家评论指出。<br>待续。。。。。。（未完结）</p>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>Next主题优化之增强篇，前几天写了一篇通过配置相关的优化，继续介绍一下代码相关更改的优化。</p>\n          </div>\n<p><img src=\"/images/article_youhua_zengqiang.png\" alt></p>","more":"<hr>\n\n<h3 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h3><p><img src=\"next_youhua_catalog.png\" alt=\"初始化目录\"></p>\n<ul>\n<li>_config.yml：blog全局配置文件</li>\n<li>node_modules：npm安装的第三方包</li>\n<li>public：执行<strong><em>hexo generate</em></strong>命令，输出的静态网页内容目录</li>\n<li>package.json：hexo-site安装的第三方插件</li>\n<li>scaffolds：layout模板文件目录</li>\n<li>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理</li>\n<li>themes：主题文件目录</li>\n</ul>\n<h3 id=\"优化Catalog\"><a href=\"#优化Catalog\" class=\"headerlink\" title=\"优化Catalog\"></a>优化Catalog</h3><ul>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g &amp;&amp; hexo server -p 8888 –debug</font></em></strong></li>\n</ul>\n<ol>\n<li><h4 id=\"Fork-me-on-github\"><a href=\"#Fork-me-on-github\" class=\"headerlink\" title=\"Fork me on github\"></a>Fork me on github</h4><p> 位置：blog/themes/next/layout/_layout.swig<br> 打开上述文件，搜索关键字<font size=\"4\" color=\"red\"><strong><em>headband</em></strong></font>，在这个div标签下添加文字/图标链接的代码，并把href改为自己的github地址。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p> 文字：<a href=\"https://github.blog/2008-12-19-github-ribbons/\" target=\"_blank\" rel=\"noopener\">https://github.blog/2008-12-19-github-ribbons/</a><br> 图标：<a href=\"http://tholman.com/github-corners/\" target=\"_blank\" rel=\"noopener\">http://tholman.com/github-corners/</a><br> <img src=\"next_youhua_github.png\" alt=\"Fork_me_on_github\"></p>\n <div class=\"note info\">\n            <p>新版实现方式</p>\n          </div>\n<p> 在新版只需要配置一下就OK，打开next的配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>github_banner</em></strong></font>，配置一下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github_banner:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  permalink: https://github.com/GIS90</span><br><span class=\"line\">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"文章内链接文本样式\"><a href=\"#文章内链接文本样式\" class=\"headerlink\" title=\"文章内链接文本样式\"></a>文章内链接文本样式</h4><p> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br> 打开上述文件，样式根据自己的喜爱定义就好，添加如下代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.post-body p a&#123;</span><br><span class=\"line\">  color: #0593d3;</span><br><span class=\"line\">  border-bottom: none;</span><br><span class=\"line\">  border-bottom: 1px solid #0593d3;</span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    color: #fc6423;</span><br><span class=\"line\">    border-bottom: none;</span><br><span class=\"line\">    border-bottom: 1px solid #fc6423;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_a.gif\" alt=\"超链接\"></p>\n</li>\n<li><h4 id=\"添加顶部加载条\"><a href=\"#添加顶部加载条\" class=\"headerlink\" title=\"添加顶部加载条\"></a>添加顶部加载条</h4><p> 添加顶部加载条，步骤如下：</p>\n<ul>\n<li><p>下载js文件，不清楚的也可以直接看github官方介绍：<a href=\"https://github.com/theme-next/theme-next-pace\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-pace</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>pace</em></strong></font>，更改如下<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-pace</span><br><span class=\"line\">pace: true</span><br><span class=\"line\"># Themes list:</span><br><span class=\"line\"># pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom</span><br><span class=\"line\"># pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator</span><br><span class=\"line\"># pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal</span><br><span class=\"line\">pace_theme: pace-theme-mac-osx</span><br></pre></td></tr></table></figure>\n<p>大家可以根据自己喜欢的样式配置。<br><img src=\"next_youhua_load.gif\" alt=\"顶部加载条\"></p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"tags页样式修改\"><a href=\"#tags页样式修改\" class=\"headerlink\" title=\"tags页样式修改\"></a>tags页样式修改</h4><p> 位置：blog/theme/next/_config.yml<br> 打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>tagcloud</em></strong></font>，更改配置如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tagcloud:</span><br><span class=\"line\">  # If true, font size, font color and amount of tags can be customized</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # All values below are same as default, change them by yourself</span><br><span class=\"line\">  min: 12 # min font size in px</span><br><span class=\"line\">  max: 36 # max font size in px</span><br><span class=\"line\">  start: &quot;#FF9900&quot; # start color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  end: &quot;#FF00FF&quot; # end color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  amount: 80 # amount of tags, chage it if you have more than 200 tags</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_tags.png\" alt=\"tags\"></p>\n</li>\n<li><h4 id=\"鼠标样式修改\"><a href=\"#鼠标样式修改\" class=\"headerlink\" title=\"鼠标样式修改\"></a>鼠标样式修改</h4><ul>\n<li>鼠标样式文件<br>把下载好的鼠标样式文件（.cur）放到<strong>blog\\public</strong>目录下。</li>\n<li><p>自定义样式<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl。<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 光明西-背景</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_guangmingxi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 自制主题切换功能样式-暗黑系</span><br><span class=\"line\">body.dark-theme &#123;</span><br><span class=\"line\">    background: #282c34;</span><br><span class=\"line\">    cursor: url(&apos;/images/shubiao_anheixi.cur&apos;), auto !important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>鼠标样式根据自己的喜好做相关调整。</p>\n</li>\n<li>刷新。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>hexo官方配置手册：<a href=\"https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo-guide.readthedocs.io/zh_CN/latest/index.html</a><br>hexo图标选取地址：<a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/icons</a></p>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>本篇内容主要解决Hexo、Next更改代码相关的优化，如果想通过配置优化，请查看<strong><em>Next主题优化-基础篇</em></strong>。内容持续更新中，如有bugs，欢迎大家评论指出。<br>待续。。。。。。（未完结）</p>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font></em></strong></p>"},{"title":"Next主题优化-美化篇（Gemini）","comments":0,"top":false,"desc":"Next主题优化系统教程的美化篇，主题是基于next的Gemini","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 外观, 样式, 站点背景图, 文章阴影边框, sidebar圆角, 站点背景图, 阅读全文, post-block圆角, back-to-top","abbrlink":3412,"date":"2018-11-03T02:00:31.000Z","updated":"2019-11-03T02:00:31.000Z","_content":"### 简介\n{% note success %}\n基本用Hexo + Next把网站搭建起来用**run**了，而且Next在theme中github关注量最高，但是在样式上还是有些。。。。。。此博文用来记录对Next主题的一些样式上的更改，<font size=\"4\" color=\"red\">***持续更新中～***</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 版本信息\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n|  3  |    Theme     | Gemini  |    主题样式     |\n\n### 正菜\n\n<font size=\"4.5\" color=\"red\">***社会程序猿，人好话不多！！！***</font>\n\n1. #### sidebar圆角\n\n    打开***blog/themes/next/source/css/_variables/Gemini.styl***，搜索***border-radius***，在**_variables**目录下有Next主题的4种theme，用哪个修改哪个，修改代码：\n    ```\n    $border-radius-inner              = 16px\n    $border-radius                    = 16px\n    ```\n    我的修改完了，现在下面站点简介的sidebar，上面的圆角居然有背景色，继续进行优化修改。\n    打开文件***blog\\themes\\next\\source\\css\\_custom\\custom.styl***（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB），新增代码：\n    ```\n    // sidebar css\n    .sidebar{\n        background-color:transparent;\n    }\n    ```\n    把sidebar背景色设置成透明。\n\n2. #### 站点背景图\n\n    Next主题加上背景图，让博客变得更美观，很简单。\n    - 找到一张背景图，把图片放到以下文件中并命名background.jpg：\n    位置：blog/public/images/\n\n    - 打开***blog/themes/next/source/css/_custom/custom.styl***此文件，加入以下代码在文件最上面：\n    ```\n    // 背景图\n    body {\n        background:url(/images/background.jpg);\n    }\n    ```\n    刷新，样式可以根据自己的需要对图片进行进行调整。\n\n3. #### 文章阴影边框\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    // 主页文章添加阴影效果\n    .post {\n       margin-top: 0px;\n       margin-bottom: 60px;\n       padding: 25px;\n       -webkit-box-shadow: 0 0 5px rgba(250, 128, 114, 1.5);\n       -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n    }\n    ```\n    - webkit-box-shadow：控制边框的样式\n    ![阴影边框](next_youhua_border.png)\n\n4. #### **阅读全文**特效\n\n    位置：blog/themes/next/source/css/_variables/Pisces.styl\n    打开上述文件，搜索<font size=\"4\" color=\"red\">***Button***</font>，更改代码如下：\n    ```\n    $btn-default-radius           = 15px\n    $btn-default-bg               = black\n    $btn-default-color            = white\n    $btn-default-border-color     = blue\n    $btn-default-hover-color      = red\n    $btn-default-hover-bg         = yellow\n    ```\n    ![阅读全文](next_youhua_button.gif)\n\n5. #### 文章底部#号标签\n\n    位置：blog/themes/next/layout/_macro/post.swig\n    打开配置文件，搜索<font size=\"4\" color=\"red\">***\"tag\"***</font>，将# 更改代码如下：\n    ```\n    <i class=\"fa fa-tag\"></i>即可。\n    ```\n    同理，[icon](https://fontawesome.com/v4.7.0/icons/)也可以根据自己选取。标签暂时还是有下划线的，如果想要想去掉下滑线并添加自己的样式，添加代码到如下文件：\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    ```\n    .posts-expand .post-tags a {\n        border-bottom: none;\n        font-size: 18px;\n    }\n    ```\n\n6. #### post透明\n\n    位置：blog/themes/next/layout/_macro/post.swig\n    新增代码：\n    ```\n    .content {\n        margin-top: 22px;\n        opacity: 0.9;\n    }\n    ```\n    我只调整了post部分，没有调整sidebar的透明度，如果需要设置，添加代码如下：\n    ```\n    .sidebar{\n        background-color:transparent;\n        opacity: 0.9;\n    }\n    ```\n\n7. #### post-block圆角\n\n    设置主页每个文章块的圆角，还是样式自定义文件，添加代码：\n    ```\n    .post-block {\n        border-radius : 12px;\n    }\n    ```\n    ![主页博文块样式](next_meihua_post.png)\n\n\n8. #### back-to-top样式更改\n\n    修改回到顶部的按钮样式。\n    - 配置\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，开启back-to-top功能，修改如下代码：\n    ```\n    back2top:\n      enable: true\n      # Back to top in sidebar.\n      sidebar: false\n      # Scroll percent label in b2t button.\n      scrollpercent: true\n    ```\n    - 样式修改\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    .back-to-top {\n      right: 60px;\n      width: 70px;  //图片素材宽度\n      height: 350px;  //图片素材高度\n      opacity: 1;\n      bottom: unset;\n      transition: all .5s ease-in-out;\n      background: url(\"/images/scroll.png\");\n\n      //隐藏箭头图标\n      > i {\n        display: none;\n      }\n\n      &.back-to-top-on {\n        bottom: unset;\n        top: 0px;\n      }\n    }\n    ```\n9. #### 代码块样式\n\n    位置：blog\\themes\\next\\_config.yml\n    打开上述文件，搜索**highlight_theme**，更改代码如下：\n    ```\n    # Available values: normal | night | night eighties | night blue | night bright\n    # https://github.com/chriskempson/tomorrow-theme\n    highlight_theme: night bright\n    ```\n    主题有很多，根据自己的喜好定义。\n\n\n10. #### 标题样式修改\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    // 标题\n    .post-title {\n        color: black;\n        letter-spacing: 12px;\n        font-family: Comic Sans MS;\n        text-shadow: -1px -1px 1px #fff, 1px 1px 1px #000;\n    }\n    ```\n    样式根据自己的喜好做相关调整。\n\n\n### 小技巧\n\n- 在Hexo配置、博文Title都可以加入***font、div***等等这样的标签。\n- 在修改样式的时候，浏览器调试模式，找到对应的***class***，全项目搜索，找到对应的文件，直接进行修改，但不建议这么做。\n- 可以把样式修改在自定义样式文件：***blog\\themes\\next\\source\\css\\_custom\\custom.styl***（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB）。\n","source":"_posts/Hexo-Next主题优化-美化篇（Gemini）.md","raw":"---\ntitle: Next主题优化-美化篇（Gemini）\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\ntop: false\ndesc: Next主题优化系统教程的美化篇，主题是基于next的Gemini\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 外观, 样式, 站点背景图, 文章阴影边框, sidebar圆角, 站点背景图, 阅读全文, post-block圆角, back-to-top\nabbrlink: 3412\ndate: 2018-11-03 10:00:31\nupdated: 2019-11-03 10:00:31\n---\n### 简介\n{% note success %}\n基本用Hexo + Next把网站搭建起来用**run**了，而且Next在theme中github关注量最高，但是在样式上还是有些。。。。。。此博文用来记录对Next主题的一些样式上的更改，<font size=\"4\" color=\"red\">***持续更新中～***</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 版本信息\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n|  3  |    Theme     | Gemini  |    主题样式     |\n\n### 正菜\n\n<font size=\"4.5\" color=\"red\">***社会程序猿，人好话不多！！！***</font>\n\n1. #### sidebar圆角\n\n    打开***blog/themes/next/source/css/_variables/Gemini.styl***，搜索***border-radius***，在**_variables**目录下有Next主题的4种theme，用哪个修改哪个，修改代码：\n    ```\n    $border-radius-inner              = 16px\n    $border-radius                    = 16px\n    ```\n    我的修改完了，现在下面站点简介的sidebar，上面的圆角居然有背景色，继续进行优化修改。\n    打开文件***blog\\themes\\next\\source\\css\\_custom\\custom.styl***（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB），新增代码：\n    ```\n    // sidebar css\n    .sidebar{\n        background-color:transparent;\n    }\n    ```\n    把sidebar背景色设置成透明。\n\n2. #### 站点背景图\n\n    Next主题加上背景图，让博客变得更美观，很简单。\n    - 找到一张背景图，把图片放到以下文件中并命名background.jpg：\n    位置：blog/public/images/\n\n    - 打开***blog/themes/next/source/css/_custom/custom.styl***此文件，加入以下代码在文件最上面：\n    ```\n    // 背景图\n    body {\n        background:url(/images/background.jpg);\n    }\n    ```\n    刷新，样式可以根据自己的需要对图片进行进行调整。\n\n3. #### 文章阴影边框\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    // 主页文章添加阴影效果\n    .post {\n       margin-top: 0px;\n       margin-bottom: 60px;\n       padding: 25px;\n       -webkit-box-shadow: 0 0 5px rgba(250, 128, 114, 1.5);\n       -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n    }\n    ```\n    - webkit-box-shadow：控制边框的样式\n    ![阴影边框](next_youhua_border.png)\n\n4. #### **阅读全文**特效\n\n    位置：blog/themes/next/source/css/_variables/Pisces.styl\n    打开上述文件，搜索<font size=\"4\" color=\"red\">***Button***</font>，更改代码如下：\n    ```\n    $btn-default-radius           = 15px\n    $btn-default-bg               = black\n    $btn-default-color            = white\n    $btn-default-border-color     = blue\n    $btn-default-hover-color      = red\n    $btn-default-hover-bg         = yellow\n    ```\n    ![阅读全文](next_youhua_button.gif)\n\n5. #### 文章底部#号标签\n\n    位置：blog/themes/next/layout/_macro/post.swig\n    打开配置文件，搜索<font size=\"4\" color=\"red\">***\"tag\"***</font>，将# 更改代码如下：\n    ```\n    <i class=\"fa fa-tag\"></i>即可。\n    ```\n    同理，[icon](https://fontawesome.com/v4.7.0/icons/)也可以根据自己选取。标签暂时还是有下划线的，如果想要想去掉下滑线并添加自己的样式，添加代码到如下文件：\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    ```\n    .posts-expand .post-tags a {\n        border-bottom: none;\n        font-size: 18px;\n    }\n    ```\n\n6. #### post透明\n\n    位置：blog/themes/next/layout/_macro/post.swig\n    新增代码：\n    ```\n    .content {\n        margin-top: 22px;\n        opacity: 0.9;\n    }\n    ```\n    我只调整了post部分，没有调整sidebar的透明度，如果需要设置，添加代码如下：\n    ```\n    .sidebar{\n        background-color:transparent;\n        opacity: 0.9;\n    }\n    ```\n\n7. #### post-block圆角\n\n    设置主页每个文章块的圆角，还是样式自定义文件，添加代码：\n    ```\n    .post-block {\n        border-radius : 12px;\n    }\n    ```\n    ![主页博文块样式](next_meihua_post.png)\n\n\n8. #### back-to-top样式更改\n\n    修改回到顶部的按钮样式。\n    - 配置\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，开启back-to-top功能，修改如下代码：\n    ```\n    back2top:\n      enable: true\n      # Back to top in sidebar.\n      sidebar: false\n      # Scroll percent label in b2t button.\n      scrollpercent: true\n    ```\n    - 样式修改\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    .back-to-top {\n      right: 60px;\n      width: 70px;  //图片素材宽度\n      height: 350px;  //图片素材高度\n      opacity: 1;\n      bottom: unset;\n      transition: all .5s ease-in-out;\n      background: url(\"/images/scroll.png\");\n\n      //隐藏箭头图标\n      > i {\n        display: none;\n      }\n\n      &.back-to-top-on {\n        bottom: unset;\n        top: 0px;\n      }\n    }\n    ```\n9. #### 代码块样式\n\n    位置：blog\\themes\\next\\_config.yml\n    打开上述文件，搜索**highlight_theme**，更改代码如下：\n    ```\n    # Available values: normal | night | night eighties | night blue | night bright\n    # https://github.com/chriskempson/tomorrow-theme\n    highlight_theme: night bright\n    ```\n    主题有很多，根据自己的喜好定义。\n\n\n10. #### 标题样式修改\n\n    位置：blog\\themes\\next\\source\\css\\_custom\\custom.styl\n    打开上述文件，添加如下代码：\n    ```\n    // 标题\n    .post-title {\n        color: black;\n        letter-spacing: 12px;\n        font-family: Comic Sans MS;\n        text-shadow: -1px -1px 1px #fff, 1px 1px 1px #000;\n    }\n    ```\n    样式根据自己的喜好做相关调整。\n\n\n### 小技巧\n\n- 在Hexo配置、博文Title都可以加入***font、div***等等这样的标签。\n- 在修改样式的时候，浏览器调试模式，找到对应的***class***，全项目搜索，找到对应的文件，直接进行修改，但不建议这么做。\n- 可以把样式修改在自定义样式文件：***blog\\themes\\next\\source\\css\\_custom\\custom.styl***（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB）。\n","slug":"Hexo-Next主题优化-美化篇（Gemini）","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2qx001ttabj6ll1qcp4","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <p>基本用Hexo + Next把网站搭建起来用<strong>run</strong>了，而且Next在theme中github关注量最高，但是在样式上还是有些。。。。。。此博文用来记录对Next主题的一些样式上的更改，<font size=\"4\" color=\"red\"><strong><em>持续更新中～</em></strong></font>。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">Theme</td>\n<td style=\"text-align:center\">Gemini</td>\n<td style=\"text-align:center\">主题样式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正菜\"><a href=\"#正菜\" class=\"headerlink\" title=\"正菜\"></a>正菜</h3><font size=\"4.5\" color=\"red\"><strong><em>社会程序猿，人好话不多！！！</em></strong></font>\n\n<ol>\n<li><h4 id=\"sidebar圆角\"><a href=\"#sidebar圆角\" class=\"headerlink\" title=\"sidebar圆角\"></a>sidebar圆角</h4><p> 打开<strong><em>blog/themes/next/source/css/_variables/Gemini.styl</em></strong>，搜索<strong><em>border-radius</em></strong>，在<strong>_variables</strong>目录下有Next主题的4种theme，用哪个修改哪个，修改代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$border-radius-inner              = 16px</span><br><span class=\"line\">$border-radius                    = 16px</span><br></pre></td></tr></table></figure>\n<p> 我的修改完了，现在下面站点简介的sidebar，上面的圆角居然有背景色，继续进行优化修改。<br> 打开文件<strong><em>blog\\themes\\next\\source\\css_custom\\custom.styl</em></strong>（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB），新增代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// sidebar css</span><br><span class=\"line\">.sidebar&#123;</span><br><span class=\"line\">    background-color:transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 把sidebar背景色设置成透明。</p>\n</li>\n<li><h4 id=\"站点背景图\"><a href=\"#站点背景图\" class=\"headerlink\" title=\"站点背景图\"></a>站点背景图</h4><p> Next主题加上背景图，让博客变得更美观，很简单。</p>\n<ul>\n<li><p>找到一张背景图，把图片放到以下文件中并命名background.jpg：<br>位置：blog/public/images/</p>\n</li>\n<li><p>打开<strong><em>blog/themes/next/source/css/_custom/custom.styl</em></strong>此文件，加入以下代码在文件最上面：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 背景图</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>刷新，样式可以根据自己的需要对图片进行进行调整。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"文章阴影边框\"><a href=\"#文章阴影边框\" class=\"headerlink\" title=\"文章阴影边框\"></a>文章阴影边框</h4><p> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br> 打开上述文件，添加如下代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 主页文章添加阴影效果</span><br><span class=\"line\">.post &#123;</span><br><span class=\"line\">   margin-top: 0px;</span><br><span class=\"line\">   margin-bottom: 60px;</span><br><span class=\"line\">   padding: 25px;</span><br><span class=\"line\">   -webkit-box-shadow: 0 0 5px rgba(250, 128, 114, 1.5);</span><br><span class=\"line\">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>webkit-box-shadow：控制边框的样式<br><img src=\"next_youhua_border.png\" alt=\"阴影边框\"></li>\n</ul>\n</li>\n<li><h4 id=\"阅读全文特效\"><a href=\"#阅读全文特效\" class=\"headerlink\" title=\"阅读全文特效\"></a><strong>阅读全文</strong>特效</h4><p> 位置：blog/themes/next/source/css/_variables/Pisces.styl<br> 打开上述文件，搜索<font size=\"4\" color=\"red\"><strong><em>Button</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$btn-default-radius           = 15px</span><br><span class=\"line\">$btn-default-bg               = black</span><br><span class=\"line\">$btn-default-color            = white</span><br><span class=\"line\">$btn-default-border-color     = blue</span><br><span class=\"line\">$btn-default-hover-color      = red</span><br><span class=\"line\">$btn-default-hover-bg         = yellow</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_button.gif\" alt=\"阅读全文\"></p>\n</li>\n<li><h4 id=\"文章底部-号标签\"><a href=\"#文章底部-号标签\" class=\"headerlink\" title=\"文章底部#号标签\"></a>文章底部#号标签</h4><p> 位置：blog/themes/next/layout/_macro/post.swig<br> 打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>“tag”</em></strong></font>，将# 更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;即可。</span><br></pre></td></tr></table></figure>\n<p> 同理，<a href=\"https://fontawesome.com/v4.7.0/icons/\" target=\"_blank\" rel=\"noopener\">icon</a>也可以根据自己选取。标签暂时还是有下划线的，如果想要想去掉下滑线并添加自己的样式，添加代码到如下文件：<br> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.posts-expand .post-tags a &#123;</span><br><span class=\"line\">    border-bottom: none;</span><br><span class=\"line\">    font-size: 18px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"post透明\"><a href=\"#post透明\" class=\"headerlink\" title=\"post透明\"></a>post透明</h4><p> 位置：blog/themes/next/layout/_macro/post.swig<br> 新增代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.content &#123;</span><br><span class=\"line\">    margin-top: 22px;</span><br><span class=\"line\">    opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 我只调整了post部分，没有调整sidebar的透明度，如果需要设置，添加代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar&#123;</span><br><span class=\"line\">    background-color:transparent;</span><br><span class=\"line\">    opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"post-block圆角\"><a href=\"#post-block圆角\" class=\"headerlink\" title=\"post-block圆角\"></a>post-block圆角</h4><p> 设置主页每个文章块的圆角，还是样式自定义文件，添加代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.post-block &#123;</span><br><span class=\"line\">    border-radius : 12px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_meihua_post.png\" alt=\"主页博文块样式\"></p>\n</li>\n</ol>\n<ol start=\"8\">\n<li><h4 id=\"back-to-top样式更改\"><a href=\"#back-to-top样式更改\" class=\"headerlink\" title=\"back-to-top样式更改\"></a>back-to-top样式更改</h4><p> 修改回到顶部的按钮样式。</p>\n<ul>\n<li><p>配置<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，开启back-to-top功能，修改如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">back2top:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Back to top in sidebar.</span><br><span class=\"line\">  sidebar: false</span><br><span class=\"line\">  # Scroll percent label in b2t button.</span><br><span class=\"line\">  scrollpercent: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>样式修改<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.back-to-top &#123;</span><br><span class=\"line\">  right: 60px;</span><br><span class=\"line\">  width: 70px;  //图片素材宽度</span><br><span class=\"line\">  height: 350px;  //图片素材高度</span><br><span class=\"line\">  opacity: 1;</span><br><span class=\"line\">  bottom: unset;</span><br><span class=\"line\">  transition: all .5s ease-in-out;</span><br><span class=\"line\">  background: url(&quot;/images/scroll.png&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //隐藏箭头图标</span><br><span class=\"line\">  &gt; i &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;.back-to-top-on &#123;</span><br><span class=\"line\">    bottom: unset;</span><br><span class=\"line\">    top: 0px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"代码块样式\"><a href=\"#代码块样式\" class=\"headerlink\" title=\"代码块样式\"></a>代码块样式</h4><p> 位置：blog\\themes\\next_config.yml<br> 打开上述文件，搜索<strong>highlight_theme</strong>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class=\"line\"># https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">highlight_theme: night bright</span><br></pre></td></tr></table></figure>\n<p> 主题有很多，根据自己的喜好定义。</p>\n</li>\n</ol>\n<ol start=\"10\">\n<li><h4 id=\"标题样式修改\"><a href=\"#标题样式修改\" class=\"headerlink\" title=\"标题样式修改\"></a>标题样式修改</h4><p>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 标题</span><br><span class=\"line\">.post-title &#123;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">    letter-spacing: 12px;</span><br><span class=\"line\">    font-family: Comic Sans MS;</span><br><span class=\"line\">    text-shadow: -1px -1px 1px #fff, 1px 1px 1px #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>样式根据自己的喜好做相关调整。</p>\n</li>\n</ol>\n<h3 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h3><ul>\n<li>在Hexo配置、博文Title都可以加入<strong><em>font、div</em></strong>等等这样的标签。</li>\n<li>在修改样式的时候，浏览器调试模式，找到对应的<strong><em>class</em></strong>，全项目搜索，找到对应的文件，直接进行修改，但不建议这么做。</li>\n<li>可以把样式修改在自定义样式文件：<strong><em>blog\\themes\\next\\source\\css_custom\\custom.styl</em></strong>（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB）。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <p>基本用Hexo + Next把网站搭建起来用<strong>run</strong>了，而且Next在theme中github关注量最高，但是在样式上还是有些。。。。。。此博文用来记录对Next主题的一些样式上的更改，<font size=\"4\" color=\"red\"><strong><em>持续更新中～</em></strong></font>。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">Theme</td>\n<td style=\"text-align:center\">Gemini</td>\n<td style=\"text-align:center\">主题样式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正菜\"><a href=\"#正菜\" class=\"headerlink\" title=\"正菜\"></a>正菜</h3><font size=\"4.5\" color=\"red\"><strong><em>社会程序猿，人好话不多！！！</em></strong></font>\n\n<ol>\n<li><h4 id=\"sidebar圆角\"><a href=\"#sidebar圆角\" class=\"headerlink\" title=\"sidebar圆角\"></a>sidebar圆角</h4><p> 打开<strong><em>blog/themes/next/source/css/_variables/Gemini.styl</em></strong>，搜索<strong><em>border-radius</em></strong>，在<strong>_variables</strong>目录下有Next主题的4种theme，用哪个修改哪个，修改代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$border-radius-inner              = 16px</span><br><span class=\"line\">$border-radius                    = 16px</span><br></pre></td></tr></table></figure>\n<p> 我的修改完了，现在下面站点简介的sidebar，上面的圆角居然有背景色，继续进行优化修改。<br> 打开文件<strong><em>blog\\themes\\next\\source\\css_custom\\custom.styl</em></strong>（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB），新增代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// sidebar css</span><br><span class=\"line\">.sidebar&#123;</span><br><span class=\"line\">    background-color:transparent;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 把sidebar背景色设置成透明。</p>\n</li>\n<li><h4 id=\"站点背景图\"><a href=\"#站点背景图\" class=\"headerlink\" title=\"站点背景图\"></a>站点背景图</h4><p> Next主题加上背景图，让博客变得更美观，很简单。</p>\n<ul>\n<li><p>找到一张背景图，把图片放到以下文件中并命名background.jpg：<br>位置：blog/public/images/</p>\n</li>\n<li><p>打开<strong><em>blog/themes/next/source/css/_custom/custom.styl</em></strong>此文件，加入以下代码在文件最上面：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 背景图</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">    background:url(/images/background.jpg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>刷新，样式可以根据自己的需要对图片进行进行调整。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"文章阴影边框\"><a href=\"#文章阴影边框\" class=\"headerlink\" title=\"文章阴影边框\"></a>文章阴影边框</h4><p> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br> 打开上述文件，添加如下代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 主页文章添加阴影效果</span><br><span class=\"line\">.post &#123;</span><br><span class=\"line\">   margin-top: 0px;</span><br><span class=\"line\">   margin-bottom: 60px;</span><br><span class=\"line\">   padding: 25px;</span><br><span class=\"line\">   -webkit-box-shadow: 0 0 5px rgba(250, 128, 114, 1.5);</span><br><span class=\"line\">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>webkit-box-shadow：控制边框的样式<br><img src=\"next_youhua_border.png\" alt=\"阴影边框\"></li>\n</ul>\n</li>\n<li><h4 id=\"阅读全文特效\"><a href=\"#阅读全文特效\" class=\"headerlink\" title=\"阅读全文特效\"></a><strong>阅读全文</strong>特效</h4><p> 位置：blog/themes/next/source/css/_variables/Pisces.styl<br> 打开上述文件，搜索<font size=\"4\" color=\"red\"><strong><em>Button</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$btn-default-radius           = 15px</span><br><span class=\"line\">$btn-default-bg               = black</span><br><span class=\"line\">$btn-default-color            = white</span><br><span class=\"line\">$btn-default-border-color     = blue</span><br><span class=\"line\">$btn-default-hover-color      = red</span><br><span class=\"line\">$btn-default-hover-bg         = yellow</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_youhua_button.gif\" alt=\"阅读全文\"></p>\n</li>\n<li><h4 id=\"文章底部-号标签\"><a href=\"#文章底部-号标签\" class=\"headerlink\" title=\"文章底部#号标签\"></a>文章底部#号标签</h4><p> 位置：blog/themes/next/layout/_macro/post.swig<br> 打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>“tag”</em></strong></font>，将# 更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;即可。</span><br></pre></td></tr></table></figure>\n<p> 同理，<a href=\"https://fontawesome.com/v4.7.0/icons/\" target=\"_blank\" rel=\"noopener\">icon</a>也可以根据自己选取。标签暂时还是有下划线的，如果想要想去掉下滑线并添加自己的样式，添加代码到如下文件：<br> 位置：blog\\themes\\next\\source\\css_custom\\custom.styl</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.posts-expand .post-tags a &#123;</span><br><span class=\"line\">    border-bottom: none;</span><br><span class=\"line\">    font-size: 18px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"post透明\"><a href=\"#post透明\" class=\"headerlink\" title=\"post透明\"></a>post透明</h4><p> 位置：blog/themes/next/layout/_macro/post.swig<br> 新增代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.content &#123;</span><br><span class=\"line\">    margin-top: 22px;</span><br><span class=\"line\">    opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 我只调整了post部分，没有调整sidebar的透明度，如果需要设置，添加代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar&#123;</span><br><span class=\"line\">    background-color:transparent;</span><br><span class=\"line\">    opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"post-block圆角\"><a href=\"#post-block圆角\" class=\"headerlink\" title=\"post-block圆角\"></a>post-block圆角</h4><p> 设置主页每个文章块的圆角，还是样式自定义文件，添加代码：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.post-block &#123;</span><br><span class=\"line\">    border-radius : 12px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> <img src=\"next_meihua_post.png\" alt=\"主页博文块样式\"></p>\n</li>\n</ol>\n<ol start=\"8\">\n<li><h4 id=\"back-to-top样式更改\"><a href=\"#back-to-top样式更改\" class=\"headerlink\" title=\"back-to-top样式更改\"></a>back-to-top样式更改</h4><p> 修改回到顶部的按钮样式。</p>\n<ul>\n<li><p>配置<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，开启back-to-top功能，修改如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">back2top:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Back to top in sidebar.</span><br><span class=\"line\">  sidebar: false</span><br><span class=\"line\">  # Scroll percent label in b2t button.</span><br><span class=\"line\">  scrollpercent: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>样式修改<br>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.back-to-top &#123;</span><br><span class=\"line\">  right: 60px;</span><br><span class=\"line\">  width: 70px;  //图片素材宽度</span><br><span class=\"line\">  height: 350px;  //图片素材高度</span><br><span class=\"line\">  opacity: 1;</span><br><span class=\"line\">  bottom: unset;</span><br><span class=\"line\">  transition: all .5s ease-in-out;</span><br><span class=\"line\">  background: url(&quot;/images/scroll.png&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //隐藏箭头图标</span><br><span class=\"line\">  &gt; i &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;.back-to-top-on &#123;</span><br><span class=\"line\">    bottom: unset;</span><br><span class=\"line\">    top: 0px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"代码块样式\"><a href=\"#代码块样式\" class=\"headerlink\" title=\"代码块样式\"></a>代码块样式</h4><p> 位置：blog\\themes\\next_config.yml<br> 打开上述文件，搜索<strong>highlight_theme</strong>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class=\"line\"># https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">highlight_theme: night bright</span><br></pre></td></tr></table></figure>\n<p> 主题有很多，根据自己的喜好定义。</p>\n</li>\n</ol>\n<ol start=\"10\">\n<li><h4 id=\"标题样式修改\"><a href=\"#标题样式修改\" class=\"headerlink\" title=\"标题样式修改\"></a>标题样式修改</h4><p>位置：blog\\themes\\next\\source\\css_custom\\custom.styl<br>打开上述文件，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 标题</span><br><span class=\"line\">.post-title &#123;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">    letter-spacing: 12px;</span><br><span class=\"line\">    font-family: Comic Sans MS;</span><br><span class=\"line\">    text-shadow: -1px -1px 1px #fff, 1px 1px 1px #000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>样式根据自己的喜好做相关调整。</p>\n</li>\n</ol>\n<h3 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h3><ul>\n<li>在Hexo配置、博文Title都可以加入<strong><em>font、div</em></strong>等等这样的标签。</li>\n<li>在修改样式的时候，浏览器调试模式，找到对应的<strong><em>class</em></strong>，全项目搜索，找到对应的文件，直接进行修改，但不建议这么做。</li>\n<li>可以把样式修改在自定义样式文件：<strong><em>blog\\themes\\next\\source\\css_custom\\custom.styl</em></strong>（只能说这个文件太NB了，里面可以放置整个站点的style css，very NB）。</li>\n</ul>"},{"title":"Hexo+Next分类页样式美化","comments":0,"top":false,"abbrlink":15926,"date":"2019-05-05T15:01:43.000Z","updated":"2019-05-05T15:01:43.000Z","desc":"关于hexo+next搭建的博客，自定义分类页的样式","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 分类页, 样式, css, 自定义","_content":"### 问题简述\n{% note success %}\n自动生成的分类页实在是ugly，既然身为程序猿，前端不行那就自己搞，起码自己看起来舒服一些。\n{% endnote %}\n\n![](/images/article_hexo_next_categories.png)\n\n<!-- more -->\n<hr/>\n\n美化方法跟自定义样式差不多，不做详细介绍了，不知道的小伙伴可以查看之前的文章。这里主要给大家分享一下我的样式，有问题的小伙伴可以留言我，<font color=\"red\" size=\"5\">***一起交流，一起学习，一起进步！！！***</font>。\n\ncss代码：\n```\n// 分类&&标签 页面样式\n.post-block.page {\n    margin-top: 40px;\n}\n\n// 分类页面page\n.category-all-page {\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n    background-color: #797D7F;\n    padding: 20px 30px 60px 30px;\n    border-radius: 25px 25px 25px 25px;\n}\n.category-all-title {\n    font-family: Impact;\n    font-size: 24px;\n    color: aqua;\n}\n.category-list {\n    overflow: auto;\n}\n.category-list li {\n    height: 30px;\n    float: left;\n    border-right: 3px solid #222;\n    padding: 0 20px;\n}\n.category-all ul li {\n    list-style: none!important;\n}\n.category-list li:last-child {\n    border-right: none;\n}\n.category-list li a {\n    font-size: 16px;\n    text-decoration: none;\n    color: chartreuse;\n    font-family: Helvetica, Verdana, sans-serif;\n    // text-transform: uppercase;\n    -webkit-transition: all 0.5s ease;\n    -moz-transition: all 0.5s ease;\n    -o-transition: all 0.5s ease;\n    -ms-transition: all 0.5s ease;\n    transition: all 0.5s ease;\n}\n.category-list li a:hover {\n    color: black;\n}\n.category-list li.active a {\n    font-weight: bold;\n    color: black;\n}\n```\n","source":"_posts/Hexo-Next分类页样式美化.md","raw":"---\ntitle: Hexo+Next分类页样式美化\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\ntop: false\nabbrlink: 15926\ndate: 2019-05-05 23:01:43\nupdated: 2019-05-05 23:01:43\ndesc: 关于hexo+next搭建的博客，自定义分类页的样式\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 分类页, 样式, css, 自定义\n---\n### 问题简述\n{% note success %}\n自动生成的分类页实在是ugly，既然身为程序猿，前端不行那就自己搞，起码自己看起来舒服一些。\n{% endnote %}\n\n![](/images/article_hexo_next_categories.png)\n\n<!-- more -->\n<hr/>\n\n美化方法跟自定义样式差不多，不做详细介绍了，不知道的小伙伴可以查看之前的文章。这里主要给大家分享一下我的样式，有问题的小伙伴可以留言我，<font color=\"red\" size=\"5\">***一起交流，一起学习，一起进步！！！***</font>。\n\ncss代码：\n```\n// 分类&&标签 页面样式\n.post-block.page {\n    margin-top: 40px;\n}\n\n// 分类页面page\n.category-all-page {\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);\n    background-color: #797D7F;\n    padding: 20px 30px 60px 30px;\n    border-radius: 25px 25px 25px 25px;\n}\n.category-all-title {\n    font-family: Impact;\n    font-size: 24px;\n    color: aqua;\n}\n.category-list {\n    overflow: auto;\n}\n.category-list li {\n    height: 30px;\n    float: left;\n    border-right: 3px solid #222;\n    padding: 0 20px;\n}\n.category-all ul li {\n    list-style: none!important;\n}\n.category-list li:last-child {\n    border-right: none;\n}\n.category-list li a {\n    font-size: 16px;\n    text-decoration: none;\n    color: chartreuse;\n    font-family: Helvetica, Verdana, sans-serif;\n    // text-transform: uppercase;\n    -webkit-transition: all 0.5s ease;\n    -moz-transition: all 0.5s ease;\n    -o-transition: all 0.5s ease;\n    -ms-transition: all 0.5s ease;\n    transition: all 0.5s ease;\n}\n.category-list li a:hover {\n    color: black;\n}\n.category-list li.active a {\n    font-weight: bold;\n    color: black;\n}\n```\n","slug":"Hexo-Next分类页样式美化","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2r0001wtabjxksxzw79","content":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>自动生成的分类页实在是ugly，既然身为程序猿，前端不行那就自己搞，起码自己看起来舒服一些。</p>\n          </div>\n<p><img src=\"/images/article_hexo_next_categories.png\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<p>美化方法跟自定义样式差不多，不做详细介绍了，不知道的小伙伴可以查看之前的文章。这里主要给大家分享一下我的样式，有问题的小伙伴可以留言我，<font color=\"red\" size=\"5\"><strong><em>一起交流，一起学习，一起进步！！！</em></strong></font>。</p>\n<p>css代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 分类&amp;&amp;标签 页面样式</span><br><span class=\"line\">.post-block.page &#123;</span><br><span class=\"line\">    margin-top: 40px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 分类页面page</span><br><span class=\"line\">.category-all-page &#123;</span><br><span class=\"line\">    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);</span><br><span class=\"line\">    background-color: #797D7F;</span><br><span class=\"line\">    padding: 20px 30px 60px 30px;</span><br><span class=\"line\">    border-radius: 25px 25px 25px 25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-all-title &#123;</span><br><span class=\"line\">    font-family: Impact;</span><br><span class=\"line\">    font-size: 24px;</span><br><span class=\"line\">    color: aqua;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list &#123;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li &#123;</span><br><span class=\"line\">    height: 30px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    border-right: 3px solid #222;</span><br><span class=\"line\">    padding: 0 20px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-all ul li &#123;</span><br><span class=\"line\">    list-style: none!important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li:last-child &#123;</span><br><span class=\"line\">    border-right: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li a &#123;</span><br><span class=\"line\">    font-size: 16px;</span><br><span class=\"line\">    text-decoration: none;</span><br><span class=\"line\">    color: chartreuse;</span><br><span class=\"line\">    font-family: Helvetica, Verdana, sans-serif;</span><br><span class=\"line\">    // text-transform: uppercase;</span><br><span class=\"line\">    -webkit-transition: all 0.5s ease;</span><br><span class=\"line\">    -moz-transition: all 0.5s ease;</span><br><span class=\"line\">    -o-transition: all 0.5s ease;</span><br><span class=\"line\">    -ms-transition: all 0.5s ease;</span><br><span class=\"line\">    transition: all 0.5s ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li a:hover &#123;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li.active a &#123;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>自动生成的分类页实在是ugly，既然身为程序猿，前端不行那就自己搞，起码自己看起来舒服一些。</p>\n          </div>\n<p><img src=\"/images/article_hexo_next_categories.png\" alt></p>","more":"<hr>\n\n<p>美化方法跟自定义样式差不多，不做详细介绍了，不知道的小伙伴可以查看之前的文章。这里主要给大家分享一下我的样式，有问题的小伙伴可以留言我，<font color=\"red\" size=\"5\"><strong><em>一起交流，一起学习，一起进步！！！</em></strong></font>。</p>\n<p>css代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 分类&amp;&amp;标签 页面样式</span><br><span class=\"line\">.post-block.page &#123;</span><br><span class=\"line\">    margin-top: 40px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 分类页面page</span><br><span class=\"line\">.category-all-page &#123;</span><br><span class=\"line\">    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);</span><br><span class=\"line\">    background-color: #797D7F;</span><br><span class=\"line\">    padding: 20px 30px 60px 30px;</span><br><span class=\"line\">    border-radius: 25px 25px 25px 25px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-all-title &#123;</span><br><span class=\"line\">    font-family: Impact;</span><br><span class=\"line\">    font-size: 24px;</span><br><span class=\"line\">    color: aqua;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list &#123;</span><br><span class=\"line\">    overflow: auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li &#123;</span><br><span class=\"line\">    height: 30px;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    border-right: 3px solid #222;</span><br><span class=\"line\">    padding: 0 20px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-all ul li &#123;</span><br><span class=\"line\">    list-style: none!important;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li:last-child &#123;</span><br><span class=\"line\">    border-right: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li a &#123;</span><br><span class=\"line\">    font-size: 16px;</span><br><span class=\"line\">    text-decoration: none;</span><br><span class=\"line\">    color: chartreuse;</span><br><span class=\"line\">    font-family: Helvetica, Verdana, sans-serif;</span><br><span class=\"line\">    // text-transform: uppercase;</span><br><span class=\"line\">    -webkit-transition: all 0.5s ease;</span><br><span class=\"line\">    -moz-transition: all 0.5s ease;</span><br><span class=\"line\">    -o-transition: all 0.5s ease;</span><br><span class=\"line\">    -ms-transition: all 0.5s ease;</span><br><span class=\"line\">    transition: all 0.5s ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li a:hover &#123;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.category-list li.active a &#123;</span><br><span class=\"line\">    font-weight: bold;</span><br><span class=\"line\">    color: black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Hexo+Next博客添加喵星人","comments":0,"desc":"给博客注入一只博客添加喵星人（live2d）【Hexo+Next】","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 分类页, live2d, 喵星人","abbrlink":4445,"date":"2018-12-23T03:09:37.000Z","updated":"2018-12-23T03:09:37.000Z","_content":"\n<img src=\"/images/article_live2d.png\" style=\"border:1.5px solid red;height: 200px;\"/>\n\n{% note success %}\n如图，四步让给你博客入住喵星人。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> 安装hexo-helper-live2d\n\n```\nnpm install hexo-helper-live2d --save\n```\n\n> 下载model模型\n\n- 在博客根目录创建一文件夹，命名live2d_models。\n- 打开[Live2D模型](https://github.com/xiazeyu/live2d-widget-models)，把项目下载到本地。\n- 把packages下的所有文件都copy到新建目录live2d_models下，每一个目录都对应一个模型。\n\n> 配置博客config\n\n打开博客的_config.yml文件，不是Next主题的配置文件，看好了。。。之后，把下面代码追加到配置文件中。\n```\n# 动漫live2d\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: ./live2d_models/live2d-widget-model-z16\n  display:\n    position: right\n    width: 450\n    height: 750\n    hOffset: 10\n    vOffset: -20\n  mobile:\n    show: true\n  react:\n    opacity: 0.8\n```\n配置文件中live2d->model->use：./live2d_models/live2d-widget-model-z16，其中***live2d-widget-model-z16***是模型名称，只要更换新建目录live2d_models下的模型名称就可以改变。\n\n> 重启server\n```\nhexo g -d\nhexo s\n```\n重启服务&&刷新页面，会发现一只喵星人出现在你的博客上。\n\n{% note info %}\n配置文件详解：\n{% endnote%}\n{% tabs live_models %}\n<!-- tab base -->\nenable: true\nscriptFrom: local\npluginRootPath: live2dw/\npluginJsPath: lib/\npluginModelPath: assets/\ntagMode: false\ndebug: false\n\n<hr />\n\nenable          是否启用插件\nscriptFrom      未知\npluginRootPath\t插件在站点上根目录的相对路径\npluginJsPath\t脚本文件相对与插件根目录路径\npluginModelPath\t模型文件相对与插件根目录路径\ntagMode\tBoolean\t标签模式, 是否仅替换***live2d tag***标签而非插入到所有页面中\ndebug\t        调试模式, 控制是否在控制台输出日志\n说明：***hexo g***之后，会在blog/public目录下自动生成一个新文件夹***live2dw***，里面存放发布后站点模型。\n<!-- endtab -->\n<!-- tab model -->\nmodel:\n  use: ./live2d_models/live2d-widget-model-z16\n\n<hr />\n\n启用显示的模型名称，***live2d_models***目录下每一个目录都是一个模型。\n<!-- endtab -->\n<!-- tab display -->\ndisplay:\n  position: right\n  width: 450\n  height: 750\n  hOffset: 10\n  vOffset: -20\n\n  <hr />\n\nposition  模型的位置，有left&&right\nwidth     模型的宽度\nheight    模型的高度\nhOffset   模型的水平偏移\nvOffset   模型的垂直偏移\n<!-- endtab -->\n<!-- tab mobile -->\nmobile:\n  show: true\n\n  <hr />\n\n是否在移动端进行显示\n<!-- endtab -->\n<!-- tab react -->\nreact:\n  opacity: 0.8\n\n  <hr />\n\n透明度设置：0～1 透明～不透明\n<!-- endtab -->\n{% endtabs %}\n\n{% note info %}\n学习参考：\n{% endnote%}\nlive2d官网：https://github.com/EYHN/hexo-helper-live2d\nlive2d模型：https://github.com/xiazeyu/live2d-widget-models/tree/master/packages\n","source":"_posts/Hexo-Next博客添加喵星人.md","raw":"---\ntitle: Hexo+Next博客添加喵星人\ncomments: false\ndesc: 给博客注入一只博客添加喵星人（live2d）【Hexo+Next】\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 分类页, live2d, 喵星人\nabbrlink: 4445\ndate: 2018-12-23 11:09:37\nupdated: 2018-12-23 11:09:37\n---\n\n<img src=\"/images/article_live2d.png\" style=\"border:1.5px solid red;height: 200px;\"/>\n\n{% note success %}\n如图，四步让给你博客入住喵星人。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> 安装hexo-helper-live2d\n\n```\nnpm install hexo-helper-live2d --save\n```\n\n> 下载model模型\n\n- 在博客根目录创建一文件夹，命名live2d_models。\n- 打开[Live2D模型](https://github.com/xiazeyu/live2d-widget-models)，把项目下载到本地。\n- 把packages下的所有文件都copy到新建目录live2d_models下，每一个目录都对应一个模型。\n\n> 配置博客config\n\n打开博客的_config.yml文件，不是Next主题的配置文件，看好了。。。之后，把下面代码追加到配置文件中。\n```\n# 动漫live2d\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: ./live2d_models/live2d-widget-model-z16\n  display:\n    position: right\n    width: 450\n    height: 750\n    hOffset: 10\n    vOffset: -20\n  mobile:\n    show: true\n  react:\n    opacity: 0.8\n```\n配置文件中live2d->model->use：./live2d_models/live2d-widget-model-z16，其中***live2d-widget-model-z16***是模型名称，只要更换新建目录live2d_models下的模型名称就可以改变。\n\n> 重启server\n```\nhexo g -d\nhexo s\n```\n重启服务&&刷新页面，会发现一只喵星人出现在你的博客上。\n\n{% note info %}\n配置文件详解：\n{% endnote%}\n{% tabs live_models %}\n<!-- tab base -->\nenable: true\nscriptFrom: local\npluginRootPath: live2dw/\npluginJsPath: lib/\npluginModelPath: assets/\ntagMode: false\ndebug: false\n\n<hr />\n\nenable          是否启用插件\nscriptFrom      未知\npluginRootPath\t插件在站点上根目录的相对路径\npluginJsPath\t脚本文件相对与插件根目录路径\npluginModelPath\t模型文件相对与插件根目录路径\ntagMode\tBoolean\t标签模式, 是否仅替换***live2d tag***标签而非插入到所有页面中\ndebug\t        调试模式, 控制是否在控制台输出日志\n说明：***hexo g***之后，会在blog/public目录下自动生成一个新文件夹***live2dw***，里面存放发布后站点模型。\n<!-- endtab -->\n<!-- tab model -->\nmodel:\n  use: ./live2d_models/live2d-widget-model-z16\n\n<hr />\n\n启用显示的模型名称，***live2d_models***目录下每一个目录都是一个模型。\n<!-- endtab -->\n<!-- tab display -->\ndisplay:\n  position: right\n  width: 450\n  height: 750\n  hOffset: 10\n  vOffset: -20\n\n  <hr />\n\nposition  模型的位置，有left&&right\nwidth     模型的宽度\nheight    模型的高度\nhOffset   模型的水平偏移\nvOffset   模型的垂直偏移\n<!-- endtab -->\n<!-- tab mobile -->\nmobile:\n  show: true\n\n  <hr />\n\n是否在移动端进行显示\n<!-- endtab -->\n<!-- tab react -->\nreact:\n  opacity: 0.8\n\n  <hr />\n\n透明度设置：0～1 透明～不透明\n<!-- endtab -->\n{% endtabs %}\n\n{% note info %}\n学习参考：\n{% endnote%}\nlive2d官网：https://github.com/EYHN/hexo-helper-live2d\nlive2d模型：https://github.com/xiazeyu/live2d-widget-models/tree/master/packages\n","slug":"Hexo-Next博客添加喵星人","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rb001ytabj09axdjt2","content":"<p><img src=\"/images/article_live2d.png\" style=\"border:1.5px solid red;height: 200px;\"></p>\n<div class=\"note success\">\n            <p>如图，四步让给你博客入住喵星人。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<blockquote>\n<p>安装hexo-helper-live2d</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>下载model模型</p>\n</blockquote>\n<ul>\n<li>在博客根目录创建一文件夹，命名live2d_models。</li>\n<li>打开<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">Live2D模型</a>，把项目下载到本地。</li>\n<li>把packages下的所有文件都copy到新建目录live2d_models下，每一个目录都对应一个模型。</li>\n</ul>\n<blockquote>\n<p>配置博客config</p>\n</blockquote>\n<p>打开博客的_config.yml文件，不是Next主题的配置文件，看好了。。。之后，把下面代码追加到配置文件中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 动漫live2d</span><br><span class=\"line\">live2d:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  scriptFrom: local</span><br><span class=\"line\">  pluginRootPath: live2dw/</span><br><span class=\"line\">  pluginJsPath: lib/</span><br><span class=\"line\">  pluginModelPath: assets/</span><br><span class=\"line\">  tagMode: false</span><br><span class=\"line\">  debug: false</span><br><span class=\"line\">  model:</span><br><span class=\"line\">    use: ./live2d_models/live2d-widget-model-z16</span><br><span class=\"line\">  display:</span><br><span class=\"line\">    position: right</span><br><span class=\"line\">    width: 450</span><br><span class=\"line\">    height: 750</span><br><span class=\"line\">    hOffset: 10</span><br><span class=\"line\">    vOffset: -20</span><br><span class=\"line\">  mobile:</span><br><span class=\"line\">    show: true</span><br><span class=\"line\">  react:</span><br><span class=\"line\">    opacity: 0.8</span><br></pre></td></tr></table></figure></p>\n<p>配置文件中live2d-&gt;model-&gt;use：./live2d_models/live2d-widget-model-z16，其中<strong><em>live2d-widget-model-z16</em></strong>是模型名称，只要更换新建目录live2d_models下的模型名称就可以改变。</p>\n<blockquote>\n<p>重启server<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>重启服务&amp;&amp;刷新页面，会发现一只喵星人出现在你的博客上。</p>\n<div class=\"note info\">\n            <p>配置文件详解：</p>\n          </div>\n<div class=\"tabs\" id=\"live_models\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#live_models-1\">base</a></li><li class=\"tab\"><a href=\"#live_models-2\">model</a></li><li class=\"tab\"><a href=\"#live_models-3\">display</a></li><li class=\"tab\"><a href=\"#live_models-4\">mobile</a></li><li class=\"tab\"><a href=\"#live_models-5\">react</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"live_models-1\"><p>enable: true<br>scriptFrom: local<br>pluginRootPath: live2dw/<br>pluginJsPath: lib/<br>pluginModelPath: assets/<br>tagMode: false<br>debug: false</p>\n<hr>\n\n<p>enable          是否启用插件<br>scriptFrom      未知<br>pluginRootPath    插件在站点上根目录的相对路径<br>pluginJsPath    脚本文件相对与插件根目录路径<br>pluginModelPath    模型文件相对与插件根目录路径<br>tagMode    Boolean    标签模式, 是否仅替换<strong><em>live2d tag</em></strong>标签而非插入到所有页面中<br>debug            调试模式, 控制是否在控制台输出日志<br>说明：<strong><em>hexo g</em></strong>之后，会在blog/public目录下自动生成一个新文件夹<strong><em>live2dw</em></strong>，里面存放发布后站点模型。</p></div><div class=\"tab-pane\" id=\"live_models-2\"><p>model:<br>  use: ./live2d_models/live2d-widget-model-z16</p>\n<hr>\n\n<p>启用显示的模型名称，<strong><em>live2d_models</em></strong>目录下每一个目录都是一个模型。</p></div><div class=\"tab-pane\" id=\"live_models-3\"><p>display:<br>  position: right<br>  width: 450<br>  height: 750<br>  hOffset: 10<br>  vOffset: -20</p>\n  <hr>\n\n<p>position  模型的位置，有left&amp;&amp;right<br>width     模型的宽度<br>height    模型的高度<br>hOffset   模型的水平偏移<br>vOffset   模型的垂直偏移</p></div><div class=\"tab-pane\" id=\"live_models-4\"><p>mobile:<br>  show: true</p>\n  <hr>\n\n<p>是否在移动端进行显示</p></div><div class=\"tab-pane\" id=\"live_models-5\"><p>react:<br>  opacity: 0.8</p>\n  <hr>\n\n<p>透明度设置：0～1 透明～不透明</p></div></div></div>\n<div class=\"note info\">\n            <p>学习参考：</p>\n          </div>\n<p>live2d官网：<a href=\"https://github.com/EYHN/hexo-helper-live2d\" target=\"_blank\" rel=\"noopener\">https://github.com/EYHN/hexo-helper-live2d</a><br>live2d模型：<a href=\"https://github.com/xiazeyu/live2d-widget-models/tree/master/packages\" target=\"_blank\" rel=\"noopener\">https://github.com/xiazeyu/live2d-widget-models/tree/master/packages</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_live2d.png\" style=\"border:1.5px solid red;height: 200px;\"></p>\n<div class=\"note success\">\n            <p>如图，四步让给你博客入住喵星人。</p>\n          </div>","more":"<hr>\n\n<blockquote>\n<p>安装hexo-helper-live2d</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-helper-live2d --save</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>下载model模型</p>\n</blockquote>\n<ul>\n<li>在博客根目录创建一文件夹，命名live2d_models。</li>\n<li>打开<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">Live2D模型</a>，把项目下载到本地。</li>\n<li>把packages下的所有文件都copy到新建目录live2d_models下，每一个目录都对应一个模型。</li>\n</ul>\n<blockquote>\n<p>配置博客config</p>\n</blockquote>\n<p>打开博客的_config.yml文件，不是Next主题的配置文件，看好了。。。之后，把下面代码追加到配置文件中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 动漫live2d</span><br><span class=\"line\">live2d:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  scriptFrom: local</span><br><span class=\"line\">  pluginRootPath: live2dw/</span><br><span class=\"line\">  pluginJsPath: lib/</span><br><span class=\"line\">  pluginModelPath: assets/</span><br><span class=\"line\">  tagMode: false</span><br><span class=\"line\">  debug: false</span><br><span class=\"line\">  model:</span><br><span class=\"line\">    use: ./live2d_models/live2d-widget-model-z16</span><br><span class=\"line\">  display:</span><br><span class=\"line\">    position: right</span><br><span class=\"line\">    width: 450</span><br><span class=\"line\">    height: 750</span><br><span class=\"line\">    hOffset: 10</span><br><span class=\"line\">    vOffset: -20</span><br><span class=\"line\">  mobile:</span><br><span class=\"line\">    show: true</span><br><span class=\"line\">  react:</span><br><span class=\"line\">    opacity: 0.8</span><br></pre></td></tr></table></figure></p>\n<p>配置文件中live2d-&gt;model-&gt;use：./live2d_models/live2d-widget-model-z16，其中<strong><em>live2d-widget-model-z16</em></strong>是模型名称，只要更换新建目录live2d_models下的模型名称就可以改变。</p>\n<blockquote>\n<p>重启server<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>重启服务&amp;&amp;刷新页面，会发现一只喵星人出现在你的博客上。</p>\n<div class=\"note info\">\n            <p>配置文件详解：</p>\n          </div>\n<div class=\"tabs\" id=\"live_models\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#live_models-1\">base</a></li><li class=\"tab\"><a href=\"#live_models-2\">model</a></li><li class=\"tab\"><a href=\"#live_models-3\">display</a></li><li class=\"tab\"><a href=\"#live_models-4\">mobile</a></li><li class=\"tab\"><a href=\"#live_models-5\">react</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"live_models-1\"><p>enable: true<br>scriptFrom: local<br>pluginRootPath: live2dw/<br>pluginJsPath: lib/<br>pluginModelPath: assets/<br>tagMode: false<br>debug: false</p>\n<hr>\n\n<p>enable          是否启用插件<br>scriptFrom      未知<br>pluginRootPath    插件在站点上根目录的相对路径<br>pluginJsPath    脚本文件相对与插件根目录路径<br>pluginModelPath    模型文件相对与插件根目录路径<br>tagMode    Boolean    标签模式, 是否仅替换<strong><em>live2d tag</em></strong>标签而非插入到所有页面中<br>debug            调试模式, 控制是否在控制台输出日志<br>说明：<strong><em>hexo g</em></strong>之后，会在blog/public目录下自动生成一个新文件夹<strong><em>live2dw</em></strong>，里面存放发布后站点模型。</p></div><div class=\"tab-pane\" id=\"live_models-2\"><p>model:<br>  use: ./live2d_models/live2d-widget-model-z16</p>\n<hr>\n\n<p>启用显示的模型名称，<strong><em>live2d_models</em></strong>目录下每一个目录都是一个模型。</p></div><div class=\"tab-pane\" id=\"live_models-3\"><p>display:<br>  position: right<br>  width: 450<br>  height: 750<br>  hOffset: 10<br>  vOffset: -20</p>\n  <hr>\n\n<p>position  模型的位置，有left&amp;&amp;right<br>width     模型的宽度<br>height    模型的高度<br>hOffset   模型的水平偏移<br>vOffset   模型的垂直偏移</p></div><div class=\"tab-pane\" id=\"live_models-4\"><p>mobile:<br>  show: true</p>\n  <hr>\n\n<p>是否在移动端进行显示</p></div><div class=\"tab-pane\" id=\"live_models-5\"><p>react:<br>  opacity: 0.8</p>\n  <hr>\n\n<p>透明度设置：0～1 透明～不透明</p></div></div></div>\n<div class=\"note info\">\n            <p>学习参考：</p>\n          </div>\n<p>live2d官网：<a href=\"https://github.com/EYHN/hexo-helper-live2d\" target=\"_blank\" rel=\"noopener\">https://github.com/EYHN/hexo-helper-live2d</a><br>live2d模型：<a href=\"https://github.com/xiazeyu/live2d-widget-models/tree/master/packages\" target=\"_blank\" rel=\"noopener\">https://github.com/xiazeyu/live2d-widget-models/tree/master/packages</a></p>"},{"title":"Hexo+Next博客写作手札","comments":0,"top":false,"abbrlink":28748,"date":"2019-01-18T02:48:57.000Z","updated":"2019-01-18T02:48:57.000Z","desc":"关于blog的博文写作，记录一些常用的模板","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 手记, 自定义, 样式, js代码","_content":"\n{% note success %}\n<font color=\"red\" size=\"4\">**简介**</font>\n记录一些**Hexo、Next**常用文件的一些信息\n{% endnote %}\n\n<!--more-->\n<hr />\n\n{% note info %}\n> ### <font color=\"red\">自定义样式文件</font>\n\n{% tabs custom_style %}\n<!-- tab 作用 -->\n**记录博客自定义的样式，以class方式进行css样式编写。**\n<!-- endtab -->\n<!-- tab 位置 -->\n**blog/themes/next/source/css/_custom/custom.styl**\n<!-- endtab -->\n{% endtabs %}\n{% endnote%}\n\n{% note info %}\n> ### <font color=\"red\">自定义html代码</font>\n\n{% tabs custom_js %}\n<!-- tab 作用 -->\n**引入自动html的相关代码，标签、css、script都可以在这里编写。**\n<!-- endtab -->\n<!-- tab 位置 -->\n**blog/themes/next/layout/_custom/custom.swig**\n<!-- endtab -->\n<!-- tab 建议 -->\n**虽然这个文件可以引入自定义的html代码，但是建议把标签、css、js代码分开来写。**\n**html**：写在对应的模块swig文件。\n**css**：写在上面的自定义样式文件。\n**js**：blog/themes/next/source/js/src目录下创建新js文件，在blog/themes/next/layout/_layout.swig文件中进行引用。\n<!-- endtab -->\n{% endtabs %}\n{% endnote%}\n","source":"_posts/Hexo-Next手记.md","raw":"---\ntitle: Hexo+Next博客写作手札\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo]\ntop: false\nabbrlink: 28748\ndate: 2019-01-18 10:48:57\nupdated: 2019-01-18 10:48:57\ndesc: 关于blog的博文写作，记录一些常用的模板\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 手记, 自定义, 样式, js代码\n---\n\n{% note success %}\n<font color=\"red\" size=\"4\">**简介**</font>\n记录一些**Hexo、Next**常用文件的一些信息\n{% endnote %}\n\n<!--more-->\n<hr />\n\n{% note info %}\n> ### <font color=\"red\">自定义样式文件</font>\n\n{% tabs custom_style %}\n<!-- tab 作用 -->\n**记录博客自定义的样式，以class方式进行css样式编写。**\n<!-- endtab -->\n<!-- tab 位置 -->\n**blog/themes/next/source/css/_custom/custom.styl**\n<!-- endtab -->\n{% endtabs %}\n{% endnote%}\n\n{% note info %}\n> ### <font color=\"red\">自定义html代码</font>\n\n{% tabs custom_js %}\n<!-- tab 作用 -->\n**引入自动html的相关代码，标签、css、script都可以在这里编写。**\n<!-- endtab -->\n<!-- tab 位置 -->\n**blog/themes/next/layout/_custom/custom.swig**\n<!-- endtab -->\n<!-- tab 建议 -->\n**虽然这个文件可以引入自定义的html代码，但是建议把标签、css、js代码分开来写。**\n**html**：写在对应的模块swig文件。\n**css**：写在上面的自定义样式文件。\n**js**：blog/themes/next/source/js/src目录下创建新js文件，在blog/themes/next/layout/_layout.swig文件中进行引用。\n<!-- endtab -->\n{% endtabs %}\n{% endnote%}\n","slug":"Hexo-Next手记","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rf0022tabjgyz2t9xi","content":"<div class=\"note success\">\n            <p><font color=\"red\" size=\"4\"><strong>简介</strong></font><br>记录一些<strong>Hexo、Next</strong>常用文件的一些信息</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"note info\">\n            <blockquote><h3 id=\"自定义样式文件\"><a href=\"#自定义样式文件\" class=\"headerlink\" title=\"自定义样式文件\"></a><font color=\"red\">自定义样式文件</font></h3></blockquote><div class=\"tabs\" id=\"custom_style\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#custom_style-1\">作用</a></li><li class=\"tab\"><a href=\"#custom_style-2\">位置</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"custom_style-1\"><p><strong>记录博客自定义的样式，以class方式进行css样式编写。</strong></p></div><div class=\"tab-pane\" id=\"custom_style-2\"><p><strong>blog/themes/next/source/css/_custom/custom.styl</strong></p></div></div></div>\n          </div>\n<div class=\"note info\">\n            <blockquote><h3 id=\"自定义html代码\"><a href=\"#自定义html代码\" class=\"headerlink\" title=\"自定义html代码\"></a><font color=\"red\">自定义html代码</font></h3></blockquote><div class=\"tabs\" id=\"custom_js\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#custom_js-1\">作用</a></li><li class=\"tab\"><a href=\"#custom_js-2\">位置</a></li><li class=\"tab\"><a href=\"#custom_js-3\">建议</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"custom_js-1\"><p><strong>引入自动html的相关代码，标签、css、script都可以在这里编写。</strong></p></div><div class=\"tab-pane\" id=\"custom_js-2\"><p><strong>blog/themes/next/layout/_custom/custom.swig</strong></p></div><div class=\"tab-pane\" id=\"custom_js-3\"><p><strong>虽然这个文件可以引入自定义的html代码，但是建议把标签、css、js代码分开来写。</strong><br><strong>html</strong>：写在对应的模块swig文件。<br><strong>css</strong>：写在上面的自定义样式文件。<br><strong>js</strong>：blog/themes/next/source/js/src目录下创建新js文件，在blog/themes/next/layout/_layout.swig文件中进行引用。</p></div></div></div>\n          </div>\n","site":{"data":{}},"excerpt":"<div class=\"note success\">\n            <p><font color=\"red\" size=\"4\"><strong>简介</strong></font><br>记录一些<strong>Hexo、Next</strong>常用文件的一些信息</p>\n          </div>","more":"<hr>\n\n<div class=\"note info\">\n            <blockquote><h3 id=\"自定义样式文件\"><a href=\"#自定义样式文件\" class=\"headerlink\" title=\"自定义样式文件\"></a><font color=\"red\">自定义样式文件</font></h3></blockquote><div class=\"tabs\" id=\"custom_style\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#custom_style-1\">作用</a></li><li class=\"tab\"><a href=\"#custom_style-2\">位置</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"custom_style-1\"><p><strong>记录博客自定义的样式，以class方式进行css样式编写。</strong></p></div><div class=\"tab-pane\" id=\"custom_style-2\"><p><strong>blog/themes/next/source/css/_custom/custom.styl</strong></p></div></div></div>\n          </div>\n<div class=\"note info\">\n            <blockquote><h3 id=\"自定义html代码\"><a href=\"#自定义html代码\" class=\"headerlink\" title=\"自定义html代码\"></a><font color=\"red\">自定义html代码</font></h3></blockquote><div class=\"tabs\" id=\"custom_js\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#custom_js-1\">作用</a></li><li class=\"tab\"><a href=\"#custom_js-2\">位置</a></li><li class=\"tab\"><a href=\"#custom_js-3\">建议</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"custom_js-1\"><p><strong>引入自动html的相关代码，标签、css、script都可以在这里编写。</strong></p></div><div class=\"tab-pane\" id=\"custom_js-2\"><p><strong>blog/themes/next/layout/_custom/custom.swig</strong></p></div><div class=\"tab-pane\" id=\"custom_js-3\"><p><strong>虽然这个文件可以引入自定义的html代码，但是建议把标签、css、js代码分开来写。</strong><br><strong>html</strong>：写在对应的模块swig文件。<br><strong>css</strong>：写在上面的自定义样式文件。<br><strong>js</strong>：blog/themes/next/source/js/src目录下创建新js文件，在blog/themes/next/layout/_layout.swig文件中进行引用。</p></div></div></div>\n          </div>"},{"title":"Hexo+Next搜索优化（一）google搜索","comments":0,"desc":"关于博客SEO优化系列的教程，本篇关于在google搜索优化(新版Search Console)","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, seo, google, 搜索, SearchConsole","abbrlink":42646,"date":"2019-03-03T13:33:59.000Z","updated":"2019-11-03T13:33:59.000Z","_content":"\n### 背景\n{% note primary %}\n博客发布有一段时间了，而且也通过github提供的便利发布到公网上，但是除了直接域名访问，本人没有花钱买域名，只用了一个github免费提供的一个，在google居然搜索不到，只能优化一下网站在google的SEO。\n{%  endnote %}\n\n![](/images/article_seo_google.jpg)\n\n<!--more-->\n\n<hr />\n\n### 正文\n本文讲解实现对google对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第一篇</font>。\n\n1. #### 安装hexo-generator-sitemap\n在blog根目录，执行一下命令：\n```\nnpm install hexo-generator-sitemap --save\n```\n\n2. #### 生成sitemap.xml文件\n- 第一：找到blog配置文件：***blog/_config.yml***，搜索<font size=\"4\" color=\"red\">***url***</font>，把地址改成自己的网站地址。\n```\nurl: https://gis90.github.io\n```\n- 第二：把下列代码追加到打开的配置文件末尾。\n```\nsitemap:\n  path: sitemap.xml\n```\n- 第三：***hexo g***重新生成文件，在blog/public目录下会生成一个***sitemap.xml***文件。\n\n3. #### 添加蜘蛛协议\n在blog/source目录下新建一个robots.txt文件，内容如下：\n```\nUser-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /messagepad/\nAllow: /resources/\nAllow: /about/\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://gis90.github.io/sitemap.xml\n```\n解释一下：***Allow***字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的目录配置，如果菜单栏还有其他选项都可以按照格式自行添加；***Disallow***就是不允许搜索引擎爬区的内容，可以把网站相关的一些js、等资源写入。\n\n4. #### 更新github.io\n把新生成的sitemap.xml&&robots.txt上传到github。\n```\nhexo g -d\n```\n\n5. #### google站点管理\n{% note info %}\n旧版：\n打开***Search Console***：[旧版首页](https://www.google.com/webmasters/tools/home?hl=zh-CN)，添加属性。\n![](seo_google_sc_main.png)\n{% endnote %}\n\n- 添加资源\n***Search Console***出新的版本了，在使用过程中，一直提示转到新版，那就用新版进行讲解，点击页面上的***使用新版Search Console***。新版不知道怎么添加地址的请查看下列图片，在<font size=\"4\" color=\"red\">左上角搜索资源->添加资源</font>。\n![](seo_google_sc_new.png)\n- 选择资源\n![](seo_google_sc_select.png)\n\n5. #### 站点验证\n进入站点验证，我在这里验证了2种方式：HTML文件&&HTML标记，怎么验证官方都有说明，按照说明做即可，我这里进行简述一下。\n![](seo_google_sc_check.png)\n\n- 方式一\n打开文件：blog/themes/hexo-theme-next/layout/_partials/head/head.swig，添加代码到文件第二行，方便进行加载：\n```\n<meta charset=\"UTF-8\"/>\n<meta name=\"google-site-verification\" content=\"nOQH_Lr6zdiXCxCLRslnRmrnULAd7XsMJc-3MQo0iMI\" />\n```\n- 方式二\n下载googole验证文件：google6377d5ca65812ad1.html，把文件放到blog/public目录下。\n完成上述操作之后，执行***hexo g -d***，把验证部门上传到github，密钥与密钥文件都是本人网站的，替换google提供的密钥即可。\n\n6. #### robots测试（旧版）\n在新版***Search Console***中没有发现**robots.txt测试工具**功能，只能切换到老版，在新版的左下角有个**转到旧版**功能，点击**抓取->robots.txt测试工具**。在下面可以输入自己网站的一些网址地址，看是否可以测试通过。\n![](seo_google_sc_robots.png)\n\n{% note info %}\n新版中没了此功能，也许就是不需要此步验证，新版***Search Console***也在研究中，有问题的可以留言给我一起交流。\n{% endnote %}\n\n7. #### 提交站点地图\n- 测试sitemap.xml地址\n访问：https://gis90.github.io/sitemap.xml\n测试sitemap.xml可被访问到。\n- Search Console提交\n点击左侧***站点地图***，在空白处输入***sitemap.xml***，点击提交，如果有错误去fix就好，不过一般情况下是不会出错的，我的有error是因为我的有一个博文不知道为何在***updated: 22019-03-24 20:44:08***，时间上出现了问题，导致有问题。\n![](seo_google_sc_sitemap.png)\n\n8. #### 等待结果\n点击概述/效果等功能，提示**正在处理数据，请过几天再来查看**，现在能做的只是等待结果出来在进行下一步的优化了。\n![](seo_google_sc_result.png)\n\n9. #### 更新结果\n\n    这里展示了近3个月的结果：\n    > 访问量\n\n    ![](fangwenqingkuang.png)\n    > 覆盖率\n\n    ![](fugailv.png)\n    > 地区\n\n    ![](diqu.png)\n\n### 相关链接\nsearch console：https://www.google.com/webmasters/tools/home?hl=zh-CN\n网站所有权验证：https://support.google.com/webmasters/answer/9008080\n","source":"_posts/Hexo-Next搜索优化（一）google搜索.md","raw":"---\ntitle: Hexo+Next搜索优化（一）google搜索\ncomments: false\ndesc: 关于博客SEO优化系列的教程，本篇关于在google搜索优化(新版Search Console)\ncategories:\n  - [seo优化]\n  - [Hexo]\ntags: [Hexo, seo优化, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, seo, google, 搜索, SearchConsole\nabbrlink: 42646\ndate: 2019-03-03 21:33:59\nupdated: 2019-11-03 21:33:59\n---\n\n### 背景\n{% note primary %}\n博客发布有一段时间了，而且也通过github提供的便利发布到公网上，但是除了直接域名访问，本人没有花钱买域名，只用了一个github免费提供的一个，在google居然搜索不到，只能优化一下网站在google的SEO。\n{%  endnote %}\n\n![](/images/article_seo_google.jpg)\n\n<!--more-->\n\n<hr />\n\n### 正文\n本文讲解实现对google对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第一篇</font>。\n\n1. #### 安装hexo-generator-sitemap\n在blog根目录，执行一下命令：\n```\nnpm install hexo-generator-sitemap --save\n```\n\n2. #### 生成sitemap.xml文件\n- 第一：找到blog配置文件：***blog/_config.yml***，搜索<font size=\"4\" color=\"red\">***url***</font>，把地址改成自己的网站地址。\n```\nurl: https://gis90.github.io\n```\n- 第二：把下列代码追加到打开的配置文件末尾。\n```\nsitemap:\n  path: sitemap.xml\n```\n- 第三：***hexo g***重新生成文件，在blog/public目录下会生成一个***sitemap.xml***文件。\n\n3. #### 添加蜘蛛协议\n在blog/source目录下新建一个robots.txt文件，内容如下：\n```\nUser-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /messagepad/\nAllow: /resources/\nAllow: /about/\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://gis90.github.io/sitemap.xml\n```\n解释一下：***Allow***字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的目录配置，如果菜单栏还有其他选项都可以按照格式自行添加；***Disallow***就是不允许搜索引擎爬区的内容，可以把网站相关的一些js、等资源写入。\n\n4. #### 更新github.io\n把新生成的sitemap.xml&&robots.txt上传到github。\n```\nhexo g -d\n```\n\n5. #### google站点管理\n{% note info %}\n旧版：\n打开***Search Console***：[旧版首页](https://www.google.com/webmasters/tools/home?hl=zh-CN)，添加属性。\n![](seo_google_sc_main.png)\n{% endnote %}\n\n- 添加资源\n***Search Console***出新的版本了，在使用过程中，一直提示转到新版，那就用新版进行讲解，点击页面上的***使用新版Search Console***。新版不知道怎么添加地址的请查看下列图片，在<font size=\"4\" color=\"red\">左上角搜索资源->添加资源</font>。\n![](seo_google_sc_new.png)\n- 选择资源\n![](seo_google_sc_select.png)\n\n5. #### 站点验证\n进入站点验证，我在这里验证了2种方式：HTML文件&&HTML标记，怎么验证官方都有说明，按照说明做即可，我这里进行简述一下。\n![](seo_google_sc_check.png)\n\n- 方式一\n打开文件：blog/themes/hexo-theme-next/layout/_partials/head/head.swig，添加代码到文件第二行，方便进行加载：\n```\n<meta charset=\"UTF-8\"/>\n<meta name=\"google-site-verification\" content=\"nOQH_Lr6zdiXCxCLRslnRmrnULAd7XsMJc-3MQo0iMI\" />\n```\n- 方式二\n下载googole验证文件：google6377d5ca65812ad1.html，把文件放到blog/public目录下。\n完成上述操作之后，执行***hexo g -d***，把验证部门上传到github，密钥与密钥文件都是本人网站的，替换google提供的密钥即可。\n\n6. #### robots测试（旧版）\n在新版***Search Console***中没有发现**robots.txt测试工具**功能，只能切换到老版，在新版的左下角有个**转到旧版**功能，点击**抓取->robots.txt测试工具**。在下面可以输入自己网站的一些网址地址，看是否可以测试通过。\n![](seo_google_sc_robots.png)\n\n{% note info %}\n新版中没了此功能，也许就是不需要此步验证，新版***Search Console***也在研究中，有问题的可以留言给我一起交流。\n{% endnote %}\n\n7. #### 提交站点地图\n- 测试sitemap.xml地址\n访问：https://gis90.github.io/sitemap.xml\n测试sitemap.xml可被访问到。\n- Search Console提交\n点击左侧***站点地图***，在空白处输入***sitemap.xml***，点击提交，如果有错误去fix就好，不过一般情况下是不会出错的，我的有error是因为我的有一个博文不知道为何在***updated: 22019-03-24 20:44:08***，时间上出现了问题，导致有问题。\n![](seo_google_sc_sitemap.png)\n\n8. #### 等待结果\n点击概述/效果等功能，提示**正在处理数据，请过几天再来查看**，现在能做的只是等待结果出来在进行下一步的优化了。\n![](seo_google_sc_result.png)\n\n9. #### 更新结果\n\n    这里展示了近3个月的结果：\n    > 访问量\n\n    ![](fangwenqingkuang.png)\n    > 覆盖率\n\n    ![](fugailv.png)\n    > 地区\n\n    ![](diqu.png)\n\n### 相关链接\nsearch console：https://www.google.com/webmasters/tools/home?hl=zh-CN\n网站所有权验证：https://support.google.com/webmasters/answer/9008080\n","slug":"Hexo-Next搜索优化（一）google搜索","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ri0024tabjn0mtvj1g","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>博客发布有一段时间了，而且也通过github提供的便利发布到公网上，但是除了直接域名访问，本人没有花钱买域名，只用了一个github免费提供的一个，在google居然搜索不到，只能优化一下网站在google的SEO。</p>\n          </div>\n<p><img src=\"/images/article_seo_google.jpg\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文讲解实现对google对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第一篇</font>。</p>\n<ol>\n<li><h4 id=\"安装hexo-generator-sitemap\"><a href=\"#安装hexo-generator-sitemap\" class=\"headerlink\" title=\"安装hexo-generator-sitemap\"></a>安装hexo-generator-sitemap</h4><p>在blog根目录，执行一下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"生成sitemap-xml文件\"><a href=\"#生成sitemap-xml文件\" class=\"headerlink\" title=\"生成sitemap.xml文件\"></a>生成sitemap.xml文件</h4></li>\n</ol>\n<ul>\n<li><p>第一：找到blog配置文件：<strong><em>blog/_config.yml</em></strong>，搜索<font size=\"4\" color=\"red\"><strong><em>url</em></strong></font>，把地址改成自己的网站地址。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://gis90.github.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第二：把下列代码追加到打开的配置文件末尾。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第三：<strong><em>hexo g</em></strong>重新生成文件，在blog/public目录下会生成一个<strong><em>sitemap.xml</em></strong>文件。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li><h4 id=\"添加蜘蛛协议\"><a href=\"#添加蜘蛛协议\" class=\"headerlink\" title=\"添加蜘蛛协议\"></a>添加蜘蛛协议</h4>在blog/source目录下新建一个robots.txt文件，内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: https://gis90.github.io/sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>解释一下：<strong><em>Allow</em></strong>字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的目录配置，如果菜单栏还有其他选项都可以按照格式自行添加；<strong><em>Disallow</em></strong>就是不允许搜索引擎爬区的内容，可以把网站相关的一些js、等资源写入。</p>\n<ol start=\"4\">\n<li><h4 id=\"更新github-io\"><a href=\"#更新github-io\" class=\"headerlink\" title=\"更新github.io\"></a>更新github.io</h4><p>把新生成的sitemap.xml&amp;&amp;robots.txt上传到github。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"google站点管理\"><a href=\"#google站点管理\" class=\"headerlink\" title=\"google站点管理\"></a>google站点管理</h4><div class=\"note info\">\n            <p>旧版：<br>打开<strong><em>Search Console</em></strong>：<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">旧版首页</a>，添加属性。<br><img src=\"seo_google_sc_main.png\" alt></p>\n          </div>\n</li>\n</ol>\n<ul>\n<li>添加资源<br><strong><em>Search Console</em></strong>出新的版本了，在使用过程中，一直提示转到新版，那就用新版进行讲解，点击页面上的<strong><em>使用新版Search Console</em></strong>。新版不知道怎么添加地址的请查看下列图片，在<font size=\"4\" color=\"red\">左上角搜索资源-&gt;添加资源</font>。<br><img src=\"seo_google_sc_new.png\" alt></li>\n<li>选择资源<br><img src=\"seo_google_sc_select.png\" alt></li>\n</ul>\n<ol start=\"5\">\n<li><h4 id=\"站点验证\"><a href=\"#站点验证\" class=\"headerlink\" title=\"站点验证\"></a>站点验证</h4>进入站点验证，我在这里验证了2种方式：HTML文件&amp;&amp;HTML标记，怎么验证官方都有说明，按照说明做即可，我这里进行简述一下。<br><img src=\"seo_google_sc_check.png\" alt></li>\n</ol>\n<ul>\n<li><p>方式一<br>打开文件：blog/themes/hexo-theme-next/layout/_partials/head/head.swig，添加代码到文件第二行，方便进行加载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;/&gt;</span><br><span class=\"line\">&lt;meta name=&quot;google-site-verification&quot; content=&quot;nOQH_Lr6zdiXCxCLRslnRmrnULAd7XsMJc-3MQo0iMI&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式二<br>下载googole验证文件：google6377d5ca65812ad1.html，把文件放到blog/public目录下。<br>完成上述操作之后，执行<strong><em>hexo g -d</em></strong>，把验证部门上传到github，密钥与密钥文件都是本人网站的，替换google提供的密钥即可。</p>\n</li>\n</ul>\n<ol start=\"6\">\n<li><h4 id=\"robots测试（旧版）\"><a href=\"#robots测试（旧版）\" class=\"headerlink\" title=\"robots测试（旧版）\"></a>robots测试（旧版）</h4>在新版<strong><em>Search Console</em></strong>中没有发现<strong>robots.txt测试工具</strong>功能，只能切换到老版，在新版的左下角有个<strong>转到旧版</strong>功能，点击<strong>抓取-&gt;robots.txt测试工具</strong>。在下面可以输入自己网站的一些网址地址，看是否可以测试通过。<br><img src=\"seo_google_sc_robots.png\" alt></li>\n</ol>\n<div class=\"note info\">\n            <p>新版中没了此功能，也许就是不需要此步验证，新版<strong><em>Search Console</em></strong>也在研究中，有问题的可以留言给我一起交流。</p>\n          </div>\n<ol start=\"7\">\n<li><h4 id=\"提交站点地图\"><a href=\"#提交站点地图\" class=\"headerlink\" title=\"提交站点地图\"></a>提交站点地图</h4></li>\n</ol>\n<ul>\n<li>测试sitemap.xml地址<br>访问：<a href=\"https://gis90.github.io/sitemap.xml\" target=\"_blank\" rel=\"noopener\">https://gis90.github.io/sitemap.xml</a><br>测试sitemap.xml可被访问到。</li>\n<li>Search Console提交<br>点击左侧<strong><em>站点地图</em></strong>，在空白处输入<strong><em>sitemap.xml</em></strong>，点击提交，如果有错误去fix就好，不过一般情况下是不会出错的，我的有error是因为我的有一个博文不知道为何在<strong><em>updated: 22019-03-24 20:44:08</em></strong>，时间上出现了问题，导致有问题。<br><img src=\"seo_google_sc_sitemap.png\" alt></li>\n</ul>\n<ol start=\"8\">\n<li><h4 id=\"等待结果\"><a href=\"#等待结果\" class=\"headerlink\" title=\"等待结果\"></a>等待结果</h4><p>点击概述/效果等功能，提示<strong>正在处理数据，请过几天再来查看</strong>，现在能做的只是等待结果出来在进行下一步的优化了。<br><img src=\"seo_google_sc_result.png\" alt></p>\n</li>\n<li><h4 id=\"更新结果\"><a href=\"#更新结果\" class=\"headerlink\" title=\"更新结果\"></a>更新结果</h4><p> 这里展示了近3个月的结果：</p>\n<blockquote>\n<p>访问量</p>\n</blockquote>\n<p> <img src=\"fangwenqingkuang.png\" alt></p>\n<blockquote>\n<p>覆盖率</p>\n</blockquote>\n<p> <img src=\"fugailv.png\" alt></p>\n<blockquote>\n<p>地区</p>\n</blockquote>\n<p> <img src=\"diqu.png\" alt></p>\n</li>\n</ol>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p>search console：<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">https://www.google.com/webmasters/tools/home?hl=zh-CN</a><br>网站所有权验证：<a href=\"https://support.google.com/webmasters/answer/9008080\" target=\"_blank\" rel=\"noopener\">https://support.google.com/webmasters/answer/9008080</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>博客发布有一段时间了，而且也通过github提供的便利发布到公网上，但是除了直接域名访问，本人没有花钱买域名，只用了一个github免费提供的一个，在google居然搜索不到，只能优化一下网站在google的SEO。</p>\n          </div>\n<p><img src=\"/images/article_seo_google.jpg\" alt></p>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文讲解实现对google对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第一篇</font>。</p>\n<ol>\n<li><h4 id=\"安装hexo-generator-sitemap\"><a href=\"#安装hexo-generator-sitemap\" class=\"headerlink\" title=\"安装hexo-generator-sitemap\"></a>安装hexo-generator-sitemap</h4><p>在blog根目录，执行一下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"生成sitemap-xml文件\"><a href=\"#生成sitemap-xml文件\" class=\"headerlink\" title=\"生成sitemap.xml文件\"></a>生成sitemap.xml文件</h4></li>\n</ol>\n<ul>\n<li><p>第一：找到blog配置文件：<strong><em>blog/_config.yml</em></strong>，搜索<font size=\"4\" color=\"red\"><strong><em>url</em></strong></font>，把地址改成自己的网站地址。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://gis90.github.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第二：把下列代码追加到打开的配置文件末尾。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>第三：<strong><em>hexo g</em></strong>重新生成文件，在blog/public目录下会生成一个<strong><em>sitemap.xml</em></strong>文件。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li><h4 id=\"添加蜘蛛协议\"><a href=\"#添加蜘蛛协议\" class=\"headerlink\" title=\"添加蜘蛛协议\"></a>添加蜘蛛协议</h4>在blog/source目录下新建一个robots.txt文件，内容如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: https://gis90.github.io/sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>解释一下：<strong><em>Allow</em></strong>字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的目录配置，如果菜单栏还有其他选项都可以按照格式自行添加；<strong><em>Disallow</em></strong>就是不允许搜索引擎爬区的内容，可以把网站相关的一些js、等资源写入。</p>\n<ol start=\"4\">\n<li><h4 id=\"更新github-io\"><a href=\"#更新github-io\" class=\"headerlink\" title=\"更新github.io\"></a>更新github.io</h4><p>把新生成的sitemap.xml&amp;&amp;robots.txt上传到github。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"google站点管理\"><a href=\"#google站点管理\" class=\"headerlink\" title=\"google站点管理\"></a>google站点管理</h4><div class=\"note info\">\n            <p>旧版：<br>打开<strong><em>Search Console</em></strong>：<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">旧版首页</a>，添加属性。<br><img src=\"seo_google_sc_main.png\" alt></p>\n          </div>\n</li>\n</ol>\n<ul>\n<li>添加资源<br><strong><em>Search Console</em></strong>出新的版本了，在使用过程中，一直提示转到新版，那就用新版进行讲解，点击页面上的<strong><em>使用新版Search Console</em></strong>。新版不知道怎么添加地址的请查看下列图片，在<font size=\"4\" color=\"red\">左上角搜索资源-&gt;添加资源</font>。<br><img src=\"seo_google_sc_new.png\" alt></li>\n<li>选择资源<br><img src=\"seo_google_sc_select.png\" alt></li>\n</ul>\n<ol start=\"5\">\n<li><h4 id=\"站点验证\"><a href=\"#站点验证\" class=\"headerlink\" title=\"站点验证\"></a>站点验证</h4>进入站点验证，我在这里验证了2种方式：HTML文件&amp;&amp;HTML标记，怎么验证官方都有说明，按照说明做即可，我这里进行简述一下。<br><img src=\"seo_google_sc_check.png\" alt></li>\n</ol>\n<ul>\n<li><p>方式一<br>打开文件：blog/themes/hexo-theme-next/layout/_partials/head/head.swig，添加代码到文件第二行，方便进行加载：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset=&quot;UTF-8&quot;/&gt;</span><br><span class=\"line\">&lt;meta name=&quot;google-site-verification&quot; content=&quot;nOQH_Lr6zdiXCxCLRslnRmrnULAd7XsMJc-3MQo0iMI&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式二<br>下载googole验证文件：google6377d5ca65812ad1.html，把文件放到blog/public目录下。<br>完成上述操作之后，执行<strong><em>hexo g -d</em></strong>，把验证部门上传到github，密钥与密钥文件都是本人网站的，替换google提供的密钥即可。</p>\n</li>\n</ul>\n<ol start=\"6\">\n<li><h4 id=\"robots测试（旧版）\"><a href=\"#robots测试（旧版）\" class=\"headerlink\" title=\"robots测试（旧版）\"></a>robots测试（旧版）</h4>在新版<strong><em>Search Console</em></strong>中没有发现<strong>robots.txt测试工具</strong>功能，只能切换到老版，在新版的左下角有个<strong>转到旧版</strong>功能，点击<strong>抓取-&gt;robots.txt测试工具</strong>。在下面可以输入自己网站的一些网址地址，看是否可以测试通过。<br><img src=\"seo_google_sc_robots.png\" alt></li>\n</ol>\n<div class=\"note info\">\n            <p>新版中没了此功能，也许就是不需要此步验证，新版<strong><em>Search Console</em></strong>也在研究中，有问题的可以留言给我一起交流。</p>\n          </div>\n<ol start=\"7\">\n<li><h4 id=\"提交站点地图\"><a href=\"#提交站点地图\" class=\"headerlink\" title=\"提交站点地图\"></a>提交站点地图</h4></li>\n</ol>\n<ul>\n<li>测试sitemap.xml地址<br>访问：<a href=\"https://gis90.github.io/sitemap.xml\" target=\"_blank\" rel=\"noopener\">https://gis90.github.io/sitemap.xml</a><br>测试sitemap.xml可被访问到。</li>\n<li>Search Console提交<br>点击左侧<strong><em>站点地图</em></strong>，在空白处输入<strong><em>sitemap.xml</em></strong>，点击提交，如果有错误去fix就好，不过一般情况下是不会出错的，我的有error是因为我的有一个博文不知道为何在<strong><em>updated: 22019-03-24 20:44:08</em></strong>，时间上出现了问题，导致有问题。<br><img src=\"seo_google_sc_sitemap.png\" alt></li>\n</ul>\n<ol start=\"8\">\n<li><h4 id=\"等待结果\"><a href=\"#等待结果\" class=\"headerlink\" title=\"等待结果\"></a>等待结果</h4><p>点击概述/效果等功能，提示<strong>正在处理数据，请过几天再来查看</strong>，现在能做的只是等待结果出来在进行下一步的优化了。<br><img src=\"seo_google_sc_result.png\" alt></p>\n</li>\n<li><h4 id=\"更新结果\"><a href=\"#更新结果\" class=\"headerlink\" title=\"更新结果\"></a>更新结果</h4><p> 这里展示了近3个月的结果：</p>\n<blockquote>\n<p>访问量</p>\n</blockquote>\n<p> <img src=\"fangwenqingkuang.png\" alt></p>\n<blockquote>\n<p>覆盖率</p>\n</blockquote>\n<p> <img src=\"fugailv.png\" alt></p>\n<blockquote>\n<p>地区</p>\n</blockquote>\n<p> <img src=\"diqu.png\" alt></p>\n</li>\n</ol>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p>search console：<a href=\"https://www.google.com/webmasters/tools/home?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">https://www.google.com/webmasters/tools/home?hl=zh-CN</a><br>网站所有权验证：<a href=\"https://support.google.com/webmasters/answer/9008080\" target=\"_blank\" rel=\"noopener\">https://support.google.com/webmasters/answer/9008080</a></p>"},{"title":"Hexo+Next搜索优化（三）baidu搜索","comments":0,"top":false,"abbrlink":21353,"date":"2019-05-18T00:45:58.000Z","updated":"2019-07-18T00:45:59.000Z","desc":"关于博客SEO优化系列的教程，本篇关于在baidu搜索优化(自动化推送脚本，python)","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 搜索, 优化, baidu搜索, SEO","_content":"\n### 背景\n{% note primary %}\n博客运行有一年多了，之前写了关于***google搜索***与***网站SEO***优化相关的内容，希望自己的博客在***baidu***搜索上也可以排名，但是还不想花钱，只好通过技术来解决这个难题了。\n优化了***baidu SEO***还可以装13，通过搜索就可以搜索到你博客的内容，带来了流量，在准备弄个广告位进行赚点外快，何乐而不为。\n{%  endnote %}\n\n![](/images/article_seo_baidu.jpg)\n\n<!--more-->\n\n<hr />\n\n\n### 正文\n本文讲解实现对baidu搜索引擎对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第三篇，之前已经写了关于google搜索以及blog本身优化的文章，欢迎查阅</font>。\n\n1. #### 安装hexo-generator-sitemap\n\n    在blog根目录，执行一下命令：\n    ```\n    npm install hexo-generator-baidu-sitemap --save\n    ```\n    在blog/public目录下会自动生产一个baidusitemap.xml文件，里面的内容不用多说了，都是blog的url信息。\n\n2. #### 添加蜘蛛协议\n\n    打开blog/source目录下的robots.txt文件，最后一行，也就是Sitemap下添加以下内容：\n    ```\n    Sitemap: https://pygo2.cn/baidusitemap.xml\n    ```\n    ***Allow、Disallow***之前已经解释过了，不过看英语也知道啥意思了：***Allow***字段的值即为允许搜索引擎爬区的内容；***Disallow***就是不允许搜索引擎爬区的内容。\n    示例：\n    ```\n    User-agent: *\n    Allow: /\n    Allow: /archives/\n    Allow: /articles/\n    Allow: /categories/\n    Allow: /tags/\n    Allow: /messagepad/\n    Allow: /resources/\n    Allow: /about/\n    Disallow: /vendors/\n    Disallow: /js/\n    Disallow: /css/\n    Disallow: /fonts/\n    Disallow: /vendors/\n    Disallow: /fancybox/\n\n    Sitemap: http://pygp2.cn/sitemap.xml\n    Sitemap: http://pygp2.cn/baidusitemap.xml\n    ```\n\n3. #### baidu站长设置\n\n    前提：需要一个baidu账号，没有的请自行注册。\n\n    > 打开baidu站长（https://ziyuan.baidu.com/linksubmit/index）\n\n    ![](baidu_zhandian.png)\n\n    > 验证baidu账号信息\n\n    ![](baidu_xinxi.png)\n\n    > 填写站点相关信息并验证\n\n    <img src=\"baidu_site_1.png\" style=\"border:1.5px solid blue\" alt=\"输入网站\"/>\n\n    <img src=\"baidu_site_2.png\" style=\"border:1.5px solid blue\" alt=\"站点属性\"/>\n\n    <img src=\"baidu_site_3.png\" style=\"border:1.5px solid blue\" alt=\"验证网站\"/>\n\n    网站验证有三种方式：\n\n    - 文件验证\n    - html验证\n    - CNAME验证\n    在这里采用html验证的方式，将以下代码放到blog/source/root.html文件的head标签内，然后再执行***hexo clean && hexo g -d***命令，重新生成blog。\n    ```\n    <meta name=\"baidu-site-verification\" content=\"3T5rDqaWUL\" />\n    ```\n    因为本人网站是自定义的一个root.html域名首页，如果不是把以上代码添加到blog/themes/layout/_partials/head.swig内即可。\n\n    > 链接提交\n\n    进入到链接提交功能。\n\n    ![](baidu_link_commit.png)\n\n    > 选择链接提交的方式\n\n    链接方式两种：\n    - 手动提送\n    - 自动提交\n        -- 主动推送\n        -- 自动推送\n        -- sitemap\n\n4. #### 自动化提交\n\n    > sitemap设置提交\n\n    在**链接提交**功能页。\n\n    ![](sitemap.png)\n\n    > 主动推送\n\n    在说明上有curl、post、php等几种方式，本人使用curl + python + crontab(linux)的方式在服务器上做个定时自动推送。\n    python脚本：\n    ```\n    # -*- coding: utf-8 -*-\n\n    \"\"\"\n    ------------------------------------------------\n    describe:\n        自动化推送blog的url到百度\n\n    usage:\n        python auto_baidu_push.py\n\n    base_info:\n        __version__ = \"v.10\"\n        __author__ = \"mingliang.gao\"\n        __time__ = \"2019/07/18\"\n        __mail__ = \"mingliang.gao@163.com\"\n\n    思路：\n        获取blog全部的url，生成url.txt文本，使用baidu站点的curl命令进行数据自动化推送，删除url.txt文件。\n    ------------------------------------------------\n    \"\"\"\n    import os\n    import shutil\n\n\n    # 本机\n    HTML_REL_DIR = '/Users/gaomingliang/github/myblog/pygo/public/articles'\n    # 服务器\n    # HTML_REL_DIR = '/opt/www/blog/articles'\n\n\n    PUSH_baidu_COMMAND = 'curl -H \"Content-Type:text/plain\" --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=www.pygo2.cn&token=VqQF08BReWjBB018\"'\n    DOMAIN_TEPM = 'http://www.pygo2.cn/articles'\n    URL_NAME = 'urls.txt'\n\n\n    def get_cur_dir():\n        return os.path.abspath(os.path.dirname(__file__))\n\n\n    class BlogRequests(object):\n        def __init__(self):\n            self.article_source = HTML_REL_DIR\n            self.cur_dir = get_cur_dir()\n\n        def collect_codes(self):\n            \"\"\"\n            get all article codes\n            :return: list type\n            \"\"\"\n            return os.listdir(self.article_source)\n\n        def generator_url_text(self):\n            all_codes = self.collect_codes()\n            if not all_codes:\n                print '============== not codes'\n                return False\n\n            url_file = os.path.join(self.cur_dir, URL_NAME)\n            if not os.path.exists(url_file):\n                fd = open(url_file, mode=\"w\")\n                fd.close()\n\n            with open(url_file, 'w') as f:\n                for code in all_codes:\n                    url = DOMAIN_TEPM + '/%s/' % code\n                    f.write(url)\n                    # 换行符\n                    f.write('\\n')\n            return url_file\n\n        def run(self):\n            url_file = self.generator_url_text()\n            if url_file:\n                os.system(PUSH_baidu_COMMAND)\n            print '-------------end-------------'\n\n\n    if __name__ == '__main__':\n        br = BlogRequests()\n        br.run()\n    ```\n    linux服务器上的crontab：\n    ```\n    1 23 * * * python2 /home/mingliang.gao/crontab/auto_baidu_push.py\n    ```\n    \n\n### 结束\n\n<font size=6.5 color='red'>不积跬步,无以至千里;不积小流,无以成江海。</font>\n","source":"_posts/Hexo-Next搜索优化（三）baidu搜索.md","raw":"---\ntitle: Hexo+Next搜索优化（三）baidu搜索\ncomments: false\ncategories:\n  - [seo优化]\n  - [Hexo]\ntags: [Hexo, seo优化, Hexo插件]\ntop: false\nabbrlink: 21353\ndate: 2019-05-18 08:45:58\nupdated: 2019-07-18 08:45:59\ndesc: 关于博客SEO优化系列的教程，本篇关于在baidu搜索优化(自动化推送脚本，python)\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 搜索, 优化, baidu搜索, SEO\n---\n\n### 背景\n{% note primary %}\n博客运行有一年多了，之前写了关于***google搜索***与***网站SEO***优化相关的内容，希望自己的博客在***baidu***搜索上也可以排名，但是还不想花钱，只好通过技术来解决这个难题了。\n优化了***baidu SEO***还可以装13，通过搜索就可以搜索到你博客的内容，带来了流量，在准备弄个广告位进行赚点外快，何乐而不为。\n{%  endnote %}\n\n![](/images/article_seo_baidu.jpg)\n\n<!--more-->\n\n<hr />\n\n\n### 正文\n本文讲解实现对baidu搜索引擎对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第三篇，之前已经写了关于google搜索以及blog本身优化的文章，欢迎查阅</font>。\n\n1. #### 安装hexo-generator-sitemap\n\n    在blog根目录，执行一下命令：\n    ```\n    npm install hexo-generator-baidu-sitemap --save\n    ```\n    在blog/public目录下会自动生产一个baidusitemap.xml文件，里面的内容不用多说了，都是blog的url信息。\n\n2. #### 添加蜘蛛协议\n\n    打开blog/source目录下的robots.txt文件，最后一行，也就是Sitemap下添加以下内容：\n    ```\n    Sitemap: https://pygo2.cn/baidusitemap.xml\n    ```\n    ***Allow、Disallow***之前已经解释过了，不过看英语也知道啥意思了：***Allow***字段的值即为允许搜索引擎爬区的内容；***Disallow***就是不允许搜索引擎爬区的内容。\n    示例：\n    ```\n    User-agent: *\n    Allow: /\n    Allow: /archives/\n    Allow: /articles/\n    Allow: /categories/\n    Allow: /tags/\n    Allow: /messagepad/\n    Allow: /resources/\n    Allow: /about/\n    Disallow: /vendors/\n    Disallow: /js/\n    Disallow: /css/\n    Disallow: /fonts/\n    Disallow: /vendors/\n    Disallow: /fancybox/\n\n    Sitemap: http://pygp2.cn/sitemap.xml\n    Sitemap: http://pygp2.cn/baidusitemap.xml\n    ```\n\n3. #### baidu站长设置\n\n    前提：需要一个baidu账号，没有的请自行注册。\n\n    > 打开baidu站长（https://ziyuan.baidu.com/linksubmit/index）\n\n    ![](baidu_zhandian.png)\n\n    > 验证baidu账号信息\n\n    ![](baidu_xinxi.png)\n\n    > 填写站点相关信息并验证\n\n    <img src=\"baidu_site_1.png\" style=\"border:1.5px solid blue\" alt=\"输入网站\"/>\n\n    <img src=\"baidu_site_2.png\" style=\"border:1.5px solid blue\" alt=\"站点属性\"/>\n\n    <img src=\"baidu_site_3.png\" style=\"border:1.5px solid blue\" alt=\"验证网站\"/>\n\n    网站验证有三种方式：\n\n    - 文件验证\n    - html验证\n    - CNAME验证\n    在这里采用html验证的方式，将以下代码放到blog/source/root.html文件的head标签内，然后再执行***hexo clean && hexo g -d***命令，重新生成blog。\n    ```\n    <meta name=\"baidu-site-verification\" content=\"3T5rDqaWUL\" />\n    ```\n    因为本人网站是自定义的一个root.html域名首页，如果不是把以上代码添加到blog/themes/layout/_partials/head.swig内即可。\n\n    > 链接提交\n\n    进入到链接提交功能。\n\n    ![](baidu_link_commit.png)\n\n    > 选择链接提交的方式\n\n    链接方式两种：\n    - 手动提送\n    - 自动提交\n        -- 主动推送\n        -- 自动推送\n        -- sitemap\n\n4. #### 自动化提交\n\n    > sitemap设置提交\n\n    在**链接提交**功能页。\n\n    ![](sitemap.png)\n\n    > 主动推送\n\n    在说明上有curl、post、php等几种方式，本人使用curl + python + crontab(linux)的方式在服务器上做个定时自动推送。\n    python脚本：\n    ```\n    # -*- coding: utf-8 -*-\n\n    \"\"\"\n    ------------------------------------------------\n    describe:\n        自动化推送blog的url到百度\n\n    usage:\n        python auto_baidu_push.py\n\n    base_info:\n        __version__ = \"v.10\"\n        __author__ = \"mingliang.gao\"\n        __time__ = \"2019/07/18\"\n        __mail__ = \"mingliang.gao@163.com\"\n\n    思路：\n        获取blog全部的url，生成url.txt文本，使用baidu站点的curl命令进行数据自动化推送，删除url.txt文件。\n    ------------------------------------------------\n    \"\"\"\n    import os\n    import shutil\n\n\n    # 本机\n    HTML_REL_DIR = '/Users/gaomingliang/github/myblog/pygo/public/articles'\n    # 服务器\n    # HTML_REL_DIR = '/opt/www/blog/articles'\n\n\n    PUSH_baidu_COMMAND = 'curl -H \"Content-Type:text/plain\" --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=www.pygo2.cn&token=VqQF08BReWjBB018\"'\n    DOMAIN_TEPM = 'http://www.pygo2.cn/articles'\n    URL_NAME = 'urls.txt'\n\n\n    def get_cur_dir():\n        return os.path.abspath(os.path.dirname(__file__))\n\n\n    class BlogRequests(object):\n        def __init__(self):\n            self.article_source = HTML_REL_DIR\n            self.cur_dir = get_cur_dir()\n\n        def collect_codes(self):\n            \"\"\"\n            get all article codes\n            :return: list type\n            \"\"\"\n            return os.listdir(self.article_source)\n\n        def generator_url_text(self):\n            all_codes = self.collect_codes()\n            if not all_codes:\n                print '============== not codes'\n                return False\n\n            url_file = os.path.join(self.cur_dir, URL_NAME)\n            if not os.path.exists(url_file):\n                fd = open(url_file, mode=\"w\")\n                fd.close()\n\n            with open(url_file, 'w') as f:\n                for code in all_codes:\n                    url = DOMAIN_TEPM + '/%s/' % code\n                    f.write(url)\n                    # 换行符\n                    f.write('\\n')\n            return url_file\n\n        def run(self):\n            url_file = self.generator_url_text()\n            if url_file:\n                os.system(PUSH_baidu_COMMAND)\n            print '-------------end-------------'\n\n\n    if __name__ == '__main__':\n        br = BlogRequests()\n        br.run()\n    ```\n    linux服务器上的crontab：\n    ```\n    1 23 * * * python2 /home/mingliang.gao/crontab/auto_baidu_push.py\n    ```\n    \n\n### 结束\n\n<font size=6.5 color='red'>不积跬步,无以至千里;不积小流,无以成江海。</font>\n","slug":"Hexo-Next搜索优化（三）baidu搜索","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rk0028tabjd3lecjzm","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>博客运行有一年多了，之前写了关于<strong><em>google搜索</em></strong>与<strong><em>网站SEO</em></strong>优化相关的内容，希望自己的博客在<strong><em>baidu</em></strong>搜索上也可以排名，但是还不想花钱，只好通过技术来解决这个难题了。<br>优化了<strong><em>baidu SEO</em></strong>还可以装13，通过搜索就可以搜索到你博客的内容，带来了流量，在准备弄个广告位进行赚点外快，何乐而不为。</p>\n          </div>\n<p><img src=\"/images/article_seo_baidu.jpg\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文讲解实现对baidu搜索引擎对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第三篇，之前已经写了关于google搜索以及blog本身优化的文章，欢迎查阅</font>。</p>\n<ol>\n<li><h4 id=\"安装hexo-generator-sitemap\"><a href=\"#安装hexo-generator-sitemap\" class=\"headerlink\" title=\"安装hexo-generator-sitemap\"></a>安装hexo-generator-sitemap</h4><p> 在blog根目录，执行一下命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p> 在blog/public目录下会自动生产一个baidusitemap.xml文件，里面的内容不用多说了，都是blog的url信息。</p>\n</li>\n<li><h4 id=\"添加蜘蛛协议\"><a href=\"#添加蜘蛛协议\" class=\"headerlink\" title=\"添加蜘蛛协议\"></a>添加蜘蛛协议</h4><p> 打开blog/source目录下的robots.txt文件，最后一行，也就是Sitemap下添加以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sitemap: https://pygo2.cn/baidusitemap.xml</span><br></pre></td></tr></table></figure>\n<p> <strong><em>Allow、Disallow</em></strong>之前已经解释过了，不过看英语也知道啥意思了：<strong><em>Allow</em></strong>字段的值即为允许搜索引擎爬区的内容；<strong><em>Disallow</em></strong>就是不允许搜索引擎爬区的内容。<br> 示例：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /articles/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: http://pygp2.cn/sitemap.xml</span><br><span class=\"line\">Sitemap: http://pygp2.cn/baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"baidu站长设置\"><a href=\"#baidu站长设置\" class=\"headerlink\" title=\"baidu站长设置\"></a>baidu站长设置</h4><p> 前提：需要一个baidu账号，没有的请自行注册。</p>\n<blockquote>\n<p>打开baidu站长（<a href=\"https://ziyuan.baidu.com/linksubmit/index）\" target=\"_blank\" rel=\"noopener\">https://ziyuan.baidu.com/linksubmit/index）</a></p>\n</blockquote>\n<p> <img src=\"baidu_zhandian.png\" alt></p>\n<blockquote>\n<p>验证baidu账号信息</p>\n</blockquote>\n<p> <img src=\"baidu_xinxi.png\" alt></p>\n<blockquote>\n<p>填写站点相关信息并验证</p>\n</blockquote>\n<p> <img src=\"baidu_site_1.png\" style=\"border:1.5px solid blue\" alt=\"输入网站\"></p>\n<p> <img src=\"baidu_site_2.png\" style=\"border:1.5px solid blue\" alt=\"站点属性\"></p>\n<p> <img src=\"baidu_site_3.png\" style=\"border:1.5px solid blue\" alt=\"验证网站\"></p>\n<p> 网站验证有三种方式：</p>\n<ul>\n<li>文件验证</li>\n<li>html验证</li>\n<li><p>CNAME验证<br>在这里采用html验证的方式，将以下代码放到blog/source/root.html文件的head标签内，然后再执行<strong><em>hexo clean &amp;&amp; hexo g -d</em></strong>命令，重新生成blog。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;baidu-site-verification&quot; content=&quot;3T5rDqaWUL&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<p>因为本人网站是自定义的一个root.html域名首页，如果不是把以上代码添加到blog/themes/layout/_partials/head.swig内即可。</p>\n<blockquote>\n<p>链接提交</p>\n</blockquote>\n<p>进入到链接提交功能。</p>\n<p><img src=\"baidu_link_commit.png\" alt></p>\n<blockquote>\n<p>选择链接提交的方式</p>\n</blockquote>\n<p>链接方式两种：</p>\n</li>\n<li>手动提送</li>\n<li>自动提交<br>  – 主动推送<br>  – 自动推送<br>  – sitemap</li>\n</ul>\n</li>\n<li><h4 id=\"自动化提交\"><a href=\"#自动化提交\" class=\"headerlink\" title=\"自动化提交\"></a>自动化提交</h4><blockquote>\n<p>sitemap设置提交</p>\n</blockquote>\n<p> 在<strong>链接提交</strong>功能页。</p>\n<p> <img src=\"sitemap.png\" alt></p>\n<blockquote>\n<p>主动推送</p>\n</blockquote>\n<p> 在说明上有curl、post、php等几种方式，本人使用curl + python + crontab(linux)的方式在服务器上做个定时自动推送。<br> python脚本：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    自动化推送blog的url到百度</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python auto_baidu_push.py</span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/07/18&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@163.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">思路：</span><br><span class=\"line\">    获取blog全部的url，生成url.txt文本，使用baidu站点的curl命令进行数据自动化推送，删除url.txt文件。</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import os</span><br><span class=\"line\">import shutil</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 本机</span><br><span class=\"line\">HTML_REL_DIR = &apos;/Users/gaomingliang/github/myblog/pygo/public/articles&apos;</span><br><span class=\"line\"># 服务器</span><br><span class=\"line\"># HTML_REL_DIR = &apos;/opt/www/blog/articles&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PUSH_baidu_COMMAND = &apos;curl -H &quot;Content-Type:text/plain&quot; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?site=www.pygo2.cn&amp;token=VqQF08BReWjBB018&quot;&apos;</span><br><span class=\"line\">DOMAIN_TEPM = &apos;http://www.pygo2.cn/articles&apos;</span><br><span class=\"line\">URL_NAME = &apos;urls.txt&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_cur_dir():</span><br><span class=\"line\">    return os.path.abspath(os.path.dirname(__file__))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class BlogRequests(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.article_source = HTML_REL_DIR</span><br><span class=\"line\">        self.cur_dir = get_cur_dir()</span><br><span class=\"line\"></span><br><span class=\"line\">    def collect_codes(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get all article codes</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        return os.listdir(self.article_source)</span><br><span class=\"line\"></span><br><span class=\"line\">    def generator_url_text(self):</span><br><span class=\"line\">        all_codes = self.collect_codes()</span><br><span class=\"line\">        if not all_codes:</span><br><span class=\"line\">            print &apos;============== not codes&apos;</span><br><span class=\"line\">            return False</span><br><span class=\"line\"></span><br><span class=\"line\">        url_file = os.path.join(self.cur_dir, URL_NAME)</span><br><span class=\"line\">        if not os.path.exists(url_file):</span><br><span class=\"line\">            fd = open(url_file, mode=&quot;w&quot;)</span><br><span class=\"line\">            fd.close()</span><br><span class=\"line\"></span><br><span class=\"line\">        with open(url_file, &apos;w&apos;) as f:</span><br><span class=\"line\">            for code in all_codes:</span><br><span class=\"line\">                url = DOMAIN_TEPM + &apos;/%s/&apos; % code</span><br><span class=\"line\">                f.write(url)</span><br><span class=\"line\">                # 换行符</span><br><span class=\"line\">                f.write(&apos;\\n&apos;)</span><br><span class=\"line\">        return url_file</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        url_file = self.generator_url_text()</span><br><span class=\"line\">        if url_file:</span><br><span class=\"line\">            os.system(PUSH_baidu_COMMAND)</span><br><span class=\"line\">        print &apos;-------------end-------------&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    br = BlogRequests()</span><br><span class=\"line\">    br.run()</span><br></pre></td></tr></table></figure>\n<p> linux服务器上的crontab：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 23 * * * python2 /home/mingliang.gao/crontab/auto_baidu_push.py</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><font size=\"6.5\" color=\"red\">不积跬步,无以至千里;不积小流,无以成江海。</font>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>博客运行有一年多了，之前写了关于<strong><em>google搜索</em></strong>与<strong><em>网站SEO</em></strong>优化相关的内容，希望自己的博客在<strong><em>baidu</em></strong>搜索上也可以排名，但是还不想花钱，只好通过技术来解决这个难题了。<br>优化了<strong><em>baidu SEO</em></strong>还可以装13，通过搜索就可以搜索到你博客的内容，带来了流量，在准备弄个广告位进行赚点外快，何乐而不为。</p>\n          </div>\n<p><img src=\"/images/article_seo_baidu.jpg\" alt></p>","more":"<hr>\n\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文讲解实现对baidu搜索引擎对网站的搜索优化，<font size=\"3\" color=\"red\">Hexo+Next搜索优化教程第三篇，之前已经写了关于google搜索以及blog本身优化的文章，欢迎查阅</font>。</p>\n<ol>\n<li><h4 id=\"安装hexo-generator-sitemap\"><a href=\"#安装hexo-generator-sitemap\" class=\"headerlink\" title=\"安装hexo-generator-sitemap\"></a>安装hexo-generator-sitemap</h4><p> 在blog根目录，执行一下命令：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p> 在blog/public目录下会自动生产一个baidusitemap.xml文件，里面的内容不用多说了，都是blog的url信息。</p>\n</li>\n<li><h4 id=\"添加蜘蛛协议\"><a href=\"#添加蜘蛛协议\" class=\"headerlink\" title=\"添加蜘蛛协议\"></a>添加蜘蛛协议</h4><p> 打开blog/source目录下的robots.txt文件，最后一行，也就是Sitemap下添加以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sitemap: https://pygo2.cn/baidusitemap.xml</span><br></pre></td></tr></table></figure>\n<p> <strong><em>Allow、Disallow</em></strong>之前已经解释过了，不过看英语也知道啥意思了：<strong><em>Allow</em></strong>字段的值即为允许搜索引擎爬区的内容；<strong><em>Disallow</em></strong>就是不允许搜索引擎爬区的内容。<br> 示例：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /articles/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: http://pygp2.cn/sitemap.xml</span><br><span class=\"line\">Sitemap: http://pygp2.cn/baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"baidu站长设置\"><a href=\"#baidu站长设置\" class=\"headerlink\" title=\"baidu站长设置\"></a>baidu站长设置</h4><p> 前提：需要一个baidu账号，没有的请自行注册。</p>\n<blockquote>\n<p>打开baidu站长（<a href=\"https://ziyuan.baidu.com/linksubmit/index）\" target=\"_blank\" rel=\"noopener\">https://ziyuan.baidu.com/linksubmit/index）</a></p>\n</blockquote>\n<p> <img src=\"baidu_zhandian.png\" alt></p>\n<blockquote>\n<p>验证baidu账号信息</p>\n</blockquote>\n<p> <img src=\"baidu_xinxi.png\" alt></p>\n<blockquote>\n<p>填写站点相关信息并验证</p>\n</blockquote>\n<p> <img src=\"baidu_site_1.png\" style=\"border:1.5px solid blue\" alt=\"输入网站\"></p>\n<p> <img src=\"baidu_site_2.png\" style=\"border:1.5px solid blue\" alt=\"站点属性\"></p>\n<p> <img src=\"baidu_site_3.png\" style=\"border:1.5px solid blue\" alt=\"验证网站\"></p>\n<p> 网站验证有三种方式：</p>\n<ul>\n<li>文件验证</li>\n<li>html验证</li>\n<li><p>CNAME验证<br>在这里采用html验证的方式，将以下代码放到blog/source/root.html文件的head标签内，然后再执行<strong><em>hexo clean &amp;&amp; hexo g -d</em></strong>命令，重新生成blog。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;baidu-site-verification&quot; content=&quot;3T5rDqaWUL&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<p>因为本人网站是自定义的一个root.html域名首页，如果不是把以上代码添加到blog/themes/layout/_partials/head.swig内即可。</p>\n<blockquote>\n<p>链接提交</p>\n</blockquote>\n<p>进入到链接提交功能。</p>\n<p><img src=\"baidu_link_commit.png\" alt></p>\n<blockquote>\n<p>选择链接提交的方式</p>\n</blockquote>\n<p>链接方式两种：</p>\n</li>\n<li>手动提送</li>\n<li>自动提交<br>  – 主动推送<br>  – 自动推送<br>  – sitemap</li>\n</ul>\n</li>\n<li><h4 id=\"自动化提交\"><a href=\"#自动化提交\" class=\"headerlink\" title=\"自动化提交\"></a>自动化提交</h4><blockquote>\n<p>sitemap设置提交</p>\n</blockquote>\n<p> 在<strong>链接提交</strong>功能页。</p>\n<p> <img src=\"sitemap.png\" alt></p>\n<blockquote>\n<p>主动推送</p>\n</blockquote>\n<p> 在说明上有curl、post、php等几种方式，本人使用curl + python + crontab(linux)的方式在服务器上做个定时自动推送。<br> python脚本：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    自动化推送blog的url到百度</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python auto_baidu_push.py</span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/07/18&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@163.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">思路：</span><br><span class=\"line\">    获取blog全部的url，生成url.txt文本，使用baidu站点的curl命令进行数据自动化推送，删除url.txt文件。</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import os</span><br><span class=\"line\">import shutil</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 本机</span><br><span class=\"line\">HTML_REL_DIR = &apos;/Users/gaomingliang/github/myblog/pygo/public/articles&apos;</span><br><span class=\"line\"># 服务器</span><br><span class=\"line\"># HTML_REL_DIR = &apos;/opt/www/blog/articles&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PUSH_baidu_COMMAND = &apos;curl -H &quot;Content-Type:text/plain&quot; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?site=www.pygo2.cn&amp;token=VqQF08BReWjBB018&quot;&apos;</span><br><span class=\"line\">DOMAIN_TEPM = &apos;http://www.pygo2.cn/articles&apos;</span><br><span class=\"line\">URL_NAME = &apos;urls.txt&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_cur_dir():</span><br><span class=\"line\">    return os.path.abspath(os.path.dirname(__file__))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class BlogRequests(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.article_source = HTML_REL_DIR</span><br><span class=\"line\">        self.cur_dir = get_cur_dir()</span><br><span class=\"line\"></span><br><span class=\"line\">    def collect_codes(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get all article codes</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        return os.listdir(self.article_source)</span><br><span class=\"line\"></span><br><span class=\"line\">    def generator_url_text(self):</span><br><span class=\"line\">        all_codes = self.collect_codes()</span><br><span class=\"line\">        if not all_codes:</span><br><span class=\"line\">            print &apos;============== not codes&apos;</span><br><span class=\"line\">            return False</span><br><span class=\"line\"></span><br><span class=\"line\">        url_file = os.path.join(self.cur_dir, URL_NAME)</span><br><span class=\"line\">        if not os.path.exists(url_file):</span><br><span class=\"line\">            fd = open(url_file, mode=&quot;w&quot;)</span><br><span class=\"line\">            fd.close()</span><br><span class=\"line\"></span><br><span class=\"line\">        with open(url_file, &apos;w&apos;) as f:</span><br><span class=\"line\">            for code in all_codes:</span><br><span class=\"line\">                url = DOMAIN_TEPM + &apos;/%s/&apos; % code</span><br><span class=\"line\">                f.write(url)</span><br><span class=\"line\">                # 换行符</span><br><span class=\"line\">                f.write(&apos;\\n&apos;)</span><br><span class=\"line\">        return url_file</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        url_file = self.generator_url_text()</span><br><span class=\"line\">        if url_file:</span><br><span class=\"line\">            os.system(PUSH_baidu_COMMAND)</span><br><span class=\"line\">        print &apos;-------------end-------------&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    br = BlogRequests()</span><br><span class=\"line\">    br.run()</span><br></pre></td></tr></table></figure>\n<p> linux服务器上的crontab：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 23 * * * python2 /home/mingliang.gao/crontab/auto_baidu_push.py</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><font size=\"6.5\" color=\"red\">不积跬步,无以至千里;不积小流,无以成江海。</font>"},{"title":"Hexo+Next搭建属于自己的Blog","comments":0,"desc":"基于Hexo+Next搭建属于自己的Blog，基础环境搭建学习","keywords":"hexo, next, Hexo, 博客, blog","abbrlink":59864,"date":"2018-10-22T15:03:42.000Z","updated":"2018-10-22T15:03:42.000Z","_content":"\n### 简介\n{% note success %}\nHexo + Next + MarkDown 完美打造属于Blog，只属于你自己的哦！！！\n{% endnote %}\n\n***<font color=\"#dd0000\" size=\"5\">FROM ZERO TO ALL</font>***\n\n### 前言\n\n从GIS跳跃到Python开发之后，一直梦想着有自己的一个blog，前不久机缘巧合解决问题的时候，发现作者的blog网站正是我心中向往的那种样式。没错，就是Hexo + Next（footer有版权声明，易发现）。说搞就搞，折腾了好几天，终于实现了，虽然路程有点长，但是看着自己亲手搭建的blog，心中还是无比喜悦。既然有了属于自己的一片天地，那就将知识***share***出来。\n\n<!--more-->\n<hr />\n\n### 环境\n\n| id  |     name     | version | remark   |\n|:---:|:------------:|:-------:| :--------: |\n|  1  |     system     | MacOs  | 系统版本 |\n\n### 正文\n\n    三步走。\n\n#### 一步：hexo安装\n\n首先查看自己电脑是否安装nodejs、git，如果已经安装请忽略nodejs、git的安装步骤，查看方式（控制台）：\n```\nnode -v     查看nodejs版本\nwhich git   查看环境变量是否有无git命令\nwhich brew  查看机子是否含有brew命令\n```\n> brew\n\n- 简述：MacOs开发必备工具，类似于pip等。\n- 功能：Mac软件管理工具。\n- 安装：\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n> nodejs\n\n- 简述：安装nodejs（nodejs不了解的可以去百度一下，哈哈），安装完nodejs，npm会随nodejs一起安装。\n- 功能：npm包管理工具。\n- 安装：\n```\nbrew install node\n```\n> git\n\n- 简述：安装git工具，主要用户项目的发布、管理等。\n- 功能：项目管理工具。\n- 安装\n```\nbrew install git\n```\n\n> hexo\n\n- 简述：Hexo是一个快速、简洁且高效的博客框架，基于nodejs运行，利用Markdown解析文章。\n- 功能：博客框架。\n- 安装\n```\nnpm install -g hexo-cli\n```\n\n#### 二步：启动server\n\n> 新建myblog文件夹\n\n在指定文件夹中执行初始化命令，命令会根据传的参数进行初始化工作。\n```\ncd ~/github/myblog\nhexo init PyGo\n```\n![hexo_next_init](hexo_next_init.png)\n\n> 生产静态文件\n\n生产web网站的静态网页。\n```\nhexo g\n```\n> 启动server服务\n\n启动server。\n```\nhexo s\n```\n![hexo_next_server](hexo_next_server.gif)\n浏览器中访问 http://localhost:4000/ ，就可以看到基于Hexo的默认主题的原型。\n![hexo_next_server](hexo_next_server.png)\n\n#### 三步：更换主题Next\n\n> 下载主题\n\n在blog目录，执行以下命令下载Next源文件。\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n> 更改配置\n\n下载完成后，打开blog目录下的_config.yml文件，搜索关键：***theme***，更改代码如下：\n```\ntheme: next\n```\n\n> 重启服务\n停止服务（ctrl+c），重新开启服务，刷新页面。\n![hexo_next](hexo_next.png)\n\n### 链接\n\n- Hexo官网：https://hexo.io/zh-cn/docs/index.html\n- 主题地址：https://hexo.io/themes/\n- Next官方：https://theme-next.org/\n\n在hexo主题官方地址有很多theme，根据自己的喜欢选取，个人觉得***Next***主题比较整洁，黑白色style上比较简单。\n\n### 注意\n\n在*** Hexo && Next ***的配置和设置文件中，一定要保留一个***英文空格***，没留空格会导致出问题。\n\n### 感谢\n    感谢Hexo开发者，感谢Next主题开发者，让我拥有了自己第一个Blog。\n\n希望自己可以在技术上继续走下去，为自己打***CALL***，后续也会继续写出Hexo命令的使用教程以及Next优化，欢迎大家***Share***。\n","source":"_posts/Hexo-Next搭建属于自己的Blog.md","raw":"---\ntitle: Hexo+Next搭建属于自己的Blog\ncomments: false\ndesc: 基于Hexo+Next搭建属于自己的Blog，基础环境搭建学习\ncategories:\n  - [Hexo]\ntags: [Hexo]\nkeywords: hexo, next, Hexo, 博客, blog\nabbrlink: 59864\ndate: 2018-10-22 23:03:42\nupdated: 2018-10-22 23:03:42\n---\n\n### 简介\n{% note success %}\nHexo + Next + MarkDown 完美打造属于Blog，只属于你自己的哦！！！\n{% endnote %}\n\n***<font color=\"#dd0000\" size=\"5\">FROM ZERO TO ALL</font>***\n\n### 前言\n\n从GIS跳跃到Python开发之后，一直梦想着有自己的一个blog，前不久机缘巧合解决问题的时候，发现作者的blog网站正是我心中向往的那种样式。没错，就是Hexo + Next（footer有版权声明，易发现）。说搞就搞，折腾了好几天，终于实现了，虽然路程有点长，但是看着自己亲手搭建的blog，心中还是无比喜悦。既然有了属于自己的一片天地，那就将知识***share***出来。\n\n<!--more-->\n<hr />\n\n### 环境\n\n| id  |     name     | version | remark   |\n|:---:|:------------:|:-------:| :--------: |\n|  1  |     system     | MacOs  | 系统版本 |\n\n### 正文\n\n    三步走。\n\n#### 一步：hexo安装\n\n首先查看自己电脑是否安装nodejs、git，如果已经安装请忽略nodejs、git的安装步骤，查看方式（控制台）：\n```\nnode -v     查看nodejs版本\nwhich git   查看环境变量是否有无git命令\nwhich brew  查看机子是否含有brew命令\n```\n> brew\n\n- 简述：MacOs开发必备工具，类似于pip等。\n- 功能：Mac软件管理工具。\n- 安装：\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n> nodejs\n\n- 简述：安装nodejs（nodejs不了解的可以去百度一下，哈哈），安装完nodejs，npm会随nodejs一起安装。\n- 功能：npm包管理工具。\n- 安装：\n```\nbrew install node\n```\n> git\n\n- 简述：安装git工具，主要用户项目的发布、管理等。\n- 功能：项目管理工具。\n- 安装\n```\nbrew install git\n```\n\n> hexo\n\n- 简述：Hexo是一个快速、简洁且高效的博客框架，基于nodejs运行，利用Markdown解析文章。\n- 功能：博客框架。\n- 安装\n```\nnpm install -g hexo-cli\n```\n\n#### 二步：启动server\n\n> 新建myblog文件夹\n\n在指定文件夹中执行初始化命令，命令会根据传的参数进行初始化工作。\n```\ncd ~/github/myblog\nhexo init PyGo\n```\n![hexo_next_init](hexo_next_init.png)\n\n> 生产静态文件\n\n生产web网站的静态网页。\n```\nhexo g\n```\n> 启动server服务\n\n启动server。\n```\nhexo s\n```\n![hexo_next_server](hexo_next_server.gif)\n浏览器中访问 http://localhost:4000/ ，就可以看到基于Hexo的默认主题的原型。\n![hexo_next_server](hexo_next_server.png)\n\n#### 三步：更换主题Next\n\n> 下载主题\n\n在blog目录，执行以下命令下载Next源文件。\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n> 更改配置\n\n下载完成后，打开blog目录下的_config.yml文件，搜索关键：***theme***，更改代码如下：\n```\ntheme: next\n```\n\n> 重启服务\n停止服务（ctrl+c），重新开启服务，刷新页面。\n![hexo_next](hexo_next.png)\n\n### 链接\n\n- Hexo官网：https://hexo.io/zh-cn/docs/index.html\n- 主题地址：https://hexo.io/themes/\n- Next官方：https://theme-next.org/\n\n在hexo主题官方地址有很多theme，根据自己的喜欢选取，个人觉得***Next***主题比较整洁，黑白色style上比较简单。\n\n### 注意\n\n在*** Hexo && Next ***的配置和设置文件中，一定要保留一个***英文空格***，没留空格会导致出问题。\n\n### 感谢\n    感谢Hexo开发者，感谢Next主题开发者，让我拥有了自己第一个Blog。\n\n希望自己可以在技术上继续走下去，为自己打***CALL***，后续也会继续写出Hexo命令的使用教程以及Next优化，欢迎大家***Share***。\n","slug":"Hexo-Next搭建属于自己的Blog","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rl0029tabjnukri6pm","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <p>Hexo + Next + MarkDown 完美打造属于Blog，只属于你自己的哦！！！</p>\n          </div>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">FROM ZERO TO ALL</font></em></strong></p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>从GIS跳跃到Python开发之后，一直梦想着有自己的一个blog，前不久机缘巧合解决问题的时候，发现作者的blog网站正是我心中向往的那种样式。没错，就是Hexo + Next（footer有版权声明，易发现）。说搞就搞，折腾了好几天，终于实现了，虽然路程有点长，但是看着自己亲手搭建的blog，心中还是无比喜悦。既然有了属于自己的一片天地，那就将知识<strong><em>share</em></strong>出来。</p>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">system</td>\n<td style=\"text-align:center\">MacOs</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><pre><code>三步走。\n</code></pre><h4 id=\"一步：hexo安装\"><a href=\"#一步：hexo安装\" class=\"headerlink\" title=\"一步：hexo安装\"></a>一步：hexo安装</h4><p>首先查看自己电脑是否安装nodejs、git，如果已经安装请忽略nodejs、git的安装步骤，查看方式（控制台）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v     查看nodejs版本</span><br><span class=\"line\">which git   查看环境变量是否有无git命令</span><br><span class=\"line\">which brew  查看机子是否含有brew命令</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>brew</p>\n</blockquote>\n<ul>\n<li>简述：MacOs开发必备工具，类似于pip等。</li>\n<li>功能：Mac软件管理工具。</li>\n<li>安装：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>nodejs</p>\n</blockquote>\n<ul>\n<li>简述：安装nodejs（nodejs不了解的可以去百度一下，哈哈），安装完nodejs，npm会随nodejs一起安装。</li>\n<li>功能：npm包管理工具。</li>\n<li>安装：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>git</p>\n</blockquote>\n<ul>\n<li>简述：安装git工具，主要用户项目的发布、管理等。</li>\n<li>功能：项目管理工具。</li>\n<li>安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>hexo</p>\n</blockquote>\n<ul>\n<li>简述：Hexo是一个快速、简洁且高效的博客框架，基于nodejs运行，利用Markdown解析文章。</li>\n<li>功能：博客框架。</li>\n<li>安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"二步：启动server\"><a href=\"#二步：启动server\" class=\"headerlink\" title=\"二步：启动server\"></a>二步：启动server</h4><blockquote>\n<p>新建myblog文件夹</p>\n</blockquote>\n<p>在指定文件夹中执行初始化命令，命令会根据传的参数进行初始化工作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/github/myblog</span><br><span class=\"line\">hexo init PyGo</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"hexo_next_init.png\" alt=\"hexo_next_init\"></p>\n<blockquote>\n<p>生产静态文件</p>\n</blockquote>\n<p>生产web网站的静态网页。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>启动server服务</p>\n</blockquote>\n<p>启动server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"hexo_next_server.gif\" alt=\"hexo_next_server\"><br>浏览器中访问 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> ，就可以看到基于Hexo的默认主题的原型。<br><img src=\"hexo_next_server.png\" alt=\"hexo_next_server\"></p>\n<h4 id=\"三步：更换主题Next\"><a href=\"#三步：更换主题Next\" class=\"headerlink\" title=\"三步：更换主题Next\"></a>三步：更换主题Next</h4><blockquote>\n<p>下载主题</p>\n</blockquote>\n<p>在blog目录，执行以下命令下载Next源文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>更改配置</p>\n</blockquote>\n<p>下载完成后，打开blog目录下的_config.yml文件，搜索关键：<strong><em>theme</em></strong>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>重启服务<br>停止服务（ctrl+c），重新开启服务，刷新页面。<br><img src=\"hexo_next.png\" alt=\"hexo_next\"></p>\n</blockquote>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><ul>\n<li>Hexo官网：<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/index.html</a></li>\n<li>主题地址：<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></li>\n<li>Next官方：<a href=\"https://theme-next.org/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/</a></li>\n</ul>\n<p>在hexo主题官方地址有很多theme，根据自己的喜欢选取，个人觉得<strong><em>Next</em></strong>主题比较整洁，黑白色style上比较简单。</p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>在<strong><em> Hexo &amp;&amp; Next </em></strong>的配置和设置文件中，一定要保留一个<strong><em>英文空格</em></strong>，没留空格会导致出问题。</p>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><pre><code>感谢Hexo开发者，感谢Next主题开发者，让我拥有了自己第一个Blog。\n</code></pre><p>希望自己可以在技术上继续走下去，为自己打<strong><em>CALL</em></strong>，后续也会继续写出Hexo命令的使用教程以及Next优化，欢迎大家<strong><em>Share</em></strong>。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <p>Hexo + Next + MarkDown 完美打造属于Blog，只属于你自己的哦！！！</p>\n          </div>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">FROM ZERO TO ALL</font></em></strong></p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>从GIS跳跃到Python开发之后，一直梦想着有自己的一个blog，前不久机缘巧合解决问题的时候，发现作者的blog网站正是我心中向往的那种样式。没错，就是Hexo + Next（footer有版权声明，易发现）。说搞就搞，折腾了好几天，终于实现了，虽然路程有点长，但是看着自己亲手搭建的blog，心中还是无比喜悦。既然有了属于自己的一片天地，那就将知识<strong><em>share</em></strong>出来。</p>","more":"<hr>\n\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">system</td>\n<td style=\"text-align:center\">MacOs</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><pre><code>三步走。\n</code></pre><h4 id=\"一步：hexo安装\"><a href=\"#一步：hexo安装\" class=\"headerlink\" title=\"一步：hexo安装\"></a>一步：hexo安装</h4><p>首先查看自己电脑是否安装nodejs、git，如果已经安装请忽略nodejs、git的安装步骤，查看方式（控制台）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v     查看nodejs版本</span><br><span class=\"line\">which git   查看环境变量是否有无git命令</span><br><span class=\"line\">which brew  查看机子是否含有brew命令</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>brew</p>\n</blockquote>\n<ul>\n<li>简述：MacOs开发必备工具，类似于pip等。</li>\n<li>功能：Mac软件管理工具。</li>\n<li>安装：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>nodejs</p>\n</blockquote>\n<ul>\n<li>简述：安装nodejs（nodejs不了解的可以去百度一下，哈哈），安装完nodejs，npm会随nodejs一起安装。</li>\n<li>功能：npm包管理工具。</li>\n<li>安装：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>git</p>\n</blockquote>\n<ul>\n<li>简述：安装git工具，主要用户项目的发布、管理等。</li>\n<li>功能：项目管理工具。</li>\n<li>安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>hexo</p>\n</blockquote>\n<ul>\n<li>简述：Hexo是一个快速、简洁且高效的博客框架，基于nodejs运行，利用Markdown解析文章。</li>\n<li>功能：博客框架。</li>\n<li>安装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"二步：启动server\"><a href=\"#二步：启动server\" class=\"headerlink\" title=\"二步：启动server\"></a>二步：启动server</h4><blockquote>\n<p>新建myblog文件夹</p>\n</blockquote>\n<p>在指定文件夹中执行初始化命令，命令会根据传的参数进行初始化工作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/github/myblog</span><br><span class=\"line\">hexo init PyGo</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"hexo_next_init.png\" alt=\"hexo_next_init\"></p>\n<blockquote>\n<p>生产静态文件</p>\n</blockquote>\n<p>生产web网站的静态网页。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>启动server服务</p>\n</blockquote>\n<p>启动server。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"hexo_next_server.gif\" alt=\"hexo_next_server\"><br>浏览器中访问 <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a> ，就可以看到基于Hexo的默认主题的原型。<br><img src=\"hexo_next_server.png\" alt=\"hexo_next_server\"></p>\n<h4 id=\"三步：更换主题Next\"><a href=\"#三步：更换主题Next\" class=\"headerlink\" title=\"三步：更换主题Next\"></a>三步：更换主题Next</h4><blockquote>\n<p>下载主题</p>\n</blockquote>\n<p>在blog目录，执行以下命令下载Next源文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>更改配置</p>\n</blockquote>\n<p>下载完成后，打开blog目录下的_config.yml文件，搜索关键：<strong><em>theme</em></strong>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>重启服务<br>停止服务（ctrl+c），重新开启服务，刷新页面。<br><img src=\"hexo_next.png\" alt=\"hexo_next\"></p>\n</blockquote>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><ul>\n<li>Hexo官网：<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/index.html</a></li>\n<li>主题地址：<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/</a></li>\n<li>Next官方：<a href=\"https://theme-next.org/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/</a></li>\n</ul>\n<p>在hexo主题官方地址有很多theme，根据自己的喜欢选取，个人觉得<strong><em>Next</em></strong>主题比较整洁，黑白色style上比较简单。</p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>在<strong><em> Hexo &amp;&amp; Next </em></strong>的配置和设置文件中，一定要保留一个<strong><em>英文空格</em></strong>，没留空格会导致出问题。</p>\n<h3 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h3><pre><code>感谢Hexo开发者，感谢Next主题开发者，让我拥有了自己第一个Blog。\n</code></pre><p>希望自己可以在技术上继续走下去，为自己打<strong><em>CALL</em></strong>，后续也会继续写出Hexo命令的使用教程以及Next优化，欢迎大家<strong><em>Share</em></strong>。</p>"},{"title":"Hexo+Next添加TagCloud","comments":0,"desc":"给blog添加TagCloud词云插件，基于Hexo+Next","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, TagCloud, 词云","abbrlink":43239,"date":"2019-03-28T11:29:01.000Z","updated":"2019-04-03T11:29:01.000Z","_content":"\n![](/images/article_tagcloud.gif)\n\n#### 背景\n{% note success %}\n偶然机会在一篇博客上发现TagCloud（启明博客忘记了），效果觉得不错，如上图，而且点击tag直接跳转到对应tag的文章列表，决定在自己的博客中也加上TagClooud。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 版本\n\n| id  |     name     | version | remark   |\n|:---:|:------------:|:-------:| :--------: |\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n\n#### 正文\n\n实现TagCloud主要用到了***hexo-tag-cloud***插件，下面详细介绍一下实现过程。\n\n> 安装hexo-tag-cloud\n在blog根目录，执行以下命令：\n```\nnpm install hexo-tag-cloud --save\n```\n执行完之后，在根目录的***package.json***文件中会自动加入安装的插件以及对应版本。\n\n> sidebar.swig文件修改\n\n找到***blog/theme/next/layout/_custom/sidebar.swig***文件，添加下列代码到文件中。\n```\n{% if site.tags.length > 1 %}\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"/js/tagcloud.js\"></script>\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"/js/tagcanvas.js\"></script>\n<div class=\"widget-wrap\">\n    <h4 class=\"widget-title\" style=\"font-size:20px;text-align:center;color:#0080FF;margin:20px 0 0px;\">Tag Cloud</h4>\n    <div id=\"myCanvasContainer\" class=\"widget tagcloud\" style=\"font-size:20px;\">\n        <canvas width=\"220\" height=\"200\" id=\"resCanvas\" style=\"width=100%\">\n            {{ list_tags() }}\n        </canvas>\n    </div>\n</div>\n{% endif %}\n```\n也可以自定义Tag Cloud标题，加入自定义的样式。\n\n> 重启server\n\n执行完1、2步之后，需要重启服务，刷新主页，在sidebar处就会看见TagCloud。\n```\nhexo g\nhexo s\n```\n\n> Next配置文件\n\n在Next主题的_config.yml中，搜索***tagcloud***，发现一下代码：\n```\n# TagCloud settings for tags page.\ntagcloud:\n  # If true, font size, font color and amount of tags can be customized\n  enable: true\n\n  # All values below are same as default, change them by yourself\n  min: 12 # min font size in px\n  max: 36 # max font size in px\n  start: \"#ccc\" # start color (hex, rgba, hsla or color keywords)\n  end: \"#111\" # end color (hex, rgba, hsla or color keywords)\n  amount: 80 # amount of tags, chage it if you have more than 200 tags\n```\n看配置信息是TagCloud的相关配置信息，但是配置了之后，我发现TagCloud没有做出相应的变化。然而你打开自己的tags标签页，就会发现配置的在这里生效了。\n\n#### 样式\n\n生成tag cloud之后，样式比较难看，但是在custome.styl文件加入自定义的样式，不生效。。。。。。郁闷，于是查看源码。\ntagcloud.js：blog/node_modules/hexo-tag-cloud/lib/tagcloud.js\ntagcanvas.js：blog/node_modules/hexo-tag-cloud/lib/tagcanvas.js\n查看tagcloud.js文件，里面有需要的样式参数，修改参数重启服务即可。\n我的自定义样式如下：\n```\n\nwindow.onload = function() {\n    try {\n        TagCanvas.textFont = 'Brush Script MT';\n        TagCanvas.textColour = 'black';\n        TagCanvas.textHeight = 16;\n        TagCanvas.outlineMethod = 'block';\n        TagCanvas.outlineColour = 'cornflowerblue';\n        TagCanvas.maxSpeed = 0.03;\n        TagCanvas.minBrightness = 0.2;\n        TagCanvas.depth = 0.92;\n        TagCanvas.pulsateTo = 0.6;\n        TagCanvas.initial = [0.1,-0.1];\n        TagCanvas.decel = 0.98;\n        TagCanvas.reverse = true;\n        TagCanvas.hideTags = false;\n        TagCanvas.shadow = '#ccf';\n        TagCanvas.shadowBlur = 3;\n        TagCanvas.weight = false;\n        TagCanvas.imageScale = null;\n        TagCanvas.fadeIn = 1000;\n        TagCanvas.clickToFront = 600;\n        TagCanvas.Start('resCanvas');\n        TagCanvas.tc['resCanvas'].Wheel(false)\n    } catch(e) {\n        // console.log(e);\n        document.getElementById('myCanvasContainer').style.display = 'none';\n    }\n};\n```\nconsole.log我给注释掉了，这样控制台就看不到了。\n\n<font color=\"red\" size=\"5\">记住，要重启服务。</font>\n\n#### 学习\n\nhexo-tag-cloud官方：https://github.com/MikeCoder/hexo-tag-cloud\n","source":"_posts/Hexo-Next添加TagCloud.md","raw":"---\ntitle: Hexo+Next添加TagCloud\ncomments: false\ndesc: 给blog添加TagCloud词云插件，基于Hexo+Next\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, TagCloud, 词云\nabbrlink: 43239\ndate: 2019-03-28 19:29:01\nupdated: 2019-04-03 19:29:01\n---\n\n![](/images/article_tagcloud.gif)\n\n#### 背景\n{% note success %}\n偶然机会在一篇博客上发现TagCloud（启明博客忘记了），效果觉得不错，如上图，而且点击tag直接跳转到对应tag的文章列表，决定在自己的博客中也加上TagClooud。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 版本\n\n| id  |     name     | version | remark   |\n|:---:|:------------:|:-------:| :--------: |\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n\n#### 正文\n\n实现TagCloud主要用到了***hexo-tag-cloud***插件，下面详细介绍一下实现过程。\n\n> 安装hexo-tag-cloud\n在blog根目录，执行以下命令：\n```\nnpm install hexo-tag-cloud --save\n```\n执行完之后，在根目录的***package.json***文件中会自动加入安装的插件以及对应版本。\n\n> sidebar.swig文件修改\n\n找到***blog/theme/next/layout/_custom/sidebar.swig***文件，添加下列代码到文件中。\n```\n{% if site.tags.length > 1 %}\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"/js/tagcloud.js\"></script>\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"/js/tagcanvas.js\"></script>\n<div class=\"widget-wrap\">\n    <h4 class=\"widget-title\" style=\"font-size:20px;text-align:center;color:#0080FF;margin:20px 0 0px;\">Tag Cloud</h4>\n    <div id=\"myCanvasContainer\" class=\"widget tagcloud\" style=\"font-size:20px;\">\n        <canvas width=\"220\" height=\"200\" id=\"resCanvas\" style=\"width=100%\">\n            {{ list_tags() }}\n        </canvas>\n    </div>\n</div>\n{% endif %}\n```\n也可以自定义Tag Cloud标题，加入自定义的样式。\n\n> 重启server\n\n执行完1、2步之后，需要重启服务，刷新主页，在sidebar处就会看见TagCloud。\n```\nhexo g\nhexo s\n```\n\n> Next配置文件\n\n在Next主题的_config.yml中，搜索***tagcloud***，发现一下代码：\n```\n# TagCloud settings for tags page.\ntagcloud:\n  # If true, font size, font color and amount of tags can be customized\n  enable: true\n\n  # All values below are same as default, change them by yourself\n  min: 12 # min font size in px\n  max: 36 # max font size in px\n  start: \"#ccc\" # start color (hex, rgba, hsla or color keywords)\n  end: \"#111\" # end color (hex, rgba, hsla or color keywords)\n  amount: 80 # amount of tags, chage it if you have more than 200 tags\n```\n看配置信息是TagCloud的相关配置信息，但是配置了之后，我发现TagCloud没有做出相应的变化。然而你打开自己的tags标签页，就会发现配置的在这里生效了。\n\n#### 样式\n\n生成tag cloud之后，样式比较难看，但是在custome.styl文件加入自定义的样式，不生效。。。。。。郁闷，于是查看源码。\ntagcloud.js：blog/node_modules/hexo-tag-cloud/lib/tagcloud.js\ntagcanvas.js：blog/node_modules/hexo-tag-cloud/lib/tagcanvas.js\n查看tagcloud.js文件，里面有需要的样式参数，修改参数重启服务即可。\n我的自定义样式如下：\n```\n\nwindow.onload = function() {\n    try {\n        TagCanvas.textFont = 'Brush Script MT';\n        TagCanvas.textColour = 'black';\n        TagCanvas.textHeight = 16;\n        TagCanvas.outlineMethod = 'block';\n        TagCanvas.outlineColour = 'cornflowerblue';\n        TagCanvas.maxSpeed = 0.03;\n        TagCanvas.minBrightness = 0.2;\n        TagCanvas.depth = 0.92;\n        TagCanvas.pulsateTo = 0.6;\n        TagCanvas.initial = [0.1,-0.1];\n        TagCanvas.decel = 0.98;\n        TagCanvas.reverse = true;\n        TagCanvas.hideTags = false;\n        TagCanvas.shadow = '#ccf';\n        TagCanvas.shadowBlur = 3;\n        TagCanvas.weight = false;\n        TagCanvas.imageScale = null;\n        TagCanvas.fadeIn = 1000;\n        TagCanvas.clickToFront = 600;\n        TagCanvas.Start('resCanvas');\n        TagCanvas.tc['resCanvas'].Wheel(false)\n    } catch(e) {\n        // console.log(e);\n        document.getElementById('myCanvasContainer').style.display = 'none';\n    }\n};\n```\nconsole.log我给注释掉了，这样控制台就看不到了。\n\n<font color=\"red\" size=\"5\">记住，要重启服务。</font>\n\n#### 学习\n\nhexo-tag-cloud官方：https://github.com/MikeCoder/hexo-tag-cloud\n","slug":"Hexo-Next添加TagCloud","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ro002ctabjdv0oczob","content":"<p><img src=\"/images/article_tagcloud.gif\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>偶然机会在一篇博客上发现TagCloud（启明博客忘记了），效果觉得不错，如上图，而且点击tag直接跳转到对应tag的文章列表，决定在自己的博客中也加上TagClooud。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>实现TagCloud主要用到了<strong><em>hexo-tag-cloud</em></strong>插件，下面详细介绍一下实现过程。</p>\n<blockquote>\n<p>安装hexo-tag-cloud<br>在blog根目录，执行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>执行完之后，在根目录的<strong><em>package.json</em></strong>文件中会自动加入安装的插件以及对应版本。</p>\n<blockquote>\n<p>sidebar.swig文件修改</p>\n</blockquote>\n<p>找到<strong><em>blog/theme/next/layout/_custom/sidebar.swig</em></strong>文件，添加下列代码到文件中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class=\"line\">    &lt;h4 class=&quot;widget-title&quot; style=&quot;font-size:20px;text-align:center;color:#0080FF;margin:20px 0 0px;&quot;&gt;Tag Cloud&lt;/h4&gt;</span><br><span class=\"line\">    &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot; style=&quot;font-size:20px;&quot;&gt;</span><br><span class=\"line\">        &lt;canvas width=&quot;220&quot; height=&quot;200&quot; id=&quot;resCanvas&quot; style=&quot;width=100%&quot;&gt;</span><br><span class=\"line\">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class=\"line\">        &lt;/canvas&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>也可以自定义Tag Cloud标题，加入自定义的样式。</p>\n<blockquote>\n<p>重启server</p>\n</blockquote>\n<p>执行完1、2步之后，需要重启服务，刷新主页，在sidebar处就会看见TagCloud。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next配置文件</p>\n</blockquote>\n<p>在Next主题的_config.yml中，搜索<strong><em>tagcloud</em></strong>，发现一下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># TagCloud settings for tags page.</span><br><span class=\"line\">tagcloud:</span><br><span class=\"line\">  # If true, font size, font color and amount of tags can be customized</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # All values below are same as default, change them by yourself</span><br><span class=\"line\">  min: 12 # min font size in px</span><br><span class=\"line\">  max: 36 # max font size in px</span><br><span class=\"line\">  start: &quot;#ccc&quot; # start color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  end: &quot;#111&quot; # end color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  amount: 80 # amount of tags, chage it if you have more than 200 tags</span><br></pre></td></tr></table></figure></p>\n<p>看配置信息是TagCloud的相关配置信息，但是配置了之后，我发现TagCloud没有做出相应的变化。然而你打开自己的tags标签页，就会发现配置的在这里生效了。</p>\n<h4 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h4><p>生成tag cloud之后，样式比较难看，但是在custome.styl文件加入自定义的样式，不生效。。。。。。郁闷，于是查看源码。<br>tagcloud.js：blog/node_modules/hexo-tag-cloud/lib/tagcloud.js<br>tagcanvas.js：blog/node_modules/hexo-tag-cloud/lib/tagcanvas.js<br>查看tagcloud.js文件，里面有需要的样式参数，修改参数重启服务即可。<br>我的自定义样式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">window.onload = function() &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        TagCanvas.textFont = &apos;Brush Script MT&apos;;</span><br><span class=\"line\">        TagCanvas.textColour = &apos;black&apos;;</span><br><span class=\"line\">        TagCanvas.textHeight = 16;</span><br><span class=\"line\">        TagCanvas.outlineMethod = &apos;block&apos;;</span><br><span class=\"line\">        TagCanvas.outlineColour = &apos;cornflowerblue&apos;;</span><br><span class=\"line\">        TagCanvas.maxSpeed = 0.03;</span><br><span class=\"line\">        TagCanvas.minBrightness = 0.2;</span><br><span class=\"line\">        TagCanvas.depth = 0.92;</span><br><span class=\"line\">        TagCanvas.pulsateTo = 0.6;</span><br><span class=\"line\">        TagCanvas.initial = [0.1,-0.1];</span><br><span class=\"line\">        TagCanvas.decel = 0.98;</span><br><span class=\"line\">        TagCanvas.reverse = true;</span><br><span class=\"line\">        TagCanvas.hideTags = false;</span><br><span class=\"line\">        TagCanvas.shadow = &apos;#ccf&apos;;</span><br><span class=\"line\">        TagCanvas.shadowBlur = 3;</span><br><span class=\"line\">        TagCanvas.weight = false;</span><br><span class=\"line\">        TagCanvas.imageScale = null;</span><br><span class=\"line\">        TagCanvas.fadeIn = 1000;</span><br><span class=\"line\">        TagCanvas.clickToFront = 600;</span><br><span class=\"line\">        TagCanvas.Start(&apos;resCanvas&apos;);</span><br><span class=\"line\">        TagCanvas.tc[&apos;resCanvas&apos;].Wheel(false)</span><br><span class=\"line\">    &#125; catch(e) &#123;</span><br><span class=\"line\">        // console.log(e);</span><br><span class=\"line\">        document.getElementById(&apos;myCanvasContainer&apos;).style.display = &apos;none&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>console.log我给注释掉了，这样控制台就看不到了。</p>\n<font color=\"red\" size=\"5\">记住，要重启服务。</font>\n\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><p>hexo-tag-cloud官方：<a href=\"https://github.com/MikeCoder/hexo-tag-cloud\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-tag-cloud</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_tagcloud.gif\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>偶然机会在一篇博客上发现TagCloud（启明博客忘记了），效果觉得不错，如上图，而且点击tag直接跳转到对应tag的文章列表，决定在自己的博客中也加上TagClooud。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>实现TagCloud主要用到了<strong><em>hexo-tag-cloud</em></strong>插件，下面详细介绍一下实现过程。</p>\n<blockquote>\n<p>安装hexo-tag-cloud<br>在blog根目录，执行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>执行完之后，在根目录的<strong><em>package.json</em></strong>文件中会自动加入安装的插件以及对应版本。</p>\n<blockquote>\n<p>sidebar.swig文件修改</p>\n</blockquote>\n<p>找到<strong><em>blog/theme/next/layout/_custom/sidebar.swig</em></strong>文件，添加下列代码到文件中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class=\"line\">    &lt;h4 class=&quot;widget-title&quot; style=&quot;font-size:20px;text-align:center;color:#0080FF;margin:20px 0 0px;&quot;&gt;Tag Cloud&lt;/h4&gt;</span><br><span class=\"line\">    &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot; style=&quot;font-size:20px;&quot;&gt;</span><br><span class=\"line\">        &lt;canvas width=&quot;220&quot; height=&quot;200&quot; id=&quot;resCanvas&quot; style=&quot;width=100%&quot;&gt;</span><br><span class=\"line\">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class=\"line\">        &lt;/canvas&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>也可以自定义Tag Cloud标题，加入自定义的样式。</p>\n<blockquote>\n<p>重启server</p>\n</blockquote>\n<p>执行完1、2步之后，需要重启服务，刷新主页，在sidebar处就会看见TagCloud。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Next配置文件</p>\n</blockquote>\n<p>在Next主题的_config.yml中，搜索<strong><em>tagcloud</em></strong>，发现一下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># TagCloud settings for tags page.</span><br><span class=\"line\">tagcloud:</span><br><span class=\"line\">  # If true, font size, font color and amount of tags can be customized</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\"></span><br><span class=\"line\">  # All values below are same as default, change them by yourself</span><br><span class=\"line\">  min: 12 # min font size in px</span><br><span class=\"line\">  max: 36 # max font size in px</span><br><span class=\"line\">  start: &quot;#ccc&quot; # start color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  end: &quot;#111&quot; # end color (hex, rgba, hsla or color keywords)</span><br><span class=\"line\">  amount: 80 # amount of tags, chage it if you have more than 200 tags</span><br></pre></td></tr></table></figure></p>\n<p>看配置信息是TagCloud的相关配置信息，但是配置了之后，我发现TagCloud没有做出相应的变化。然而你打开自己的tags标签页，就会发现配置的在这里生效了。</p>\n<h4 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h4><p>生成tag cloud之后，样式比较难看，但是在custome.styl文件加入自定义的样式，不生效。。。。。。郁闷，于是查看源码。<br>tagcloud.js：blog/node_modules/hexo-tag-cloud/lib/tagcloud.js<br>tagcanvas.js：blog/node_modules/hexo-tag-cloud/lib/tagcanvas.js<br>查看tagcloud.js文件，里面有需要的样式参数，修改参数重启服务即可。<br>我的自定义样式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">window.onload = function() &#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        TagCanvas.textFont = &apos;Brush Script MT&apos;;</span><br><span class=\"line\">        TagCanvas.textColour = &apos;black&apos;;</span><br><span class=\"line\">        TagCanvas.textHeight = 16;</span><br><span class=\"line\">        TagCanvas.outlineMethod = &apos;block&apos;;</span><br><span class=\"line\">        TagCanvas.outlineColour = &apos;cornflowerblue&apos;;</span><br><span class=\"line\">        TagCanvas.maxSpeed = 0.03;</span><br><span class=\"line\">        TagCanvas.minBrightness = 0.2;</span><br><span class=\"line\">        TagCanvas.depth = 0.92;</span><br><span class=\"line\">        TagCanvas.pulsateTo = 0.6;</span><br><span class=\"line\">        TagCanvas.initial = [0.1,-0.1];</span><br><span class=\"line\">        TagCanvas.decel = 0.98;</span><br><span class=\"line\">        TagCanvas.reverse = true;</span><br><span class=\"line\">        TagCanvas.hideTags = false;</span><br><span class=\"line\">        TagCanvas.shadow = &apos;#ccf&apos;;</span><br><span class=\"line\">        TagCanvas.shadowBlur = 3;</span><br><span class=\"line\">        TagCanvas.weight = false;</span><br><span class=\"line\">        TagCanvas.imageScale = null;</span><br><span class=\"line\">        TagCanvas.fadeIn = 1000;</span><br><span class=\"line\">        TagCanvas.clickToFront = 600;</span><br><span class=\"line\">        TagCanvas.Start(&apos;resCanvas&apos;);</span><br><span class=\"line\">        TagCanvas.tc[&apos;resCanvas&apos;].Wheel(false)</span><br><span class=\"line\">    &#125; catch(e) &#123;</span><br><span class=\"line\">        // console.log(e);</span><br><span class=\"line\">        document.getElementById(&apos;myCanvasContainer&apos;).style.display = &apos;none&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>console.log我给注释掉了，这样控制台就看不到了。</p>\n<font color=\"red\" size=\"5\">记住，要重启服务。</font>\n\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><p>hexo-tag-cloud官方：<a href=\"https://github.com/MikeCoder/hexo-tag-cloud\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-tag-cloud</a></p>"},{"title":"blog常用markdown语法模板记录","comments":0,"top":false,"desc":"blog常用语记录，主要用于markdown语法","abbrlink":57737,"date":"2018-10-23T11:18:28.000Z","updated":"2019-10-23T11:18:28.000Z","keywords":"hexo, Hexo, 常用语, markdown","_content":"\n{% cq %}\n主要用于记录我写博文常用的markdown语句\n{% endcq %}\n\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n### 三级标题\n\n#### 四级标题\n\n### 特殊语\n\n{% raw %}\n<div class=\"post_cus_note\">123</div>\n{% endraw %}\n\n\n> 效果\n\n<font color=\"red\" size=\"5\">***特殊语！！！***</font>\n<font size=\"4\" color=\"red\">***Schemes***</font>\n\n> 代码\n\n```\n<font color=\"red\" size=\"5\">***特殊语！！！***</font>\n```\n\n<!--more-->\n\n<hr />\n\n#### 超链接\n\n<a href=\"/articles/31494/\" target=\"_blank\" class=\"block_project_a\">outage-常用复杂sql记录</a>\n\n### 配置文件\n\n```\nHexo: blog/_config.yml\nNext: blog/theme/next/_config.yml\nmd template: blog/scaffolds/post.md\n```\n\n### 图片：\n\n> 效果\n\n<img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"/>\n\n> 代码\n\n```\n<img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"/>\n```\n\n### linux常用md结构\n{% code %}\n![](/images/article_linux_cd.png)\n\n{% note warning %}\n\n### 简介\n学习cd的用法【cd 目录】\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 介绍\n\n### 正文\n\n#### 格式\n\n#### 参数说明\n\n#### 常用命令\n\n### 说明\n\n### 补充\n\n### 学习\n\n{% endcode %}\n","source":"_posts/Hexo-blog常用语记录.md","raw":"---\ntitle: blog常用markdown语法模板记录\ncomments: false\ncategories:\n  - [杂七杂八]\ntop: false\ndesc: blog常用语记录，主要用于markdown语法\nabbrlink: 57737\ndate: 2018-10-23 19:18:28\nupdated: 2019-10-23 19:18:28\ntags: [Hexo]\nkeywords: hexo, Hexo, 常用语, markdown\n---\n\n{% cq %}\n主要用于记录我写博文常用的markdown语句\n{% endcq %}\n\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n\n### 三级标题\n\n#### 四级标题\n\n### 特殊语\n\n{% raw %}\n<div class=\"post_cus_note\">123</div>\n{% endraw %}\n\n\n> 效果\n\n<font color=\"red\" size=\"5\">***特殊语！！！***</font>\n<font size=\"4\" color=\"red\">***Schemes***</font>\n\n> 代码\n\n```\n<font color=\"red\" size=\"5\">***特殊语！！！***</font>\n```\n\n<!--more-->\n\n<hr />\n\n#### 超链接\n\n<a href=\"/articles/31494/\" target=\"_blank\" class=\"block_project_a\">outage-常用复杂sql记录</a>\n\n### 配置文件\n\n```\nHexo: blog/_config.yml\nNext: blog/theme/next/_config.yml\nmd template: blog/scaffolds/post.md\n```\n\n### 图片：\n\n> 效果\n\n<img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"/>\n\n> 代码\n\n```\n<img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"/>\n```\n\n### linux常用md结构\n{% code %}\n![](/images/article_linux_cd.png)\n\n{% note warning %}\n\n### 简介\n学习cd的用法【cd 目录】\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 介绍\n\n### 正文\n\n#### 格式\n\n#### 参数说明\n\n#### 常用命令\n\n### 说明\n\n### 补充\n\n### 学习\n\n{% endcode %}\n","slug":"Hexo-blog常用语记录","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rs002ftabjp6si2p8w","content":"<blockquote class=\"blockquote-center\"><p>主要用于记录我写博文常用的markdown语句</p>\n</blockquote>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h3 id=\"特殊语\"><a href=\"#特殊语\" class=\"headerlink\" title=\"特殊语\"></a>特殊语</h3>\n<div class=\"post_cus_note\">123</div>\n\n<blockquote>\n<p>效果</p>\n</blockquote>\n<font color=\"red\" size=\"5\"><strong><em>特殊语！！！</em></strong></font><br><font size=\"4\" color=\"red\"><strong><em>Schemes</em></strong></font>\n\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=&quot;red&quot; size=&quot;5&quot;&gt;***特殊语！！！***&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h4><p><a href=\"/articles/31494/\" target=\"_blank\" class=\"block_project_a\">outage-常用复杂sql记录</a></p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hexo: blog/_config.yml</span><br><span class=\"line\">Next: blog/theme/next/_config.yml</span><br><span class=\"line\">md template: blog/scaffolds/post.md</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片：\"><a href=\"#图片：\" class=\"headerlink\" title=\"图片：\"></a>图片：</h3><blockquote>\n<p>效果</p>\n</blockquote>\n<p><img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"></p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;article_hadoop.jpg&quot; style=&quot;border:1.5px solid blue&quot; width=&quot;750&quot; alt=&quot;图片说明&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux常用md结构\"><a href=\"#linux常用md结构\" class=\"headerlink\" title=\"linux常用md结构\"></a>linux常用md结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/images/article_linux_cd.png)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;note warning&quot;&gt;</span><br><span class=\"line\">            &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;学习cd的用法【cd 目录】&lt;/p&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\">&lt;hr /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### 介绍</span><br><span class=\"line\"></span><br><span class=\"line\">### 正文</span><br><span class=\"line\"></span><br><span class=\"line\">#### 格式</span><br><span class=\"line\"></span><br><span class=\"line\">#### 参数说明</span><br><span class=\"line\"></span><br><span class=\"line\">#### 常用命令</span><br><span class=\"line\"></span><br><span class=\"line\">### 说明</span><br><span class=\"line\"></span><br><span class=\"line\">### 补充</span><br><span class=\"line\"></span><br><span class=\"line\">### 学习</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>主要用于记录我写博文常用的markdown语句</p>\n</blockquote>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n\n<h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h3 id=\"特殊语\"><a href=\"#特殊语\" class=\"headerlink\" title=\"特殊语\"></a>特殊语</h3>\n<div class=\"post_cus_note\">123</div>\n\n<blockquote>\n<p>效果</p>\n</blockquote>\n<font color=\"red\" size=\"5\"><strong><em>特殊语！！！</em></strong></font><br><font size=\"4\" color=\"red\"><strong><em>Schemes</em></strong></font>\n\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=&quot;red&quot; size=&quot;5&quot;&gt;***特殊语！！！***&lt;/font&gt;</span><br></pre></td></tr></table></figure>","more":"<hr>\n\n<h4 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h4><p><a href=\"/articles/31494/\" target=\"_blank\" class=\"block_project_a\">outage-常用复杂sql记录</a></p>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hexo: blog/_config.yml</span><br><span class=\"line\">Next: blog/theme/next/_config.yml</span><br><span class=\"line\">md template: blog/scaffolds/post.md</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片：\"><a href=\"#图片：\" class=\"headerlink\" title=\"图片：\"></a>图片：</h3><blockquote>\n<p>效果</p>\n</blockquote>\n<p><img src=\"article_hadoop.jpg\" style=\"border:1.5px solid blue\" width=\"750\" alt=\"图片说明\"></p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;article_hadoop.jpg&quot; style=&quot;border:1.5px solid blue&quot; width=&quot;750&quot; alt=&quot;图片说明&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux常用md结构\"><a href=\"#linux常用md结构\" class=\"headerlink\" title=\"linux常用md结构\"></a>linux常用md结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/images/article_linux_cd.png)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;note warning&quot;&gt;</span><br><span class=\"line\">            &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;学习cd的用法【cd 目录】&lt;/p&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\">&lt;hr /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### 介绍</span><br><span class=\"line\"></span><br><span class=\"line\">### 正文</span><br><span class=\"line\"></span><br><span class=\"line\">#### 格式</span><br><span class=\"line\"></span><br><span class=\"line\">#### 参数说明</span><br><span class=\"line\"></span><br><span class=\"line\">#### 常用命令</span><br><span class=\"line\"></span><br><span class=\"line\">### 说明</span><br><span class=\"line\"></span><br><span class=\"line\">### 补充</span><br><span class=\"line\"></span><br><span class=\"line\">### 学习</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"tags与categories重构的教训","comments":0,"top":false,"desc":"tags与categories重构，导致一些问题以及修复方案","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, tags, categories, 404, not found, 页面, 多tags, 多categories","abbrlink":43145,"date":"2019-04-23T07:31:47.000Z","updated":"2019-04-23T07:31:47.000Z","_content":"\n![](/images/article_code.png)\n\n{% note success %}\n<font size=\"4\" color=\"red\">**问题简述**</font>\n博客已经托管在github有一段时间了，有天同事想看看，url发送给同事，但是随便点开了一个文章，居然**404**，逗我。。。。。。why？\n![](/images/article_404.png)\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n启动本机上的server，找到那篇404的文章，直接把***协议+ip+port***替换到我本机，找到那篇资源文章，我本机可以啊，问题出在哪？仔细查看了一下2个资源地址：\n```\n本机：http://127.0.0.1:8888/Hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/\ngithub：https://gis90.github.io/hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/\n```\n居然是Hexo与hexo资源路径的问题，立马查看本机blog/public目录的Hexo文件夹是大写，找到github托管的repositories，居然真的不一样，我记得我***hexo g -d***过了啊，立马又执行了1次，发现github上还是小写的hexo文件目录。\n\n![日了。。。。。](404_ri.jpeg)\n\n直接***hexo deploy***，在blog根目录会自动生成一个.deploy_git隐藏文件，这个文件目就是github托管上传用的，查看里面内容，再次确认是大写。没办法，只能删除github上现在托管的网站，又重新新建了一个deploy了一下，这下因为资源路径的导致的404问题解决了。\n\n想起前几天我刚把每篇文章的tag、categories的内容都改成首字母大写的英文了，这是资源路径发生改变的根本，在我本地生成正确的资源路径，deploy到github是错误的，为何？还在查资料寻求原因中。\n\n既然说到了tag && categories，那么就多说点，有些博文不止一个tags、categories，记录一下它们的用法。\n\n> tag\n> > 定义：tag标签\n> > 用法：\n> > {% code %}\n> > tags:\n> >   - 123\n> >   - 456\n> > tags: [123, 456]\n> > {% endcode %}\n> > 多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表[]式，直观清晰。\n\n\n> categories\n> > 定义：文章分类\n> > - 用法一：\n> > {% code %}\n> > categories: 123\n> > {% endcode %}\n> > 这是默认的写法，给文章添加一个分类。\n> > - 用法二：\n> > {% code %}\n> > categories: [123, 456]\n> > {% endcode %}\n> > 文章位于自分类下。\n> > - 用法三：\n> > {% code %}\n> > categories:\n> >   - 123\n> >   - 456\n> > {% endcode %}\n> > 这会将文章分类到123/456子分类目录下。\n> > - 用法四：\n> > {% code %}\n> > categories:\n> >   - [123]\n> >   - [456]\n> >   - [123, 789]\n> > {% endcode %}\n> > 多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。\n\n{% note info %}\n参考：\n> tags：https://github.com/hexojs/hexo/issues/320\n> categories：https://github.com/MOxFIVE/hexo-theme-yelee/issues/4\n{% endnote%}\n","source":"_posts/Hexo-tags与categories重构的教训.md","raw":"---\ntitle: tags与categories重构的教训\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo]\ntop: false\ndesc: tags与categories重构，导致一些问题以及修复方案\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, tags, categories, 404, not found, 页面, 多tags, 多categories\nabbrlink: 43145\ndate: 2019-04-23 15:31:47\nupdated: 2019-04-23 15:31:47\n---\n\n![](/images/article_code.png)\n\n{% note success %}\n<font size=\"4\" color=\"red\">**问题简述**</font>\n博客已经托管在github有一段时间了，有天同事想看看，url发送给同事，但是随便点开了一个文章，居然**404**，逗我。。。。。。why？\n![](/images/article_404.png)\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n启动本机上的server，找到那篇404的文章，直接把***协议+ip+port***替换到我本机，找到那篇资源文章，我本机可以啊，问题出在哪？仔细查看了一下2个资源地址：\n```\n本机：http://127.0.0.1:8888/Hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/\ngithub：https://gis90.github.io/hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/\n```\n居然是Hexo与hexo资源路径的问题，立马查看本机blog/public目录的Hexo文件夹是大写，找到github托管的repositories，居然真的不一样，我记得我***hexo g -d***过了啊，立马又执行了1次，发现github上还是小写的hexo文件目录。\n\n![日了。。。。。](404_ri.jpeg)\n\n直接***hexo deploy***，在blog根目录会自动生成一个.deploy_git隐藏文件，这个文件目就是github托管上传用的，查看里面内容，再次确认是大写。没办法，只能删除github上现在托管的网站，又重新新建了一个deploy了一下，这下因为资源路径的导致的404问题解决了。\n\n想起前几天我刚把每篇文章的tag、categories的内容都改成首字母大写的英文了，这是资源路径发生改变的根本，在我本地生成正确的资源路径，deploy到github是错误的，为何？还在查资料寻求原因中。\n\n既然说到了tag && categories，那么就多说点，有些博文不止一个tags、categories，记录一下它们的用法。\n\n> tag\n> > 定义：tag标签\n> > 用法：\n> > {% code %}\n> > tags:\n> >   - 123\n> >   - 456\n> > tags: [123, 456]\n> > {% endcode %}\n> > 多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表[]式，直观清晰。\n\n\n> categories\n> > 定义：文章分类\n> > - 用法一：\n> > {% code %}\n> > categories: 123\n> > {% endcode %}\n> > 这是默认的写法，给文章添加一个分类。\n> > - 用法二：\n> > {% code %}\n> > categories: [123, 456]\n> > {% endcode %}\n> > 文章位于自分类下。\n> > - 用法三：\n> > {% code %}\n> > categories:\n> >   - 123\n> >   - 456\n> > {% endcode %}\n> > 这会将文章分类到123/456子分类目录下。\n> > - 用法四：\n> > {% code %}\n> > categories:\n> >   - [123]\n> >   - [456]\n> >   - [123, 789]\n> > {% endcode %}\n> > 多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。\n\n{% note info %}\n参考：\n> tags：https://github.com/hexojs/hexo/issues/320\n> categories：https://github.com/MOxFIVE/hexo-theme-yelee/issues/4\n{% endnote%}\n","slug":"Hexo-tags与categories重构的教训","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rv002jtabjkw9xjxxm","content":"<p><img src=\"/images/article_code.png\" alt></p>\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>问题简述</strong></font><br>博客已经托管在github有一段时间了，有天同事想看看，url发送给同事，但是随便点开了一个文章，居然<strong>404</strong>，逗我。。。。。。why？<br><img src=\"/images/article_404.png\" alt></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>启动本机上的server，找到那篇404的文章，直接把<strong><em>协议+ip+port</em></strong>替换到我本机，找到那篇资源文章，我本机可以啊，问题出在哪？仔细查看了一下2个资源地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本机：http://127.0.0.1:8888/Hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/</span><br><span class=\"line\">github：https://gis90.github.io/hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/</span><br></pre></td></tr></table></figure></p>\n<p>居然是Hexo与hexo资源路径的问题，立马查看本机blog/public目录的Hexo文件夹是大写，找到github托管的repositories，居然真的不一样，我记得我<strong><em>hexo g -d</em></strong>过了啊，立马又执行了1次，发现github上还是小写的hexo文件目录。</p>\n<p><img src=\"404_ri.jpeg\" alt=\"日了。。。。。\"></p>\n<p>直接<strong><em>hexo deploy</em></strong>，在blog根目录会自动生成一个.deploy_git隐藏文件，这个文件目就是github托管上传用的，查看里面内容，再次确认是大写。没办法，只能删除github上现在托管的网站，又重新新建了一个deploy了一下，这下因为资源路径的导致的404问题解决了。</p>\n<p>想起前几天我刚把每篇文章的tag、categories的内容都改成首字母大写的英文了，这是资源路径发生改变的根本，在我本地生成正确的资源路径，deploy到github是错误的，为何？还在查资料寻求原因中。</p>\n<p>既然说到了tag &amp;&amp; categories，那么就多说点，有些博文不止一个tags、categories，记录一下它们的用法。</p>\n<blockquote>\n<p>tag</p>\n<blockquote>\n<p>定义：tag标签<br>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; tags:</span><br><span class=\"line\">&gt; &gt;   - 123</span><br><span class=\"line\">&gt; &gt;   - 456</span><br><span class=\"line\">&gt; &gt; tags: [123, 456]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure><br>多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表[]式，直观清晰。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>categories</p>\n<blockquote>\n<p>定义：文章分类</p>\n<ul>\n<li>用法一：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories: 123</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n这是默认的写法，给文章添加一个分类。</li>\n<li>用法二：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories: [123, 456]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n文章位于自分类下。</li>\n<li>用法三：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories:</span><br><span class=\"line\">&gt; &gt;   - 123</span><br><span class=\"line\">&gt; &gt;   - 456</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n这会将文章分类到123/456子分类目录下。</li>\n<li>用法四：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories:</span><br><span class=\"line\">&gt; &gt;   - [123]</span><br><span class=\"line\">&gt; &gt;   - [456]</span><br><span class=\"line\">&gt; &gt;   - [123, 789]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。</li>\n</ul>\n</blockquote>\n</blockquote>\n<div class=\"note info\">\n            <p>参考：</p><blockquote><p>tags：<a href=\"https://github.com/hexojs/hexo/issues/320\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/320</a><br>categories：<a href=\"https://github.com/MOxFIVE/hexo-theme-yelee/issues/4\" target=\"_blank\" rel=\"noopener\">https://github.com/MOxFIVE/hexo-theme-yelee/issues/4</a></p></blockquote>\n          </div>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_code.png\" alt></p>\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>问题简述</strong></font><br>博客已经托管在github有一段时间了，有天同事想看看，url发送给同事，但是随便点开了一个文章，居然<strong>404</strong>，逗我。。。。。。why？<br><img src=\"/images/article_404.png\" alt></p>\n          </div>","more":"<hr>\n\n<p>启动本机上的server，找到那篇404的文章，直接把<strong><em>协议+ip+port</em></strong>替换到我本机，找到那篇资源文章，我本机可以啊，问题出在哪？仔细查看了一下2个资源地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本机：http://127.0.0.1:8888/Hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/</span><br><span class=\"line\">github：https://gis90.github.io/hexo/Hexo%E6%90%9C%E7%B4%A2hexo-generator-searchdb/</span><br></pre></td></tr></table></figure></p>\n<p>居然是Hexo与hexo资源路径的问题，立马查看本机blog/public目录的Hexo文件夹是大写，找到github托管的repositories，居然真的不一样，我记得我<strong><em>hexo g -d</em></strong>过了啊，立马又执行了1次，发现github上还是小写的hexo文件目录。</p>\n<p><img src=\"404_ri.jpeg\" alt=\"日了。。。。。\"></p>\n<p>直接<strong><em>hexo deploy</em></strong>，在blog根目录会自动生成一个.deploy_git隐藏文件，这个文件目就是github托管上传用的，查看里面内容，再次确认是大写。没办法，只能删除github上现在托管的网站，又重新新建了一个deploy了一下，这下因为资源路径的导致的404问题解决了。</p>\n<p>想起前几天我刚把每篇文章的tag、categories的内容都改成首字母大写的英文了，这是资源路径发生改变的根本，在我本地生成正确的资源路径，deploy到github是错误的，为何？还在查资料寻求原因中。</p>\n<p>既然说到了tag &amp;&amp; categories，那么就多说点，有些博文不止一个tags、categories，记录一下它们的用法。</p>\n<blockquote>\n<p>tag</p>\n<blockquote>\n<p>定义：tag标签<br>用法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; tags:</span><br><span class=\"line\">&gt; &gt;   - 123</span><br><span class=\"line\">&gt; &gt;   - 456</span><br><span class=\"line\">&gt; &gt; tags: [123, 456]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure><br>多标签写法，这2种都是一样的效果，用哪个都可以，建议使用列表[]式，直观清晰。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>categories</p>\n<blockquote>\n<p>定义：文章分类</p>\n<ul>\n<li>用法一：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories: 123</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n这是默认的写法，给文章添加一个分类。</li>\n<li>用法二：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories: [123, 456]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n文章位于自分类下。</li>\n<li>用法三：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories:</span><br><span class=\"line\">&gt; &gt;   - 123</span><br><span class=\"line\">&gt; &gt;   - 456</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n这会将文章分类到123/456子分类目录下。</li>\n<li>用法四：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; &gt; categories:</span><br><span class=\"line\">&gt; &gt;   - [123]</span><br><span class=\"line\">&gt; &gt;   - [456]</span><br><span class=\"line\">&gt; &gt;   - [123, 789]</span><br><span class=\"line\">&gt; &gt; </span><br></pre></td></tr></table></figure>\n多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。</li>\n</ul>\n</blockquote>\n</blockquote>\n<div class=\"note info\">\n            <p>参考：</p><blockquote><p>tags：<a href=\"https://github.com/hexojs/hexo/issues/320\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/320</a><br>categories：<a href=\"https://github.com/MOxFIVE/hexo-theme-yelee/issues/4\" target=\"_blank\" rel=\"noopener\">https://github.com/MOxFIVE/hexo-theme-yelee/issues/4</a></p></blockquote>\n          </div>"},{"title":"Hexo-url优化篇","comments":0,"top":false,"abbrlink":44359,"date":"2019-05-09T00:29:50.000Z","updated":"2019-05-09T00:29:50.000Z","desc":"关于博客的url优化相关的处理以及讲解","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, url, permalink","_content":"\n### 背景\n{% note success %}\n曾几何时，有莫有觉得自己的博文url过于繁琐，而且博文名称包含中文，发送链接变成unicode编码，很不友好。那好，**hexo-abbrlink**插件解决url带来的难题。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 版本信息\n\n| id  | name | version |  remark  |\n|:---:|:----:|:-------:|:--------:|\n|  1  | Hexo | v3.8.0  | 系统版本 |\n|  2  | Next | v7.0.1  | 主题版本 |\n\n### url格式\n\n正常的url格式默认是：**:year/:month/:day/:title/**，resource地址过长，如果想改变，需要在Hexo的配置去更改。\n打开blog/_config.yml文件，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改配置如下：\n```\n# permalink: :year/:month/:day/:title/  # default版\n# permalink: :category/:id/             # id版\n# permalink: :category/:title/          # name版\n```\ncategory是分类，id对应的是博文默认生成的id，如果不想使用插件的同学，建议使用**id版**，配置好之后***hexo g && hexo s***重启server即可。具体的url配置请查看[官方说明](https://hexo.io/zh-cn/docs/permalinks)。\n\n到这里，已经完成了url的配置，如果不想继续优化url的同学，完成上述配置就可以了，下面将继续介绍使用插件优化url。\n\n### 安装hexo-abbrlink\n\n博客项目的根目录直接执行：\n```\nnpm install hexo-abbrlink --save\n```\n\n### Hexo配置\n\n还是刚才的配置文件，把<font size=\"4\" color=\"red\">***permalink***</font>改成以下配置：\n```\npermalink: articles/:abbrlink/\n```\n\n### Next配置\n打开Next主题配置文件：/blog/theme/next/_config.yml，新增配置如下：\n```\n# post url\nabbrlink:\n  alg: crc32  #support crc16(default) and crc32\n  rep: hex    #support dec(default) and hex\n```\n{% note info %}\n<font size=\"4\">**参数**</font>\nalg -- Algorithm (currently support crc16 and crc32, which crc16 is default)\nrep -- Represent (the generated link could be presented in hex or dec value)\n<font size=\"4\">**例子**</font>\n> crc16 & hex\n\nhttps://post.zz173.com/posts/66c8.html\n\n> crc16 & dec\n\nhttps://post.zz173.com/posts/65535.html\n> crc32 & hex\n\nhttps://post.zz173.com/posts/8ddf18fb.html\n\n> crc32 & dec\n\nhttps://post.zz173.com/posts/1690090958.html\n\n{% endnote %}\n\n### hexo clean && hexo g\n\n这一步是必须操作，***hexo clean***清除public站点文件，***hexo g***重新生成站点文件。生成之后，打开一个.md博文文件，你会发现，在顶部的定义部分新增了一个**abbrlink**属性，后面是文件的url资源路径。\n```\nabbrlink: 44359\n```\n在老的文件***hexo g***会自动新增这个属性，在建立新的文件也会自动新增这个属性，属性值根据上面的**alg && rep**配置的算法规则生成。\n\n### hexo s\n\n重启服务。重启之后回到home主页，点开一个博文查看url，不出意外url已发生改变，没有改变的同学查看下2个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。\n\n### 学习\n\nHexo permalinks：https://hexo.io/zh-cn/docs/permalinks\nhexo-abbrlink：https://github.com/rozbo/hexo-abbrlink\n","source":"_posts/Hexo-url优化篇.md","raw":"---\ntitle: Hexo-url优化篇\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件, Hexo美化]\ntop: false\nabbrlink: 44359\ndate: 2019-05-09 08:29:50\nupdated: 2019-05-09 08:29:50\ndesc: 关于博客的url优化相关的处理以及讲解\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, url, permalink\n---\n\n### 背景\n{% note success %}\n曾几何时，有莫有觉得自己的博文url过于繁琐，而且博文名称包含中文，发送链接变成unicode编码，很不友好。那好，**hexo-abbrlink**插件解决url带来的难题。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 版本信息\n\n| id  | name | version |  remark  |\n|:---:|:----:|:-------:|:--------:|\n|  1  | Hexo | v3.8.0  | 系统版本 |\n|  2  | Next | v7.0.1  | 主题版本 |\n\n### url格式\n\n正常的url格式默认是：**:year/:month/:day/:title/**，resource地址过长，如果想改变，需要在Hexo的配置去更改。\n打开blog/_config.yml文件，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改配置如下：\n```\n# permalink: :year/:month/:day/:title/  # default版\n# permalink: :category/:id/             # id版\n# permalink: :category/:title/          # name版\n```\ncategory是分类，id对应的是博文默认生成的id，如果不想使用插件的同学，建议使用**id版**，配置好之后***hexo g && hexo s***重启server即可。具体的url配置请查看[官方说明](https://hexo.io/zh-cn/docs/permalinks)。\n\n到这里，已经完成了url的配置，如果不想继续优化url的同学，完成上述配置就可以了，下面将继续介绍使用插件优化url。\n\n### 安装hexo-abbrlink\n\n博客项目的根目录直接执行：\n```\nnpm install hexo-abbrlink --save\n```\n\n### Hexo配置\n\n还是刚才的配置文件，把<font size=\"4\" color=\"red\">***permalink***</font>改成以下配置：\n```\npermalink: articles/:abbrlink/\n```\n\n### Next配置\n打开Next主题配置文件：/blog/theme/next/_config.yml，新增配置如下：\n```\n# post url\nabbrlink:\n  alg: crc32  #support crc16(default) and crc32\n  rep: hex    #support dec(default) and hex\n```\n{% note info %}\n<font size=\"4\">**参数**</font>\nalg -- Algorithm (currently support crc16 and crc32, which crc16 is default)\nrep -- Represent (the generated link could be presented in hex or dec value)\n<font size=\"4\">**例子**</font>\n> crc16 & hex\n\nhttps://post.zz173.com/posts/66c8.html\n\n> crc16 & dec\n\nhttps://post.zz173.com/posts/65535.html\n> crc32 & hex\n\nhttps://post.zz173.com/posts/8ddf18fb.html\n\n> crc32 & dec\n\nhttps://post.zz173.com/posts/1690090958.html\n\n{% endnote %}\n\n### hexo clean && hexo g\n\n这一步是必须操作，***hexo clean***清除public站点文件，***hexo g***重新生成站点文件。生成之后，打开一个.md博文文件，你会发现，在顶部的定义部分新增了一个**abbrlink**属性，后面是文件的url资源路径。\n```\nabbrlink: 44359\n```\n在老的文件***hexo g***会自动新增这个属性，在建立新的文件也会自动新增这个属性，属性值根据上面的**alg && rep**配置的算法规则生成。\n\n### hexo s\n\n重启服务。重启之后回到home主页，点开一个博文查看url，不出意外url已发生改变，没有改变的同学查看下2个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。\n\n### 学习\n\nHexo permalinks：https://hexo.io/zh-cn/docs/permalinks\nhexo-abbrlink：https://github.com/rozbo/hexo-abbrlink\n","slug":"Hexo-url优化篇","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2rx002ltabjfxnjoilt","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>曾几何时，有莫有觉得自己的博文url过于繁琐，而且博文名称包含中文，发送链接变成unicode编码，很不友好。那好，<strong>hexo-abbrlink</strong>插件解决url带来的难题。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Next</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"url格式\"><a href=\"#url格式\" class=\"headerlink\" title=\"url格式\"></a>url格式</h3><p>正常的url格式默认是：<strong>:year/:month/:day/:title/</strong>，resource地址过长，如果想改变，需要在Hexo的配置去更改。<br>打开blog/_config.yml文件，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year/:month/:day/:title/  # default版</span><br><span class=\"line\"># permalink: :category/:id/             # id版</span><br><span class=\"line\"># permalink: :category/:title/          # name版</span><br></pre></td></tr></table></figure></p>\n<p>category是分类，id对应的是博文默认生成的id，如果不想使用插件的同学，建议使用<strong>id版</strong>，配置好之后<strong><em>hexo g &amp;&amp; hexo s</em></strong>重启server即可。具体的url配置请查看<a href=\"https://hexo.io/zh-cn/docs/permalinks\" target=\"_blank\" rel=\"noopener\">官方说明</a>。</p>\n<p>到这里，已经完成了url的配置，如果不想继续优化url的同学，完成上述配置就可以了，下面将继续介绍使用插件优化url。</p>\n<h3 id=\"安装hexo-abbrlink\"><a href=\"#安装hexo-abbrlink\" class=\"headerlink\" title=\"安装hexo-abbrlink\"></a>安装hexo-abbrlink</h3><p>博客项目的根目录直接执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><p>还是刚才的配置文件，把<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>改成以下配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: articles/:abbrlink/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Next配置\"><a href=\"#Next配置\" class=\"headerlink\" title=\"Next配置\"></a>Next配置</h3><p>打开Next主题配置文件：/blog/theme/next/_config.yml，新增配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># post url</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  #support crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>参数</strong></font><br>alg – Algorithm (currently support crc16 and crc32, which crc16 is default)<br>rep – Represent (the generated link could be presented in hex or dec value)</p><p><font size=\"4\"><strong>例子</strong></font></p><blockquote><p>crc16 &amp; hex</p></blockquote><p><a href=\"https://post.zz173.com/posts/66c8.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/66c8.html</a></p><blockquote><p>crc16 &amp; dec</p></blockquote><p><a href=\"https://post.zz173.com/posts/65535.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/65535.html</a></p><blockquote><p>crc32 &amp; hex</p></blockquote><p><a href=\"https://post.zz173.com/posts/8ddf18fb.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/8ddf18fb.html</a></p><blockquote><p>crc32 &amp; dec</p></blockquote><p><a href=\"https://post.zz173.com/posts/1690090958.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/1690090958.html</a></p>\n          </div>\n<h3 id=\"hexo-clean-amp-amp-hexo-g\"><a href=\"#hexo-clean-amp-amp-hexo-g\" class=\"headerlink\" title=\"hexo clean &amp;&amp; hexo g\"></a>hexo clean &amp;&amp; hexo g</h3><p>这一步是必须操作，<strong><em>hexo clean</em></strong>清除public站点文件，<strong><em>hexo g</em></strong>重新生成站点文件。生成之后，打开一个.md博文文件，你会发现，在顶部的定义部分新增了一个<strong>abbrlink</strong>属性，后面是文件的url资源路径。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abbrlink: 44359</span><br></pre></td></tr></table></figure></p>\n<p>在老的文件<strong><em>hexo g</em></strong>会自动新增这个属性，在建立新的文件也会自动新增这个属性，属性值根据上面的<strong>alg &amp;&amp; rep</strong>配置的算法规则生成。</p>\n<h3 id=\"hexo-s\"><a href=\"#hexo-s\" class=\"headerlink\" title=\"hexo s\"></a>hexo s</h3><p>重启服务。重启之后回到home主页，点开一个博文查看url，不出意外url已发生改变，没有改变的同学查看下2个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>Hexo permalinks：<a href=\"https://hexo.io/zh-cn/docs/permalinks\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/permalinks</a><br>hexo-abbrlink：<a href=\"https://github.com/rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"noopener\">https://github.com/rozbo/hexo-abbrlink</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>曾几何时，有莫有觉得自己的博文url过于繁琐，而且博文名称包含中文，发送链接变成unicode编码，很不友好。那好，<strong>hexo-abbrlink</strong>插件解决url带来的难题。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Next</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"url格式\"><a href=\"#url格式\" class=\"headerlink\" title=\"url格式\"></a>url格式</h3><p>正常的url格式默认是：<strong>:year/:month/:day/:title/</strong>，resource地址过长，如果想改变，需要在Hexo的配置去更改。<br>打开blog/_config.yml文件，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year/:month/:day/:title/  # default版</span><br><span class=\"line\"># permalink: :category/:id/             # id版</span><br><span class=\"line\"># permalink: :category/:title/          # name版</span><br></pre></td></tr></table></figure></p>\n<p>category是分类，id对应的是博文默认生成的id，如果不想使用插件的同学，建议使用<strong>id版</strong>，配置好之后<strong><em>hexo g &amp;&amp; hexo s</em></strong>重启server即可。具体的url配置请查看<a href=\"https://hexo.io/zh-cn/docs/permalinks\" target=\"_blank\" rel=\"noopener\">官方说明</a>。</p>\n<p>到这里，已经完成了url的配置，如果不想继续优化url的同学，完成上述配置就可以了，下面将继续介绍使用插件优化url。</p>\n<h3 id=\"安装hexo-abbrlink\"><a href=\"#安装hexo-abbrlink\" class=\"headerlink\" title=\"安装hexo-abbrlink\"></a>安装hexo-abbrlink</h3><p>博客项目的根目录直接执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><p>还是刚才的配置文件，把<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>改成以下配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: articles/:abbrlink/</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Next配置\"><a href=\"#Next配置\" class=\"headerlink\" title=\"Next配置\"></a>Next配置</h3><p>打开Next主题配置文件：/blog/theme/next/_config.yml，新增配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># post url</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32  #support crc16(default) and crc32</span><br><span class=\"line\">  rep: hex    #support dec(default) and hex</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>参数</strong></font><br>alg – Algorithm (currently support crc16 and crc32, which crc16 is default)<br>rep – Represent (the generated link could be presented in hex or dec value)</p><p><font size=\"4\"><strong>例子</strong></font></p><blockquote><p>crc16 &amp; hex</p></blockquote><p><a href=\"https://post.zz173.com/posts/66c8.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/66c8.html</a></p><blockquote><p>crc16 &amp; dec</p></blockquote><p><a href=\"https://post.zz173.com/posts/65535.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/65535.html</a></p><blockquote><p>crc32 &amp; hex</p></blockquote><p><a href=\"https://post.zz173.com/posts/8ddf18fb.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/8ddf18fb.html</a></p><blockquote><p>crc32 &amp; dec</p></blockquote><p><a href=\"https://post.zz173.com/posts/1690090958.html\" target=\"_blank\" rel=\"noopener\">https://post.zz173.com/posts/1690090958.html</a></p>\n          </div>\n<h3 id=\"hexo-clean-amp-amp-hexo-g\"><a href=\"#hexo-clean-amp-amp-hexo-g\" class=\"headerlink\" title=\"hexo clean &amp;&amp; hexo g\"></a>hexo clean &amp;&amp; hexo g</h3><p>这一步是必须操作，<strong><em>hexo clean</em></strong>清除public站点文件，<strong><em>hexo g</em></strong>重新生成站点文件。生成之后，打开一个.md博文文件，你会发现，在顶部的定义部分新增了一个<strong>abbrlink</strong>属性，后面是文件的url资源路径。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abbrlink: 44359</span><br></pre></td></tr></table></figure></p>\n<p>在老的文件<strong><em>hexo g</em></strong>会自动新增这个属性，在建立新的文件也会自动新增这个属性，属性值根据上面的<strong>alg &amp;&amp; rep</strong>配置的算法规则生成。</p>\n<h3 id=\"hexo-s\"><a href=\"#hexo-s\" class=\"headerlink\" title=\"hexo s\"></a>hexo s</h3><p>重启服务。重启之后回到home主页，点开一个博文查看url，不出意外url已发生改变，没有改变的同学查看下2个配置文件处，是否配置对了，别搞混了，不要都配置到一个文件中。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>Hexo permalinks：<a href=\"https://hexo.io/zh-cn/docs/permalinks\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/permalinks</a><br>hexo-abbrlink：<a href=\"https://github.com/rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"noopener\">https://github.com/rozbo/hexo-abbrlink</a></p>"},{"title":"Hexo博文加入原生html+css","comments":0,"top":false,"desc":"Hexo博文加入原生html+css，可以让blog更加完美","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, html, css, 原生，相册","abbrlink":5369,"date":"2019-05-25T04:17:09.000Z","updated":"2019-06-02T04:17:09.000Z","_content":"\n#### 背景\n{% note success %}\n用markdown语法去写博文，***hexo g***会把md转为html，html可被浏览器识别渲染，就形成了大家看到的web。说实话，自学的我，虽然从事IT开发业2年多的经验了，但是要学习还有很多，之前写了一些关于在markdown中加入一些内置tags等方法使博文变得更加美观，可读。但是如果可以把原生html直接嵌入md文件中，这样写md文件就行云流水，而且样式还可以自定义，岂不美哉。\n但是，事情往往哪会那么容易，走一步一个坑，花了几天时间才搞定嵌入，如果实现了的请勿看，本人小白，勿怪。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n#### 正文\n\n话不多说，直接看例子。\n\n本人开发了一个相册sidebar功能，但是直接用markdown或者img标签去写，样式单一，就算使用**gp标签**，图片的样式也是很难看。于是把原生的html嵌入到md文件中，代码如下：\n```\n\n#### 2018-08-05 第一次吃牛排\n\n第一次吃牛排\n\n{% tabs 2018-07-27 乌镇之旅 %}\n<!-- tab 点点滴滴 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/1.jpg\">\n\t\t\t<img src=\"images/fristniupai/5.jpg\">\n\t\t\t<img src=\"images/fristniupai/9.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/8.jpg\">\n            <img src=\"images/fristniupai/2.jpg\">\n            <img src=\"images/fristniupai/6.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/3.jpg\">\n            <img src=\"images/fristniupai/7.jpg\">\n            <img src=\"images/fristniupai/11.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n            <img src=\"images/fristniupai/4.jpg\">\n            <img src=\"images/fristniupai/10.jpg\">\n        </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n```\n\n写完md文件之后，查看页面，发现还是难看，因为没有加入样式，一般都嵌入html的地方都是指定的开发部分，所有给div标签命名一个id最合适，方便写css样式，把个性化的css的样式写入自动样式文件：blog/theme/next/source/css/_custom/custom.styl，增加对应的代码：\n```\n// 相册自定义样式\n.phote-list {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: flex-start;\n}\n.phote-list img {\n    border-radius: 35px;\n    // width: 320px;\n    // height: 230px;\n    padding: 6px;\n    background-color: #909497;\n    margin: 0px 0px 0px 0px;\n    box-shadow: 15px 15px 15px rgba(50, 50, 50, 0.99);\n    transition: all 1s ease-in;\n}\n.phote-list img:hover {\n    box-shadow: 35px 35px 35px rgba(50, 50, 50, 0.8);\n    transform: rotate(0deg) scale(1.6);\n    background-color: black;\n    padding: 15px;\n    z-index: top;\n}\n```\n在css样式中，我对图片加了一个鼠标滑过放大的动画，既然可以自定义样式，加什么特效都随你了。\n\n最后，重启服务***hexo g && Hexo s***，刷新页面就会看到效果。\n\n#### 问题\n\n> 引入原生的html标签，发现***hexo g***之后，在生成的.html页面，在**div标签**会自动加入**br标签**，导致有些特效出现问题\n\n{% note info %}\n<font size=\"4\" color=\"red\">**解决方案：**</font>\n在加入的原生的html部分用raw-endraw内置tags包起来就可以，示例代码：\n{% code %}\n{% raw %}\n<div class=\"timeline\">\n    <div class=\"timeline-item\" date-is='1997/07 ~ 2013/07'>\n        <div>上学阶段</div>\n        <p>\n            书中自有黄金屋，书中自有颜如玉\n        </p>\n    </div>\n    <div class=\"timeline-item\" date-is='2014/03 ~ 2016/06'>\n        <div>盲目阶段</div>\n        <p>\n            一艘没有航行目标的船\n        </p>\n    </div>\n    <div class=\"timeline-item\" date-is='2016/07 ~ 至今'>\n        <div>追求阶段</div>\n        <p>\n            生活的理想就是理想的生活\n        </p>\n    </div>\n</div>\n{% endraw %}\n{% endcode %}\n{% endnote %}\n\n#### 坑\n\n一开始趟坑的时候，天真的我居然以为可以把原生的html直接粘贴复制到md文件中就可以了。。。。。。结果，哈哈我真是太天真了。不过后来尝试把样式放到自定义文件中，把样式与标签分离，没想到成功了。不管怎么样，记录下来，希望能帮到他人。\n","source":"_posts/Hexo-博文加入原生html-css.md","raw":"---\ntitle: Hexo博文加入原生html+css\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\ntop: false\ndesc: Hexo博文加入原生html+css，可以让blog更加完美\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, html, css, 原生，相册\nabbrlink: 5369\ndate: 2019-05-25 12:17:09\nupdated: 2019-06-02 12:17:09\n---\n\n#### 背景\n{% note success %}\n用markdown语法去写博文，***hexo g***会把md转为html，html可被浏览器识别渲染，就形成了大家看到的web。说实话，自学的我，虽然从事IT开发业2年多的经验了，但是要学习还有很多，之前写了一些关于在markdown中加入一些内置tags等方法使博文变得更加美观，可读。但是如果可以把原生html直接嵌入md文件中，这样写md文件就行云流水，而且样式还可以自定义，岂不美哉。\n但是，事情往往哪会那么容易，走一步一个坑，花了几天时间才搞定嵌入，如果实现了的请勿看，本人小白，勿怪。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n#### 正文\n\n话不多说，直接看例子。\n\n本人开发了一个相册sidebar功能，但是直接用markdown或者img标签去写，样式单一，就算使用**gp标签**，图片的样式也是很难看。于是把原生的html嵌入到md文件中，代码如下：\n```\n\n#### 2018-08-05 第一次吃牛排\n\n第一次吃牛排\n\n{% tabs 2018-07-27 乌镇之旅 %}\n<!-- tab 点点滴滴 -->\n<div class=\"phote-page\">\n\t<div class=\"phote-list\">\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/1.jpg\">\n\t\t\t<img src=\"images/fristniupai/5.jpg\">\n\t\t\t<img src=\"images/fristniupai/9.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/8.jpg\">\n            <img src=\"images/fristniupai/2.jpg\">\n            <img src=\"images/fristniupai/6.jpg\">\n\t\t</div>\n\t\t<div class=\"phote-column\">\n\t\t\t<img src=\"images/fristniupai/3.jpg\">\n            <img src=\"images/fristniupai/7.jpg\">\n            <img src=\"images/fristniupai/11.jpg\">\n\t\t</div>\n        <div class=\"phote-column\">\n            <img src=\"images/fristniupai/4.jpg\">\n            <img src=\"images/fristniupai/10.jpg\">\n        </div>\n\t</div>\n</div>\n<!-- endtab -->\n{% endtabs %}\n```\n\n写完md文件之后，查看页面，发现还是难看，因为没有加入样式，一般都嵌入html的地方都是指定的开发部分，所有给div标签命名一个id最合适，方便写css样式，把个性化的css的样式写入自动样式文件：blog/theme/next/source/css/_custom/custom.styl，增加对应的代码：\n```\n// 相册自定义样式\n.phote-list {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: nowrap;\n\talign-items: flex-start;\n}\n.phote-list img {\n    border-radius: 35px;\n    // width: 320px;\n    // height: 230px;\n    padding: 6px;\n    background-color: #909497;\n    margin: 0px 0px 0px 0px;\n    box-shadow: 15px 15px 15px rgba(50, 50, 50, 0.99);\n    transition: all 1s ease-in;\n}\n.phote-list img:hover {\n    box-shadow: 35px 35px 35px rgba(50, 50, 50, 0.8);\n    transform: rotate(0deg) scale(1.6);\n    background-color: black;\n    padding: 15px;\n    z-index: top;\n}\n```\n在css样式中，我对图片加了一个鼠标滑过放大的动画，既然可以自定义样式，加什么特效都随你了。\n\n最后，重启服务***hexo g && Hexo s***，刷新页面就会看到效果。\n\n#### 问题\n\n> 引入原生的html标签，发现***hexo g***之后，在生成的.html页面，在**div标签**会自动加入**br标签**，导致有些特效出现问题\n\n{% note info %}\n<font size=\"4\" color=\"red\">**解决方案：**</font>\n在加入的原生的html部分用raw-endraw内置tags包起来就可以，示例代码：\n{% code %}\n{% raw %}\n<div class=\"timeline\">\n    <div class=\"timeline-item\" date-is='1997/07 ~ 2013/07'>\n        <div>上学阶段</div>\n        <p>\n            书中自有黄金屋，书中自有颜如玉\n        </p>\n    </div>\n    <div class=\"timeline-item\" date-is='2014/03 ~ 2016/06'>\n        <div>盲目阶段</div>\n        <p>\n            一艘没有航行目标的船\n        </p>\n    </div>\n    <div class=\"timeline-item\" date-is='2016/07 ~ 至今'>\n        <div>追求阶段</div>\n        <p>\n            生活的理想就是理想的生活\n        </p>\n    </div>\n</div>\n{% endraw %}\n{% endcode %}\n{% endnote %}\n\n#### 坑\n\n一开始趟坑的时候，天真的我居然以为可以把原生的html直接粘贴复制到md文件中就可以了。。。。。。结果，哈哈我真是太天真了。不过后来尝试把样式放到自定义文件中，把样式与标签分离，没想到成功了。不管怎么样，记录下来，希望能帮到他人。\n","slug":"Hexo-博文加入原生html-css","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2s0002otabjqsuh1bi1","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>用markdown语法去写博文，<strong><em>hexo g</em></strong>会把md转为html，html可被浏览器识别渲染，就形成了大家看到的web。说实话，自学的我，虽然从事IT开发业2年多的经验了，但是要学习还有很多，之前写了一些关于在markdown中加入一些内置tags等方法使博文变得更加美观，可读。但是如果可以把原生html直接嵌入md文件中，这样写md文件就行云流水，而且样式还可以自定义，岂不美哉。<br>但是，事情往往哪会那么容易，走一步一个坑，花了几天时间才搞定嵌入，如果实现了的请勿看，本人小白，勿怪。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>话不多说，直接看例子。</p>\n<p>本人开发了一个相册sidebar功能，但是直接用markdown或者img标签去写，样式单一，就算使用<strong>gp标签</strong>，图片的样式也是很难看。于是把原生的html嵌入到md文件中，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 2018-08-05 第一次吃牛排</span><br><span class=\"line\"></span><br><span class=\"line\">第一次吃牛排</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% tabs 2018-07-27 乌镇之旅 %&#125;</span><br><span class=\"line\">&lt;!-- tab 点点滴滴 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;phote-page&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;phote-list&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/1.jpg&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/5.jpg&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/9.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/8.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/2.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/6.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/3.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/7.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/11.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/4.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/10.jpg&quot;&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>写完md文件之后，查看页面，发现还是难看，因为没有加入样式，一般都嵌入html的地方都是指定的开发部分，所有给div标签命名一个id最合适，方便写css样式，把个性化的css的样式写入自动样式文件：blog/theme/next/source/css/_custom/custom.styl，增加对应的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 相册自定义样式</span><br><span class=\"line\">.phote-list &#123;</span><br><span class=\"line\">\tdisplay: flex;</span><br><span class=\"line\">\tflex-direction: row;</span><br><span class=\"line\">\tflex-wrap: nowrap;</span><br><span class=\"line\">\talign-items: flex-start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.phote-list img &#123;</span><br><span class=\"line\">    border-radius: 35px;</span><br><span class=\"line\">    // width: 320px;</span><br><span class=\"line\">    // height: 230px;</span><br><span class=\"line\">    padding: 6px;</span><br><span class=\"line\">    background-color: #909497;</span><br><span class=\"line\">    margin: 0px 0px 0px 0px;</span><br><span class=\"line\">    box-shadow: 15px 15px 15px rgba(50, 50, 50, 0.99);</span><br><span class=\"line\">    transition: all 1s ease-in;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.phote-list img:hover &#123;</span><br><span class=\"line\">    box-shadow: 35px 35px 35px rgba(50, 50, 50, 0.8);</span><br><span class=\"line\">    transform: rotate(0deg) scale(1.6);</span><br><span class=\"line\">    background-color: black;</span><br><span class=\"line\">    padding: 15px;</span><br><span class=\"line\">    z-index: top;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在css样式中，我对图片加了一个鼠标滑过放大的动画，既然可以自定义样式，加什么特效都随你了。</p>\n<p>最后，重启服务<strong><em>hexo g &amp;&amp; Hexo s</em></strong>，刷新页面就会看到效果。</p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><blockquote>\n<p>引入原生的html标签，发现<strong><em>hexo g</em></strong>之后，在生成的.html页面，在<strong>div标签</strong>会自动加入<strong>br标签</strong>，导致有些特效出现问题</p>\n</blockquote>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>解决方案：</strong></font><br>在加入的原生的html部分用raw-endraw内置tags包起来就可以，示例代码：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;timeline&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;1997/07 ~ 2013/07&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;上学阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            书中自有黄金屋，书中自有颜如玉</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;2014/03 ~ 2016/06&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;盲目阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            一艘没有航行目标的船</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;2016/07 ~ 至今&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;追求阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            生活的理想就是理想的生活</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n          </div>\n<h4 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h4><p>一开始趟坑的时候，天真的我居然以为可以把原生的html直接粘贴复制到md文件中就可以了。。。。。。结果，哈哈我真是太天真了。不过后来尝试把样式放到自定义文件中，把样式与标签分离，没想到成功了。不管怎么样，记录下来，希望能帮到他人。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>用markdown语法去写博文，<strong><em>hexo g</em></strong>会把md转为html，html可被浏览器识别渲染，就形成了大家看到的web。说实话，自学的我，虽然从事IT开发业2年多的经验了，但是要学习还有很多，之前写了一些关于在markdown中加入一些内置tags等方法使博文变得更加美观，可读。但是如果可以把原生html直接嵌入md文件中，这样写md文件就行云流水，而且样式还可以自定义，岂不美哉。<br>但是，事情往往哪会那么容易，走一步一个坑，花了几天时间才搞定嵌入，如果实现了的请勿看，本人小白，勿怪。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>话不多说，直接看例子。</p>\n<p>本人开发了一个相册sidebar功能，但是直接用markdown或者img标签去写，样式单一，就算使用<strong>gp标签</strong>，图片的样式也是很难看。于是把原生的html嵌入到md文件中，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 2018-08-05 第一次吃牛排</span><br><span class=\"line\"></span><br><span class=\"line\">第一次吃牛排</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% tabs 2018-07-27 乌镇之旅 %&#125;</span><br><span class=\"line\">&lt;!-- tab 点点滴滴 --&gt;</span><br><span class=\"line\">&lt;div class=&quot;phote-page&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;phote-list&quot;&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/1.jpg&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/5.jpg&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/9.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/8.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/2.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/6.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;img src=&quot;images/fristniupai/3.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/7.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/11.jpg&quot;&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;phote-column&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/4.jpg&quot;&gt;</span><br><span class=\"line\">            &lt;img src=&quot;images/fristniupai/10.jpg&quot;&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>写完md文件之后，查看页面，发现还是难看，因为没有加入样式，一般都嵌入html的地方都是指定的开发部分，所有给div标签命名一个id最合适，方便写css样式，把个性化的css的样式写入自动样式文件：blog/theme/next/source/css/_custom/custom.styl，增加对应的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 相册自定义样式</span><br><span class=\"line\">.phote-list &#123;</span><br><span class=\"line\">\tdisplay: flex;</span><br><span class=\"line\">\tflex-direction: row;</span><br><span class=\"line\">\tflex-wrap: nowrap;</span><br><span class=\"line\">\talign-items: flex-start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.phote-list img &#123;</span><br><span class=\"line\">    border-radius: 35px;</span><br><span class=\"line\">    // width: 320px;</span><br><span class=\"line\">    // height: 230px;</span><br><span class=\"line\">    padding: 6px;</span><br><span class=\"line\">    background-color: #909497;</span><br><span class=\"line\">    margin: 0px 0px 0px 0px;</span><br><span class=\"line\">    box-shadow: 15px 15px 15px rgba(50, 50, 50, 0.99);</span><br><span class=\"line\">    transition: all 1s ease-in;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.phote-list img:hover &#123;</span><br><span class=\"line\">    box-shadow: 35px 35px 35px rgba(50, 50, 50, 0.8);</span><br><span class=\"line\">    transform: rotate(0deg) scale(1.6);</span><br><span class=\"line\">    background-color: black;</span><br><span class=\"line\">    padding: 15px;</span><br><span class=\"line\">    z-index: top;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在css样式中，我对图片加了一个鼠标滑过放大的动画，既然可以自定义样式，加什么特效都随你了。</p>\n<p>最后，重启服务<strong><em>hexo g &amp;&amp; Hexo s</em></strong>，刷新页面就会看到效果。</p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><blockquote>\n<p>引入原生的html标签，发现<strong><em>hexo g</em></strong>之后，在生成的.html页面，在<strong>div标签</strong>会自动加入<strong>br标签</strong>，导致有些特效出现问题</p>\n</blockquote>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>解决方案：</strong></font><br>在加入的原生的html部分用raw-endraw内置tags包起来就可以，示例代码：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;timeline&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;1997/07 ~ 2013/07&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;上学阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            书中自有黄金屋，书中自有颜如玉</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;2014/03 ~ 2016/06&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;盲目阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            一艘没有航行目标的船</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div class=&quot;timeline-item&quot; date-is=&apos;2016/07 ~ 至今&apos;&gt;</span><br><span class=\"line\">        &lt;div&gt;追求阶段&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;</span><br><span class=\"line\">            生活的理想就是理想的生活</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n          </div>\n<h4 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h4><p>一开始趟坑的时候，天真的我居然以为可以把原生的html直接粘贴复制到md文件中就可以了。。。。。。结果，哈哈我真是太天真了。不过后来尝试把样式放到自定义文件中，把样式与标签分离，没想到成功了。不管怎么样，记录下来，希望能帮到他人。</p>"},{"title":"hexo博文展示并排等多样式图片","comments":0,"desc":"hexo博文展示并排等多样式图片，优化博客图片的存放方式，内置功能","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, gp, 多排图片","abbrlink":8728,"date":"2018-12-12T06:05:52.000Z","updated":"2018-12-12T06:05:52.000Z","_content":"\n{% gp 2-2 %}\n![](/images/article_mutipicture_1.png)\n![](/images/article_mutipicture_2.png)\n{% endgp %}\n\n{% note success %}\n用markdown语法去写博文的时候，发现图片怎么调试怎么不能并排，博客采用Hexo+Next搭建，上网各种查资料，终于解决，在此记录上分享给大家。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n使用***gp***标签引用要展示的图片地址，这个并列展示效果可以在，***theme/next/scripts/tags/group-pictures.js***文件中进行选取，话说多说，直接上代码：\n```\n{% gp 3-3 %}\n<img src=\"t1.jpeg\" width=\"450\" alt=\"图片说明\"/>\n<img src=\"t2.jpeg\" width=\"450\" alt=\"图片说明\"/>\n<img src=\"t3.jpeg\" width=\"800\" alt=\"图片说明\"/>\n{% endgp %}\n```\n博客正文显示需要修改一下文件代码，***themes\\next\\source\\css\\_common\\components\\tags\\group-pictures.styl***样式文件中更改代码如下：\n```\n.page-post-detail .post-body .group-picture-column {\n  // float: none;\n  margin-top: 10px;\n  // width: auto !important;\n  img { margin: 0 auto; }\n}\n```\n设置好了之后，***hexo g***一下，刷新一下就会看到效果。\n在***gp***标签可以使用***img***标签、***\\!\\[\\]\\(\\)***也可以这样显示图片，使用***img***标签的好处就在于自定义样式。\n\n问题解决原文：https://github.com/iissnan/hexo-theme-next/issues/395\n","source":"_posts/Hexo-博文展示并排等多样式图片.md","raw":"---\ntitle: hexo博文展示并排等多样式图片\ncomments: false\ndesc: hexo博文展示并排等多样式图片，优化博客图片的存放方式，内置功能\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, gp, 多排图片\nabbrlink: 8728\ndate: 2018-12-12 14:05:52\nupdated: 2018-12-12 14:05:52\n---\n\n{% gp 2-2 %}\n![](/images/article_mutipicture_1.png)\n![](/images/article_mutipicture_2.png)\n{% endgp %}\n\n{% note success %}\n用markdown语法去写博文的时候，发现图片怎么调试怎么不能并排，博客采用Hexo+Next搭建，上网各种查资料，终于解决，在此记录上分享给大家。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n使用***gp***标签引用要展示的图片地址，这个并列展示效果可以在，***theme/next/scripts/tags/group-pictures.js***文件中进行选取，话说多说，直接上代码：\n```\n{% gp 3-3 %}\n<img src=\"t1.jpeg\" width=\"450\" alt=\"图片说明\"/>\n<img src=\"t2.jpeg\" width=\"450\" alt=\"图片说明\"/>\n<img src=\"t3.jpeg\" width=\"800\" alt=\"图片说明\"/>\n{% endgp %}\n```\n博客正文显示需要修改一下文件代码，***themes\\next\\source\\css\\_common\\components\\tags\\group-pictures.styl***样式文件中更改代码如下：\n```\n.page-post-detail .post-body .group-picture-column {\n  // float: none;\n  margin-top: 10px;\n  // width: auto !important;\n  img { margin: 0 auto; }\n}\n```\n设置好了之后，***hexo g***一下，刷新一下就会看到效果。\n在***gp***标签可以使用***img***标签、***\\!\\[\\]\\(\\)***也可以这样显示图片，使用***img***标签的好处就在于自定义样式。\n\n问题解决原文：https://github.com/iissnan/hexo-theme-next/issues/395\n","slug":"Hexo-博文展示并排等多样式图片","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2s4002rtabjrloyleqy","content":"<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_mutipicture_1.png\" alt></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_mutipicture_2.png\" alt></div></div></div></div>\n<div class=\"note success\">\n            <p>用markdown语法去写博文的时候，发现图片怎么调试怎么不能并排，博客采用Hexo+Next搭建，上网各种查资料，终于解决，在此记录上分享给大家。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>使用<strong><em>gp</em></strong>标签引用要展示的图片地址，这个并列展示效果可以在，<strong><em>theme/next/scripts/tags/group-pictures.js</em></strong>文件中进行选取，话说多说，直接上代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gp 3-3 %&#125;</span><br><span class=\"line\">&lt;img src=&quot;t1.jpeg&quot; width=&quot;450&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&lt;img src=&quot;t2.jpeg&quot; width=&quot;450&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&lt;img src=&quot;t3.jpeg&quot; width=&quot;800&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>博客正文显示需要修改一下文件代码，<strong><em>themes\\next\\source\\css_common\\components\\tags\\group-pictures.styl</em></strong>样式文件中更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.page-post-detail .post-body .group-picture-column &#123;</span><br><span class=\"line\">  // float: none;</span><br><span class=\"line\">  margin-top: 10px;</span><br><span class=\"line\">  // width: auto !important;</span><br><span class=\"line\">  img &#123; margin: 0 auto; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>设置好了之后，<strong><em>hexo g</em></strong>一下，刷新一下就会看到效果。<br>在<strong><em>gp</em></strong>标签可以使用<strong><em>img</em></strong>标签、<strong><em>![]()</em></strong>也可以这样显示图片，使用<strong><em>img</em></strong>标签的好处就在于自定义样式。</p>\n<p>问题解决原文：<a href=\"https://github.com/iissnan/hexo-theme-next/issues/395\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/issues/395</a></p>\n","site":{"data":{}},"excerpt":"<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_mutipicture_1.png\" alt></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_mutipicture_2.png\" alt></div></div></div></div>\n<div class=\"note success\">\n            <p>用markdown语法去写博文的时候，发现图片怎么调试怎么不能并排，博客采用Hexo+Next搭建，上网各种查资料，终于解决，在此记录上分享给大家。</p>\n          </div>","more":"<hr>\n\n<p>使用<strong><em>gp</em></strong>标签引用要展示的图片地址，这个并列展示效果可以在，<strong><em>theme/next/scripts/tags/group-pictures.js</em></strong>文件中进行选取，话说多说，直接上代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% gp 3-3 %&#125;</span><br><span class=\"line\">&lt;img src=&quot;t1.jpeg&quot; width=&quot;450&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&lt;img src=&quot;t2.jpeg&quot; width=&quot;450&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&lt;img src=&quot;t3.jpeg&quot; width=&quot;800&quot; alt=&quot;图片说明&quot;/&gt;</span><br><span class=\"line\">&#123;% endgp %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>博客正文显示需要修改一下文件代码，<strong><em>themes\\next\\source\\css_common\\components\\tags\\group-pictures.styl</em></strong>样式文件中更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.page-post-detail .post-body .group-picture-column &#123;</span><br><span class=\"line\">  // float: none;</span><br><span class=\"line\">  margin-top: 10px;</span><br><span class=\"line\">  // width: auto !important;</span><br><span class=\"line\">  img &#123; margin: 0 auto; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>设置好了之后，<strong><em>hexo g</em></strong>一下，刷新一下就会看到效果。<br>在<strong><em>gp</em></strong>标签可以使用<strong><em>img</em></strong>标签、<strong><em>![]()</em></strong>也可以这样显示图片，使用<strong><em>img</em></strong>标签的好处就在于自定义样式。</p>\n<p>问题解决原文：<a href=\"https://github.com/iissnan/hexo-theme-next/issues/395\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/issues/395</a></p>"},{"title":"Hexo如何引用自定义js代码","comments":0,"top":false,"abbrlink":41680,"date":"2019-06-03T03:28:23.000Z","updated":"2019-06-03T03:28:23.000Z","desc":"Hexo搭建的blog如何引用自定义js代码","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, js, 自定义","_content":"\n### 背景\n{% note success %}\n上个月研究Hexo如何引用原生的html+css，而且也写了一篇文章发表。但是如果想把自己的博客做的更加突出、像模像样，没有js代码去实现功能是不行的，正好想做一个主题切换功能，借着这个功能介绍一下Hexo是如何引用js代码的。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n先讲述怎么引用js代码的，完了在通过实战验证。\n\n#### 引用方式\n\nHexo+Next通过渲染模板（.swig）以及md文件生成对应的html页面，那么问题就来了，既然是模板，肯定会有一个base文件，这里就不做详述了，直接说：**blog/themes/next/layout/_layout.swig**。\n打开这个文件，会发现里面整个页面渲染的框架以及对第三方文件的引用，看下引用js文件代码：\n```\n{% include '_scripts/next-boot.swig' %}\n{% include '_scripts/scroll-cookie.swig' %}\n{% include '_scripts/exturl.swig' %}\n{% include '_third-party/quicklink.swig' %}\n{% include '_third-party/comments/index.swig' %}\n{% include '_third-party/search/index.swig' %}\n{% include '_third-party/analytics/lean-analytics.swig' %}\n{% include '_third-party/analytics/firestore.swig' %}\n{% include '_third-party/math/index.swig' %}\n{% include '_third-party/pdf.swig' %}\n{% include '_third-party/mermaid.swig' %}\n{% include '_third-party/baidu-push.swig' %}\n{% include '_third-party/schedule.swig' %}\n{% include '_third-party/needsharebutton.swig' %}\n{% include '_third-party/rating.swig' %}\n{% include '_third-party/pangu.swig' %}\n{% include '_third-party/bookmark.swig' %}\n{% include '_third-party/copy-code.swig' %}\n{% include '_third-party/chatra.swig' %}\n{% include '_third-party/tidio.swig' %}\n\n<script type=\"text/javascript\" src=\"/js/src/click_magic.js\"></script>\n<script type=\"text/javascript\" src=\"/js/src/theme_change.js\"></script>\n```\n还是通过传统的方式引用js代码，相对应的**script**直接引用的是js文件，而**include**引用的是swig文件，来点代码看下swig文件里面写的是啥，例子我取的是**blog/themes/next/layout/post.swig**：\n```\n{% extends '_layout.swig' %}\n{% import '_macro/post.swig' as post_template %}\n{% import '_macro/sidebar.swig' as sidebar_template %}\n\n{% block title %}{{ page.title }} | {{ title }}{% endblock %}\n\n{% block page_class %}page-post-detail{% endblock %}\n\n{% block content %}\n\n  <div id=\"posts\" class=\"posts-expand\">\n    {{ post_template.render(page) }}\n  </div>\n\n{% endblock %}\n\n{% block sidebar %}\n  {{ sidebar_template.render(true) }}\n{% endblock %}\n\n{% block script_extra %}\n  {% include '_scripts/pages/post-details.swig' %}\n{% endblock %}\n```\n里面存放的是html（标签+css）+一些next主题带的语法。\n说了这么多，到底咋搞。。。。只需要2步：\n{% note info %}\n- 在**blog/themes/next/source/js/src**目录下建立一个js文件，名称自取。\n- 在**blog/themes/next/layout/_layout.swig**文件中通过**script**引用自定义的js文件。\n{% endnote %}\n\n#### 实战\n\n通过一个切换主题的功能来实现上述。\n\n- 首先，在自定义的header文件：**blog/themes/next/layout/_custom/header.swig**，加入一个button，代码如下：\n```\n<button id=\"theme_change\"\n        class=\"theme_change\"\n        type=\"button\"\n        onclick=\"theme_change()\"\n>\n    暗黑系\n</button>\n```\n- 接下来定义button按钮的样式，打开自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**，加入一下代码：\n```\n// 功能按钮样式\n.theme_change {\n    width: 160px;\n    height: 37px;\n    border-radius: 50px 50px 50px 50px;\n    color: white;\n    font-size: 16px;\n    background-color: #333333;\n    margin-left: 40px;\n    margin-bottom: 20px;\n    border: 3px solid red;\n}\n```\n- 在刚才说的自定义js代码目录下新建一个theme_change.js文件，加入一下代码：\n```\n// 主题切换功能\nfunction theme_change() {\n    // 切换字内容\n    var button = document.getElementById('theme_change');\n    var pattern = new RegExp('暗黑系', 'i');\n    if (pattern.test(button.innerHTML)){\n        button.innerHTML = \"光明系\";\n    } else{\n        button.innerHTML = \"暗黑系\";\n    }\n    // 切换主题\n    document.body.classList.toggle('dark-theme');\n};\n```\n- 编写暗黑主题的样式，还是自定义样式文件，加入一下代码：\n```\n// 自制主题切换功能样式\nbody.dark-theme {\n    background: #282c34\n}\n```\n- 最后一步，自定义js文件的引用。打开**blog/themes/next/layout/_layout.swig**文件，在底部**结束body标签**上面引用，代码：\n```\n<script type=\"text/javascript\" src=\"/js/src/theme_change.js\"></script>\n```\n- ***hexo g && hexo s***\n\n不出意外，会有一个简单的主题切换功能，样式我也是简单改变了一下背景色，有兴趣的同学可以编写2套Next主题自定义样式。\n\n{% note info %}\n### 问题\n切换主题的功能有个问题，只能改变当前page的主题，切换新的page之后，恢复到初始化主题，没有后台管理的原因记录不了当前的主题状态，待解决。\n{% endnote%}\n\n### 结束\n\n<font color=\"red\" size=\"5\">***既然做，不说要一定做到最好，起码不能糊弄，与其糊弄还不如不做！！！***</font>\n","source":"_posts/Hexo-如何引用自定义js代码.md","raw":"---\ntitle: Hexo如何引用自定义js代码\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\ntop: false\nabbrlink: 41680\ndate: 2019-06-03 11:28:23\nupdated: 2019-06-03 11:28:23\ndesc: Hexo搭建的blog如何引用自定义js代码\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, js, 自定义\n---\n\n### 背景\n{% note success %}\n上个月研究Hexo如何引用原生的html+css，而且也写了一篇文章发表。但是如果想把自己的博客做的更加突出、像模像样，没有js代码去实现功能是不行的，正好想做一个主题切换功能，借着这个功能介绍一下Hexo是如何引用js代码的。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n先讲述怎么引用js代码的，完了在通过实战验证。\n\n#### 引用方式\n\nHexo+Next通过渲染模板（.swig）以及md文件生成对应的html页面，那么问题就来了，既然是模板，肯定会有一个base文件，这里就不做详述了，直接说：**blog/themes/next/layout/_layout.swig**。\n打开这个文件，会发现里面整个页面渲染的框架以及对第三方文件的引用，看下引用js文件代码：\n```\n{% include '_scripts/next-boot.swig' %}\n{% include '_scripts/scroll-cookie.swig' %}\n{% include '_scripts/exturl.swig' %}\n{% include '_third-party/quicklink.swig' %}\n{% include '_third-party/comments/index.swig' %}\n{% include '_third-party/search/index.swig' %}\n{% include '_third-party/analytics/lean-analytics.swig' %}\n{% include '_third-party/analytics/firestore.swig' %}\n{% include '_third-party/math/index.swig' %}\n{% include '_third-party/pdf.swig' %}\n{% include '_third-party/mermaid.swig' %}\n{% include '_third-party/baidu-push.swig' %}\n{% include '_third-party/schedule.swig' %}\n{% include '_third-party/needsharebutton.swig' %}\n{% include '_third-party/rating.swig' %}\n{% include '_third-party/pangu.swig' %}\n{% include '_third-party/bookmark.swig' %}\n{% include '_third-party/copy-code.swig' %}\n{% include '_third-party/chatra.swig' %}\n{% include '_third-party/tidio.swig' %}\n\n<script type=\"text/javascript\" src=\"/js/src/click_magic.js\"></script>\n<script type=\"text/javascript\" src=\"/js/src/theme_change.js\"></script>\n```\n还是通过传统的方式引用js代码，相对应的**script**直接引用的是js文件，而**include**引用的是swig文件，来点代码看下swig文件里面写的是啥，例子我取的是**blog/themes/next/layout/post.swig**：\n```\n{% extends '_layout.swig' %}\n{% import '_macro/post.swig' as post_template %}\n{% import '_macro/sidebar.swig' as sidebar_template %}\n\n{% block title %}{{ page.title }} | {{ title }}{% endblock %}\n\n{% block page_class %}page-post-detail{% endblock %}\n\n{% block content %}\n\n  <div id=\"posts\" class=\"posts-expand\">\n    {{ post_template.render(page) }}\n  </div>\n\n{% endblock %}\n\n{% block sidebar %}\n  {{ sidebar_template.render(true) }}\n{% endblock %}\n\n{% block script_extra %}\n  {% include '_scripts/pages/post-details.swig' %}\n{% endblock %}\n```\n里面存放的是html（标签+css）+一些next主题带的语法。\n说了这么多，到底咋搞。。。。只需要2步：\n{% note info %}\n- 在**blog/themes/next/source/js/src**目录下建立一个js文件，名称自取。\n- 在**blog/themes/next/layout/_layout.swig**文件中通过**script**引用自定义的js文件。\n{% endnote %}\n\n#### 实战\n\n通过一个切换主题的功能来实现上述。\n\n- 首先，在自定义的header文件：**blog/themes/next/layout/_custom/header.swig**，加入一个button，代码如下：\n```\n<button id=\"theme_change\"\n        class=\"theme_change\"\n        type=\"button\"\n        onclick=\"theme_change()\"\n>\n    暗黑系\n</button>\n```\n- 接下来定义button按钮的样式，打开自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**，加入一下代码：\n```\n// 功能按钮样式\n.theme_change {\n    width: 160px;\n    height: 37px;\n    border-radius: 50px 50px 50px 50px;\n    color: white;\n    font-size: 16px;\n    background-color: #333333;\n    margin-left: 40px;\n    margin-bottom: 20px;\n    border: 3px solid red;\n}\n```\n- 在刚才说的自定义js代码目录下新建一个theme_change.js文件，加入一下代码：\n```\n// 主题切换功能\nfunction theme_change() {\n    // 切换字内容\n    var button = document.getElementById('theme_change');\n    var pattern = new RegExp('暗黑系', 'i');\n    if (pattern.test(button.innerHTML)){\n        button.innerHTML = \"光明系\";\n    } else{\n        button.innerHTML = \"暗黑系\";\n    }\n    // 切换主题\n    document.body.classList.toggle('dark-theme');\n};\n```\n- 编写暗黑主题的样式，还是自定义样式文件，加入一下代码：\n```\n// 自制主题切换功能样式\nbody.dark-theme {\n    background: #282c34\n}\n```\n- 最后一步，自定义js文件的引用。打开**blog/themes/next/layout/_layout.swig**文件，在底部**结束body标签**上面引用，代码：\n```\n<script type=\"text/javascript\" src=\"/js/src/theme_change.js\"></script>\n```\n- ***hexo g && hexo s***\n\n不出意外，会有一个简单的主题切换功能，样式我也是简单改变了一下背景色，有兴趣的同学可以编写2套Next主题自定义样式。\n\n{% note info %}\n### 问题\n切换主题的功能有个问题，只能改变当前page的主题，切换新的page之后，恢复到初始化主题，没有后台管理的原因记录不了当前的主题状态，待解决。\n{% endnote%}\n\n### 结束\n\n<font color=\"red\" size=\"5\">***既然做，不说要一定做到最好，起码不能糊弄，与其糊弄还不如不做！！！***</font>\n","slug":"Hexo-如何引用自定义js代码","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2s9002vtabjfrv1i37f","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>上个月研究Hexo如何引用原生的html+css，而且也写了一篇文章发表。但是如果想把自己的博客做的更加突出、像模像样，没有js代码去实现功能是不行的，正好想做一个主题切换功能，借着这个功能介绍一下Hexo是如何引用js代码的。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>先讲述怎么引用js代码的，完了在通过实战验证。</p>\n<h4 id=\"引用方式\"><a href=\"#引用方式\" class=\"headerlink\" title=\"引用方式\"></a>引用方式</h4><p>Hexo+Next通过渲染模板（.swig）以及md文件生成对应的html页面，那么问题就来了，既然是模板，肯定会有一个base文件，这里就不做详述了，直接说：<strong>blog/themes/next/layout/_layout.swig</strong>。<br>打开这个文件，会发现里面整个页面渲染的框架以及对第三方文件的引用，看下引用js文件代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;_scripts/next-boot.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_scripts/scroll-cookie.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_scripts/exturl.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/quicklink.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/comments/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/search/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/analytics/lean-analytics.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/analytics/firestore.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/math/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/pdf.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/mermaid.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/baidu-push.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/schedule.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/needsharebutton.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/rating.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/pangu.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/bookmark.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/copy-code.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/chatra.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/tidio.swig&apos; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_magic.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/theme_change.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>还是通过传统的方式引用js代码，相对应的<strong>script</strong>直接引用的是js文件，而<strong>include</strong>引用的是swig文件，来点代码看下swig文件里面写的是啥，例子我取的是<strong>blog/themes/next/layout/post.swig</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &apos;_layout.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% import &apos;_macro/post.swig&apos; as post_template %&#125;</span><br><span class=\"line\">&#123;% import &apos;_macro/sidebar.swig&apos; as sidebar_template %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block title %&#125;&#123;&#123; page.title &#125;&#125; | &#123;&#123; title &#125;&#125;&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block page_class %&#125;page-post-detail&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt;</span><br><span class=\"line\">    &#123;&#123; post_template.render(page) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block sidebar %&#125;</span><br><span class=\"line\">  &#123;&#123; sidebar_template.render(true) &#125;&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block script_extra %&#125;</span><br><span class=\"line\">  &#123;% include &apos;_scripts/pages/post-details.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>里面存放的是html（标签+css）+一些next主题带的语法。<br>说了这么多，到底咋搞。。。。只需要2步：<br><div class=\"note info\">\n            <ul><li>在<strong>blog/themes/next/source/js/src</strong>目录下建立一个js文件，名称自取。</li><li>在<strong>blog/themes/next/layout/_layout.swig</strong>文件中通过<strong>script</strong>引用自定义的js文件。</li></ul>\n          </div></p>\n<h4 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h4><p>通过一个切换主题的功能来实现上述。</p>\n<ul>\n<li><p>首先，在自定义的header文件：<strong>blog/themes/next/layout/_custom/header.swig</strong>，加入一个button，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button id=&quot;theme_change&quot;</span><br><span class=\"line\">        class=&quot;theme_change&quot;</span><br><span class=\"line\">        type=&quot;button&quot;</span><br><span class=\"line\">        onclick=&quot;theme_change()&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">    暗黑系</span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来定义button按钮的样式，打开自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong>，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 功能按钮样式</span><br><span class=\"line\">.theme_change &#123;</span><br><span class=\"line\">    width: 160px;</span><br><span class=\"line\">    height: 37px;</span><br><span class=\"line\">    border-radius: 50px 50px 50px 50px;</span><br><span class=\"line\">    color: white;</span><br><span class=\"line\">    font-size: 16px;</span><br><span class=\"line\">    background-color: #333333;</span><br><span class=\"line\">    margin-left: 40px;</span><br><span class=\"line\">    margin-bottom: 20px;</span><br><span class=\"line\">    border: 3px solid red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在刚才说的自定义js代码目录下新建一个theme_change.js文件，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 主题切换功能</span><br><span class=\"line\">function theme_change() &#123;</span><br><span class=\"line\">    // 切换字内容</span><br><span class=\"line\">    var button = document.getElementById(&apos;theme_change&apos;);</span><br><span class=\"line\">    var pattern = new RegExp(&apos;暗黑系&apos;, &apos;i&apos;);</span><br><span class=\"line\">    if (pattern.test(button.innerHTML))&#123;</span><br><span class=\"line\">        button.innerHTML = &quot;光明系&quot;;</span><br><span class=\"line\">    &#125; else&#123;</span><br><span class=\"line\">        button.innerHTML = &quot;暗黑系&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 切换主题</span><br><span class=\"line\">    document.body.classList.toggle(&apos;dark-theme&apos;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写暗黑主题的样式，还是自定义样式文件，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 自制主题切换功能样式</span><br><span class=\"line\">body.dark-theme &#123;</span><br><span class=\"line\">    background: #282c34</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后一步，自定义js文件的引用。打开<strong>blog/themes/next/layout/_layout.swig</strong>文件，在底部<strong>结束body标签</strong>上面引用，代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/theme_change.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong><em>hexo g &amp;&amp; hexo s</em></strong></p>\n</li>\n</ul>\n<p>不出意外，会有一个简单的主题切换功能，样式我也是简单改变了一下背景色，有兴趣的同学可以编写2套Next主题自定义样式。</p>\n<div class=\"note info\">\n            <h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>切换主题的功能有个问题，只能改变当前page的主题，切换新的page之后，恢复到初始化主题，没有后台管理的原因记录不了当前的主题状态，待解决。</p>\n          </div>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><font color=\"red\" size=\"5\"><strong><em>既然做，不说要一定做到最好，起码不能糊弄，与其糊弄还不如不做！！！</em></strong></font>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>上个月研究Hexo如何引用原生的html+css，而且也写了一篇文章发表。但是如果想把自己的博客做的更加突出、像模像样，没有js代码去实现功能是不行的，正好想做一个主题切换功能，借着这个功能介绍一下Hexo是如何引用js代码的。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>先讲述怎么引用js代码的，完了在通过实战验证。</p>\n<h4 id=\"引用方式\"><a href=\"#引用方式\" class=\"headerlink\" title=\"引用方式\"></a>引用方式</h4><p>Hexo+Next通过渲染模板（.swig）以及md文件生成对应的html页面，那么问题就来了，既然是模板，肯定会有一个base文件，这里就不做详述了，直接说：<strong>blog/themes/next/layout/_layout.swig</strong>。<br>打开这个文件，会发现里面整个页面渲染的框架以及对第三方文件的引用，看下引用js文件代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;_scripts/next-boot.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_scripts/scroll-cookie.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_scripts/exturl.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/quicklink.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/comments/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/search/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/analytics/lean-analytics.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/analytics/firestore.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/math/index.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/pdf.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/mermaid.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/baidu-push.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/schedule.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/needsharebutton.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/rating.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/pangu.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/bookmark.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/copy-code.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/chatra.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% include &apos;_third-party/tidio.swig&apos; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_magic.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/theme_change.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>还是通过传统的方式引用js代码，相对应的<strong>script</strong>直接引用的是js文件，而<strong>include</strong>引用的是swig文件，来点代码看下swig文件里面写的是啥，例子我取的是<strong>blog/themes/next/layout/post.swig</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &apos;_layout.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% import &apos;_macro/post.swig&apos; as post_template %&#125;</span><br><span class=\"line\">&#123;% import &apos;_macro/sidebar.swig&apos; as sidebar_template %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block title %&#125;&#123;&#123; page.title &#125;&#125; | &#123;&#123; title &#125;&#125;&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block page_class %&#125;page-post-detail&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt;</span><br><span class=\"line\">    &#123;&#123; post_template.render(page) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block sidebar %&#125;</span><br><span class=\"line\">  &#123;&#123; sidebar_template.render(true) &#125;&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block script_extra %&#125;</span><br><span class=\"line\">  &#123;% include &apos;_scripts/pages/post-details.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>里面存放的是html（标签+css）+一些next主题带的语法。<br>说了这么多，到底咋搞。。。。只需要2步：<br><div class=\"note info\">\n            <ul><li>在<strong>blog/themes/next/source/js/src</strong>目录下建立一个js文件，名称自取。</li><li>在<strong>blog/themes/next/layout/_layout.swig</strong>文件中通过<strong>script</strong>引用自定义的js文件。</li></ul>\n          </div></p>\n<h4 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h4><p>通过一个切换主题的功能来实现上述。</p>\n<ul>\n<li><p>首先，在自定义的header文件：<strong>blog/themes/next/layout/_custom/header.swig</strong>，加入一个button，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button id=&quot;theme_change&quot;</span><br><span class=\"line\">        class=&quot;theme_change&quot;</span><br><span class=\"line\">        type=&quot;button&quot;</span><br><span class=\"line\">        onclick=&quot;theme_change()&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">    暗黑系</span><br><span class=\"line\">&lt;/button&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来定义button按钮的样式，打开自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong>，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 功能按钮样式</span><br><span class=\"line\">.theme_change &#123;</span><br><span class=\"line\">    width: 160px;</span><br><span class=\"line\">    height: 37px;</span><br><span class=\"line\">    border-radius: 50px 50px 50px 50px;</span><br><span class=\"line\">    color: white;</span><br><span class=\"line\">    font-size: 16px;</span><br><span class=\"line\">    background-color: #333333;</span><br><span class=\"line\">    margin-left: 40px;</span><br><span class=\"line\">    margin-bottom: 20px;</span><br><span class=\"line\">    border: 3px solid red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在刚才说的自定义js代码目录下新建一个theme_change.js文件，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 主题切换功能</span><br><span class=\"line\">function theme_change() &#123;</span><br><span class=\"line\">    // 切换字内容</span><br><span class=\"line\">    var button = document.getElementById(&apos;theme_change&apos;);</span><br><span class=\"line\">    var pattern = new RegExp(&apos;暗黑系&apos;, &apos;i&apos;);</span><br><span class=\"line\">    if (pattern.test(button.innerHTML))&#123;</span><br><span class=\"line\">        button.innerHTML = &quot;光明系&quot;;</span><br><span class=\"line\">    &#125; else&#123;</span><br><span class=\"line\">        button.innerHTML = &quot;暗黑系&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 切换主题</span><br><span class=\"line\">    document.body.classList.toggle(&apos;dark-theme&apos;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写暗黑主题的样式，还是自定义样式文件，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 自制主题切换功能样式</span><br><span class=\"line\">body.dark-theme &#123;</span><br><span class=\"line\">    background: #282c34</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最后一步，自定义js文件的引用。打开<strong>blog/themes/next/layout/_layout.swig</strong>文件，在底部<strong>结束body标签</strong>上面引用，代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/theme_change.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong><em>hexo g &amp;&amp; hexo s</em></strong></p>\n</li>\n</ul>\n<p>不出意外，会有一个简单的主题切换功能，样式我也是简单改变了一下背景色，有兴趣的同学可以编写2套Next主题自定义样式。</p>\n<div class=\"note info\">\n            <h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>切换主题的功能有个问题，只能改变当前page的主题，切换新的page之后，恢复到初始化主题，没有后台管理的原因记录不了当前的主题状态，待解决。</p>\n          </div>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><font color=\"red\" size=\"5\"><strong><em>既然做，不说要一定做到最好，起码不能糊弄，与其糊弄还不如不做！！！</em></strong></font>"},{"title":"hexo展示文章统计-hexo-symbols-count-time","desc":"hexo展示文章统计-hexo-symbols-count-time","comments":0,"keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-symbols-count-time, 统计, 字数统计, 阅读时长","abbrlink":16195,"date":"2018-11-24T08:52:30.000Z","updated":"2019-12-21T13:52:30.000Z","_content":"\n### 问题简述\n{% note success %}\nnext主题的blog添加文章统计功能【hexo-symbols-count-time】\n{% endnote %}\n\n<!-- more -->\n\n<hr />\n\n***My blog***采用next主题，想在发布的文章中加上通统计相关的展示，google许多文章，都是关于配置hexo-wordcount、LeanCloud等，发现配置之后，仍然没有效果。身为一名程序猿，怎么可能有解决不的bug，下面是我的解决方案，官方配置。\n\n### 版本信息\n| id  | name | version |\n| :---: | :----: | :-------: |\n| 1   | Hexo | v3.8.0  |\n| 2    |   NextT.Pisces   |     v7.0.1    |\n\n### 解决方案\n去查next主题的_config.yml文件，一点点看。终于在347行发现了***# Post wordcount display settings***这一行说明，继续阅读发现hexo-symbols-count-time这个插件，立马google，官方解释：\n![hexo-symbols-count-time](hexo-symbols-count-time.png)\n大致的意思是统计文章的符号数量以及阅读时间，比hexo-reading-time更美观，比hexo-worcount统计的更快，而且还没有依赖。这是非常爽的啊，只需要按配置一下，OK了啊。\n\n#### 安装\n\n```\nnpm install hexo-symbols-count-time --save\n```\n\n#### blog配置文件\n\n⁍ next找到_config.yml的配置，添加以下内容：\n```\n# 文章统计\nsymbols_count_time:\n #文章内是否显示\n  symbols: true\n  time: true\n # 网页底部是否显示\n  total_symbols: true\n  total_time: true\n```\n\n#### theme配置文件\n\n⁍ next找到_config.yml的配置，搜索关键字：hexo-symbols-count-time\n```\nsymbols_count_time:\n  separated_meta: true\n  item_text_post: true\n  item_text_total: false\n  awl: 4\n  wpm: 275\n```\n\n#### 说明\n\nAWL — Average Word Length (chars count in word). Default: 4. You can check this here.\n    CN ≈ 2\n    EN ≈ 5\n    RU ≈ 6\nWPM — Words Per Minute. Default: 275. You can check this here.\n    Slow ≈ 200\n    Normal ≈ 275\n    Fast ≈ 350\n\n### 相关文章\n\n***hexo-wordcount：***https://www.jianshu.com/p/baea8c95e39b\n***hexo-symbols-count-time：***https://github.com/theme-next/hexo-symbols-count-time\n\n### 个人观点\n\n* 搞开发的英语看的能力起码得有基础，不然解决bug，看官方api的时候很费劲\n* 搞一个东西的时候，先从本身查找能否解决问题，如果不能在考虑从外部引用解决问题\n","source":"_posts/Hexo-展示文章统计-hexo-symbols-count-time.md","raw":"---\ntitle: hexo展示文章统计-hexo-symbols-count-time\ndesc: hexo展示文章统计-hexo-symbols-count-time\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件]\ncomments: false\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-symbols-count-time, 统计, 字数统计, 阅读时长\nabbrlink: 16195\ndate: 2018-11-24 16:52:30\nupdated: 2019-12-21 21:52:30\n---\n\n### 问题简述\n{% note success %}\nnext主题的blog添加文章统计功能【hexo-symbols-count-time】\n{% endnote %}\n\n<!-- more -->\n\n<hr />\n\n***My blog***采用next主题，想在发布的文章中加上通统计相关的展示，google许多文章，都是关于配置hexo-wordcount、LeanCloud等，发现配置之后，仍然没有效果。身为一名程序猿，怎么可能有解决不的bug，下面是我的解决方案，官方配置。\n\n### 版本信息\n| id  | name | version |\n| :---: | :----: | :-------: |\n| 1   | Hexo | v3.8.0  |\n| 2    |   NextT.Pisces   |     v7.0.1    |\n\n### 解决方案\n去查next主题的_config.yml文件，一点点看。终于在347行发现了***# Post wordcount display settings***这一行说明，继续阅读发现hexo-symbols-count-time这个插件，立马google，官方解释：\n![hexo-symbols-count-time](hexo-symbols-count-time.png)\n大致的意思是统计文章的符号数量以及阅读时间，比hexo-reading-time更美观，比hexo-worcount统计的更快，而且还没有依赖。这是非常爽的啊，只需要按配置一下，OK了啊。\n\n#### 安装\n\n```\nnpm install hexo-symbols-count-time --save\n```\n\n#### blog配置文件\n\n⁍ next找到_config.yml的配置，添加以下内容：\n```\n# 文章统计\nsymbols_count_time:\n #文章内是否显示\n  symbols: true\n  time: true\n # 网页底部是否显示\n  total_symbols: true\n  total_time: true\n```\n\n#### theme配置文件\n\n⁍ next找到_config.yml的配置，搜索关键字：hexo-symbols-count-time\n```\nsymbols_count_time:\n  separated_meta: true\n  item_text_post: true\n  item_text_total: false\n  awl: 4\n  wpm: 275\n```\n\n#### 说明\n\nAWL — Average Word Length (chars count in word). Default: 4. You can check this here.\n    CN ≈ 2\n    EN ≈ 5\n    RU ≈ 6\nWPM — Words Per Minute. Default: 275. You can check this here.\n    Slow ≈ 200\n    Normal ≈ 275\n    Fast ≈ 350\n\n### 相关文章\n\n***hexo-wordcount：***https://www.jianshu.com/p/baea8c95e39b\n***hexo-symbols-count-time：***https://github.com/theme-next/hexo-symbols-count-time\n\n### 个人观点\n\n* 搞开发的英语看的能力起码得有基础，不然解决bug，看官方api的时候很费劲\n* 搞一个东西的时候，先从本身查找能否解决问题，如果不能在考虑从外部引用解决问题\n","slug":"Hexo-展示文章统计-hexo-symbols-count-time","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2se002ytabj3abks7pg","content":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>next主题的blog添加文章统计功能【hexo-symbols-count-time】</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p><strong><em>My blog</em></strong>采用next主题，想在发布的文章中加上通统计相关的展示，google许多文章，都是关于配置hexo-wordcount、LeanCloud等，发现配置之后，仍然没有效果。身为一名程序猿，怎么可能有解决不的bug，下面是我的解决方案，官方配置。</p>\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>去查next主题的_config.yml文件，一点点看。终于在347行发现了<strong><em># Post wordcount display settings</em></strong>这一行说明，继续阅读发现hexo-symbols-count-time这个插件，立马google，官方解释：<br><img src=\"hexo-symbols-count-time.png\" alt=\"hexo-symbols-count-time\"><br>大致的意思是统计文章的符号数量以及阅读时间，比hexo-reading-time更美观，比hexo-worcount统计的更快，而且还没有依赖。这是非常爽的啊，只需要按配置一下，OK了啊。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"blog配置文件\"><a href=\"#blog配置文件\" class=\"headerlink\" title=\"blog配置文件\"></a>blog配置文件</h4><p>⁍ next找到_config.yml的配置，添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章统计</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\"> #文章内是否显示</span><br><span class=\"line\">  symbols: true</span><br><span class=\"line\">  time: true</span><br><span class=\"line\"> # 网页底部是否显示</span><br><span class=\"line\">  total_symbols: true</span><br><span class=\"line\">  total_time: true</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"theme配置文件\"><a href=\"#theme配置文件\" class=\"headerlink\" title=\"theme配置文件\"></a>theme配置文件</h4><p>⁍ next找到_config.yml的配置，搜索关键字：hexo-symbols-count-time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  separated_meta: true</span><br><span class=\"line\">  item_text_post: true</span><br><span class=\"line\">  item_text_total: false</span><br><span class=\"line\">  awl: 4</span><br><span class=\"line\">  wpm: 275</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>AWL — Average Word Length (chars count in word). Default: 4. You can check this here.<br>    CN ≈ 2<br>    EN ≈ 5<br>    RU ≈ 6<br>WPM — Words Per Minute. Default: 275. You can check this here.<br>    Slow ≈ 200<br>    Normal ≈ 275<br>    Fast ≈ 350</p>\n<h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><p><strong><em>hexo-wordcount：</em></strong><a href=\"https://www.jianshu.com/p/baea8c95e39b\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/baea8c95e39b</a><br><strong><em>hexo-symbols-count-time：</em></strong><a href=\"https://github.com/theme-next/hexo-symbols-count-time\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-symbols-count-time</a></p>\n<h3 id=\"个人观点\"><a href=\"#个人观点\" class=\"headerlink\" title=\"个人观点\"></a>个人观点</h3><ul>\n<li>搞开发的英语看的能力起码得有基础，不然解决bug，看官方api的时候很费劲</li>\n<li>搞一个东西的时候，先从本身查找能否解决问题，如果不能在考虑从外部引用解决问题</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p>next主题的blog添加文章统计功能【hexo-symbols-count-time】</p>\n          </div>","more":"<hr>\n\n<p><strong><em>My blog</em></strong>采用next主题，想在发布的文章中加上通统计相关的展示，google许多文章，都是关于配置hexo-wordcount、LeanCloud等，发现配置之后，仍然没有效果。身为一名程序猿，怎么可能有解决不的bug，下面是我的解决方案，官方配置。</p>\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>去查next主题的_config.yml文件，一点点看。终于在347行发现了<strong><em># Post wordcount display settings</em></strong>这一行说明，继续阅读发现hexo-symbols-count-time这个插件，立马google，官方解释：<br><img src=\"hexo-symbols-count-time.png\" alt=\"hexo-symbols-count-time\"><br>大致的意思是统计文章的符号数量以及阅读时间，比hexo-reading-time更美观，比hexo-worcount统计的更快，而且还没有依赖。这是非常爽的啊，只需要按配置一下，OK了啊。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"blog配置文件\"><a href=\"#blog配置文件\" class=\"headerlink\" title=\"blog配置文件\"></a>blog配置文件</h4><p>⁍ next找到_config.yml的配置，添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章统计</span><br><span class=\"line\">symbols_count_time:</span><br><span class=\"line\"> #文章内是否显示</span><br><span class=\"line\">  symbols: true</span><br><span class=\"line\">  time: true</span><br><span class=\"line\"> # 网页底部是否显示</span><br><span class=\"line\">  total_symbols: true</span><br><span class=\"line\">  total_time: true</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"theme配置文件\"><a href=\"#theme配置文件\" class=\"headerlink\" title=\"theme配置文件\"></a>theme配置文件</h4><p>⁍ next找到_config.yml的配置，搜索关键字：hexo-symbols-count-time<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  separated_meta: true</span><br><span class=\"line\">  item_text_post: true</span><br><span class=\"line\">  item_text_total: false</span><br><span class=\"line\">  awl: 4</span><br><span class=\"line\">  wpm: 275</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>AWL — Average Word Length (chars count in word). Default: 4. You can check this here.<br>    CN ≈ 2<br>    EN ≈ 5<br>    RU ≈ 6<br>WPM — Words Per Minute. Default: 275. You can check this here.<br>    Slow ≈ 200<br>    Normal ≈ 275<br>    Fast ≈ 350</p>\n<h3 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h3><p><strong><em>hexo-wordcount：</em></strong><a href=\"https://www.jianshu.com/p/baea8c95e39b\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/baea8c95e39b</a><br><strong><em>hexo-symbols-count-time：</em></strong><a href=\"https://github.com/theme-next/hexo-symbols-count-time\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-symbols-count-time</a></p>\n<h3 id=\"个人观点\"><a href=\"#个人观点\" class=\"headerlink\" title=\"个人观点\"></a>个人观点</h3><ul>\n<li>搞开发的英语看的能力起码得有基础，不然解决bug，看官方api的时候很费劲</li>\n<li>搞一个东西的时候，先从本身查找能否解决问题，如果不能在考虑从外部引用解决问题</li>\n</ul>"},{"title":"Hexo基础命令学习","comments":0,"desc":"关于Hexo基础命令学习记录","keywords":"hexo, next, Hexo, 博客, blog, 基础命令","abbrlink":39009,"date":"2018-10-23T15:11:48.000Z","updated":"2018-10-23T15:11:48.000Z","_content":"\n#### 简介\n{% note success %}\n昨天写了blog的初始化搭建(hexo + next)，乘胜追击，学习查看了一些hexo基础的命令，总结一下分享。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n基于官方的手册，很基础，加了一些自己的见解。\n\n![hexo_help](hexo_help.png)\n\n\n#### 预览\n\n| id  |   name   |     brief      | frequency |\n|:---:|:--------:|:--------------:|:---------:|\n|  1  |   init   |     初始化     |    🌟     |\n|  2  |   new    |    新建文章    |  🌟🌟🌟   |\n|  3  | generate |  生产静态文件  |  🌟🌟🌟   |\n|  4  | publish  |    草稿发布    |    🌟     |\n|  5  |  server  |    启动服务    |   🌟🌟    |\n|  6  |  deploy  |    部署网站    |   🌟🌟    |\n|  7  |  rende   |    渲染文件    |    🌟     |\n|  8  |  clean   |    清除缓存    |    🌟     |\n|  9  |   list   |  列出网站资料  |    🌟     |\n| 10  | version  | 显示 Hexo 版本 |    🌟     |\n| 11  | --debug  |   debug模式    |  🌟🌟🌟   |\n\n#### 正文\n\n> init\n```\n$ hexo init [folder]\n```\n新建一个网站。folder文件夹已存在，会重新建里一个新的blog，主要用户初始化。\n\n> new\n\n```\n$ hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。**如果标题包含空格的话，请使用引号括起来。**\n一般情况有3种，page、post、draft\n\n> generate\n\n```\n$ hexo generate\n$ hexo g\n```\n生成静态文件，用于打包，第二行是简写。\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\n> publish\n\n```\n$ hexo publish [layout] <filename>\n$ hexo publish draft 常用语\n```\n发表草稿，就是通过hexo new draft建立的文章。\n\n> server\n\n```\n$ hexo server\n$ hexo s\n```\n启动服务器。默认情况下，访问网址为： http://127.0.0.1:4000/。\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\n> deploy\n\n```\n$ hexo deploy\n$ hexo d\n```\n部署网站，第二行简写。\n\n参数\t描述\n-g, --generate\t部署之前预先生成静态文件\n\n> render\n\n```\n$ hexo render <file1> [file2] ...\n```\n渲染文件。\n\n参数\t描述\n-o, --output\t设置输出路径\n\n> migrate\n\n```\n$ hexo migrate <type>\n```\n从其他博客系统 迁移内容，***还没用过***。\n\n> clean\n\n```\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n> list\n\n```\n$ hexo list <type>\n```\n列出网站资料，types：page，post，route，tag，category。\n![hexo_list](hexo_list.png)\n\n> version\n\n```\n$ hexo version\n```\n显示 Hexo 版本。\n![hexo_version](hexo_version.png)\n\n> 选项\n\n- 安全模式\n```\n$ hexo --safe\n```\n在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。\n\n- 调试模式\n```\n$ hexo --debug\n```\n在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并提交调试信息到 GitHub。\n\n- 简洁模式\n```\n$ hexo --silent\n```\n隐藏终端信息。\n\n- 自定义配置文件的路径\n```\n$ hexo --config custom.yml\n```\n自定义配置文件的路径，执行后将不再使用 _config.yml。\n\n- 显示草稿\n```\n$ hexo --draft\n```\n显示 source/_drafts 文件夹中的草稿文章。\n\n- 自定义 CWD\n```\n$ hexo --cwd /path/to/cwd\n```\n自定义当前工作目录（Current working directory）的路径。\n\n#### 个人建议\n\n- 命令一\n```\nhexo server -p 8888 --debug --draft\n```\n以-p参数指定服务的端口启动，加上--debug模式，便与调试\n--draft 可以把草稿的文章也加载显示\n\n- 命令二\n```\nhexo g -d\n```\n重新生产静态文件并上传github.io，刷新github的网站。\n\n#### 参考\n\n[hexo官网](https://hexo.io/zh-cn/docs/commands.html)\n","source":"_posts/Hexo-基础命令学习.md","raw":"---\ntitle: Hexo基础命令学习\ncomments: false\ndesc: 关于Hexo基础命令学习记录\ncategories:\n  - [Hexo]\ntags: [Hexo]\nkeywords: hexo, next, Hexo, 博客, blog, 基础命令\nabbrlink: 39009\ndate: 2018-10-23 23:11:48\nupdated: 2018-10-23 23:11:48\n---\n\n#### 简介\n{% note success %}\n昨天写了blog的初始化搭建(hexo + next)，乘胜追击，学习查看了一些hexo基础的命令，总结一下分享。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n基于官方的手册，很基础，加了一些自己的见解。\n\n![hexo_help](hexo_help.png)\n\n\n#### 预览\n\n| id  |   name   |     brief      | frequency |\n|:---:|:--------:|:--------------:|:---------:|\n|  1  |   init   |     初始化     |    🌟     |\n|  2  |   new    |    新建文章    |  🌟🌟🌟   |\n|  3  | generate |  生产静态文件  |  🌟🌟🌟   |\n|  4  | publish  |    草稿发布    |    🌟     |\n|  5  |  server  |    启动服务    |   🌟🌟    |\n|  6  |  deploy  |    部署网站    |   🌟🌟    |\n|  7  |  rende   |    渲染文件    |    🌟     |\n|  8  |  clean   |    清除缓存    |    🌟     |\n|  9  |   list   |  列出网站资料  |    🌟     |\n| 10  | version  | 显示 Hexo 版本 |    🌟     |\n| 11  | --debug  |   debug模式    |  🌟🌟🌟   |\n\n#### 正文\n\n> init\n```\n$ hexo init [folder]\n```\n新建一个网站。folder文件夹已存在，会重新建里一个新的blog，主要用户初始化。\n\n> new\n\n```\n$ hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。**如果标题包含空格的话，请使用引号括起来。**\n一般情况有3种，page、post、draft\n\n> generate\n\n```\n$ hexo generate\n$ hexo g\n```\n生成静态文件，用于打包，第二行是简写。\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\n> publish\n\n```\n$ hexo publish [layout] <filename>\n$ hexo publish draft 常用语\n```\n发表草稿，就是通过hexo new draft建立的文章。\n\n> server\n\n```\n$ hexo server\n$ hexo s\n```\n启动服务器。默认情况下，访问网址为： http://127.0.0.1:4000/。\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\n> deploy\n\n```\n$ hexo deploy\n$ hexo d\n```\n部署网站，第二行简写。\n\n参数\t描述\n-g, --generate\t部署之前预先生成静态文件\n\n> render\n\n```\n$ hexo render <file1> [file2] ...\n```\n渲染文件。\n\n参数\t描述\n-o, --output\t设置输出路径\n\n> migrate\n\n```\n$ hexo migrate <type>\n```\n从其他博客系统 迁移内容，***还没用过***。\n\n> clean\n\n```\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n> list\n\n```\n$ hexo list <type>\n```\n列出网站资料，types：page，post，route，tag，category。\n![hexo_list](hexo_list.png)\n\n> version\n\n```\n$ hexo version\n```\n显示 Hexo 版本。\n![hexo_version](hexo_version.png)\n\n> 选项\n\n- 安全模式\n```\n$ hexo --safe\n```\n在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。\n\n- 调试模式\n```\n$ hexo --debug\n```\n在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并提交调试信息到 GitHub。\n\n- 简洁模式\n```\n$ hexo --silent\n```\n隐藏终端信息。\n\n- 自定义配置文件的路径\n```\n$ hexo --config custom.yml\n```\n自定义配置文件的路径，执行后将不再使用 _config.yml。\n\n- 显示草稿\n```\n$ hexo --draft\n```\n显示 source/_drafts 文件夹中的草稿文章。\n\n- 自定义 CWD\n```\n$ hexo --cwd /path/to/cwd\n```\n自定义当前工作目录（Current working directory）的路径。\n\n#### 个人建议\n\n- 命令一\n```\nhexo server -p 8888 --debug --draft\n```\n以-p参数指定服务的端口启动，加上--debug模式，便与调试\n--draft 可以把草稿的文章也加载显示\n\n- 命令二\n```\nhexo g -d\n```\n重新生产静态文件并上传github.io，刷新github的网站。\n\n#### 参考\n\n[hexo官网](https://hexo.io/zh-cn/docs/commands.html)\n","slug":"Hexo-基础命令学习","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2sj0031tabjqgaouvd1","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note success\">\n            <p>昨天写了blog的初始化搭建(hexo + next)，乘胜追击，学习查看了一些hexo基础的命令，总结一下分享。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>基于官方的手册，很基础，加了一些自己的见解。</p>\n<p><img src=\"hexo_help.png\" alt=\"hexo_help\"></p>\n<h4 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">brief</th>\n<th style=\"text-align:center\">frequency</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">init</td>\n<td style=\"text-align:center\">初始化</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">new</td>\n<td style=\"text-align:center\">新建文章</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">generate</td>\n<td style=\"text-align:center\">生产静态文件</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">publish</td>\n<td style=\"text-align:center\">草稿发布</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">server</td>\n<td style=\"text-align:center\">启动服务</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">deploy</td>\n<td style=\"text-align:center\">部署网站</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">rende</td>\n<td style=\"text-align:center\">渲染文件</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">clean</td>\n<td style=\"text-align:center\">清除缓存</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">list</td>\n<td style=\"text-align:center\">列出网站资料</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">version</td>\n<td style=\"text-align:center\">显示 Hexo 版本</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">–debug</td>\n<td style=\"text-align:center\">debug模式</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><blockquote>\n<p>init<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>新建一个网站。folder文件夹已存在，会重新建里一个新的blog，主要用户初始化。</p>\n<blockquote>\n<p>new</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。<strong>如果标题包含空格的话，请使用引号括起来。</strong><br>一般情况有3种，page、post、draft</p>\n<blockquote>\n<p>generate</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n<p>生成静态文件，用于打包，第二行是简写。<br>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<blockquote>\n<p>publish</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br><span class=\"line\">$ hexo publish draft 常用语</span><br></pre></td></tr></table></figure>\n<p>发表草稿，就是通过hexo new draft建立的文章。</p>\n<blockquote>\n<p>server</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为： <a href=\"http://127.0.0.1:4000/。\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:4000/。</a><br>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<blockquote>\n<p>deploy</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<p>部署网站，第二行简写。</p>\n<p>参数    描述<br>-g, –generate    部署之前预先生成静态文件</p>\n<blockquote>\n<p>render</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<p>参数    描述<br>-o, –output    设置输出路径</p>\n<blockquote>\n<p>migrate</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 迁移内容，<strong><em>还没用过</em></strong>。</p>\n<blockquote>\n<p>clean</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<blockquote>\n<p>list</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料，types：page，post，route，tag，category。<br><img src=\"hexo_list.png\" alt=\"hexo_list\"></p>\n<blockquote>\n<p>version</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。<br><img src=\"hexo_version.png\" alt=\"hexo_version\"></p>\n<blockquote>\n<p>选项</p>\n</blockquote>\n<ul>\n<li>安全模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>\n<ul>\n<li>调试模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并提交调试信息到 GitHub。</p>\n<ul>\n<li>简洁模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>隐藏终端信息。</p>\n<ul>\n<li>自定义配置文件的路径<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>自定义配置文件的路径，执行后将不再使用 _config.yml。</p>\n<ul>\n<li>显示草稿<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>显示 source/_drafts 文件夹中的草稿文章。</p>\n<ul>\n<li>自定义 CWD<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>自定义当前工作目录（Current working directory）的路径。</p>\n<h4 id=\"个人建议\"><a href=\"#个人建议\" class=\"headerlink\" title=\"个人建议\"></a>个人建议</h4><ul>\n<li>命令一<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 8888 --debug --draft</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以-p参数指定服务的端口启动，加上–debug模式，便与调试<br>–draft 可以把草稿的文章也加载显示</p>\n<ul>\n<li>命令二<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>重新生产静态文件并上传github.io，刷新github的网站。</p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://hexo.io/zh-cn/docs/commands.html\" target=\"_blank\" rel=\"noopener\">hexo官网</a></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note success\">\n            <p>昨天写了blog的初始化搭建(hexo + next)，乘胜追击，学习查看了一些hexo基础的命令，总结一下分享。</p>\n          </div>","more":"<hr>\n\n<p>基于官方的手册，很基础，加了一些自己的见解。</p>\n<p><img src=\"hexo_help.png\" alt=\"hexo_help\"></p>\n<h4 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">brief</th>\n<th style=\"text-align:center\">frequency</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">init</td>\n<td style=\"text-align:center\">初始化</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">new</td>\n<td style=\"text-align:center\">新建文章</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">generate</td>\n<td style=\"text-align:center\">生产静态文件</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">publish</td>\n<td style=\"text-align:center\">草稿发布</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">server</td>\n<td style=\"text-align:center\">启动服务</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">deploy</td>\n<td style=\"text-align:center\">部署网站</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">rende</td>\n<td style=\"text-align:center\">渲染文件</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">clean</td>\n<td style=\"text-align:center\">清除缓存</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">list</td>\n<td style=\"text-align:center\">列出网站资料</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">version</td>\n<td style=\"text-align:center\">显示 Hexo 版本</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">–debug</td>\n<td style=\"text-align:center\">debug模式</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><blockquote>\n<p>init<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>新建一个网站。folder文件夹已存在，会重新建里一个新的blog，主要用户初始化。</p>\n<blockquote>\n<p>new</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。<strong>如果标题包含空格的话，请使用引号括起来。</strong><br>一般情况有3种，page、post、draft</p>\n<blockquote>\n<p>generate</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n<p>生成静态文件，用于打包，第二行是简写。<br>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<blockquote>\n<p>publish</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br><span class=\"line\">$ hexo publish draft 常用语</span><br></pre></td></tr></table></figure>\n<p>发表草稿，就是通过hexo new draft建立的文章。</p>\n<blockquote>\n<p>server</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为： <a href=\"http://127.0.0.1:4000/。\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:4000/。</a><br>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<blockquote>\n<p>deploy</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<p>部署网站，第二行简写。</p>\n<p>参数    描述<br>-g, –generate    部署之前预先生成静态文件</p>\n<blockquote>\n<p>render</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<p>参数    描述<br>-o, –output    设置输出路径</p>\n<blockquote>\n<p>migrate</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 迁移内容，<strong><em>还没用过</em></strong>。</p>\n<blockquote>\n<p>clean</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<blockquote>\n<p>list</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料，types：page，post，route，tag，category。<br><img src=\"hexo_list.png\" alt=\"hexo_list\"></p>\n<blockquote>\n<p>version</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。<br><img src=\"hexo_version.png\" alt=\"hexo_version\"></p>\n<blockquote>\n<p>选项</p>\n</blockquote>\n<ul>\n<li>安全模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --safe</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>\n<ul>\n<li>调试模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --debug</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并提交调试信息到 GitHub。</p>\n<ul>\n<li>简洁模式<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --silent</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>隐藏终端信息。</p>\n<ul>\n<li>自定义配置文件的路径<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>自定义配置文件的路径，执行后将不再使用 _config.yml。</p>\n<ul>\n<li>显示草稿<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --draft</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>显示 source/_drafts 文件夹中的草稿文章。</p>\n<ul>\n<li>自定义 CWD<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>自定义当前工作目录（Current working directory）的路径。</p>\n<h4 id=\"个人建议\"><a href=\"#个人建议\" class=\"headerlink\" title=\"个人建议\"></a>个人建议</h4><ul>\n<li>命令一<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server -p 8888 --debug --draft</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以-p参数指定服务的端口启动，加上–debug模式，便与调试<br>–draft 可以把草稿的文章也加载显示</p>\n<ul>\n<li>命令二<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>重新生产静态文件并上传github.io，刷新github的网站。</p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><p><a href=\"https://hexo.io/zh-cn/docs/commands.html\" target=\"_blank\" rel=\"noopener\">hexo官网</a></p>"},{"title":"hexo文章添加版权声明","desc":"hexo博客在站内文章添加版权声明","comments":0,"keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 版权声明","abbrlink":46750,"date":"2018-11-09T12:03:24.000Z","updated":"2018-11-09T12:03:24.000Z","_content":"\n![](/images/article_banquanshengming.png)\n\n#### 问题简述\n{% note success %}\n想在***My blog***的文章底部添加上自己的版权声明，一是意识方便大家进行转载share，二来也是对自己写的东西有一个声明吧。废话不多说，很简单。【含样式】\n{% endnote %}\n\n<!--more-->\n<hr />\n\n\n\n#### 版本信息\n\n| id  | name | version |\n| :---: | :----: | :-------: |\n| 1   | Hexo | v3.8.0  |\n| 2    |   NextT.Pisces   |     v7.0.1    |\n\n#### 版权代码\n打开next主题目录下/next/layout/_macro/post.swig文件，搜索***post-body***，在这个div标签结束的下一行，添加以下代码\n```\n<!-- 版权声明 -->\n<div>\n {% if not is_index %}\n    <ul class=\"post-copyright\">\n      <li class=\"post-copyright-author\">\n          <strong>本文作者：</strong>{{ theme.author }}【{{ theme.subtitle }}】\n      </li>\n      <li class=\"post-copyright-link\">\n        <strong>本文链接：</strong>\n        <a href=\"{{ url_for(page.permalink) }}\" title=\"{{ page.title }}\">{{ page.permalink }}</a>\n      </li>\n      <li class=\"post-copyright-license\">\n        <strong>版权声明：</strong>\n        本博客所有文章除特别声明外，均采用 <a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/cn/\" rel=\"external nofollow\" target=\"_blank\">CC BY-NC-SA 3.0 CN</a> 许可协议。转载请注明出处！\n      </li>\n    </ul>\n  {% endif %}\n</div>\n```\n变量说明：\n* theme.*：hexo配置文件的基础信息\n* page.*：指的是本文章的一些相关信息\n\n#### 版权样式\n打开/next/source/css/_custom/custom.styl,并在里面添加如下样式代码:\n```\n// 版权声明样式\n.post-copyright {\n    margin: 2em 0 0;\n    padding: 0.5em 1em;\n    border-left: 8px double #ff1700;\n    background-color: #EAECEE;\n    list-style: none;\n}\n.post-copyright-link a{\n    color: blue;\n}\n.post-copyright-link a:hover {\n    color: red;\n    font-size: 18px;\n}\n```\n\n#### 个人声明\n本人在版权声明中文章链接的都是github上的地址，如果不需要去掉***https://gis90.github.io/***即可。\n","source":"_posts/Hexo-文章添加版权声明.md","raw":"---\ntitle: hexo文章添加版权声明\ndesc: hexo博客在站内文章添加版权声明\ncategories:\n  - [Hexo]\ntags: [Hexo]\ncomments: false\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 版权声明\nabbrlink: 46750\ndate: 2018-11-09 20:03:24\nupdated: 2018-11-09 20:03:24\n---\n\n![](/images/article_banquanshengming.png)\n\n#### 问题简述\n{% note success %}\n想在***My blog***的文章底部添加上自己的版权声明，一是意识方便大家进行转载share，二来也是对自己写的东西有一个声明吧。废话不多说，很简单。【含样式】\n{% endnote %}\n\n<!--more-->\n<hr />\n\n\n\n#### 版本信息\n\n| id  | name | version |\n| :---: | :----: | :-------: |\n| 1   | Hexo | v3.8.0  |\n| 2    |   NextT.Pisces   |     v7.0.1    |\n\n#### 版权代码\n打开next主题目录下/next/layout/_macro/post.swig文件，搜索***post-body***，在这个div标签结束的下一行，添加以下代码\n```\n<!-- 版权声明 -->\n<div>\n {% if not is_index %}\n    <ul class=\"post-copyright\">\n      <li class=\"post-copyright-author\">\n          <strong>本文作者：</strong>{{ theme.author }}【{{ theme.subtitle }}】\n      </li>\n      <li class=\"post-copyright-link\">\n        <strong>本文链接：</strong>\n        <a href=\"{{ url_for(page.permalink) }}\" title=\"{{ page.title }}\">{{ page.permalink }}</a>\n      </li>\n      <li class=\"post-copyright-license\">\n        <strong>版权声明：</strong>\n        本博客所有文章除特别声明外，均采用 <a href=\"http://creativecommons.org/licenses/by-nc-sa/3.0/cn/\" rel=\"external nofollow\" target=\"_blank\">CC BY-NC-SA 3.0 CN</a> 许可协议。转载请注明出处！\n      </li>\n    </ul>\n  {% endif %}\n</div>\n```\n变量说明：\n* theme.*：hexo配置文件的基础信息\n* page.*：指的是本文章的一些相关信息\n\n#### 版权样式\n打开/next/source/css/_custom/custom.styl,并在里面添加如下样式代码:\n```\n// 版权声明样式\n.post-copyright {\n    margin: 2em 0 0;\n    padding: 0.5em 1em;\n    border-left: 8px double #ff1700;\n    background-color: #EAECEE;\n    list-style: none;\n}\n.post-copyright-link a{\n    color: blue;\n}\n.post-copyright-link a:hover {\n    color: red;\n    font-size: 18px;\n}\n```\n\n#### 个人声明\n本人在版权声明中文章链接的都是github上的地址，如果不需要去掉***https://gis90.github.io/***即可。\n","slug":"Hexo-文章添加版权声明","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2so0034tabj3vs5q20z","content":"<p><img src=\"/images/article_banquanshengming.png\" alt></p>\n<h4 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h4><div class=\"note success\">\n            <p>想在<strong><em>My blog</em></strong>的文章底部添加上自己的版权声明，一是意识方便大家进行转载share，二来也是对自己写的东西有一个声明吧。废话不多说，很简单。【含样式】</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n\n\n<h4 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"版权代码\"><a href=\"#版权代码\" class=\"headerlink\" title=\"版权代码\"></a>版权代码</h4><p>打开next主题目录下/next/layout/_macro/post.swig文件，搜索<strong><em>post-body</em></strong>，在这个div标签结束的下一行，添加以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 版权声明 --&gt;</span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\"> &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &lt;ul class=&quot;post-copyright&quot;&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-author&quot;&gt;</span><br><span class=\"line\">          &lt;strong&gt;本文作者：&lt;/strong&gt;&#123;&#123; theme.author &#125;&#125;【&#123;&#123; theme.subtitle &#125;&#125;】</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-link&quot;&gt;</span><br><span class=\"line\">        &lt;strong&gt;本文链接：&lt;/strong&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&#123;&#123; url_for(page.permalink) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-license&quot;&gt;</span><br><span class=\"line\">        &lt;strong&gt;版权声明：&lt;/strong&gt;</span><br><span class=\"line\">        本博客所有文章除特别声明外，均采用 &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/3.0/cn/&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 3.0 CN&lt;/a&gt; 许可协议。转载请注明出处！</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>变量说明：</p>\n<ul>\n<li>theme.*：hexo配置文件的基础信息</li>\n<li>page.*：指的是本文章的一些相关信息</li>\n</ul>\n<h4 id=\"版权样式\"><a href=\"#版权样式\" class=\"headerlink\" title=\"版权样式\"></a>版权样式</h4><p>打开/next/source/css/_custom/custom.styl,并在里面添加如下样式代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 版权声明样式</span><br><span class=\"line\">.post-copyright &#123;</span><br><span class=\"line\">    margin: 2em 0 0;</span><br><span class=\"line\">    padding: 0.5em 1em;</span><br><span class=\"line\">    border-left: 8px double #ff1700;</span><br><span class=\"line\">    background-color: #EAECEE;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.post-copyright-link a&#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.post-copyright-link a:hover &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">    font-size: 18px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"个人声明\"><a href=\"#个人声明\" class=\"headerlink\" title=\"个人声明\"></a>个人声明</h4><p>本人在版权声明中文章链接的都是github上的地址，如果不需要去掉<strong><em><a href=\"https://gis90.github.io/\" target=\"_blank\" rel=\"noopener\">https://gis90.github.io/</a></em></strong>即可。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_banquanshengming.png\" alt></p>\n<h4 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h4><div class=\"note success\">\n            <p>想在<strong><em>My blog</em></strong>的文章底部添加上自己的版权声明，一是意识方便大家进行转载share，二来也是对自己写的东西有一个声明吧。废话不多说，很简单。【含样式】</p>\n          </div>","more":"<hr>\n\n\n\n<h4 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"版权代码\"><a href=\"#版权代码\" class=\"headerlink\" title=\"版权代码\"></a>版权代码</h4><p>打开next主题目录下/next/layout/_macro/post.swig文件，搜索<strong><em>post-body</em></strong>，在这个div标签结束的下一行，添加以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 版权声明 --&gt;</span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\"> &#123;% if not is_index %&#125;</span><br><span class=\"line\">    &lt;ul class=&quot;post-copyright&quot;&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-author&quot;&gt;</span><br><span class=\"line\">          &lt;strong&gt;本文作者：&lt;/strong&gt;&#123;&#123; theme.author &#125;&#125;【&#123;&#123; theme.subtitle &#125;&#125;】</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-link&quot;&gt;</span><br><span class=\"line\">        &lt;strong&gt;本文链接：&lt;/strong&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&#123;&#123; url_for(page.permalink) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">      &lt;li class=&quot;post-copyright-license&quot;&gt;</span><br><span class=\"line\">        &lt;strong&gt;版权声明：&lt;/strong&gt;</span><br><span class=\"line\">        本博客所有文章除特别声明外，均采用 &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/3.0/cn/&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&gt;CC BY-NC-SA 3.0 CN&lt;/a&gt; 许可协议。转载请注明出处！</span><br><span class=\"line\">      &lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>变量说明：</p>\n<ul>\n<li>theme.*：hexo配置文件的基础信息</li>\n<li>page.*：指的是本文章的一些相关信息</li>\n</ul>\n<h4 id=\"版权样式\"><a href=\"#版权样式\" class=\"headerlink\" title=\"版权样式\"></a>版权样式</h4><p>打开/next/source/css/_custom/custom.styl,并在里面添加如下样式代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 版权声明样式</span><br><span class=\"line\">.post-copyright &#123;</span><br><span class=\"line\">    margin: 2em 0 0;</span><br><span class=\"line\">    padding: 0.5em 1em;</span><br><span class=\"line\">    border-left: 8px double #ff1700;</span><br><span class=\"line\">    background-color: #EAECEE;</span><br><span class=\"line\">    list-style: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.post-copyright-link a&#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.post-copyright-link a:hover &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">    font-size: 18px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"个人声明\"><a href=\"#个人声明\" class=\"headerlink\" title=\"个人声明\"></a>个人声明</h4><p>本人在版权声明中文章链接的都是github上的地址，如果不需要去掉<strong><em><a href=\"https://gis90.github.io/\" target=\"_blank\" rel=\"noopener\">https://gis90.github.io/</a></em></strong>即可。</p>"},{"title":"Hexo拓展-插件篇","comments":0,"top":false,"desc":"关于Hexo搭建的博客拓展篇，关于博客用到的插件","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, plug, 插件, hexo-tag-echarts, hexo-admin, hexo-blog-encrypt","abbrlink":36954,"date":"2019-01-26T15:30:04.000Z","updated":"2019-07-26T15:30:04.000Z","_content":"\n<font color=\"red\" size=\"5\">***持续更新中～～～***</font>\n\n### 简介\n{% note success %}\n> 网站安装了许多插件，**hexo-symbols-count-time、hexo-tag-cloud、hexo-helper-live2d**等等，不止给站点增加了很多强大的功能以及给博文美化方面添加了不少样式、便利，我也一一记录下了常用的插件并写成文章发表。\n> 但是去Hexo官方，看了一下插件，居然有290多个，也不能想Next主题内置的tags功能一样，每个都去尝试一下，起码把自己尝试的记录下来，与大家一起进行分享。\n{% endnote %}\n\n<!-- more -->\n\n<hr />\n\n### 正文\n\n1. #### hexo-tag-echarts\n\n    > 作用\n\n    集成echart到博客中，用于数据展示，非常好用。\n\n    > 示例\n\n    ![hexo-tag-echarts](hexo-tag-echarts.png)\n\n    > 代码\n\n    ```\n    {% echarts 400 '85%' %}\n    {\n        color: ['#F39C12'],\n        tooltip : {\n            trigger: 'axis',\n            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n        },\n        xAxis : [\n            {\n                type : 'category',\n                data : ['Python','Linux','Hexo','LDAP','娱乐','影视说','旅行记','其他'],\n                axisTick: {\n                    alignWithLabel: true\n                }\n            }\n        ],\n        yAxis : [\n            {\n                type : 'value'\n            }\n        ],\n        series : [\n            {\n                name:'直接访问',\n                type:'bar',\n                barWidth: '60%',\n                data: [9, 2, 17, 2, 3, 2, 2, 5]\n            }\n        ]\n    };\n    {% endecharts %}\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-tag-echarts %}\n    <!-- tab hexo-tag-echarts安装 -->\n    {% code %}\n    npm install hexo-tag-echarts3 --save\n    {% endcode %}\n    <!-- endtab -->\n    <!-- tab hexo-tag-echarts说明 -->\n    1 || 展示的数据需要自己进行计算。\n    2 || echarts-endecharts 需要2个参数：容器高度、相对宽度。\n    3 || 这个插件的js有点问题，需要加些代码到文件：node_modules/hexo-tag-echarts/echarts-template.html，具体请查看官方手册。\n    <!-- endtab -->\n    <!-- tab hexo-tag-echarts资料 -->\n    hexo-tag-echarts3：https://github.com/kchen0x/hexo-tag-echarts3\n    echart：https://echarts.baidu.com/examples/\n    <!-- endtab -->\n    {% endtabs %}\n\n    {% endnote %}\n\n2. #### hexo-admin\n\n    > 作用\n\n    hexo站点的后台管理。\n\n    > 示例\n\n    ![hexo-admin](hexo-admin.png)\n\n    > 部署\n\n    - 安装插件\n    ```\n    npm install --save hexo-admin\n    ```\n    - 启动服务\n    ```\n    hexo s\n    ```\n    - 生成密码\n    打开***http://127.0.0.1:8888/admin/***，找到**setting**菜单栏，找到***Setup authentification here***，点击->输入用户名、密码、密钥，在最下面有生成的配置信息。\n    - 配置\n    打开blog/_config.yml文件，把上面生成的信息新增到配置文件最后。\n    ```\n    # admin后台user、password\n    admin:\n      username: pygo\n      password_hash: $2a$10$h6ZFY9yMv.wIhd0aPQ/O4eB3k/zFiBj3aH0Zou8T9QK/H8e/Y/hUO\n      secret: wuyananismywife\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-admin %}\n\n    <!-- tab hexo-admin说明 -->\n    1 || 切记是Hexo站点配置文件。\n    <!-- endtab -->\n    <!-- tab hexo-admin资料 -->\n    https://github.com/jaredly/hexo-admin\n    <!-- endtab -->\n    {% endtabs %}\n\n    {% endnote %}\n\n\n3. #### hexo-blog-encrypt\n\n    > 作用\n\n    文章加密。\n\n    > 示例\n\n    ![hexo-blog-encrypt](hexo-blog-encrypt.png)\n\n    > 部署\n\n    - 安装插件\n    ```\n    npm install --save hexo-blog-encrypt\n    ```\n    - Hexo配置\n    打开Hexo站点配置文件：blog/_config.yml，新增配置：\n    ```\n    # 文章加密功能\n    encrypt:\n        enable: true\n    ```\n    - 文章配置\n    打开一篇需要进行加密的.md文件，在顶部描述加入以下代码：\n    ```\n    password: 0803\n    abstract: <div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>\n    message: 密码提示：生日\n    ```\n        + password：博客密码\n        + abstract：home主页显示的文字提示\n        + message：查看博客，密码输入框上面的描述性文字\n    - 启动服务\n    ```\n    hexo s\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-blog-encrypt %}\n\n    <!-- tab hexo-blog-encrypt说明 -->\n    1 || 切记是Hexo站点配置文件。\n    <!-- endtab -->\n    <!-- tab hexo-blog-encrypt资料 -->\n    https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md\n    <!-- endtab -->\n    {% endtabs %}\n\n    <font size=\"4\" color=\"red\">**自定义样式**</font>\n    关于加密的abstract && message样式比较难看，本人自定义了的样式，参考如下：\n    {% code %}\n    // 加密abstract样式\n    .article_encrypt_abstract {\n        text-align: center;\n        color: #FFBE3D;\n        font-size: 28px;\n        -webkit-text-stroke: 1.2px #000000;\n    }\n    // 加密message样式\n    .hbe-input-container label {\n        color: deeppink!important;\n        font-size: 32px!important;\n        text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n    }\n    {% endcode %}\n\n    自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**\n    {% endnote %}\n","source":"_posts/Hexo-拓展-插件篇.md","raw":"---\ntitle: Hexo拓展-插件篇\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件, Hexo美化]\ntop: false\ndesc: 关于Hexo搭建的博客拓展篇，关于博客用到的插件\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, plug, 插件, hexo-tag-echarts, hexo-admin, hexo-blog-encrypt\nabbrlink: 36954\ndate: 2019-01-26 23:30:04\nupdated: 2019-07-26 23:30:04\n---\n\n<font color=\"red\" size=\"5\">***持续更新中～～～***</font>\n\n### 简介\n{% note success %}\n> 网站安装了许多插件，**hexo-symbols-count-time、hexo-tag-cloud、hexo-helper-live2d**等等，不止给站点增加了很多强大的功能以及给博文美化方面添加了不少样式、便利，我也一一记录下了常用的插件并写成文章发表。\n> 但是去Hexo官方，看了一下插件，居然有290多个，也不能想Next主题内置的tags功能一样，每个都去尝试一下，起码把自己尝试的记录下来，与大家一起进行分享。\n{% endnote %}\n\n<!-- more -->\n\n<hr />\n\n### 正文\n\n1. #### hexo-tag-echarts\n\n    > 作用\n\n    集成echart到博客中，用于数据展示，非常好用。\n\n    > 示例\n\n    ![hexo-tag-echarts](hexo-tag-echarts.png)\n\n    > 代码\n\n    ```\n    {% echarts 400 '85%' %}\n    {\n        color: ['#F39C12'],\n        tooltip : {\n            trigger: 'axis',\n            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n        },\n        xAxis : [\n            {\n                type : 'category',\n                data : ['Python','Linux','Hexo','LDAP','娱乐','影视说','旅行记','其他'],\n                axisTick: {\n                    alignWithLabel: true\n                }\n            }\n        ],\n        yAxis : [\n            {\n                type : 'value'\n            }\n        ],\n        series : [\n            {\n                name:'直接访问',\n                type:'bar',\n                barWidth: '60%',\n                data: [9, 2, 17, 2, 3, 2, 2, 5]\n            }\n        ]\n    };\n    {% endecharts %}\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-tag-echarts %}\n    <!-- tab hexo-tag-echarts安装 -->\n    {% code %}\n    npm install hexo-tag-echarts3 --save\n    {% endcode %}\n    <!-- endtab -->\n    <!-- tab hexo-tag-echarts说明 -->\n    1 || 展示的数据需要自己进行计算。\n    2 || echarts-endecharts 需要2个参数：容器高度、相对宽度。\n    3 || 这个插件的js有点问题，需要加些代码到文件：node_modules/hexo-tag-echarts/echarts-template.html，具体请查看官方手册。\n    <!-- endtab -->\n    <!-- tab hexo-tag-echarts资料 -->\n    hexo-tag-echarts3：https://github.com/kchen0x/hexo-tag-echarts3\n    echart：https://echarts.baidu.com/examples/\n    <!-- endtab -->\n    {% endtabs %}\n\n    {% endnote %}\n\n2. #### hexo-admin\n\n    > 作用\n\n    hexo站点的后台管理。\n\n    > 示例\n\n    ![hexo-admin](hexo-admin.png)\n\n    > 部署\n\n    - 安装插件\n    ```\n    npm install --save hexo-admin\n    ```\n    - 启动服务\n    ```\n    hexo s\n    ```\n    - 生成密码\n    打开***http://127.0.0.1:8888/admin/***，找到**setting**菜单栏，找到***Setup authentification here***，点击->输入用户名、密码、密钥，在最下面有生成的配置信息。\n    - 配置\n    打开blog/_config.yml文件，把上面生成的信息新增到配置文件最后。\n    ```\n    # admin后台user、password\n    admin:\n      username: pygo\n      password_hash: $2a$10$h6ZFY9yMv.wIhd0aPQ/O4eB3k/zFiBj3aH0Zou8T9QK/H8e/Y/hUO\n      secret: wuyananismywife\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-admin %}\n\n    <!-- tab hexo-admin说明 -->\n    1 || 切记是Hexo站点配置文件。\n    <!-- endtab -->\n    <!-- tab hexo-admin资料 -->\n    https://github.com/jaredly/hexo-admin\n    <!-- endtab -->\n    {% endtabs %}\n\n    {% endnote %}\n\n\n3. #### hexo-blog-encrypt\n\n    > 作用\n\n    文章加密。\n\n    > 示例\n\n    ![hexo-blog-encrypt](hexo-blog-encrypt.png)\n\n    > 部署\n\n    - 安装插件\n    ```\n    npm install --save hexo-blog-encrypt\n    ```\n    - Hexo配置\n    打开Hexo站点配置文件：blog/_config.yml，新增配置：\n    ```\n    # 文章加密功能\n    encrypt:\n        enable: true\n    ```\n    - 文章配置\n    打开一篇需要进行加密的.md文件，在顶部描述加入以下代码：\n    ```\n    password: 0803\n    abstract: <div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>\n    message: 密码提示：生日\n    ```\n        + password：博客密码\n        + abstract：home主页显示的文字提示\n        + message：查看博客，密码输入框上面的描述性文字\n    - 启动服务\n    ```\n    hexo s\n    ```\n\n    {% note info %}\n    <font size=\"4\" color=\"red\">**补充**</font>\n    {% tabs chajian_hexo-blog-encrypt %}\n\n    <!-- tab hexo-blog-encrypt说明 -->\n    1 || 切记是Hexo站点配置文件。\n    <!-- endtab -->\n    <!-- tab hexo-blog-encrypt资料 -->\n    https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md\n    <!-- endtab -->\n    {% endtabs %}\n\n    <font size=\"4\" color=\"red\">**自定义样式**</font>\n    关于加密的abstract && message样式比较难看，本人自定义了的样式，参考如下：\n    {% code %}\n    // 加密abstract样式\n    .article_encrypt_abstract {\n        text-align: center;\n        color: #FFBE3D;\n        font-size: 28px;\n        -webkit-text-stroke: 1.2px #000000;\n    }\n    // 加密message样式\n    .hbe-input-container label {\n        color: deeppink!important;\n        font-size: 32px!important;\n        text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n    }\n    {% endcode %}\n\n    自定义样式文件：**blog/themes/next/source/css/_custom/custom.styl**\n    {% endnote %}\n","slug":"Hexo-拓展-插件篇","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2st0038tabjk8dibona","content":"<font color=\"red\" size=\"5\"><strong><em>持续更新中～～～</em></strong></font>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <blockquote><p>网站安装了许多插件，<strong>hexo-symbols-count-time、hexo-tag-cloud、hexo-helper-live2d</strong>等等，不止给站点增加了很多强大的功能以及给博文美化方面添加了不少样式、便利，我也一一记录下了常用的插件并写成文章发表。<br>但是去Hexo官方，看了一下插件，居然有290多个，也不能想Next主题内置的tags功能一样，每个都去尝试一下，起码把自己尝试的记录下来，与大家一起进行分享。</p></blockquote>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><ol>\n<li><h4 id=\"hexo-tag-echarts\"><a href=\"#hexo-tag-echarts\" class=\"headerlink\" title=\"hexo-tag-echarts\"></a>hexo-tag-echarts</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> 集成echart到博客中，用于数据展示，非常好用。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-tag-echarts.png\" alt=\"hexo-tag-echarts\"></p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% echarts 400 &apos;85%&apos; %&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    color: [&apos;#F39C12&apos;],</span><br><span class=\"line\">    tooltip : &#123;</span><br><span class=\"line\">        trigger: &apos;axis&apos;,</span><br><span class=\"line\">        axisPointer : &#123;            // 坐标轴指示器，坐标轴触发有效</span><br><span class=\"line\">            type : &apos;shadow&apos;        // 默认为直线，可选为：&apos;line&apos; | &apos;shadow&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    grid: &#123;</span><br><span class=\"line\">        left: &apos;3%&apos;,</span><br><span class=\"line\">        right: &apos;4%&apos;,</span><br><span class=\"line\">        bottom: &apos;3%&apos;,</span><br><span class=\"line\">        containLabel: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    xAxis : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type : &apos;category&apos;,</span><br><span class=\"line\">            data : [&apos;Python&apos;,&apos;Linux&apos;,&apos;Hexo&apos;,&apos;LDAP&apos;,&apos;娱乐&apos;,&apos;影视说&apos;,&apos;旅行记&apos;,&apos;其他&apos;],</span><br><span class=\"line\">            axisTick: &#123;</span><br><span class=\"line\">                alignWithLabel: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    yAxis : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type : &apos;value&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    series : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            name:&apos;直接访问&apos;,</span><br><span class=\"line\">            type:&apos;bar&apos;,</span><br><span class=\"line\">            barWidth: &apos;60%&apos;,</span><br><span class=\"line\">            data: [9, 2, 17, 2, 3, 2, 2, 5]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure>\n <div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-tag-echarts\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-tag-echarts-1\">hexo-tag-echarts安装</a></li><li class=\"tab\"><a href=\"#chajian_hexo-tag-echarts-2\">hexo-tag-echarts说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-tag-echarts-3\">hexo-tag-echarts资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-tag-echarts-1\"><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-echarts3 –save</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"chajian_hexo-tag-echarts-2\"><p>1 || 展示的数据需要自己进行计算。<br>2 || echarts-endecharts 需要2个参数：容器高度、相对宽度。<br>3 || 这个插件的js有点问题，需要加些代码到文件：node_modules/hexo-tag-echarts/echarts-template.html，具体请查看官方手册。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-tag-echarts-3\"><p>hexo-tag-echarts3：<a href=\"https://github.com/kchen0x/hexo-tag-echarts3\" target=\"_blank\" rel=\"noopener\">https://github.com/kchen0x/hexo-tag-echarts3</a><br>echart：<a href=\"https://echarts.baidu.com/examples/\" target=\"_blank\" rel=\"noopener\">https://echarts.baidu.com/examples/</a></p></div></div></div>\n          </div>\n</li>\n<li><h4 id=\"hexo-admin\"><a href=\"#hexo-admin\" class=\"headerlink\" title=\"hexo-admin\"></a>hexo-admin</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> hexo站点的后台管理。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-admin.png\" alt=\"hexo-admin\"></p>\n<blockquote>\n<p>部署</p>\n</blockquote>\n<ul>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-admin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成密码<br>打开<strong><em><a href=\"http://127.0.0.1:8888/admin/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/admin/</a></em></strong>，找到<strong>setting</strong>菜单栏，找到<strong><em>Setup authentification here</em></strong>，点击-&gt;输入用户名、密码、密钥，在最下面有生成的配置信息。</p>\n</li>\n<li><p>配置<br>打开blog/_config.yml文件，把上面生成的信息新增到配置文件最后。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># admin后台user、password</span><br><span class=\"line\">admin:</span><br><span class=\"line\">  username: pygo</span><br><span class=\"line\">  password_hash: $2a$10$h6ZFY9yMv.wIhd0aPQ/O4eB3k/zFiBj3aH0Zou8T9QK/H8e/Y/hUO</span><br><span class=\"line\">  secret: wuyananismywife</span><br></pre></td></tr></table></figure>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-admin\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-admin-1\">hexo-admin说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-admin-2\">hexo-admin资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-admin-1\"><p>1 || 切记是Hexo站点配置文件。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-admin-2\"><p><a href=\"https://github.com/jaredly/hexo-admin\" target=\"_blank\" rel=\"noopener\">https://github.com/jaredly/hexo-admin</a></p></div></div></div>\n          </div>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li><h4 id=\"hexo-blog-encrypt\"><a href=\"#hexo-blog-encrypt\" class=\"headerlink\" title=\"hexo-blog-encrypt\"></a>hexo-blog-encrypt</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> 文章加密。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-blog-encrypt.png\" alt=\"hexo-blog-encrypt\"></p>\n<blockquote>\n<p>部署</p>\n</blockquote>\n<ul>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Hexo配置<br>打开Hexo站点配置文件：blog/_config.yml，新增配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章加密功能</span><br><span class=\"line\">encrypt:</span><br><span class=\"line\">    enable: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文章配置<br>打开一篇需要进行加密的.md文件，在顶部描述加入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: 0803</span><br><span class=\"line\">abstract: &lt;div class=&quot;article_encrypt_abstract&quot;&gt;暂不公开，请勿打扰 ～&lt;font size=&quot;5&quot; color=&quot;red&quot;&gt;【状态：加密】&lt;/font&gt;&lt;/div&gt;</span><br><span class=\"line\">message: 密码提示：生日</span><br></pre></td></tr></table></figure>\n<ul>\n<li>password：博客密码</li>\n<li>abstract：home主页显示的文字提示</li>\n<li>message：查看博客，密码输入框上面的描述性文字</li>\n</ul>\n</li>\n<li><p>启动服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-blog-encrypt\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-blog-encrypt-1\">hexo-blog-encrypt说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-blog-encrypt-2\">hexo-blog-encrypt资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-blog-encrypt-1\"><p>1 || 切记是Hexo站点配置文件。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-blog-encrypt-2\"><p><a href=\"https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p></div></div></div><p><font size=\"4\" color=\"red\"><strong>自定义样式</strong></font><br>关于加密的abstract &amp;&amp; message样式比较难看，本人自定义了的样式，参考如下：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 加密abstract样式</span><br><span class=\"line\">.article_encrypt_abstract &#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    color: #FFBE3D;</span><br><span class=\"line\">    font-size: 28px;</span><br><span class=\"line\">    -webkit-text-stroke: 1.2px #000000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 加密message样式</span><br><span class=\"line\">.hbe-input-container label &#123;</span><br><span class=\"line\">    color: deeppink!important;</span><br><span class=\"line\">    font-size: 32px!important;</span><br><span class=\"line\">    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong></p>\n          </div>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<font color=\"red\" size=\"5\"><strong><em>持续更新中～～～</em></strong></font>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note success\">\n            <blockquote><p>网站安装了许多插件，<strong>hexo-symbols-count-time、hexo-tag-cloud、hexo-helper-live2d</strong>等等，不止给站点增加了很多强大的功能以及给博文美化方面添加了不少样式、便利，我也一一记录下了常用的插件并写成文章发表。<br>但是去Hexo官方，看了一下插件，居然有290多个，也不能想Next主题内置的tags功能一样，每个都去尝试一下，起码把自己尝试的记录下来，与大家一起进行分享。</p></blockquote>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><ol>\n<li><h4 id=\"hexo-tag-echarts\"><a href=\"#hexo-tag-echarts\" class=\"headerlink\" title=\"hexo-tag-echarts\"></a>hexo-tag-echarts</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> 集成echart到博客中，用于数据展示，非常好用。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-tag-echarts.png\" alt=\"hexo-tag-echarts\"></p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% echarts 400 &apos;85%&apos; %&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    color: [&apos;#F39C12&apos;],</span><br><span class=\"line\">    tooltip : &#123;</span><br><span class=\"line\">        trigger: &apos;axis&apos;,</span><br><span class=\"line\">        axisPointer : &#123;            // 坐标轴指示器，坐标轴触发有效</span><br><span class=\"line\">            type : &apos;shadow&apos;        // 默认为直线，可选为：&apos;line&apos; | &apos;shadow&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    grid: &#123;</span><br><span class=\"line\">        left: &apos;3%&apos;,</span><br><span class=\"line\">        right: &apos;4%&apos;,</span><br><span class=\"line\">        bottom: &apos;3%&apos;,</span><br><span class=\"line\">        containLabel: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    xAxis : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type : &apos;category&apos;,</span><br><span class=\"line\">            data : [&apos;Python&apos;,&apos;Linux&apos;,&apos;Hexo&apos;,&apos;LDAP&apos;,&apos;娱乐&apos;,&apos;影视说&apos;,&apos;旅行记&apos;,&apos;其他&apos;],</span><br><span class=\"line\">            axisTick: &#123;</span><br><span class=\"line\">                alignWithLabel: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    yAxis : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type : &apos;value&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    series : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            name:&apos;直接访问&apos;,</span><br><span class=\"line\">            type:&apos;bar&apos;,</span><br><span class=\"line\">            barWidth: &apos;60%&apos;,</span><br><span class=\"line\">            data: [9, 2, 17, 2, 3, 2, 2, 5]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure>\n <div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-tag-echarts\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-tag-echarts-1\">hexo-tag-echarts安装</a></li><li class=\"tab\"><a href=\"#chajian_hexo-tag-echarts-2\">hexo-tag-echarts说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-tag-echarts-3\">hexo-tag-echarts资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-tag-echarts-1\"><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-echarts3 –save</span><br></pre></td></tr></table></figure></div><div class=\"tab-pane\" id=\"chajian_hexo-tag-echarts-2\"><p>1 || 展示的数据需要自己进行计算。<br>2 || echarts-endecharts 需要2个参数：容器高度、相对宽度。<br>3 || 这个插件的js有点问题，需要加些代码到文件：node_modules/hexo-tag-echarts/echarts-template.html，具体请查看官方手册。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-tag-echarts-3\"><p>hexo-tag-echarts3：<a href=\"https://github.com/kchen0x/hexo-tag-echarts3\" target=\"_blank\" rel=\"noopener\">https://github.com/kchen0x/hexo-tag-echarts3</a><br>echart：<a href=\"https://echarts.baidu.com/examples/\" target=\"_blank\" rel=\"noopener\">https://echarts.baidu.com/examples/</a></p></div></div></div>\n          </div>\n</li>\n<li><h4 id=\"hexo-admin\"><a href=\"#hexo-admin\" class=\"headerlink\" title=\"hexo-admin\"></a>hexo-admin</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> hexo站点的后台管理。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-admin.png\" alt=\"hexo-admin\"></p>\n<blockquote>\n<p>部署</p>\n</blockquote>\n<ul>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-admin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成密码<br>打开<strong><em><a href=\"http://127.0.0.1:8888/admin/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/admin/</a></em></strong>，找到<strong>setting</strong>菜单栏，找到<strong><em>Setup authentification here</em></strong>，点击-&gt;输入用户名、密码、密钥，在最下面有生成的配置信息。</p>\n</li>\n<li><p>配置<br>打开blog/_config.yml文件，把上面生成的信息新增到配置文件最后。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># admin后台user、password</span><br><span class=\"line\">admin:</span><br><span class=\"line\">  username: pygo</span><br><span class=\"line\">  password_hash: $2a$10$h6ZFY9yMv.wIhd0aPQ/O4eB3k/zFiBj3aH0Zou8T9QK/H8e/Y/hUO</span><br><span class=\"line\">  secret: wuyananismywife</span><br></pre></td></tr></table></figure>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-admin\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-admin-1\">hexo-admin说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-admin-2\">hexo-admin资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-admin-1\"><p>1 || 切记是Hexo站点配置文件。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-admin-2\"><p><a href=\"https://github.com/jaredly/hexo-admin\" target=\"_blank\" rel=\"noopener\">https://github.com/jaredly/hexo-admin</a></p></div></div></div>\n          </div>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"3\">\n<li><h4 id=\"hexo-blog-encrypt\"><a href=\"#hexo-blog-encrypt\" class=\"headerlink\" title=\"hexo-blog-encrypt\"></a>hexo-blog-encrypt</h4><blockquote>\n<p>作用</p>\n</blockquote>\n<p> 文章加密。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<p> <img src=\"hexo-blog-encrypt.png\" alt=\"hexo-blog-encrypt\"></p>\n<blockquote>\n<p>部署</p>\n</blockquote>\n<ul>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Hexo配置<br>打开Hexo站点配置文件：blog/_config.yml，新增配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 文章加密功能</span><br><span class=\"line\">encrypt:</span><br><span class=\"line\">    enable: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文章配置<br>打开一篇需要进行加密的.md文件，在顶部描述加入以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password: 0803</span><br><span class=\"line\">abstract: &lt;div class=&quot;article_encrypt_abstract&quot;&gt;暂不公开，请勿打扰 ～&lt;font size=&quot;5&quot; color=&quot;red&quot;&gt;【状态：加密】&lt;/font&gt;&lt;/div&gt;</span><br><span class=\"line\">message: 密码提示：生日</span><br></pre></td></tr></table></figure>\n<ul>\n<li>password：博客密码</li>\n<li>abstract：home主页显示的文字提示</li>\n<li>message：查看博客，密码输入框上面的描述性文字</li>\n</ul>\n</li>\n<li><p>启动服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<div class=\"note info\">\n            <p><font size=\"4\" color=\"red\"><strong>补充</strong></font></p><div class=\"tabs\" id=\"chajian_hexo-blog-encrypt\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#chajian_hexo-blog-encrypt-1\">hexo-blog-encrypt说明</a></li><li class=\"tab\"><a href=\"#chajian_hexo-blog-encrypt-2\">hexo-blog-encrypt资料</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"chajian_hexo-blog-encrypt-1\"><p>1 || 切记是Hexo站点配置文件。</p></div><div class=\"tab-pane\" id=\"chajian_hexo-blog-encrypt-2\"><p><a href=\"https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p></div></div></div><p><font size=\"4\" color=\"red\"><strong>自定义样式</strong></font><br>关于加密的abstract &amp;&amp; message样式比较难看，本人自定义了的样式，参考如下：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 加密abstract样式</span><br><span class=\"line\">.article_encrypt_abstract &#123;</span><br><span class=\"line\">    text-align: center;</span><br><span class=\"line\">    color: #FFBE3D;</span><br><span class=\"line\">    font-size: 28px;</span><br><span class=\"line\">    -webkit-text-stroke: 1.2px #000000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 加密message样式</span><br><span class=\"line\">.hbe-input-container label &#123;</span><br><span class=\"line\">    color: deeppink!important;</span><br><span class=\"line\">    font-size: 32px!important;</span><br><span class=\"line\">    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>自定义样式文件：<strong>blog/themes/next/source/css/_custom/custom.styl</strong></p>\n          </div>\n</li>\n</ul>\n</li>\n</ol>"},{"title":"Hexo搜索hexo-generator-searchdb","comments":0,"desc":"Hexo搜索hexo-generator-searchdb","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-generator-searchdb, 站内搜索, 菜单栏","abbrlink":21643,"date":"2019-04-12T11:09:21.000Z","updated":"2019-04-12T11:09:21.000Z","_content":"\n![](/images/article_search_show.png)\n\n#### 背景\n{% note success %}\n博客运行了很久，也写了不少文章，有的时候需要回去翻自己写过的文章找点东西，比较麻烦，而且也看了别人的博客好多都有一个**🔍搜索**功能，针对于我使用的***Hexo+Next***版本也增加一个搜索功能。但是，在实现的过程中遇到了一些坑，想必也会有人跟我一样，于是写下来与大家分享。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 版本信息\n\n| id  | name | version |  remark  |\n|:---:|:----:|:-------:|:--------:|\n|  1  | Hexo | v3.8.0  | 系统版本 |\n|  2  | Next | v7.0.1  | 主题版本 |\n\n#### 安装hexo-generator-searchdb\n\n博客项目的根目录直接执行：\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 配置\n打开Next主题配置文件：/blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***local_search***</font>，更改代码如下：\n```\nlocal_search:\n  enable: true\n  trigger: auto\n  top_n_per_article: 1\n  unescape: false\n```\n\n#### hexo g && hexo s\n完成hexo-generator-searchdb的插件安装与配置之后，重启服务。重启之后查看blog首页sidebar多出一个**🔍搜索**功能，点进去查看，如果能实现搜索功能，那么恭喜你，你的功能已经没问题。\n![](search_sidebar.png)\n\n#### 遇到问题\n\n点击搜索，我发现我的搜索modal一直在转圈圈，<font size=\"5\" color=\"red\">根本停不下来</font>。\n![](search_promble.png)\n\n#### 解决问题\n\n网上找了许久解决办法，一般都是结束安装、配置，[hexosearch](https://www.sqlsec.com/2017/12/hexosearch.html)这篇文章提供了一个解决思路与方法，我在这里大致讲述一下：\n- 直接访问博客地址search.xml：http://127.0.0.1:8888/search.xml\n- 发现错误提示\n![](search_error.png)\n- 打开控制台查看原因\n![](search_console.png)\n- 查看提示错误提示以及console查看具体位置，具体错误的会有小红点（<font size=\"4\" color=\"red\">**•••••**</font>），找到具体对应的md文章，清除特殊字符。\n- 全部特殊字符处理完之后，重新：***hexo g && hexo s***。\n\n不出意外，你的**🔍搜索**已经可以用了，有问题可以在sidebar留言板留言共同交流分享。\n\n#### 学习\n\nNext local search：https://github.com/iissnan/hexo-theme-next/pull/694\nhexo-generator-searchdb官方：https://github.com/theme-next/hexo-generator-searchdb\nhexosearch：https://www.sqlsec.com/2017/12/hexosearch.html\n\n#### 感谢\n\n<font size=\"5\" color=\"red\">感谢Hexo、Next、以及解决我问题的博主：国光</font>，推荐一下国光博主的博客：https://www.sqlsec.com/\n","source":"_posts/Hexo-搜索hexo-generator-searchdb.md","raw":"---\ntitle: Hexo搜索hexo-generator-searchdb\ncomments: false\ndesc: Hexo搜索hexo-generator-searchdb\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-generator-searchdb, 站内搜索, 菜单栏\nabbrlink: 21643\ndate: 2019-04-12 19:09:21\nupdated: 2019-04-12 19:09:21\n---\n\n![](/images/article_search_show.png)\n\n#### 背景\n{% note success %}\n博客运行了很久，也写了不少文章，有的时候需要回去翻自己写过的文章找点东西，比较麻烦，而且也看了别人的博客好多都有一个**🔍搜索**功能，针对于我使用的***Hexo+Next***版本也增加一个搜索功能。但是，在实现的过程中遇到了一些坑，想必也会有人跟我一样，于是写下来与大家分享。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 版本信息\n\n| id  | name | version |  remark  |\n|:---:|:----:|:-------:|:--------:|\n|  1  | Hexo | v3.8.0  | 系统版本 |\n|  2  | Next | v7.0.1  | 主题版本 |\n\n#### 安装hexo-generator-searchdb\n\n博客项目的根目录直接执行：\n```\nnpm install hexo-generator-searchdb --save\n```\n\n#### 配置\n打开Next主题配置文件：/blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***local_search***</font>，更改代码如下：\n```\nlocal_search:\n  enable: true\n  trigger: auto\n  top_n_per_article: 1\n  unescape: false\n```\n\n#### hexo g && hexo s\n完成hexo-generator-searchdb的插件安装与配置之后，重启服务。重启之后查看blog首页sidebar多出一个**🔍搜索**功能，点进去查看，如果能实现搜索功能，那么恭喜你，你的功能已经没问题。\n![](search_sidebar.png)\n\n#### 遇到问题\n\n点击搜索，我发现我的搜索modal一直在转圈圈，<font size=\"5\" color=\"red\">根本停不下来</font>。\n![](search_promble.png)\n\n#### 解决问题\n\n网上找了许久解决办法，一般都是结束安装、配置，[hexosearch](https://www.sqlsec.com/2017/12/hexosearch.html)这篇文章提供了一个解决思路与方法，我在这里大致讲述一下：\n- 直接访问博客地址search.xml：http://127.0.0.1:8888/search.xml\n- 发现错误提示\n![](search_error.png)\n- 打开控制台查看原因\n![](search_console.png)\n- 查看提示错误提示以及console查看具体位置，具体错误的会有小红点（<font size=\"4\" color=\"red\">**•••••**</font>），找到具体对应的md文章，清除特殊字符。\n- 全部特殊字符处理完之后，重新：***hexo g && hexo s***。\n\n不出意外，你的**🔍搜索**已经可以用了，有问题可以在sidebar留言板留言共同交流分享。\n\n#### 学习\n\nNext local search：https://github.com/iissnan/hexo-theme-next/pull/694\nhexo-generator-searchdb官方：https://github.com/theme-next/hexo-generator-searchdb\nhexosearch：https://www.sqlsec.com/2017/12/hexosearch.html\n\n#### 感谢\n\n<font size=\"5\" color=\"red\">感谢Hexo、Next、以及解决我问题的博主：国光</font>，推荐一下国光博主的博客：https://www.sqlsec.com/\n","slug":"Hexo-搜索hexo-generator-searchdb","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2sx003atabj151pbzh2","content":"<p><img src=\"/images/article_search_show.png\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>博客运行了很久，也写了不少文章，有的时候需要回去翻自己写过的文章找点东西，比较麻烦，而且也看了别人的博客好多都有一个<strong>🔍搜索</strong>功能，针对于我使用的<strong><em>Hexo+Next</em></strong>版本也增加一个搜索功能。但是，在实现的过程中遇到了一些坑，想必也会有人跟我一样，于是写下来与大家分享。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Next</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装hexo-generator-searchdb\"><a href=\"#安装hexo-generator-searchdb\" class=\"headerlink\" title=\"安装hexo-generator-searchdb\"></a>安装hexo-generator-searchdb</h4><p>博客项目的根目录直接执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>打开Next主题配置文件：/blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>local_search</em></strong></font>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  top_n_per_article: 1</span><br><span class=\"line\">  unescape: false</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hexo-g-amp-amp-hexo-s\"><a href=\"#hexo-g-amp-amp-hexo-s\" class=\"headerlink\" title=\"hexo g &amp;&amp; hexo s\"></a>hexo g &amp;&amp; hexo s</h4><p>完成hexo-generator-searchdb的插件安装与配置之后，重启服务。重启之后查看blog首页sidebar多出一个<strong>🔍搜索</strong>功能，点进去查看，如果能实现搜索功能，那么恭喜你，你的功能已经没问题。<br><img src=\"search_sidebar.png\" alt></p>\n<h4 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h4><p>点击搜索，我发现我的搜索modal一直在转圈圈，<font size=\"5\" color=\"red\">根本停不下来</font>。<br><img src=\"search_promble.png\" alt></p>\n<h4 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h4><p>网上找了许久解决办法，一般都是结束安装、配置，<a href=\"https://www.sqlsec.com/2017/12/hexosearch.html\" target=\"_blank\" rel=\"noopener\">hexosearch</a>这篇文章提供了一个解决思路与方法，我在这里大致讲述一下：</p>\n<ul>\n<li>直接访问博客地址search.xml：<a href=\"http://127.0.0.1:8888/search.xml\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/search.xml</a></li>\n<li>发现错误提示<br><img src=\"search_error.png\" alt></li>\n<li>打开控制台查看原因<br><img src=\"search_console.png\" alt></li>\n<li>查看提示错误提示以及console查看具体位置，具体错误的会有小红点（<font size=\"4\" color=\"red\"><strong>•••••</strong></font>），找到具体对应的md文章，清除特殊字符。</li>\n<li>全部特殊字符处理完之后，重新：<strong><em>hexo g &amp;&amp; hexo s</em></strong>。</li>\n</ul>\n<p>不出意外，你的<strong>🔍搜索</strong>已经可以用了，有问题可以在sidebar留言板留言共同交流分享。</p>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><p>Next local search：<a href=\"https://github.com/iissnan/hexo-theme-next/pull/694\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/pull/694</a><br>hexo-generator-searchdb官方：<a href=\"https://github.com/theme-next/hexo-generator-searchdb\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-generator-searchdb</a><br>hexosearch：<a href=\"https://www.sqlsec.com/2017/12/hexosearch.html\" target=\"_blank\" rel=\"noopener\">https://www.sqlsec.com/2017/12/hexosearch.html</a></p>\n<h4 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h4><p><font size=\"5\" color=\"red\">感谢Hexo、Next、以及解决我问题的博主：国光</font>，推荐一下国光博主的博客：<a href=\"https://www.sqlsec.com/\" target=\"_blank\" rel=\"noopener\">https://www.sqlsec.com/</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_search_show.png\" alt></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>博客运行了很久，也写了不少文章，有的时候需要回去翻自己写过的文章找点东西，比较麻烦，而且也看了别人的博客好多都有一个<strong>🔍搜索</strong>功能，针对于我使用的<strong><em>Hexo+Next</em></strong>版本也增加一个搜索功能。但是，在实现的过程中遇到了一些坑，想必也会有人跟我一样，于是写下来与大家分享。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Next</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装hexo-generator-searchdb\"><a href=\"#安装hexo-generator-searchdb\" class=\"headerlink\" title=\"安装hexo-generator-searchdb\"></a>安装hexo-generator-searchdb</h4><p>博客项目的根目录直接执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>打开Next主题配置文件：/blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>local_search</em></strong></font>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  top_n_per_article: 1</span><br><span class=\"line\">  unescape: false</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"hexo-g-amp-amp-hexo-s\"><a href=\"#hexo-g-amp-amp-hexo-s\" class=\"headerlink\" title=\"hexo g &amp;&amp; hexo s\"></a>hexo g &amp;&amp; hexo s</h4><p>完成hexo-generator-searchdb的插件安装与配置之后，重启服务。重启之后查看blog首页sidebar多出一个<strong>🔍搜索</strong>功能，点进去查看，如果能实现搜索功能，那么恭喜你，你的功能已经没问题。<br><img src=\"search_sidebar.png\" alt></p>\n<h4 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h4><p>点击搜索，我发现我的搜索modal一直在转圈圈，<font size=\"5\" color=\"red\">根本停不下来</font>。<br><img src=\"search_promble.png\" alt></p>\n<h4 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h4><p>网上找了许久解决办法，一般都是结束安装、配置，<a href=\"https://www.sqlsec.com/2017/12/hexosearch.html\" target=\"_blank\" rel=\"noopener\">hexosearch</a>这篇文章提供了一个解决思路与方法，我在这里大致讲述一下：</p>\n<ul>\n<li>直接访问博客地址search.xml：<a href=\"http://127.0.0.1:8888/search.xml\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/search.xml</a></li>\n<li>发现错误提示<br><img src=\"search_error.png\" alt></li>\n<li>打开控制台查看原因<br><img src=\"search_console.png\" alt></li>\n<li>查看提示错误提示以及console查看具体位置，具体错误的会有小红点（<font size=\"4\" color=\"red\"><strong>•••••</strong></font>），找到具体对应的md文章，清除特殊字符。</li>\n<li>全部特殊字符处理完之后，重新：<strong><em>hexo g &amp;&amp; hexo s</em></strong>。</li>\n</ul>\n<p>不出意外，你的<strong>🔍搜索</strong>已经可以用了，有问题可以在sidebar留言板留言共同交流分享。</p>\n<h4 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h4><p>Next local search：<a href=\"https://github.com/iissnan/hexo-theme-next/pull/694\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next/pull/694</a><br>hexo-generator-searchdb官方：<a href=\"https://github.com/theme-next/hexo-generator-searchdb\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-generator-searchdb</a><br>hexosearch：<a href=\"https://www.sqlsec.com/2017/12/hexosearch.html\" target=\"_blank\" rel=\"noopener\">https://www.sqlsec.com/2017/12/hexosearch.html</a></p>\n<h4 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h4><p><font size=\"5\" color=\"red\">感谢Hexo、Next、以及解决我问题的博主：国光</font>，推荐一下国光博主的博客：<a href=\"https://www.sqlsec.com/\" target=\"_blank\" rel=\"noopener\">https://www.sqlsec.com/</a></p>"},{"title":"Hexo文章置顶","comments":0,"desc":"Hexo博客站内文章添加置顶功能，top置顶","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-generator-index, 置顶, top","abbrlink":18391,"date":"2019-01-18T06:49:25.000Z","updated":"2019-01-18T06:49:25.000Z","_content":"\n<img src=\"/images/article_zhiding.png\" style=\"border:1.5px solid blue\"/>\n\n#### 背景\n{% note success %}\n博文添加文章置顶功能\n{% endnote %}\n\n写了很多博客，总有几篇是自己想要指定的文章，上线找了很多发现都是老方法（安装***hexo-generator-index***），但是发现不管用，一般都是版本太老的原因。于是开始搜索新的插件，找到了***hexo-generator-index-pin-top***这个插件。\n\n<!--more-->\n<hr />\n\n#### 正文\n只要3步就可以让博文置顶，不多说，直接搞：\n\n> 第一步：安装插件\n\n在blog的根目录，执行如下命令，如果安装***hexo-generator-index***，请先进行卸载。\n```\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n> 第二步：博文top置顶\n\n找到需要置顶的文章，在文件顶部加上top: true即可，来个栗子：\n```\n---\ntitle: Hexo文章置顶\ncomments: false\ndate: 2019-04-13 14:49:25\nupdated: 2019-04-13 14:49:25\ndesc: Hexo文章添加置顶功能\ncategories:\n  [hexo]\ntags: [hexo]\ntop: true\n---\n```\n\n> 第三步：图标\n\n实现1、2步之后，重新启动server之后，发现文章已经置顶了，但是没有图标是不是很尴尬。别怕，找到下面的文件，搜索***<div class=\"post-meta\">***标签，并把代码加进去。\n文件：/blog/themes/next/layout/_macro/post.swig\n```\n{% if post.top %}\n  <i class=\"fa fa-thumbs-up\"></i>\n  <font color=\"red\">置顶</font>\n  <span class=\"post-meta-divider\">|</span>\n{% endif %}\n```\n图标不好看的也可以自己进行更改，替换***fa-thumb-tack***即可，还可以把图标的颜色进行更改。***hexo s***重新启动server查看效果吧。\n图标选取地址：[自选图标](https://fontawesome.com/cheatsheet?from=io)\n\n#### 结束\n\n到这里就完成博文置顶的效果，尝试之后，是不是***so easy***。\n","source":"_posts/Hexo-文章置顶.md","raw":"---\ntitle: Hexo文章置顶\ncomments: false\ndesc: Hexo博客站内文章添加置顶功能，top置顶\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, hexo-generator-index, 置顶, top\nabbrlink: 18391\ndate: 2019-01-18 14:49:25\nupdated: 2019-01-18 14:49:25\n---\n\n<img src=\"/images/article_zhiding.png\" style=\"border:1.5px solid blue\"/>\n\n#### 背景\n{% note success %}\n博文添加文章置顶功能\n{% endnote %}\n\n写了很多博客，总有几篇是自己想要指定的文章，上线找了很多发现都是老方法（安装***hexo-generator-index***），但是发现不管用，一般都是版本太老的原因。于是开始搜索新的插件，找到了***hexo-generator-index-pin-top***这个插件。\n\n<!--more-->\n<hr />\n\n#### 正文\n只要3步就可以让博文置顶，不多说，直接搞：\n\n> 第一步：安装插件\n\n在blog的根目录，执行如下命令，如果安装***hexo-generator-index***，请先进行卸载。\n```\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n> 第二步：博文top置顶\n\n找到需要置顶的文章，在文件顶部加上top: true即可，来个栗子：\n```\n---\ntitle: Hexo文章置顶\ncomments: false\ndate: 2019-04-13 14:49:25\nupdated: 2019-04-13 14:49:25\ndesc: Hexo文章添加置顶功能\ncategories:\n  [hexo]\ntags: [hexo]\ntop: true\n---\n```\n\n> 第三步：图标\n\n实现1、2步之后，重新启动server之后，发现文章已经置顶了，但是没有图标是不是很尴尬。别怕，找到下面的文件，搜索***<div class=\"post-meta\">***标签，并把代码加进去。\n文件：/blog/themes/next/layout/_macro/post.swig\n```\n{% if post.top %}\n  <i class=\"fa fa-thumbs-up\"></i>\n  <font color=\"red\">置顶</font>\n  <span class=\"post-meta-divider\">|</span>\n{% endif %}\n```\n图标不好看的也可以自己进行更改，替换***fa-thumb-tack***即可，还可以把图标的颜色进行更改。***hexo s***重新启动server查看效果吧。\n图标选取地址：[自选图标](https://fontawesome.com/cheatsheet?from=io)\n\n#### 结束\n\n到这里就完成博文置顶的效果，尝试之后，是不是***so easy***。\n","slug":"Hexo-文章置顶","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2t3003ctabjltiv7w4y","content":"<p><img src=\"/images/article_zhiding.png\" style=\"border:1.5px solid blue\"></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>博文添加文章置顶功能</p>\n          </div>\n<p>写了很多博客，总有几篇是自己想要指定的文章，上线找了很多发现都是老方法（安装<strong><em>hexo-generator-index</em></strong>），但是发现不管用，一般都是版本太老的原因。于是开始搜索新的插件，找到了<strong><em>hexo-generator-index-pin-top</em></strong>这个插件。</p>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>只要3步就可以让博文置顶，不多说，直接搞：</p>\n<blockquote>\n<p>第一步：安装插件</p>\n</blockquote>\n<p>在blog的根目录，执行如下命令，如果安装<strong><em>hexo-generator-index</em></strong>，请先进行卸载。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>第二步：博文top置顶</p>\n</blockquote>\n<p>找到需要置顶的文章，在文件顶部加上top: true即可，来个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo文章置顶</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2019-04-13 14:49:25</span><br><span class=\"line\">updated: 2019-04-13 14:49:25</span><br><span class=\"line\">desc: Hexo文章添加置顶功能</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  [hexo]</span><br><span class=\"line\">tags: [hexo]</span><br><span class=\"line\">top: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>第三步：图标</p>\n</blockquote>\n<p>实现1、2步之后，重新启动server之后，发现文章已经置顶了，但是没有图标是不是很尴尬。别怕，找到下面的文件，搜索<strong><em><div class=\"post-meta\"></div></em></strong>标签，并把代码加进去。<br>文件：/blog/themes/next/layout/_macro/post.swig<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">  &lt;i class=&quot;fa fa-thumbs-up&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">  &lt;font color=&quot;red&quot;&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>图标不好看的也可以自己进行更改，替换<strong><em>fa-thumb-tack</em></strong>即可，还可以把图标的颜色进行更改。<strong><em>hexo s</em></strong>重新启动server查看效果吧。<br>图标选取地址：<a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">自选图标</a></p>\n<h4 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h4><p>到这里就完成博文置顶的效果，尝试之后，是不是<strong><em>so easy</em></strong>。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_zhiding.png\" style=\"border:1.5px solid blue\"></p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>博文添加文章置顶功能</p>\n          </div>\n<p>写了很多博客，总有几篇是自己想要指定的文章，上线找了很多发现都是老方法（安装<strong><em>hexo-generator-index</em></strong>），但是发现不管用，一般都是版本太老的原因。于是开始搜索新的插件，找到了<strong><em>hexo-generator-index-pin-top</em></strong>这个插件。</p>","more":"<hr>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>只要3步就可以让博文置顶，不多说，直接搞：</p>\n<blockquote>\n<p>第一步：安装插件</p>\n</blockquote>\n<p>在blog的根目录，执行如下命令，如果安装<strong><em>hexo-generator-index</em></strong>，请先进行卸载。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>第二步：博文top置顶</p>\n</blockquote>\n<p>找到需要置顶的文章，在文件顶部加上top: true即可，来个栗子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo文章置顶</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2019-04-13 14:49:25</span><br><span class=\"line\">updated: 2019-04-13 14:49:25</span><br><span class=\"line\">desc: Hexo文章添加置顶功能</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  [hexo]</span><br><span class=\"line\">tags: [hexo]</span><br><span class=\"line\">top: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>第三步：图标</p>\n</blockquote>\n<p>实现1、2步之后，重新启动server之后，发现文章已经置顶了，但是没有图标是不是很尴尬。别怕，找到下面的文件，搜索<strong><em><div class=\"post-meta\"></div></em></strong>标签，并把代码加进去。<br>文件：/blog/themes/next/layout/_macro/post.swig<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if post.top %&#125;</span><br><span class=\"line\">  &lt;i class=&quot;fa fa-thumbs-up&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">  &lt;font color=&quot;red&quot;&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>图标不好看的也可以自己进行更改，替换<strong><em>fa-thumb-tack</em></strong>即可，还可以把图标的颜色进行更改。<strong><em>hexo s</em></strong>重新启动server查看效果吧。<br>图标选取地址：<a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">自选图标</a></p>\n<h4 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h4><p>到这里就完成博文置顶的效果，尝试之后，是不是<strong><em>so easy</em></strong>。</p>"},{"title":"hexo添加鼠标点击效果","comments":0,"desc":"hexo搭建的博客添加鼠标点击效果，程序员的语言 && 红心效果","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 点击, 鼠标","abbrlink":37795,"date":"2019-01-08T10:25:57.000Z","updated":"2019-07-08T10:25:57.000Z","_content":"![](/images/article_click.gif)\n\n{% note success %}\n博文中鼠标点击出现❤️&&文字特效，<font color=\"red\" size=\"5\">***持续更新中～～～***</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n特效比较简单，只需要写好js特效文件加载就OK了。\n\n> 红心\n\n***/themes/next/source/js/src***目录下新建文件click_love.js，代码如下：\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n> 文字\n\n***/themes/next/source/js/src***目录下新建文件click_magic.js，代码如下：\n```\n/* 鼠标特效 */\nvar a_idx = 0;\njQuery(document).ready(function($) {\n   $(\"body\").click(function(e) {\n       var a = new Array(\"Python\", \"Java\", \"Go\", \"C\", \"C++\", \"C#\", \"JavaScript\" ,\n       \"Php\", \"Sql\", \"R\");\n       var $i = $(\"<span/>\").text(a[a_idx]);\n       a_idx = (a_idx + 1) % a.length;\n       var x = e.pageX,\n       y = e.pageY;\n       $i.css({\n           \"z-index\": 9999,\n           \"top\": y - 20,\n           \"left\": x,\n           \"position\": \"absolute\",\n           \"font-weight\": \"bold\",\n           \"color\": \"#ff6651\"\n       });\n       $(\"body\").append($i);\n       $i.animate({\n           \"top\": y - 180,\n           \"opacity\": 0\n       },\n       1500,\n       function() {\n           $i.remove();\n       });\n   });\n});\n```\n\n建立好js文件之后，打开文件***/themes/next/layout/_layout.swig***，搜索***</body>***，加入代码：\n```\n<script type=\"text/javascript\" src=\"/js/src/click_love.js\"></script>\n<script type=\"text/javascript\" src=\"/js/src/click_magic.js\"></script>\n```\n完成上述操作hexo g && hexo s就可以看到效果啦，如果只要一种特效，保留一个js文件即可。\n\n\n<font size=6.5 color='red'>鼠标点击特效持续更新中。。。。。。</font>\n","source":"_posts/Hexo-添加鼠标点击效果.md","raw":"---\ntitle: hexo添加鼠标点击效果\ncomments: false\ndesc: hexo搭建的博客添加鼠标点击效果，程序员的语言 && 红心效果\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 点击, 鼠标\nabbrlink: 37795\ndate: 2019-01-08 18:25:57\nupdated: 2019-07-08 18:25:57\n---\n![](/images/article_click.gif)\n\n{% note success %}\n博文中鼠标点击出现❤️&&文字特效，<font color=\"red\" size=\"5\">***持续更新中～～～***</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n特效比较简单，只需要写好js特效文件加载就OK了。\n\n> 红心\n\n***/themes/next/source/js/src***目录下新建文件click_love.js，代码如下：\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n> 文字\n\n***/themes/next/source/js/src***目录下新建文件click_magic.js，代码如下：\n```\n/* 鼠标特效 */\nvar a_idx = 0;\njQuery(document).ready(function($) {\n   $(\"body\").click(function(e) {\n       var a = new Array(\"Python\", \"Java\", \"Go\", \"C\", \"C++\", \"C#\", \"JavaScript\" ,\n       \"Php\", \"Sql\", \"R\");\n       var $i = $(\"<span/>\").text(a[a_idx]);\n       a_idx = (a_idx + 1) % a.length;\n       var x = e.pageX,\n       y = e.pageY;\n       $i.css({\n           \"z-index\": 9999,\n           \"top\": y - 20,\n           \"left\": x,\n           \"position\": \"absolute\",\n           \"font-weight\": \"bold\",\n           \"color\": \"#ff6651\"\n       });\n       $(\"body\").append($i);\n       $i.animate({\n           \"top\": y - 180,\n           \"opacity\": 0\n       },\n       1500,\n       function() {\n           $i.remove();\n       });\n   });\n});\n```\n\n建立好js文件之后，打开文件***/themes/next/layout/_layout.swig***，搜索***</body>***，加入代码：\n```\n<script type=\"text/javascript\" src=\"/js/src/click_love.js\"></script>\n<script type=\"text/javascript\" src=\"/js/src/click_magic.js\"></script>\n```\n完成上述操作hexo g && hexo s就可以看到效果啦，如果只要一种特效，保留一个js文件即可。\n\n\n<font size=6.5 color='red'>鼠标点击特效持续更新中。。。。。。</font>\n","slug":"Hexo-添加鼠标点击效果","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2t8003ftabjcm7ihgaf","content":"<p><img src=\"/images/article_click.gif\" alt></p>\n<div class=\"note success\">\n            <p>博文中鼠标点击出现❤️&amp;&amp;文字特效，<font color=\"red\" size=\"5\"><strong><em>持续更新中～～～</em></strong></font></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>特效比较简单，只需要写好js特效文件加载就OK了。</p>\n<blockquote>\n<p>红心</p>\n</blockquote>\n<p><strong><em>/themes/next/source/js/src</em></strong>目录下新建文件click_love.js，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>文字</p>\n</blockquote>\n<p><strong><em>/themes/next/source/js/src</em></strong>目录下新建文件click_magic.js，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 鼠标特效 */</span><br><span class=\"line\">var a_idx = 0;</span><br><span class=\"line\">jQuery(document).ready(function($) &#123;</span><br><span class=\"line\">   $(&quot;body&quot;).click(function(e) &#123;</span><br><span class=\"line\">       var a = new Array(&quot;Python&quot;, &quot;Java&quot;, &quot;Go&quot;, &quot;C&quot;, &quot;C++&quot;, &quot;C#&quot;, &quot;JavaScript&quot; ,</span><br><span class=\"line\">       &quot;Php&quot;, &quot;Sql&quot;, &quot;R&quot;);</span><br><span class=\"line\">       var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);</span><br><span class=\"line\">       a_idx = (a_idx + 1) % a.length;</span><br><span class=\"line\">       var x = e.pageX,</span><br><span class=\"line\">       y = e.pageY;</span><br><span class=\"line\">       $i.css(&#123;</span><br><span class=\"line\">           &quot;z-index&quot;: 9999,</span><br><span class=\"line\">           &quot;top&quot;: y - 20,</span><br><span class=\"line\">           &quot;left&quot;: x,</span><br><span class=\"line\">           &quot;position&quot;: &quot;absolute&quot;,</span><br><span class=\"line\">           &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class=\"line\">           &quot;color&quot;: &quot;#ff6651&quot;</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">       $(&quot;body&quot;).append($i);</span><br><span class=\"line\">       $i.animate(&#123;</span><br><span class=\"line\">           &quot;top&quot;: y - 180,</span><br><span class=\"line\">           &quot;opacity&quot;: 0</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       1500,</span><br><span class=\"line\">       function() &#123;</span><br><span class=\"line\">           $i.remove();</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>建立好js文件之后，打开文件<strong><em>/themes/next/layout/_layout.swig</em></strong>，搜索<strong><em></em></strong>，加入代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_love.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_magic.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>完成上述操作hexo g &amp;&amp; hexo s就可以看到效果啦，如果只要一种特效，保留一个js文件即可。</p>\n<font size=\"6.5\" color=\"red\">鼠标点击特效持续更新中。。。。。。</font>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_click.gif\" alt></p>\n<div class=\"note success\">\n            <p>博文中鼠标点击出现❤️&amp;&amp;文字特效，<font color=\"red\" size=\"5\"><strong><em>持续更新中～～～</em></strong></font></p>\n          </div>","more":"<hr>\n\n<p>特效比较简单，只需要写好js特效文件加载就OK了。</p>\n<blockquote>\n<p>红心</p>\n</blockquote>\n<p><strong><em>/themes/next/source/js/src</em></strong>目录下新建文件click_love.js，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>文字</p>\n</blockquote>\n<p><strong><em>/themes/next/source/js/src</em></strong>目录下新建文件click_magic.js，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 鼠标特效 */</span><br><span class=\"line\">var a_idx = 0;</span><br><span class=\"line\">jQuery(document).ready(function($) &#123;</span><br><span class=\"line\">   $(&quot;body&quot;).click(function(e) &#123;</span><br><span class=\"line\">       var a = new Array(&quot;Python&quot;, &quot;Java&quot;, &quot;Go&quot;, &quot;C&quot;, &quot;C++&quot;, &quot;C#&quot;, &quot;JavaScript&quot; ,</span><br><span class=\"line\">       &quot;Php&quot;, &quot;Sql&quot;, &quot;R&quot;);</span><br><span class=\"line\">       var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);</span><br><span class=\"line\">       a_idx = (a_idx + 1) % a.length;</span><br><span class=\"line\">       var x = e.pageX,</span><br><span class=\"line\">       y = e.pageY;</span><br><span class=\"line\">       $i.css(&#123;</span><br><span class=\"line\">           &quot;z-index&quot;: 9999,</span><br><span class=\"line\">           &quot;top&quot;: y - 20,</span><br><span class=\"line\">           &quot;left&quot;: x,</span><br><span class=\"line\">           &quot;position&quot;: &quot;absolute&quot;,</span><br><span class=\"line\">           &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class=\"line\">           &quot;color&quot;: &quot;#ff6651&quot;</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">       $(&quot;body&quot;).append($i);</span><br><span class=\"line\">       $i.animate(&#123;</span><br><span class=\"line\">           &quot;top&quot;: y - 180,</span><br><span class=\"line\">           &quot;opacity&quot;: 0</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       1500,</span><br><span class=\"line\">       function() &#123;</span><br><span class=\"line\">           $i.remove();</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>建立好js文件之后，打开文件<strong><em>/themes/next/layout/_layout.swig</em></strong>，搜索<strong><em></em></strong>，加入代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_love.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/click_magic.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>完成上述操作hexo g &amp;&amp; hexo s就可以看到效果啦，如果只要一种特效，保留一个js文件即可。</p>\n<font size=\"6.5\" color=\"red\">鼠标点击特效持续更新中。。。。。。</font>"},{"title":"Hexo-环境搭建之node版本问题","comments":0,"top":false,"abbrlink":10512,"date":"2019-12-17T02:55:42.000Z","updated":"2019-12-17T02:55:42.000Z","desc":"在云服务搭建hexo博客环境出现的问题，原因是node版本过低引发的血案","keywords":"hexo, next, Hexo, 博客, blog, node, nodejs, Unexpected identifier, usr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150","_content":"\n#### 背景\n\n{% note success %}\n昨天买了个腾讯云服务器 + 域名，于是把自己的blog迁移云服务上，就得搭建nodejs、npm、hexo等运行环境。但是环境都装好了，一运行***hexo***居然报错了，错的内容在正文。\n\n既然出现错误，解决就好了。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 错误内容\n```\nusr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150\nasync remove(item) {\n^^^^^^\n\n\nSyntaxError: Unexpected identifier\nat createScript (vm.js:56:10)\nat Object.runInThisContext (vm.js:97:10)\nat Module._compile (module.js:549:28)\nat Object.Module._extensions..js (module.js:586:10)\nat Module.load (module.js:494:32)\nat tryModuleLoad (module.js:453:12)\nat Function.Module._load (module.js:445:3)\nat Module.require (module.js:504:17)\nat require (internal/module.js:20:19)\nat Object.<anonymous> (/usr/lib/node_modules/hexo-cli/node_modules/hexo-fs/lib/fs.js:6:18)\nat Module._compile (module.js:577:32)\nat Object.Module._extensions..js (module.js:586:10)\nat Module.load (module.js:494:32)\nat tryModuleLoad (module.js:453:12)\nat Function.Module._load (module.js:445:3)\nat Module.require (module.js:504:17)\n```\n\n上述的错误搜索了好半天才没有到找到一个解决办法，不过在失去希望的时候，发了在baidu论坛有个人跟我报了一样的错误，而且还解决了，不买官司了，原因是：<font size=6.5 color='red'>node版本过低</font>。\n\n#### 解决办法\n\n升级nodejs即可，具体操作如下：\n\n```\nnpm install -g n\n\n# 升级到最新稳定版本：\nn stable\n\n# 升级到最新版本：\nn latest\n\n# 升级到指定版本：\nn 0.10.26\n```\n\n\n#### 学习参考\n\nn：https://www.jianshu.com/p/a2ee8f61a8ca\n帖子：https://tieba.baidu.com/p/6311927039?red_tag=1232994946\n","source":"_posts/Hexo-环境搭建之node版本问题.md","raw":"---\ntitle: Hexo-环境搭建之node版本问题\ncomments: false\ncategories:\n    - [Hexo]\ntags: [Hexo]\ntop: false\nabbrlink: 10512\ndate: 2019-12-17 10:55:42\nupdated: 2019-12-17 10:55:42\ndesc: 在云服务搭建hexo博客环境出现的问题，原因是node版本过低引发的血案\nkeywords: hexo, next, Hexo, 博客, blog, node, nodejs, Unexpected identifier, usr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150\n---\n\n#### 背景\n\n{% note success %}\n昨天买了个腾讯云服务器 + 域名，于是把自己的blog迁移云服务上，就得搭建nodejs、npm、hexo等运行环境。但是环境都装好了，一运行***hexo***居然报错了，错的内容在正文。\n\n既然出现错误，解决就好了。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 错误内容\n```\nusr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150\nasync remove(item) {\n^^^^^^\n\n\nSyntaxError: Unexpected identifier\nat createScript (vm.js:56:10)\nat Object.runInThisContext (vm.js:97:10)\nat Module._compile (module.js:549:28)\nat Object.Module._extensions..js (module.js:586:10)\nat Module.load (module.js:494:32)\nat tryModuleLoad (module.js:453:12)\nat Function.Module._load (module.js:445:3)\nat Module.require (module.js:504:17)\nat require (internal/module.js:20:19)\nat Object.<anonymous> (/usr/lib/node_modules/hexo-cli/node_modules/hexo-fs/lib/fs.js:6:18)\nat Module._compile (module.js:577:32)\nat Object.Module._extensions..js (module.js:586:10)\nat Module.load (module.js:494:32)\nat tryModuleLoad (module.js:453:12)\nat Function.Module._load (module.js:445:3)\nat Module.require (module.js:504:17)\n```\n\n上述的错误搜索了好半天才没有到找到一个解决办法，不过在失去希望的时候，发了在baidu论坛有个人跟我报了一样的错误，而且还解决了，不买官司了，原因是：<font size=6.5 color='red'>node版本过低</font>。\n\n#### 解决办法\n\n升级nodejs即可，具体操作如下：\n\n```\nnpm install -g n\n\n# 升级到最新稳定版本：\nn stable\n\n# 升级到最新版本：\nn latest\n\n# 升级到指定版本：\nn 0.10.26\n```\n\n\n#### 学习参考\n\nn：https://www.jianshu.com/p/a2ee8f61a8ca\n帖子：https://tieba.baidu.com/p/6311927039?red_tag=1232994946\n","slug":"Hexo-环境搭建之node版本问题","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2te003itabj3uwibn4d","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>昨天买了个腾讯云服务器 + 域名，于是把自己的blog迁移云服务上，就得搭建nodejs、npm、hexo等运行环境。但是环境都装好了，一运行<strong><em>hexo</em></strong>居然报错了，错的内容在正文。</p><p>既然出现错误，解决就好了。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"错误内容\"><a href=\"#错误内容\" class=\"headerlink\" title=\"错误内容\"></a>错误内容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150</span><br><span class=\"line\">async remove(item) &#123;</span><br><span class=\"line\">^^^^^^</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">SyntaxError: Unexpected identifier</span><br><span class=\"line\">at createScript (vm.js:56:10)</span><br><span class=\"line\">at Object.runInThisContext (vm.js:97:10)</span><br><span class=\"line\">at Module._compile (module.js:549:28)</span><br><span class=\"line\">at Object.Module._extensions..js (module.js:586:10)</span><br><span class=\"line\">at Module.load (module.js:494:32)</span><br><span class=\"line\">at tryModuleLoad (module.js:453:12)</span><br><span class=\"line\">at Function.Module._load (module.js:445:3)</span><br><span class=\"line\">at Module.require (module.js:504:17)</span><br><span class=\"line\">at require (internal/module.js:20:19)</span><br><span class=\"line\">at Object.&lt;anonymous&gt; (/usr/lib/node_modules/hexo-cli/node_modules/hexo-fs/lib/fs.js:6:18)</span><br><span class=\"line\">at Module._compile (module.js:577:32)</span><br><span class=\"line\">at Object.Module._extensions..js (module.js:586:10)</span><br><span class=\"line\">at Module.load (module.js:494:32)</span><br><span class=\"line\">at tryModuleLoad (module.js:453:12)</span><br><span class=\"line\">at Function.Module._load (module.js:445:3)</span><br><span class=\"line\">at Module.require (module.js:504:17)</span><br></pre></td></tr></table></figure>\n<p>上述的错误搜索了好半天才没有到找到一个解决办法，不过在失去希望的时候，发了在baidu论坛有个人跟我报了一样的错误，而且还解决了，不买官司了，原因是：<font size=\"6.5\" color=\"red\">node版本过低</font>。</p>\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>升级nodejs即可，具体操作如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g n</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到最新稳定版本：</span><br><span class=\"line\">n stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到最新版本：</span><br><span class=\"line\">n latest</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到指定版本：</span><br><span class=\"line\">n 0.10.26</span><br></pre></td></tr></table></figure>\n<h4 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h4><p>n：<a href=\"https://www.jianshu.com/p/a2ee8f61a8ca\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a2ee8f61a8ca</a><br>帖子：<a href=\"https://tieba.baidu.com/p/6311927039?red_tag=1232994946\" target=\"_blank\" rel=\"noopener\">https://tieba.baidu.com/p/6311927039?red_tag=1232994946</a></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note success\">\n            <p>昨天买了个腾讯云服务器 + 域名，于是把自己的blog迁移云服务上，就得搭建nodejs、npm、hexo等运行环境。但是环境都装好了，一运行<strong><em>hexo</em></strong>居然报错了，错的内容在正文。</p><p>既然出现错误，解决就好了。</p>\n          </div>","more":"<hr>\n\n<h4 id=\"错误内容\"><a href=\"#错误内容\" class=\"headerlink\" title=\"错误内容\"></a>错误内容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usr/lib/node_modules/hexo-cli/node_modules/chokidar/index.js:150</span><br><span class=\"line\">async remove(item) &#123;</span><br><span class=\"line\">^^^^^^</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">SyntaxError: Unexpected identifier</span><br><span class=\"line\">at createScript (vm.js:56:10)</span><br><span class=\"line\">at Object.runInThisContext (vm.js:97:10)</span><br><span class=\"line\">at Module._compile (module.js:549:28)</span><br><span class=\"line\">at Object.Module._extensions..js (module.js:586:10)</span><br><span class=\"line\">at Module.load (module.js:494:32)</span><br><span class=\"line\">at tryModuleLoad (module.js:453:12)</span><br><span class=\"line\">at Function.Module._load (module.js:445:3)</span><br><span class=\"line\">at Module.require (module.js:504:17)</span><br><span class=\"line\">at require (internal/module.js:20:19)</span><br><span class=\"line\">at Object.&lt;anonymous&gt; (/usr/lib/node_modules/hexo-cli/node_modules/hexo-fs/lib/fs.js:6:18)</span><br><span class=\"line\">at Module._compile (module.js:577:32)</span><br><span class=\"line\">at Object.Module._extensions..js (module.js:586:10)</span><br><span class=\"line\">at Module.load (module.js:494:32)</span><br><span class=\"line\">at tryModuleLoad (module.js:453:12)</span><br><span class=\"line\">at Function.Module._load (module.js:445:3)</span><br><span class=\"line\">at Module.require (module.js:504:17)</span><br></pre></td></tr></table></figure>\n<p>上述的错误搜索了好半天才没有到找到一个解决办法，不过在失去希望的时候，发了在baidu论坛有个人跟我报了一样的错误，而且还解决了，不买官司了，原因是：<font size=\"6.5\" color=\"red\">node版本过低</font>。</p>\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><p>升级nodejs即可，具体操作如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g n</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到最新稳定版本：</span><br><span class=\"line\">n stable</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到最新版本：</span><br><span class=\"line\">n latest</span><br><span class=\"line\"></span><br><span class=\"line\"># 升级到指定版本：</span><br><span class=\"line\">n 0.10.26</span><br></pre></td></tr></table></figure>\n<h4 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h4><p>n：<a href=\"https://www.jianshu.com/p/a2ee8f61a8ca\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a2ee8f61a8ca</a><br>帖子：<a href=\"https://tieba.baidu.com/p/6311927039?red_tag=1232994946\" target=\"_blank\" rel=\"noopener\">https://tieba.baidu.com/p/6311927039?red_tag=1232994946</a></p>"},{"title":"LDAP-ERROR:DSID-03150F01","comments":0,"desc":"在处理LDAP的时候遇到的问题：LDAP-ERROR, DSID-03150F01","keywords":"LDAP, ERROR, LDAP-ERROR, DSID-03150F01","abbrlink":39125,"date":"2018-03-19T11:45:26.000Z","updated":"2018-03-19T11:45:26.000Z","_content":"\n#### 问题描述：\n```\n{\n    'info': '000021B1:\n    SvcErr: DSID-03150F01,\n    problem 5005 (UNABLE_TO_PROCEED),\n    data 0\\n',\n    'desc': 'Operations error'\n}\n```\n\n<!--more-->\n<hr />\n\n在负责的项目中，有个跟LDAP打交道的，其中有个任务就是把人添加到指定的CN下。某天hr来找，说群发的邮件部分人没有收到。于是找到这个任务脚本，打开查看日志，居然报上面的错误。第一思维先google了一下，发现这个错误的少之又少，并且查看后没有解决方案。\n\n#### 解决方案\n查看日志，发现这个错误有一个月之前就有了。但是这个任务在beta环境还是正常执行的，于是比对线上与beta环境的不同之处，任务代码一模一样，LDAP环境也保持一致。执行的发现把员工加到执行CN下的员工数不一样。于是把线上获取的数据量改小了一些，正常了。那么问题就定位到数据大小的问题决定着错误，说明错误指向了LDAP服务器，但是线上与beta的DLAP环境，配置是一样的啊。\n把线上的数据源数据同步到beta环境，执行beta环境的任务脚本，一样的错误。。。一样，哈哈那就确定了，是LDAP上的问题，去官方查询相关的信息。果然有一些配置有决定性的作用，打开注册表编辑器，创建以下路径键值&数值：\n\n    [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters]\n    \"Maximum Audit Queue Size\"=dword:000088b8\n\n![mountain](mountain.png)\n\n#### 建议\n***<font color=\"#dd0000\" size=\"5\">遇到问题莫慌，最重要的是找到问题根源，只要找到问题的根源，才是解决问题的王道！！！</font>***\n","source":"_posts/LDAP-ERROR-DSID-03150F01.md","raw":"---\ntitle: 'LDAP-ERROR:DSID-03150F01'\ncomments: false\ndesc: 在处理LDAP的时候遇到的问题：LDAP-ERROR, DSID-03150F01\ncategories:\n  - [LDAP]\ntags: [LDAP]\nkeywords: LDAP, ERROR, LDAP-ERROR, DSID-03150F01\nabbrlink: 39125\ndate: 2018-03-19 19:45:26\nupdated: 2018-03-19 19:45:26\n---\n\n#### 问题描述：\n```\n{\n    'info': '000021B1:\n    SvcErr: DSID-03150F01,\n    problem 5005 (UNABLE_TO_PROCEED),\n    data 0\\n',\n    'desc': 'Operations error'\n}\n```\n\n<!--more-->\n<hr />\n\n在负责的项目中，有个跟LDAP打交道的，其中有个任务就是把人添加到指定的CN下。某天hr来找，说群发的邮件部分人没有收到。于是找到这个任务脚本，打开查看日志，居然报上面的错误。第一思维先google了一下，发现这个错误的少之又少，并且查看后没有解决方案。\n\n#### 解决方案\n查看日志，发现这个错误有一个月之前就有了。但是这个任务在beta环境还是正常执行的，于是比对线上与beta环境的不同之处，任务代码一模一样，LDAP环境也保持一致。执行的发现把员工加到执行CN下的员工数不一样。于是把线上获取的数据量改小了一些，正常了。那么问题就定位到数据大小的问题决定着错误，说明错误指向了LDAP服务器，但是线上与beta的DLAP环境，配置是一样的啊。\n把线上的数据源数据同步到beta环境，执行beta环境的任务脚本，一样的错误。。。一样，哈哈那就确定了，是LDAP上的问题，去官方查询相关的信息。果然有一些配置有决定性的作用，打开注册表编辑器，创建以下路径键值&数值：\n\n    [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters]\n    \"Maximum Audit Queue Size\"=dword:000088b8\n\n![mountain](mountain.png)\n\n#### 建议\n***<font color=\"#dd0000\" size=\"5\">遇到问题莫慌，最重要的是找到问题根源，只要找到问题的根源，才是解决问题的王道！！！</font>***\n","slug":"LDAP-ERROR-DSID-03150F01","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ti003mtabjpx6rgkeg","content":"<h4 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &apos;info&apos;: &apos;000021B1:</span><br><span class=\"line\">    SvcErr: DSID-03150F01,</span><br><span class=\"line\">    problem 5005 (UNABLE_TO_PROCEED),</span><br><span class=\"line\">    data 0\\n&apos;,</span><br><span class=\"line\">    &apos;desc&apos;: &apos;Operations error&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n\n<p>在负责的项目中，有个跟LDAP打交道的，其中有个任务就是把人添加到指定的CN下。某天hr来找，说群发的邮件部分人没有收到。于是找到这个任务脚本，打开查看日志，居然报上面的错误。第一思维先google了一下，发现这个错误的少之又少，并且查看后没有解决方案。</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>查看日志，发现这个错误有一个月之前就有了。但是这个任务在beta环境还是正常执行的，于是比对线上与beta环境的不同之处，任务代码一模一样，LDAP环境也保持一致。执行的发现把员工加到执行CN下的员工数不一样。于是把线上获取的数据量改小了一些，正常了。那么问题就定位到数据大小的问题决定着错误，说明错误指向了LDAP服务器，但是线上与beta的DLAP环境，配置是一样的啊。<br>把线上的数据源数据同步到beta环境，执行beta环境的任务脚本，一样的错误。。。一样，哈哈那就确定了，是LDAP上的问题，去官方查询相关的信息。果然有一些配置有决定性的作用，打开注册表编辑器，创建以下路径键值&amp;数值：</p>\n<pre><code>[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters]\n&quot;Maximum Audit Queue Size&quot;=dword:000088b8\n</code></pre><p><img src=\"mountain.png\" alt=\"mountain\"></p>\n<h4 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h4><p><strong><em><font color=\"#dd0000\" size=\"5\">遇到问题莫慌，最重要的是找到问题根源，只要找到问题的根源，才是解决问题的王道！！！</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &apos;info&apos;: &apos;000021B1:</span><br><span class=\"line\">    SvcErr: DSID-03150F01,</span><br><span class=\"line\">    problem 5005 (UNABLE_TO_PROCEED),</span><br><span class=\"line\">    data 0\\n&apos;,</span><br><span class=\"line\">    &apos;desc&apos;: &apos;Operations error&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<hr>\n\n<p>在负责的项目中，有个跟LDAP打交道的，其中有个任务就是把人添加到指定的CN下。某天hr来找，说群发的邮件部分人没有收到。于是找到这个任务脚本，打开查看日志，居然报上面的错误。第一思维先google了一下，发现这个错误的少之又少，并且查看后没有解决方案。</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>查看日志，发现这个错误有一个月之前就有了。但是这个任务在beta环境还是正常执行的，于是比对线上与beta环境的不同之处，任务代码一模一样，LDAP环境也保持一致。执行的发现把员工加到执行CN下的员工数不一样。于是把线上获取的数据量改小了一些，正常了。那么问题就定位到数据大小的问题决定着错误，说明错误指向了LDAP服务器，但是线上与beta的DLAP环境，配置是一样的啊。<br>把线上的数据源数据同步到beta环境，执行beta环境的任务脚本，一样的错误。。。一样，哈哈那就确定了，是LDAP上的问题，去官方查询相关的信息。果然有一些配置有决定性的作用，打开注册表编辑器，创建以下路径键值&amp;数值：</p>\n<pre><code>[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NTDS\\Parameters]\n&quot;Maximum Audit Queue Size&quot;=dword:000088b8\n</code></pre><p><img src=\"mountain.png\" alt=\"mountain\"></p>\n<h4 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h4><p><strong><em><font color=\"#dd0000\" size=\"5\">遇到问题莫慌，最重要的是找到问题根源，只要找到问题的根源，才是解决问题的王道！！！</font></em></strong></p>"},{"title":"Hexo新增tags、categories、自定义菜单栏页","comments":0,"top":false,"desc":"Hexo新增tags、categories、about、自定义菜单栏页","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, tags, categories, 菜单栏, 自定义","abbrlink":33202,"date":"2018-10-27T16:16:19.000Z","updated":"2018-10-27T16:16:19.000Z","_content":"\n\n### 背景\n{% note success %}\nHexo初始化博客之后，主题选用了人气最高的Next，但是发现菜单栏默认是不自动添加tags页与categories页，查资料，终于创建成功，记录下来。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n除了讲述tags、categories、about自带的自动化页面，还有讲述自定义sidebar页面，方便用于自己定义相册、等自己喜欢的页面。\n\n1. #### tags\n\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page tags\n    ```\n    不出意外会自动生成文件blog/source/tags/index.md，目前位置没有出现过任何问题。有问题的同学可以留言给我。\n    - 配置\n    打开blog/source/tags/index.md，默认是下列内容：\n    ```\n    ---\n    title: 标签\n    date: 2019-10-22 14:22:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    title: 标签\n    date: 2019-10-22 13:58:44\n    type: \"tags\"\n    comments: false\n    ---\n    ```\n    - 添加tags\n    给文章添加对应的tags，打开一篇文件，例子如下：\n    ```\n    ---\n    title: Hexo+Next搭建属于自己的Blog\n    comments: false\n    date: 2018-10-22 23:03:42\n    updated: 2019-10-22 23:03:42\n    desc: Hexo+Next搭建属于自己的Blog\n    categories:\n      - [Hexo]\n    tags: [Hexo]\n    keywords: hexo, next, blog\n    ---\n    ```\n    - 重启server\n    重新生成静态页面以及开启服务，之后刷新页面就会看到。\n    ```\n    hexo g\n    hexo s\n    ```\n\n2. #### categories\n\n    categories页创建与tags页操作一样。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page categories\n    ```\n    - 配置\n    打开blog/source/categories/index.md，默认是下列内容：\n    ```\n    ---\n    title: 分类\n    date: 2018-10-22 14:25:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    title: 分类\n    date: 2018-10-22 14:25:08\n    type: \"categories\"\n    comments: false\n    ---\n    ```\n    - 添加categories\n    给文章添加对应的categories：\n    ```\n    ---\n    title: Hexo+Next搭建属于自己的Blog\n    comments: false\n    date: 2018-10-22 23:03:42\n    updated: 2019-10-22 23:03:42\n    desc: Hexo+Next搭建属于自己的Blog\n    categories:\n      - [Hexo]\n    tags: [Hexo]\n    keywords: hexo, next, blog\n    ---\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n3. #### 指定分类列表页\n\n    这个功能主要用于把已经分类的自分类单独形成一个页面放在sidebar，打开之后是一个文章list效果，建议1～2个。\n    ![](enjoy_list.png)\n    - 子分类\n    找到需要在sidebar显示的子分类，中文、英文都可以。\n    - 配置\n    打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***menu***</font>，更改代码如下：\n    ```\n    menu:\n      home: / || home\n      archives: /archives/ || history\n      tags: /tags/ || tags\n      categories: /categories/ || list\n      movie: /categories/影视说/ || film\n      enjoy: /categories/娱乐/ || battery-full\n      messagepad: /messagepad/ || sticky-note\n      about: /about/ || user\n      # schedule: /schedule/ || calendar\n      # sitemap: /sitemap.xml || sitemap\n      # commonweal: /404/ || heartbeat\n    ```\n    设置的标准：\n    第一列 / themes/next/languages/zh-Hans.yml 对应的关键字\n    第二列 / url 路径\n    第三列 / 图标 https://fontawesome.com/cheatsheet?from=io\n    - 添加关键字\n    打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：\n    ```\n    menu:\n      home: 首页\n      archives: 时间轴\n      categories: 分类\n      tags: 标签\n      about: 关于\n      search: 搜索\n      schedule: 日程表\n      sitemap: 站点地图\n      commonweal: 公益 404\n      movie: 影视说\n      messagepad: 留言板\n      enjoy: 娱乐\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n4. #### about\n\n    about是sidebar自我介绍的一栏，很重要，但是生成的方式与tags、categories如出一辙。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page about\n    ```\n    - 配置\n    打开blog/source/about/index.md，默认是下列内容：\n    ```\n    ---\n    title: about\n    date: 2018-10-22 14:35:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    layout: about\n    title: Hi\n    date: 2018-10-22\n    comments: false\n    type: about\n    ---\n    ```\n    - markdown语法写about页面\n    Hexo会把md文件自动生成html页面，用markdown语法去写md文件即可。\n\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n5. #### 自定义页面\n\n    在sidebar往往需要自定义一些自己需要的页面，这块我直接用我的留言板做例子。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page messagepad\n    ```\n    - 配置\n    打开blog/source/messagepad/index.md，更改内容如下：\n    ```\n    ---\n    title: 欢迎大家留言\n    ---\n    <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/>\n\n    <div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n    ```\n    其实，在这个index.md文件中，就是用markdown语法去写html。\n    - 配置 && 添加关键字\n    其实这2步跟第三部分的**指定分类列表页**所做的操作一致。\n    打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***menu***</font>，新增对应的sidebar栏：\n    ```\n    menu:\n      messagepad: /messagepad/ || sticky-note\n    ```\n    打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：\n    ```\n    menu:\n      messagepad: 留言板\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n{% note info %}\n### 技巧\n\n打开blog/scaffolds/post.md文件，更改代码如下：\n{% code %}\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncomments: false\ncategories:\n  - []\ntags: []\nkeywords:\ntop: false\n{% endcode %}\n这样，在以后hexo new新建博文，模板自动生成，只需要添加对应的tags、categories即可\n{% endnote%}\n","source":"_posts/Hexo-新增tags、categories、自定义菜单栏页.md","raw":"---\ntitle: Hexo新增tags、categories、自定义菜单栏页\ncomments: false\ncategories:\n  - [Hexo]\ntags: [Hexo]\ntop: false\ndesc: Hexo新增tags、categories、about、自定义菜单栏页\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, tags, categories, 菜单栏, 自定义\nabbrlink: 33202\ndate: 2018-10-28 00:16:19\nupdated: 2018-10-28 00:16:19\n---\n\n\n### 背景\n{% note success %}\nHexo初始化博客之后，主题选用了人气最高的Next，但是发现菜单栏默认是不自动添加tags页与categories页，查资料，终于创建成功，记录下来。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n除了讲述tags、categories、about自带的自动化页面，还有讲述自定义sidebar页面，方便用于自己定义相册、等自己喜欢的页面。\n\n1. #### tags\n\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page tags\n    ```\n    不出意外会自动生成文件blog/source/tags/index.md，目前位置没有出现过任何问题。有问题的同学可以留言给我。\n    - 配置\n    打开blog/source/tags/index.md，默认是下列内容：\n    ```\n    ---\n    title: 标签\n    date: 2019-10-22 14:22:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    title: 标签\n    date: 2019-10-22 13:58:44\n    type: \"tags\"\n    comments: false\n    ---\n    ```\n    - 添加tags\n    给文章添加对应的tags，打开一篇文件，例子如下：\n    ```\n    ---\n    title: Hexo+Next搭建属于自己的Blog\n    comments: false\n    date: 2018-10-22 23:03:42\n    updated: 2019-10-22 23:03:42\n    desc: Hexo+Next搭建属于自己的Blog\n    categories:\n      - [Hexo]\n    tags: [Hexo]\n    keywords: hexo, next, blog\n    ---\n    ```\n    - 重启server\n    重新生成静态页面以及开启服务，之后刷新页面就会看到。\n    ```\n    hexo g\n    hexo s\n    ```\n\n2. #### categories\n\n    categories页创建与tags页操作一样。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page categories\n    ```\n    - 配置\n    打开blog/source/categories/index.md，默认是下列内容：\n    ```\n    ---\n    title: 分类\n    date: 2018-10-22 14:25:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    title: 分类\n    date: 2018-10-22 14:25:08\n    type: \"categories\"\n    comments: false\n    ---\n    ```\n    - 添加categories\n    给文章添加对应的categories：\n    ```\n    ---\n    title: Hexo+Next搭建属于自己的Blog\n    comments: false\n    date: 2018-10-22 23:03:42\n    updated: 2019-10-22 23:03:42\n    desc: Hexo+Next搭建属于自己的Blog\n    categories:\n      - [Hexo]\n    tags: [Hexo]\n    keywords: hexo, next, blog\n    ---\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n3. #### 指定分类列表页\n\n    这个功能主要用于把已经分类的自分类单独形成一个页面放在sidebar，打开之后是一个文章list效果，建议1～2个。\n    ![](enjoy_list.png)\n    - 子分类\n    找到需要在sidebar显示的子分类，中文、英文都可以。\n    - 配置\n    打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***menu***</font>，更改代码如下：\n    ```\n    menu:\n      home: / || home\n      archives: /archives/ || history\n      tags: /tags/ || tags\n      categories: /categories/ || list\n      movie: /categories/影视说/ || film\n      enjoy: /categories/娱乐/ || battery-full\n      messagepad: /messagepad/ || sticky-note\n      about: /about/ || user\n      # schedule: /schedule/ || calendar\n      # sitemap: /sitemap.xml || sitemap\n      # commonweal: /404/ || heartbeat\n    ```\n    设置的标准：\n    第一列 / themes/next/languages/zh-Hans.yml 对应的关键字\n    第二列 / url 路径\n    第三列 / 图标 https://fontawesome.com/cheatsheet?from=io\n    - 添加关键字\n    打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：\n    ```\n    menu:\n      home: 首页\n      archives: 时间轴\n      categories: 分类\n      tags: 标签\n      about: 关于\n      search: 搜索\n      schedule: 日程表\n      sitemap: 站点地图\n      commonweal: 公益 404\n      movie: 影视说\n      messagepad: 留言板\n      enjoy: 娱乐\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n4. #### about\n\n    about是sidebar自我介绍的一栏，很重要，但是生成的方式与tags、categories如出一辙。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page about\n    ```\n    - 配置\n    打开blog/source/about/index.md，默认是下列内容：\n    ```\n    ---\n    title: about\n    date: 2018-10-22 14:35:08\n    ---\n    ```\n    改成\n    ```\n    ---\n    layout: about\n    title: Hi\n    date: 2018-10-22\n    comments: false\n    type: about\n    ---\n    ```\n    - markdown语法写about页面\n    Hexo会把md文件自动生成html页面，用markdown语法去写md文件即可。\n\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n5. #### 自定义页面\n\n    在sidebar往往需要自定义一些自己需要的页面，这块我直接用我的留言板做例子。\n    - new page\n    在blog根目录，执行下列命令：\n    ```\n    hexo new page messagepad\n    ```\n    - 配置\n    打开blog/source/messagepad/index.md，更改内容如下：\n    ```\n    ---\n    title: 欢迎大家留言\n    ---\n    <img src=\"messagepad.png\" style=\"border:3px solid blue;width:100%\"/>\n\n    <div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n    ```\n    其实，在这个index.md文件中，就是用markdown语法去写html。\n    - 配置 && 添加关键字\n    其实这2步跟第三部分的**指定分类列表页**所做的操作一致。\n    打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***menu***</font>，新增对应的sidebar栏：\n    ```\n    menu:\n      messagepad: /messagepad/ || sticky-note\n    ```\n    打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：\n    ```\n    menu:\n      messagepad: 留言板\n    ```\n    - 重启server\n    同样重启服务。\n    ```\n    hexo g && hexo s\n    ```\n\n{% note info %}\n### 技巧\n\n打开blog/scaffolds/post.md文件，更改代码如下：\n{% code %}\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncomments: false\ncategories:\n  - []\ntags: []\nkeywords:\ntop: false\n{% endcode %}\n这样，在以后hexo new新建博文，模板自动生成，只需要添加对应的tags、categories即可\n{% endnote%}\n","slug":"Hexo-新增tags、categories、自定义菜单栏页","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2tl003otabjuhko5ozv","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>Hexo初始化博客之后，主题选用了人气最高的Next，但是发现菜单栏默认是不自动添加tags页与categories页，查资料，终于创建成功，记录下来。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>除了讲述tags、categories、about自带的自动化页面，还有讲述自定义sidebar页面，方便用于自己定义相册、等自己喜欢的页面。</p>\n<ol>\n<li><h4 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags\"></a>tags</h4><ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>不出意外会自动生成文件blog/source/tags/index.md，目前位置没有出现过任何问题。有问题的同学可以留言给我。</p>\n</li>\n<li><p>配置<br>打开blog/source/tags/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-10-22 14:22:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-10-22 13:58:44</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加tags<br>给文章添加对应的tags，打开一篇文件，例子如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-10-22 23:03:42</span><br><span class=\"line\">updated: 2019-10-22 23:03:42</span><br><span class=\"line\">desc: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo]</span><br><span class=\"line\">keywords: hexo, next, blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>重新生成静态页面以及开启服务，之后刷新页面就会看到。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"categories\"><a href=\"#categories\" class=\"headerlink\" title=\"categories\"></a>categories</h4><p> categories页创建与tags页操作一样。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/categories/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2018-10-22 14:25:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2018-10-22 14:25:08</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加categories<br>给文章添加对应的categories：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-10-22 23:03:42</span><br><span class=\"line\">updated: 2019-10-22 23:03:42</span><br><span class=\"line\">desc: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo]</span><br><span class=\"line\">keywords: hexo, next, blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"指定分类列表页\"><a href=\"#指定分类列表页\" class=\"headerlink\" title=\"指定分类列表页\"></a>指定分类列表页</h4><p> 这个功能主要用于把已经分类的自分类单独形成一个页面放在sidebar，打开之后是一个文章list效果，建议1～2个。<br> <img src=\"enjoy_list.png\" alt></p>\n<ul>\n<li>子分类<br>找到需要在sidebar显示的子分类，中文、英文都可以。</li>\n<li><p>配置<br>打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>menu</em></strong></font>，更改代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  archives: /archives/ || history</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || list</span><br><span class=\"line\">  movie: /categories/影视说/ || film</span><br><span class=\"line\">  enjoy: /categories/娱乐/ || battery-full</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  # schedule: /schedule/ || calendar</span><br><span class=\"line\">  # sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  # commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<p>设置的标准：<br>第一列 / themes/next/languages/zh-Hans.yml 对应的关键字<br>第二列 / url 路径<br>第三列 / 图标 <a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/cheatsheet?from=io</a></p>\n</li>\n<li><p>添加关键字<br>打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: 首页</span><br><span class=\"line\">  archives: 时间轴</span><br><span class=\"line\">  categories: 分类</span><br><span class=\"line\">  tags: 标签</span><br><span class=\"line\">  about: 关于</span><br><span class=\"line\">  search: 搜索</span><br><span class=\"line\">  schedule: 日程表</span><br><span class=\"line\">  sitemap: 站点地图</span><br><span class=\"line\">  commonweal: 公益 404</span><br><span class=\"line\">  movie: 影视说</span><br><span class=\"line\">  messagepad: 留言板</span><br><span class=\"line\">  enjoy: 娱乐</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"about\"><a href=\"#about\" class=\"headerlink\" title=\"about\"></a>about</h4><p> about是sidebar自我介绍的一栏，很重要，但是生成的方式与tags、categories如出一辙。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/about/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\">date: 2018-10-22 14:35:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">title: Hi</span><br><span class=\"line\">date: 2018-10-22</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">type: about</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>markdown语法写about页面<br>Hexo会把md文件自动生成html页面，用markdown语法去写md文件即可。</p>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"自定义页面\"><a href=\"#自定义页面\" class=\"headerlink\" title=\"自定义页面\"></a>自定义页面</h4><p> 在sidebar往往需要自定义一些自己需要的页面，这块我直接用我的留言板做例子。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page messagepad</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/messagepad/index.md，更改内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 欢迎大家留言</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;img src=&quot;messagepad.png&quot; style=&quot;border:3px solid blue;width:100%&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>其实，在这个index.md文件中，就是用markdown语法去写html。</p>\n</li>\n<li><p>配置 &amp;&amp; 添加关键字<br>其实这2步跟第三部分的<strong>指定分类列表页</strong>所做的操作一致。<br>打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>menu</em></strong></font>，新增对应的sidebar栏：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br></pre></td></tr></table></figure>\n<p>打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  messagepad: 留言板</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<div class=\"note info\">\n            <h3 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h3><p>打开blog/scaffolds/post.md文件，更改代码如下：</p><p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hexo新增tags、categories、自定义菜单栏页</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: 1540656979000</span><br><span class=\"line\">updated: 1540656979000</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - []</span><br><span class=\"line\">tags: []</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">top: false</span><br></pre></td></tr></table></figure><br>这样，在以后hexo new新建博文，模板自动生成，只需要添加对应的tags、categories即可</p>\n          </div>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>Hexo初始化博客之后，主题选用了人气最高的Next，但是发现菜单栏默认是不自动添加tags页与categories页，查资料，终于创建成功，记录下来。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>除了讲述tags、categories、about自带的自动化页面，还有讲述自定义sidebar页面，方便用于自己定义相册、等自己喜欢的页面。</p>\n<ol>\n<li><h4 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags\"></a>tags</h4><ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>不出意外会自动生成文件blog/source/tags/index.md，目前位置没有出现过任何问题。有问题的同学可以留言给我。</p>\n</li>\n<li><p>配置<br>打开blog/source/tags/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-10-22 14:22:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-10-22 13:58:44</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加tags<br>给文章添加对应的tags，打开一篇文件，例子如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-10-22 23:03:42</span><br><span class=\"line\">updated: 2019-10-22 23:03:42</span><br><span class=\"line\">desc: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo]</span><br><span class=\"line\">keywords: hexo, next, blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>重新生成静态页面以及开启服务，之后刷新页面就会看到。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"categories\"><a href=\"#categories\" class=\"headerlink\" title=\"categories\"></a>categories</h4><p> categories页创建与tags页操作一样。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/categories/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2018-10-22 14:25:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2018-10-22 14:25:08</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加categories<br>给文章添加对应的categories：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-10-22 23:03:42</span><br><span class=\"line\">updated: 2019-10-22 23:03:42</span><br><span class=\"line\">desc: Hexo+Next搭建属于自己的Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo]</span><br><span class=\"line\">keywords: hexo, next, blog</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"指定分类列表页\"><a href=\"#指定分类列表页\" class=\"headerlink\" title=\"指定分类列表页\"></a>指定分类列表页</h4><p> 这个功能主要用于把已经分类的自分类单独形成一个页面放在sidebar，打开之后是一个文章list效果，建议1～2个。<br> <img src=\"enjoy_list.png\" alt></p>\n<ul>\n<li>子分类<br>找到需要在sidebar显示的子分类，中文、英文都可以。</li>\n<li><p>配置<br>打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>menu</em></strong></font>，更改代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  archives: /archives/ || history</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || list</span><br><span class=\"line\">  movie: /categories/影视说/ || film</span><br><span class=\"line\">  enjoy: /categories/娱乐/ || battery-full</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  # schedule: /schedule/ || calendar</span><br><span class=\"line\">  # sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  # commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n<p>设置的标准：<br>第一列 / themes/next/languages/zh-Hans.yml 对应的关键字<br>第二列 / url 路径<br>第三列 / 图标 <a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/cheatsheet?from=io</a></p>\n</li>\n<li><p>添加关键字<br>打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: 首页</span><br><span class=\"line\">  archives: 时间轴</span><br><span class=\"line\">  categories: 分类</span><br><span class=\"line\">  tags: 标签</span><br><span class=\"line\">  about: 关于</span><br><span class=\"line\">  search: 搜索</span><br><span class=\"line\">  schedule: 日程表</span><br><span class=\"line\">  sitemap: 站点地图</span><br><span class=\"line\">  commonweal: 公益 404</span><br><span class=\"line\">  movie: 影视说</span><br><span class=\"line\">  messagepad: 留言板</span><br><span class=\"line\">  enjoy: 娱乐</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"about\"><a href=\"#about\" class=\"headerlink\" title=\"about\"></a>about</h4><p> about是sidebar自我介绍的一栏，很重要，但是生成的方式与tags、categories如出一辙。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/about/index.md，默认是下列内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: about</span><br><span class=\"line\">date: 2018-10-22 14:35:08</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">title: Hi</span><br><span class=\"line\">date: 2018-10-22</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">type: about</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>markdown语法写about页面<br>Hexo会把md文件自动生成html页面，用markdown语法去写md文件即可。</p>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"自定义页面\"><a href=\"#自定义页面\" class=\"headerlink\" title=\"自定义页面\"></a>自定义页面</h4><p> 在sidebar往往需要自定义一些自己需要的页面，这块我直接用我的留言板做例子。</p>\n<ul>\n<li><p>new page<br>在blog根目录，执行下列命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page messagepad</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>打开blog/source/messagepad/index.md，更改内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 欢迎大家留言</span><br><span class=\"line\">---</span><br><span class=\"line\">&lt;img src=&quot;messagepad.png&quot; style=&quot;border:3px solid blue;width:100%&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>其实，在这个index.md文件中，就是用markdown语法去写html。</p>\n</li>\n<li><p>配置 &amp;&amp; 添加关键字<br>其实这2步跟第三部分的<strong>指定分类列表页</strong>所做的操作一致。<br>打开Next主题配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>menu</em></strong></font>，新增对应的sidebar栏：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br></pre></td></tr></table></figure>\n<p>打开文件：blog/themes/next/languages/zh-Hans.yml，添加对应的mapping：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  messagepad: 留言板</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启server<br>同样重启服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<div class=\"note info\">\n            <h3 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h3><p>打开blog/scaffolds/post.md文件，更改代码如下：</p><p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hexo新增tags、categories、自定义菜单栏页</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: 1540656979000</span><br><span class=\"line\">updated: 1540656979000</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - []</span><br><span class=\"line\">tags: []</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">top: false</span><br></pre></td></tr></table></figure><br>这样，在以后hexo new新建博文，模板自动生成，只需要添加对应的tags、categories即可</p>\n          </div>"},{"title":"hexo菜单栏添加留言板-Valine","comments":0,"desc":"在hexo博客菜单栏添加留言板功能，本博客使用的Valine插件","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, valine, 留言板, 菜单栏","abbrlink":7953,"date":"2018-12-08T12:44:08.000Z","updated":"2019-01-08T12:44:08.000Z","_content":"\n### 简述\n{% note success %}\nblog菜单栏添加留言板功能，欢迎大家留言交流。。。\n{% endnote %}\n![](/images/article_liuyanban.png)\n\n<!--more-->\n<hr />\n\n***My blog***文章添加留言功能，除此之外还在菜单栏添加一个专门用来留言的message pad，用来***share***文章中简称mp。查看next主题config.yml文件以及google了一下，发现居然配置5中默认的评论系统。。。***next***这么变态吗？提供1～2就好了，5个是怎么回事啊，还得花时间去整理***compare***，以下仅代表个人观点。\n\n### 评论系统\n\n| id  |   type   | desc                                   | remark |\n|:---:|:--------:|:-------------------------------------- |:------:|\n|  1  |  valine  | https://valine.js.org                  | 🌟🌟🌟 |\n|  4  |  disqus  | https://www.jianshu.com/p/c4f65ebe23ad |        |\n|  5  | changyan | https://www.jianshu.com/p/5246d020da25 |        |\n|  2  | gitment  | https://github.com/imsun/gitment       |   🌟   |\n|  3  |  gitalk  | https://gitalk.github.io               |   🌟   |\n\n#### 效果图\n> valine\n\n<img src=\"valine.png\" style=\"border:3px solid black\"/>\n> disqus\n\n<img src=\"disqus.png\" style=\"border:3px solid black\"/>\n> changyan\n\n<img src=\"changyan.png\" style=\"border:3px solid black\"/>\n> gitment\n\n<img src=\"gitment.png\" style=\"border:3px solid black\"/>\n> gitalk\n\n<img src=\"gitalk.png\" style=\"border:3px solid black\"/>\n\n***总结：***<font color=\"#dd0000\" size=\"4\">单从效果图上来看，我倾向于gitment、gitalk、changyan，简单整洁。</font>\n\n#### 功能性\n这里不想说明了，直接给出结论。。。干货\n\n***总结：***<font color=\"#dd0000\" size=\"4\">除了valine，其他4个评论均需要强制登录一个指定的账号才可以进行评论发布，令人太不爽了。</font>\n\n### Valine\n\n    主要基于账号的问题，我选择Valine，起码大家都可以参与，没有限制。\n\n#### 注册LeanCloud\n注册LeanCloud，将数据托管给第三方，直接登录账号使用，很方便。注册地址：[注册Leancloud(官方)](https://leancloud.cn/)\n> 注册\n\n<img src=\"leancloud_zhuce.png\" style=\"border:3px solid blue\"/>\n> 创建应用\n\n<img src=\"leancloud_newapp.png\" style=\"border:3px solid blue\"/>\n> 设置应用\n\n<img src=\"leancloud_setting.png\" style=\"border:3px solid blue\"/>\n> 应用key\n\n<img src=\"leancloud_key.png\" style=\"border:3px solid blue\"/>\n\n\n#### next配置\n打开next的配置：theme/next/_config.yml，搜索：# Valine\n```\nvaline:\n  enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.\n  appid: XXXX # your leancloud application appid\n  appkey: XXXX # your leancloud application appkey\n  notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki\n  verify: false # Verification code\n  placeholder: 欢迎吐槽 ！ # comment box placeholder\n  avatar: mm # gravatar style\n  guest_info: nick,mail # link custom comment header\n  pageSize: 10 # pagination size\n  language: # language, available values: en, zh-cn\n  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html\n  comment_count: true # if false, comment count will only be displayed in post page, not in home page\n```\n- enable：是否开启Valine评论\n- appid：leancloud应用上App ID\n- appkey：leancloud应用上App Key\n- notify && verify：是否开启邮件提醒，leancloud && github valine使用有详细介绍，具体查看文档(https://valine.js.org/notify.html)\n- placeholder：评论区默认文字\n- avatar：头像设置(https://valine.js.org/avatar.html)\n- guest_info：评论区用户选填的基本信息\n- pageSize：一页评论的数据\n- language：语言设置，默认zh-cn\n- visitor：还不知道，欢迎大家留言告诉我，哈ヾﾉ≧∀≦)o哈\n- comment_count：是否展示评论总数\n\n### 评论生效\n***注册 && 配置***搞完了之后，并不是立马看到效果，需要：\n\n    hexo g\n    hexo server -p 8888\n\n从心打开blog，奇迹出现了。。。哈哈哈，***<font color=\"#dd0000\">一起都是自己的功劳，并不是什么奇迹，只要努力，成功离你就会不远</font>***。\n\n### 禁用评论\n但是，我其实就是想在菜单栏添加个留言板功能，不想再blog文章中添加这个功能，简单。打开文章，在最上面的设置中加入\n\n    comments: true\n从新g->server，奇迹再次发生。。。如果想都关闭评论，这个需要在已经发布的文章中分别设置，暂时没有找到简单的方法。不能在以后每篇文章中每次都设置，好麻烦，只想需要要设置一次。当然有方法，blog/scaffolds/post.md文件设置：\n```\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncategories:\ntags:\ncomments: false\n---\n```\n\n### 留言板\n***终于进入主题了，菜单栏添加单独一栏留言板功能。***\n> 添加page\n\n    hexo new page messagepad\n\n> 留言板\n\n对page messagepad的index.md进行编辑加入自定义的东西。\n```\n---\ntitle: 欢迎大家留言\n---\n![messagepad.png](messagepad.png)\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n```\n继续见证奇迹吧。\n\n### Suggestion\n***<font color=\"#dd0000\" size=\"5\">真正的成功并非一朝一夕，水滴石穿，努力吧，少年们！！！</font>***\n\n    到此收工，一个完美的菜单栏留言板功能share献给大家。\n","source":"_posts/Hexo-菜单栏添加留言板-Valine.md","raw":"---\ntitle: hexo菜单栏添加留言板-Valine\ncomments: false\ndesc: 在hexo博客菜单栏添加留言板功能，本博客使用的Valine插件\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo插件]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, valine, 留言板, 菜单栏\nabbrlink: 7953\ndate: 2018-12-08 20:44:08\nupdated: 2019-01-08 20:44:08\n---\n\n### 简述\n{% note success %}\nblog菜单栏添加留言板功能，欢迎大家留言交流。。。\n{% endnote %}\n![](/images/article_liuyanban.png)\n\n<!--more-->\n<hr />\n\n***My blog***文章添加留言功能，除此之外还在菜单栏添加一个专门用来留言的message pad，用来***share***文章中简称mp。查看next主题config.yml文件以及google了一下，发现居然配置5中默认的评论系统。。。***next***这么变态吗？提供1～2就好了，5个是怎么回事啊，还得花时间去整理***compare***，以下仅代表个人观点。\n\n### 评论系统\n\n| id  |   type   | desc                                   | remark |\n|:---:|:--------:|:-------------------------------------- |:------:|\n|  1  |  valine  | https://valine.js.org                  | 🌟🌟🌟 |\n|  4  |  disqus  | https://www.jianshu.com/p/c4f65ebe23ad |        |\n|  5  | changyan | https://www.jianshu.com/p/5246d020da25 |        |\n|  2  | gitment  | https://github.com/imsun/gitment       |   🌟   |\n|  3  |  gitalk  | https://gitalk.github.io               |   🌟   |\n\n#### 效果图\n> valine\n\n<img src=\"valine.png\" style=\"border:3px solid black\"/>\n> disqus\n\n<img src=\"disqus.png\" style=\"border:3px solid black\"/>\n> changyan\n\n<img src=\"changyan.png\" style=\"border:3px solid black\"/>\n> gitment\n\n<img src=\"gitment.png\" style=\"border:3px solid black\"/>\n> gitalk\n\n<img src=\"gitalk.png\" style=\"border:3px solid black\"/>\n\n***总结：***<font color=\"#dd0000\" size=\"4\">单从效果图上来看，我倾向于gitment、gitalk、changyan，简单整洁。</font>\n\n#### 功能性\n这里不想说明了，直接给出结论。。。干货\n\n***总结：***<font color=\"#dd0000\" size=\"4\">除了valine，其他4个评论均需要强制登录一个指定的账号才可以进行评论发布，令人太不爽了。</font>\n\n### Valine\n\n    主要基于账号的问题，我选择Valine，起码大家都可以参与，没有限制。\n\n#### 注册LeanCloud\n注册LeanCloud，将数据托管给第三方，直接登录账号使用，很方便。注册地址：[注册Leancloud(官方)](https://leancloud.cn/)\n> 注册\n\n<img src=\"leancloud_zhuce.png\" style=\"border:3px solid blue\"/>\n> 创建应用\n\n<img src=\"leancloud_newapp.png\" style=\"border:3px solid blue\"/>\n> 设置应用\n\n<img src=\"leancloud_setting.png\" style=\"border:3px solid blue\"/>\n> 应用key\n\n<img src=\"leancloud_key.png\" style=\"border:3px solid blue\"/>\n\n\n#### next配置\n打开next的配置：theme/next/_config.yml，搜索：# Valine\n```\nvaline:\n  enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.\n  appid: XXXX # your leancloud application appid\n  appkey: XXXX # your leancloud application appkey\n  notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki\n  verify: false # Verification code\n  placeholder: 欢迎吐槽 ！ # comment box placeholder\n  avatar: mm # gravatar style\n  guest_info: nick,mail # link custom comment header\n  pageSize: 10 # pagination size\n  language: # language, available values: en, zh-cn\n  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html\n  comment_count: true # if false, comment count will only be displayed in post page, not in home page\n```\n- enable：是否开启Valine评论\n- appid：leancloud应用上App ID\n- appkey：leancloud应用上App Key\n- notify && verify：是否开启邮件提醒，leancloud && github valine使用有详细介绍，具体查看文档(https://valine.js.org/notify.html)\n- placeholder：评论区默认文字\n- avatar：头像设置(https://valine.js.org/avatar.html)\n- guest_info：评论区用户选填的基本信息\n- pageSize：一页评论的数据\n- language：语言设置，默认zh-cn\n- visitor：还不知道，欢迎大家留言告诉我，哈ヾﾉ≧∀≦)o哈\n- comment_count：是否展示评论总数\n\n### 评论生效\n***注册 && 配置***搞完了之后，并不是立马看到效果，需要：\n\n    hexo g\n    hexo server -p 8888\n\n从心打开blog，奇迹出现了。。。哈哈哈，***<font color=\"#dd0000\">一起都是自己的功劳，并不是什么奇迹，只要努力，成功离你就会不远</font>***。\n\n### 禁用评论\n但是，我其实就是想在菜单栏添加个留言板功能，不想再blog文章中添加这个功能，简单。打开文章，在最上面的设置中加入\n\n    comments: true\n从新g->server，奇迹再次发生。。。如果想都关闭评论，这个需要在已经发布的文章中分别设置，暂时没有找到简单的方法。不能在以后每篇文章中每次都设置，好麻烦，只想需要要设置一次。当然有方法，blog/scaffolds/post.md文件设置：\n```\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncategories:\ntags:\ncomments: false\n---\n```\n\n### 留言板\n***终于进入主题了，菜单栏添加单独一栏留言板功能。***\n> 添加page\n\n    hexo new page messagepad\n\n> 留言板\n\n对page messagepad的index.md进行编辑加入自定义的东西。\n```\n---\ntitle: 欢迎大家留言\n---\n![messagepad.png](messagepad.png)\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>\n```\n继续见证奇迹吧。\n\n### Suggestion\n***<font color=\"#dd0000\" size=\"5\">真正的成功并非一朝一夕，水滴石穿，努力吧，少年们！！！</font>***\n\n    到此收工，一个完美的菜单栏留言板功能share献给大家。\n","slug":"Hexo-菜单栏添加留言板-Valine","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2tq003rtabj5yprig7f","content":"<h3 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h3><div class=\"note success\">\n            <p>blog菜单栏添加留言板功能，欢迎大家留言交流。。。</p>\n          </div>\n<p><img src=\"/images/article_liuyanban.png\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<p><strong><em>My blog</em></strong>文章添加留言功能，除此之外还在菜单栏添加一个专门用来留言的message pad，用来<strong><em>share</em></strong>文章中简称mp。查看next主题config.yml文件以及google了一下，发现居然配置5中默认的评论系统。。。<strong><em>next</em></strong>这么变态吗？提供1～2就好了，5个是怎么回事啊，还得花时间去整理<strong><em>compare</em></strong>，以下仅代表个人观点。</p>\n<h3 id=\"评论系统\"><a href=\"#评论系统\" class=\"headerlink\" title=\"评论系统\"></a>评论系统</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">type</th>\n<th style=\"text-align:left\">desc</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">valine</td>\n<td style=\"text-align:left\"><a href=\"https://valine.js.org\" target=\"_blank\" rel=\"noopener\">https://valine.js.org</a></td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">disqus</td>\n<td style=\"text-align:left\"><a href=\"https://www.jianshu.com/p/c4f65ebe23ad\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/c4f65ebe23ad</a></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">changyan</td>\n<td style=\"text-align:left\"><a href=\"https://www.jianshu.com/p/5246d020da25\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/5246d020da25</a></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">gitment</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"noopener\">https://github.com/imsun/gitment</a></td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">gitalk</td>\n<td style=\"text-align:left\"><a href=\"https://gitalk.github.io\" target=\"_blank\" rel=\"noopener\">https://gitalk.github.io</a></td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h4><blockquote>\n<p>valine</p>\n</blockquote>\n<p><img src=\"valine.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>disqus</p>\n</blockquote>\n<p><img src=\"disqus.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>changyan</p>\n</blockquote>\n<p><img src=\"changyan.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>gitment</p>\n</blockquote>\n<p><img src=\"gitment.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>gitalk</p>\n</blockquote>\n<p><img src=\"gitalk.png\" style=\"border:3px solid black\"></p>\n<p><strong><em>总结：</em></strong><font color=\"#dd0000\" size=\"4\">单从效果图上来看，我倾向于gitment、gitalk、changyan，简单整洁。</font></p>\n<h4 id=\"功能性\"><a href=\"#功能性\" class=\"headerlink\" title=\"功能性\"></a>功能性</h4><p>这里不想说明了，直接给出结论。。。干货</p>\n<p><strong><em>总结：</em></strong><font color=\"#dd0000\" size=\"4\">除了valine，其他4个评论均需要强制登录一个指定的账号才可以进行评论发布，令人太不爽了。</font></p>\n<h3 id=\"Valine\"><a href=\"#Valine\" class=\"headerlink\" title=\"Valine\"></a>Valine</h3><pre><code>主要基于账号的问题，我选择Valine，起码大家都可以参与，没有限制。\n</code></pre><h4 id=\"注册LeanCloud\"><a href=\"#注册LeanCloud\" class=\"headerlink\" title=\"注册LeanCloud\"></a>注册LeanCloud</h4><p>注册LeanCloud，将数据托管给第三方，直接登录账号使用，很方便。注册地址：<a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">注册Leancloud(官方)</a></p>\n<blockquote>\n<p>注册</p>\n</blockquote>\n<p><img src=\"leancloud_zhuce.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>创建应用</p>\n</blockquote>\n<p><img src=\"leancloud_newapp.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>设置应用</p>\n</blockquote>\n<p><img src=\"leancloud_setting.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>应用key</p>\n</blockquote>\n<p><img src=\"leancloud_key.png\" style=\"border:3px solid blue\"></p>\n<h4 id=\"next配置\"><a href=\"#next配置\" class=\"headerlink\" title=\"next配置\"></a>next配置</h4><p>打开next的配置：theme/next/_config.yml，搜索：# Valine<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">valine:</span><br><span class=\"line\">  enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.</span><br><span class=\"line\">  appid: XXXX # your leancloud application appid</span><br><span class=\"line\">  appkey: XXXX # your leancloud application appkey</span><br><span class=\"line\">  notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki</span><br><span class=\"line\">  verify: false # Verification code</span><br><span class=\"line\">  placeholder: 欢迎吐槽 ！ # comment box placeholder</span><br><span class=\"line\">  avatar: mm # gravatar style</span><br><span class=\"line\">  guest_info: nick,mail # link custom comment header</span><br><span class=\"line\">  pageSize: 10 # pagination size</span><br><span class=\"line\">  language: # language, available values: en, zh-cn</span><br><span class=\"line\">  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span><br><span class=\"line\">  comment_count: true # if false, comment count will only be displayed in post page, not in home page</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>enable：是否开启Valine评论</li>\n<li>appid：leancloud应用上App ID</li>\n<li>appkey：leancloud应用上App Key</li>\n<li>notify &amp;&amp; verify：是否开启邮件提醒，leancloud &amp;&amp; github valine使用有详细介绍，具体查看文档(<a href=\"https://valine.js.org/notify.html\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/notify.html</a>)</li>\n<li>placeholder：评论区默认文字</li>\n<li>avatar：头像设置(<a href=\"https://valine.js.org/avatar.html\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/avatar.html</a>)</li>\n<li>guest_info：评论区用户选填的基本信息</li>\n<li>pageSize：一页评论的数据</li>\n<li>language：语言设置，默认zh-cn</li>\n<li>visitor：还不知道，欢迎大家留言告诉我，哈ヾﾉ≧∀≦)o哈</li>\n<li>comment_count：是否展示评论总数</li>\n</ul>\n<h3 id=\"评论生效\"><a href=\"#评论生效\" class=\"headerlink\" title=\"评论生效\"></a>评论生效</h3><p><strong><em>注册 &amp;&amp; 配置</em></strong>搞完了之后，并不是立马看到效果，需要：</p>\n<pre><code>hexo g\nhexo server -p 8888\n</code></pre><p>从心打开blog，奇迹出现了。。。哈哈哈，<strong><em><font color=\"#dd0000\">一起都是自己的功劳，并不是什么奇迹，只要努力，成功离你就会不远</font></em></strong>。</p>\n<h3 id=\"禁用评论\"><a href=\"#禁用评论\" class=\"headerlink\" title=\"禁用评论\"></a>禁用评论</h3><p>但是，我其实就是想在菜单栏添加个留言板功能，不想再blog文章中添加这个功能，简单。打开文章，在最上面的设置中加入</p>\n<pre><code>comments: true\n</code></pre><p>从新g-&gt;server，奇迹再次发生。。。如果想都关闭评论，这个需要在已经发布的文章中分别设置，暂时没有找到简单的方法。不能在以后每篇文章中每次都设置，好麻烦，只想需要要设置一次。当然有方法，blog/scaffolds/post.md文件设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">updated: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"留言板\"><a href=\"#留言板\" class=\"headerlink\" title=\"留言板\"></a>留言板</h3><p><strong><em>终于进入主题了，菜单栏添加单独一栏留言板功能。</em></strong></p>\n<blockquote>\n<p>添加page</p>\n</blockquote>\n<pre><code>hexo new page messagepad\n</code></pre><blockquote>\n<p>留言板</p>\n</blockquote>\n<p>对page messagepad的index.md进行编辑加入自定义的东西。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 欢迎大家留言</span><br><span class=\"line\">---</span><br><span class=\"line\">![messagepad.png](messagepad.png)</span><br><span class=\"line\">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>继续见证奇迹吧。</p>\n<h3 id=\"Suggestion\"><a href=\"#Suggestion\" class=\"headerlink\" title=\"Suggestion\"></a>Suggestion</h3><p><strong><em><font color=\"#dd0000\" size=\"5\">真正的成功并非一朝一夕，水滴石穿，努力吧，少年们！！！</font></em></strong></p>\n<pre><code>到此收工，一个完美的菜单栏留言板功能share献给大家。\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h3><div class=\"note success\">\n            <p>blog菜单栏添加留言板功能，欢迎大家留言交流。。。</p>\n          </div>\n<p><img src=\"/images/article_liuyanban.png\" alt></p>","more":"<hr>\n\n<p><strong><em>My blog</em></strong>文章添加留言功能，除此之外还在菜单栏添加一个专门用来留言的message pad，用来<strong><em>share</em></strong>文章中简称mp。查看next主题config.yml文件以及google了一下，发现居然配置5中默认的评论系统。。。<strong><em>next</em></strong>这么变态吗？提供1～2就好了，5个是怎么回事啊，还得花时间去整理<strong><em>compare</em></strong>，以下仅代表个人观点。</p>\n<h3 id=\"评论系统\"><a href=\"#评论系统\" class=\"headerlink\" title=\"评论系统\"></a>评论系统</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">type</th>\n<th style=\"text-align:left\">desc</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">valine</td>\n<td style=\"text-align:left\"><a href=\"https://valine.js.org\" target=\"_blank\" rel=\"noopener\">https://valine.js.org</a></td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">disqus</td>\n<td style=\"text-align:left\"><a href=\"https://www.jianshu.com/p/c4f65ebe23ad\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/c4f65ebe23ad</a></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">changyan</td>\n<td style=\"text-align:left\"><a href=\"https://www.jianshu.com/p/5246d020da25\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/5246d020da25</a></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">gitment</td>\n<td style=\"text-align:left\"><a href=\"https://github.com/imsun/gitment\" target=\"_blank\" rel=\"noopener\">https://github.com/imsun/gitment</a></td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">gitalk</td>\n<td style=\"text-align:left\"><a href=\"https://gitalk.github.io\" target=\"_blank\" rel=\"noopener\">https://gitalk.github.io</a></td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h4><blockquote>\n<p>valine</p>\n</blockquote>\n<p><img src=\"valine.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>disqus</p>\n</blockquote>\n<p><img src=\"disqus.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>changyan</p>\n</blockquote>\n<p><img src=\"changyan.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>gitment</p>\n</blockquote>\n<p><img src=\"gitment.png\" style=\"border:3px solid black\"></p>\n<blockquote>\n<p>gitalk</p>\n</blockquote>\n<p><img src=\"gitalk.png\" style=\"border:3px solid black\"></p>\n<p><strong><em>总结：</em></strong><font color=\"#dd0000\" size=\"4\">单从效果图上来看，我倾向于gitment、gitalk、changyan，简单整洁。</font></p>\n<h4 id=\"功能性\"><a href=\"#功能性\" class=\"headerlink\" title=\"功能性\"></a>功能性</h4><p>这里不想说明了，直接给出结论。。。干货</p>\n<p><strong><em>总结：</em></strong><font color=\"#dd0000\" size=\"4\">除了valine，其他4个评论均需要强制登录一个指定的账号才可以进行评论发布，令人太不爽了。</font></p>\n<h3 id=\"Valine\"><a href=\"#Valine\" class=\"headerlink\" title=\"Valine\"></a>Valine</h3><pre><code>主要基于账号的问题，我选择Valine，起码大家都可以参与，没有限制。\n</code></pre><h4 id=\"注册LeanCloud\"><a href=\"#注册LeanCloud\" class=\"headerlink\" title=\"注册LeanCloud\"></a>注册LeanCloud</h4><p>注册LeanCloud，将数据托管给第三方，直接登录账号使用，很方便。注册地址：<a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">注册Leancloud(官方)</a></p>\n<blockquote>\n<p>注册</p>\n</blockquote>\n<p><img src=\"leancloud_zhuce.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>创建应用</p>\n</blockquote>\n<p><img src=\"leancloud_newapp.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>设置应用</p>\n</blockquote>\n<p><img src=\"leancloud_setting.png\" style=\"border:3px solid blue\"></p>\n<blockquote>\n<p>应用key</p>\n</blockquote>\n<p><img src=\"leancloud_key.png\" style=\"border:3px solid blue\"></p>\n<h4 id=\"next配置\"><a href=\"#next配置\" class=\"headerlink\" title=\"next配置\"></a>next配置</h4><p>打开next的配置：theme/next/_config.yml，搜索：# Valine<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">valine:</span><br><span class=\"line\">  enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version.</span><br><span class=\"line\">  appid: XXXX # your leancloud application appid</span><br><span class=\"line\">  appkey: XXXX # your leancloud application appkey</span><br><span class=\"line\">  notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki</span><br><span class=\"line\">  verify: false # Verification code</span><br><span class=\"line\">  placeholder: 欢迎吐槽 ！ # comment box placeholder</span><br><span class=\"line\">  avatar: mm # gravatar style</span><br><span class=\"line\">  guest_info: nick,mail # link custom comment header</span><br><span class=\"line\">  pageSize: 10 # pagination size</span><br><span class=\"line\">  language: # language, available values: en, zh-cn</span><br><span class=\"line\">  visitor: false # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span><br><span class=\"line\">  comment_count: true # if false, comment count will only be displayed in post page, not in home page</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>enable：是否开启Valine评论</li>\n<li>appid：leancloud应用上App ID</li>\n<li>appkey：leancloud应用上App Key</li>\n<li>notify &amp;&amp; verify：是否开启邮件提醒，leancloud &amp;&amp; github valine使用有详细介绍，具体查看文档(<a href=\"https://valine.js.org/notify.html\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/notify.html</a>)</li>\n<li>placeholder：评论区默认文字</li>\n<li>avatar：头像设置(<a href=\"https://valine.js.org/avatar.html\" target=\"_blank\" rel=\"noopener\">https://valine.js.org/avatar.html</a>)</li>\n<li>guest_info：评论区用户选填的基本信息</li>\n<li>pageSize：一页评论的数据</li>\n<li>language：语言设置，默认zh-cn</li>\n<li>visitor：还不知道，欢迎大家留言告诉我，哈ヾﾉ≧∀≦)o哈</li>\n<li>comment_count：是否展示评论总数</li>\n</ul>\n<h3 id=\"评论生效\"><a href=\"#评论生效\" class=\"headerlink\" title=\"评论生效\"></a>评论生效</h3><p><strong><em>注册 &amp;&amp; 配置</em></strong>搞完了之后，并不是立马看到效果，需要：</p>\n<pre><code>hexo g\nhexo server -p 8888\n</code></pre><p>从心打开blog，奇迹出现了。。。哈哈哈，<strong><em><font color=\"#dd0000\">一起都是自己的功劳，并不是什么奇迹，只要努力，成功离你就会不远</font></em></strong>。</p>\n<h3 id=\"禁用评论\"><a href=\"#禁用评论\" class=\"headerlink\" title=\"禁用评论\"></a>禁用评论</h3><p>但是，我其实就是想在菜单栏添加个留言板功能，不想再blog文章中添加这个功能，简单。打开文章，在最上面的设置中加入</p>\n<pre><code>comments: true\n</code></pre><p>从新g-&gt;server，奇迹再次发生。。。如果想都关闭评论，这个需要在已经发布的文章中分别设置，暂时没有找到简单的方法。不能在以后每篇文章中每次都设置，好麻烦，只想需要要设置一次。当然有方法，blog/scaffolds/post.md文件设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">updated: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"留言板\"><a href=\"#留言板\" class=\"headerlink\" title=\"留言板\"></a>留言板</h3><p><strong><em>终于进入主题了，菜单栏添加单独一栏留言板功能。</em></strong></p>\n<blockquote>\n<p>添加page</p>\n</blockquote>\n<pre><code>hexo new page messagepad\n</code></pre><blockquote>\n<p>留言板</p>\n</blockquote>\n<p>对page messagepad的index.md进行编辑加入自定义的东西。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 欢迎大家留言</span><br><span class=\"line\">---</span><br><span class=\"line\">![messagepad.png](messagepad.png)</span><br><span class=\"line\">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>继续见证奇迹吧。</p>\n<h3 id=\"Suggestion\"><a href=\"#Suggestion\" class=\"headerlink\" title=\"Suggestion\"></a>Suggestion</h3><p><strong><em><font color=\"#dd0000\" size=\"5\">真正的成功并非一朝一夕，水滴石穿，努力吧，少年们！！！</font></em></strong></p>\n<pre><code>到此收工，一个完美的菜单栏留言板功能share献给大家。\n</code></pre>"},{"title":"LDAP查看用户是否锁定lockoutTime","comments":0,"desc":"用python脚本来查看LDAP用户是否锁定，关键对象属性：lockoutTime","keywords":"LDAP, lockoutTime, 锁定, python, 属性","abbrlink":35151,"date":"2019-04-23T02:57:01.000Z","updated":"2019-04-23T02:57:01.000Z","_content":"\n### 问题描述：\n\n    LDAP查看AD账号是否锁定\n\nLDAP（Lightweight Directory Access Protocol）是轻量目录访问协议，一般都简称为LDAP。\n\n<!--more-->\n<hr />\n\n工作上对此颇有涉及，某天在解决bug时，发现账号是否锁定与错误密码次数对不上，查看别人的代码，哈哈哈，果然有个坑，查看用户账号是否锁定是通过查询域下所有机子的错误密码次数，计算账户是否锁定，我们设置的是5次，超过这个限制账号就会被锁定。\n\n针对账号是否锁定，居然是否次数算出来的，而不是属性获取。。。如果真的是这样，个人觉得LDAP那就太傻了。上网查了一下，果然有用户属性直接判断账号是否被锁定，那就是***lockoutTime***属性。没错，它也是解锁的属性。看官方解释：\n\n![官网ldap_lockoutTime](ldap_lockoutTime.png)\n\n最重要就是划红线的那2句话，大致意思lockoutTime的值是一个整形数值，并且等于***0***的时候，账号不被锁定。推理出来就是不为***0***，账号就会被认为锁定。\n\nlockoutTime官方：https://ldapwiki.com/wiki/Lockouttime\n","source":"_posts/LDAP-查看用户是否锁定lockoutTime.md","raw":"---\ntitle: LDAP查看用户是否锁定lockoutTime\ncomments: false\ndesc: 用python脚本来查看LDAP用户是否锁定，关键对象属性：lockoutTime\ncategories:\n  - [LDAP]\n  - [Python]\ntags: [LDAP, Python]\nkeywords: LDAP, lockoutTime, 锁定, python, 属性\nabbrlink: 35151\ndate: 2019-04-23 10:57:01\nupdated: 2019-04-23 10:57:01\n---\n\n### 问题描述：\n\n    LDAP查看AD账号是否锁定\n\nLDAP（Lightweight Directory Access Protocol）是轻量目录访问协议，一般都简称为LDAP。\n\n<!--more-->\n<hr />\n\n工作上对此颇有涉及，某天在解决bug时，发现账号是否锁定与错误密码次数对不上，查看别人的代码，哈哈哈，果然有个坑，查看用户账号是否锁定是通过查询域下所有机子的错误密码次数，计算账户是否锁定，我们设置的是5次，超过这个限制账号就会被锁定。\n\n针对账号是否锁定，居然是否次数算出来的，而不是属性获取。。。如果真的是这样，个人觉得LDAP那就太傻了。上网查了一下，果然有用户属性直接判断账号是否被锁定，那就是***lockoutTime***属性。没错，它也是解锁的属性。看官方解释：\n\n![官网ldap_lockoutTime](ldap_lockoutTime.png)\n\n最重要就是划红线的那2句话，大致意思lockoutTime的值是一个整形数值，并且等于***0***的时候，账号不被锁定。推理出来就是不为***0***，账号就会被认为锁定。\n\nlockoutTime官方：https://ldapwiki.com/wiki/Lockouttime\n","slug":"LDAP-查看用户是否锁定lockoutTime","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2tu003vtabjg6fgazh9","content":"<h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><pre><code>LDAP查看AD账号是否锁定\n</code></pre><p>LDAP（Lightweight Directory Access Protocol）是轻量目录访问协议，一般都简称为LDAP。</p>\n<a id=\"more\"></a>\n<hr>\n\n<p>工作上对此颇有涉及，某天在解决bug时，发现账号是否锁定与错误密码次数对不上，查看别人的代码，哈哈哈，果然有个坑，查看用户账号是否锁定是通过查询域下所有机子的错误密码次数，计算账户是否锁定，我们设置的是5次，超过这个限制账号就会被锁定。</p>\n<p>针对账号是否锁定，居然是否次数算出来的，而不是属性获取。。。如果真的是这样，个人觉得LDAP那就太傻了。上网查了一下，果然有用户属性直接判断账号是否被锁定，那就是<strong><em>lockoutTime</em></strong>属性。没错，它也是解锁的属性。看官方解释：</p>\n<p><img src=\"ldap_lockoutTime.png\" alt=\"官网ldap_lockoutTime\"></p>\n<p>最重要就是划红线的那2句话，大致意思lockoutTime的值是一个整形数值，并且等于<strong><em>0</em></strong>的时候，账号不被锁定。推理出来就是不为<strong><em>0</em></strong>，账号就会被认为锁定。</p>\n<p>lockoutTime官方：<a href=\"https://ldapwiki.com/wiki/Lockouttime\" target=\"_blank\" rel=\"noopener\">https://ldapwiki.com/wiki/Lockouttime</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><pre><code>LDAP查看AD账号是否锁定\n</code></pre><p>LDAP（Lightweight Directory Access Protocol）是轻量目录访问协议，一般都简称为LDAP。</p>","more":"<hr>\n\n<p>工作上对此颇有涉及，某天在解决bug时，发现账号是否锁定与错误密码次数对不上，查看别人的代码，哈哈哈，果然有个坑，查看用户账号是否锁定是通过查询域下所有机子的错误密码次数，计算账户是否锁定，我们设置的是5次，超过这个限制账号就会被锁定。</p>\n<p>针对账号是否锁定，居然是否次数算出来的，而不是属性获取。。。如果真的是这样，个人觉得LDAP那就太傻了。上网查了一下，果然有用户属性直接判断账号是否被锁定，那就是<strong><em>lockoutTime</em></strong>属性。没错，它也是解锁的属性。看官方解释：</p>\n<p><img src=\"ldap_lockoutTime.png\" alt=\"官网ldap_lockoutTime\"></p>\n<p>最重要就是划红线的那2句话，大致意思lockoutTime的值是一个整形数值，并且等于<strong><em>0</em></strong>的时候，账号不被锁定。推理出来就是不为<strong><em>0</em></strong>，账号就会被认为锁定。</p>\n<p>lockoutTime官方：<a href=\"https://ldapwiki.com/wiki/Lockouttime\" target=\"_blank\" rel=\"noopener\">https://ldapwiki.com/wiki/Lockouttime</a></p>"},{"title":"初学atom","comments":0,"keywords":"Atom, 编译器, python, 开发, 代码 IDE, 插件","abbrlink":9420,"date":"2018-03-10T13:57:16.000Z","update":"2018-03-12T12:03:20.000Z","desc":"简单介绍一下平常使用的编译器：atom，支持各种语言以及插件，很实用的IDE","_content":"\n{% cq %}\n**ATOM**\n{% endcq %}\n\n日常开发中习惯了pycharm，但是平常记录点什么东西，最好要有一个自己的文本编译器，比如：subtext、vscode、notepad等等。下面介绍一下我用的atom，安装以及其他的设置我不做介绍了，网上教程一大推，主要介绍一下我用的几个插件：\n查看安装的包【**apm list**】\n\n<!--more-->\n<hr />\n\n ![apm list](chuxueatom_list.jpg)\n### 常用快捷键\n| 快捷键          | 功能                                                                          | 级别   |\n| --------------- | ----------------------------------------------------------------------------- | ------ |\n| shift+command+p | 功能查找命令行                                                                | 🌟🌟🌟 |\n| shift+command+o | 打开目录                                                                      | 🌟🌟🌟 |\n| command+,       | 配置                                                                          | 🌟🌟🌟 |\n| shift+commadn+d | 复制当前行到下一行                                                            | 🌟🌟🌟 |\n| shift+control+k | 删除光标所在当前行                                                            | 🌟🌟🌟 |\n| command+\\       | 显示或隐藏目录树                                                              | 🌟🌟   |\n| ctrl-0          | 目录树与文本编辑区切换（切换到目录树：a新增【add】m修改【modify】delete删除） | 🌟🌟🌟 |\n| alt+left        | 单词开始                                                                      | 🌟🌟   |\n| alt+right       | 单词结束                                                                      | 🌟🌟   |\n| command+left    | 行开始                                                                        | 🌟🌟🌟 |\n| command+right   | 行结束                                                                        | 🌟🌟🌟 |\n| command+up      | 文件开始                                                                      | 🌟🌟   |\n| command+down    | 文件结束                                                                      | 🌟🌟   |\n| cmd-b           | 打开文件之间的切换                                                            | 🌟🌟   |\n| cmd-t           | 目录文件之间的切换                                                            | 🌟🌟   |\n| cmd-r           | 查找与替换                                                                    | 🌟🌟🌟 |\n| shift+cmd+r     | 项目查找与替换                                                                | 🌟🌟🌟 |\n| command+/       | 注释                                                                          | 🌟🌟🌟 |\n\n### 基础插件\n* #### activate-power-mode\n【功能】: 敲代码炫酷效果\n【快捷键】: 无\n【简述】: 怎么说呢，这个插件对于实际开发没有卵用，but可以装B，足以。\n![activate-power-mode](chuxueatom_power.jpg)\n* #### atom-beautify\n【功能】: 格式化当前文件\n【快捷键】: control + option + b\n【简述】: 可以格式化当前文件，前提是这个文件可以被识别，如果你的文件不带后缀直接去格式化，会warning，建议保存完文件在进行格式化。直接快捷键control + option + b格式化，插件会自动识别，记不得快捷键格式化可以先shift + command + p调出命令行查找，在入beautify editor，也可以直接输入beautify + 计算机语言【例如：python】，确认既可以。\n* #### autocomplete-paths\n【功能】: 补全路径\n【快捷键】: 无\n【简述】: 在写代码时候，有时需要写文件路径，装上此插件，会自动完善文件路径，不过相信没有几个真正上线的project会写死文件路径吧。\n* #### autocomplete-python\n【功能】: python补全\n【快捷键】: 无\n【简述】: 不多说，python开发者必备，前提是你在.py文件中进行。\n* #### autosave\n【功能】: 自动保存\n【快捷键】: 无\n【简介】: 如果你是个懒人，跟我一样，最好安装这个插件。\n* #### file-icons\n【功能】: 文件类型icon\n【快捷键】: 无\n【简介】: 左侧目录文件类型icon显示。\n* #### highlight-selected\n【功能】: 高亮选中\n【快捷键】: 无\n【简介】: 高亮选中字符，同时所有相同字符高亮。\n* #### hyperclick\n【功能】: 方法跳转\n【快捷键】: command + click左键\n【简介】: 用于方法跳转，用完之后，暂时我不知道怎么跳转回去，有知道的可以留言进行交流。\n* #### minimap && minimap-highlight-selected\n【功能】: minimap显示\n【快捷键】: 无\n【简介】: 以一个minimap进行显示当前的文件内容，方便进行拖拽，加minimap-highlight-selected插件，方便你在选中一个之后在minimap中进行查看，位置可以配置。\n* #### platformio-ide-terminal\n【功能】: terminal工具\n【快捷键】: 新建：shift + command + T; 关闭：shift + command + X; 前一个：shift + command + J; 后一个：shift + command + K\n【简介】: 方便控制台直接在atom中使用，省去切换。如果忘记快捷键，还是建议shift + command + p进行关键字terminal搜索，一目了然。\n* #### project-manager\n【功能】: project存储\n【快捷键】: add: shift + command + O;list：control + command + p\n【简介】: 新open一个atom是不记录上次的文件的，引用插件可以把project进行存储，每次方便进行打开。还是那句话，如果忘记快捷键，还是议shift + command + p进行关键字project搜索，一目了然。\n* #### script\n【功能】: 脚本执行\n【快捷键】: 执行：command + i; 关闭问题view：control + w; 选中执行: shift command + i\n【简介】: 如果因为atom不能直接执行你写的脚本发愁，那么这个插件就完美的解决你的问题。当然还有一个其他的解决办法就是shift + command + t调用terminal去执行。显示还是command + i方便，哈哈。\n* #### markdown\n【功能】: markdown编辑\n【快捷键】: shift + control + m 显示md效果\n【简介】:\nmarkdown-image-paste 图片处理\nmarkdown-preview-plus 预览效果\nmarkdown-scroll-sync 同步滚动\nmarkdown-table-editor 表格处理\n\n### 学习\n快捷键大全：https://www.jianshu.com/p/e33f864981bb\n\n### 建议\natom可以集成git插件，以及flake8，但是我觉得还是这2个命令还是在item2上去敲，这2个命令必须得日常所用，敲得多熟悉的也就越深，玩python的人，当然是linux的基础命令都得熟悉。\n","source":"_posts/Ide-初学atom.md","raw":"---\ntitle: 初学atom\ntags: [Atom, 编译器, Python]\ncategories:\n  - [编译器]\ncomments: false\nkeywords: Atom, 编译器, python, 开发, 代码 IDE, 插件\nabbrlink: 9420\ndate: 2018-03-10 21:57:16\nupdate: 2018-03-12 20:03:20\ndesc: 简单介绍一下平常使用的编译器：atom，支持各种语言以及插件，很实用的IDE\n---\n\n{% cq %}\n**ATOM**\n{% endcq %}\n\n日常开发中习惯了pycharm，但是平常记录点什么东西，最好要有一个自己的文本编译器，比如：subtext、vscode、notepad等等。下面介绍一下我用的atom，安装以及其他的设置我不做介绍了，网上教程一大推，主要介绍一下我用的几个插件：\n查看安装的包【**apm list**】\n\n<!--more-->\n<hr />\n\n ![apm list](chuxueatom_list.jpg)\n### 常用快捷键\n| 快捷键          | 功能                                                                          | 级别   |\n| --------------- | ----------------------------------------------------------------------------- | ------ |\n| shift+command+p | 功能查找命令行                                                                | 🌟🌟🌟 |\n| shift+command+o | 打开目录                                                                      | 🌟🌟🌟 |\n| command+,       | 配置                                                                          | 🌟🌟🌟 |\n| shift+commadn+d | 复制当前行到下一行                                                            | 🌟🌟🌟 |\n| shift+control+k | 删除光标所在当前行                                                            | 🌟🌟🌟 |\n| command+\\       | 显示或隐藏目录树                                                              | 🌟🌟   |\n| ctrl-0          | 目录树与文本编辑区切换（切换到目录树：a新增【add】m修改【modify】delete删除） | 🌟🌟🌟 |\n| alt+left        | 单词开始                                                                      | 🌟🌟   |\n| alt+right       | 单词结束                                                                      | 🌟🌟   |\n| command+left    | 行开始                                                                        | 🌟🌟🌟 |\n| command+right   | 行结束                                                                        | 🌟🌟🌟 |\n| command+up      | 文件开始                                                                      | 🌟🌟   |\n| command+down    | 文件结束                                                                      | 🌟🌟   |\n| cmd-b           | 打开文件之间的切换                                                            | 🌟🌟   |\n| cmd-t           | 目录文件之间的切换                                                            | 🌟🌟   |\n| cmd-r           | 查找与替换                                                                    | 🌟🌟🌟 |\n| shift+cmd+r     | 项目查找与替换                                                                | 🌟🌟🌟 |\n| command+/       | 注释                                                                          | 🌟🌟🌟 |\n\n### 基础插件\n* #### activate-power-mode\n【功能】: 敲代码炫酷效果\n【快捷键】: 无\n【简述】: 怎么说呢，这个插件对于实际开发没有卵用，but可以装B，足以。\n![activate-power-mode](chuxueatom_power.jpg)\n* #### atom-beautify\n【功能】: 格式化当前文件\n【快捷键】: control + option + b\n【简述】: 可以格式化当前文件，前提是这个文件可以被识别，如果你的文件不带后缀直接去格式化，会warning，建议保存完文件在进行格式化。直接快捷键control + option + b格式化，插件会自动识别，记不得快捷键格式化可以先shift + command + p调出命令行查找，在入beautify editor，也可以直接输入beautify + 计算机语言【例如：python】，确认既可以。\n* #### autocomplete-paths\n【功能】: 补全路径\n【快捷键】: 无\n【简述】: 在写代码时候，有时需要写文件路径，装上此插件，会自动完善文件路径，不过相信没有几个真正上线的project会写死文件路径吧。\n* #### autocomplete-python\n【功能】: python补全\n【快捷键】: 无\n【简述】: 不多说，python开发者必备，前提是你在.py文件中进行。\n* #### autosave\n【功能】: 自动保存\n【快捷键】: 无\n【简介】: 如果你是个懒人，跟我一样，最好安装这个插件。\n* #### file-icons\n【功能】: 文件类型icon\n【快捷键】: 无\n【简介】: 左侧目录文件类型icon显示。\n* #### highlight-selected\n【功能】: 高亮选中\n【快捷键】: 无\n【简介】: 高亮选中字符，同时所有相同字符高亮。\n* #### hyperclick\n【功能】: 方法跳转\n【快捷键】: command + click左键\n【简介】: 用于方法跳转，用完之后，暂时我不知道怎么跳转回去，有知道的可以留言进行交流。\n* #### minimap && minimap-highlight-selected\n【功能】: minimap显示\n【快捷键】: 无\n【简介】: 以一个minimap进行显示当前的文件内容，方便进行拖拽，加minimap-highlight-selected插件，方便你在选中一个之后在minimap中进行查看，位置可以配置。\n* #### platformio-ide-terminal\n【功能】: terminal工具\n【快捷键】: 新建：shift + command + T; 关闭：shift + command + X; 前一个：shift + command + J; 后一个：shift + command + K\n【简介】: 方便控制台直接在atom中使用，省去切换。如果忘记快捷键，还是建议shift + command + p进行关键字terminal搜索，一目了然。\n* #### project-manager\n【功能】: project存储\n【快捷键】: add: shift + command + O;list：control + command + p\n【简介】: 新open一个atom是不记录上次的文件的，引用插件可以把project进行存储，每次方便进行打开。还是那句话，如果忘记快捷键，还是议shift + command + p进行关键字project搜索，一目了然。\n* #### script\n【功能】: 脚本执行\n【快捷键】: 执行：command + i; 关闭问题view：control + w; 选中执行: shift command + i\n【简介】: 如果因为atom不能直接执行你写的脚本发愁，那么这个插件就完美的解决你的问题。当然还有一个其他的解决办法就是shift + command + t调用terminal去执行。显示还是command + i方便，哈哈。\n* #### markdown\n【功能】: markdown编辑\n【快捷键】: shift + control + m 显示md效果\n【简介】:\nmarkdown-image-paste 图片处理\nmarkdown-preview-plus 预览效果\nmarkdown-scroll-sync 同步滚动\nmarkdown-table-editor 表格处理\n\n### 学习\n快捷键大全：https://www.jianshu.com/p/e33f864981bb\n\n### 建议\natom可以集成git插件，以及flake8，但是我觉得还是这2个命令还是在item2上去敲，这2个命令必须得日常所用，敲得多熟悉的也就越深，玩python的人，当然是linux的基础命令都得熟悉。\n","slug":"Ide-初学atom","published":1,"updated":"2019-12-22T11:38:24.015Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2tz003ztabj3n78udzx","content":"<blockquote class=\"blockquote-center\"><p><strong>ATOM</strong></p>\n</blockquote>\n<p>日常开发中习惯了pycharm，但是平常记录点什么东西，最好要有一个自己的文本编译器，比如：subtext、vscode、notepad等等。下面介绍一下我用的atom，安装以及其他的设置我不做介绍了，网上教程一大推，主要介绍一下我用的几个插件：<br>查看安装的包【<strong>apm list</strong>】</p>\n<a id=\"more\"></a>\n<hr>\n\n<p> <img src=\"chuxueatom_list.jpg\" alt=\"apm list\"></p>\n<h3 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n<th>级别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shift+command+p</td>\n<td>功能查找命令行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+command+o</td>\n<td>打开目录</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+,</td>\n<td>配置</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+commadn+d</td>\n<td>复制当前行到下一行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+control+k</td>\n<td>删除光标所在当前行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+\\</td>\n<td>显示或隐藏目录树</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>ctrl-0</td>\n<td>目录树与文本编辑区切换（切换到目录树：a新增【add】m修改【modify】delete删除）</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>alt+left</td>\n<td>单词开始</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>alt+right</td>\n<td>单词结束</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>command+left</td>\n<td>行开始</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+right</td>\n<td>行结束</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+up</td>\n<td>文件开始</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>command+down</td>\n<td>文件结束</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-b</td>\n<td>打开文件之间的切换</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-t</td>\n<td>目录文件之间的切换</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-r</td>\n<td>查找与替换</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+cmd+r</td>\n<td>项目查找与替换</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+/</td>\n<td>注释</td>\n<td>🌟🌟🌟</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基础插件\"><a href=\"#基础插件\" class=\"headerlink\" title=\"基础插件\"></a>基础插件</h3><ul>\n<li><h4 id=\"activate-power-mode\"><a href=\"#activate-power-mode\" class=\"headerlink\" title=\"activate-power-mode\"></a>activate-power-mode</h4>【功能】: 敲代码炫酷效果<br>【快捷键】: 无<br>【简述】: 怎么说呢，这个插件对于实际开发没有卵用，but可以装B，足以。<br><img src=\"chuxueatom_power.jpg\" alt=\"activate-power-mode\"></li>\n<li><h4 id=\"atom-beautify\"><a href=\"#atom-beautify\" class=\"headerlink\" title=\"atom-beautify\"></a>atom-beautify</h4>【功能】: 格式化当前文件<br>【快捷键】: control + option + b<br>【简述】: 可以格式化当前文件，前提是这个文件可以被识别，如果你的文件不带后缀直接去格式化，会warning，建议保存完文件在进行格式化。直接快捷键control + option + b格式化，插件会自动识别，记不得快捷键格式化可以先shift + command + p调出命令行查找，在入beautify editor，也可以直接输入beautify + 计算机语言【例如：python】，确认既可以。</li>\n<li><h4 id=\"autocomplete-paths\"><a href=\"#autocomplete-paths\" class=\"headerlink\" title=\"autocomplete-paths\"></a>autocomplete-paths</h4>【功能】: 补全路径<br>【快捷键】: 无<br>【简述】: 在写代码时候，有时需要写文件路径，装上此插件，会自动完善文件路径，不过相信没有几个真正上线的project会写死文件路径吧。</li>\n<li><h4 id=\"autocomplete-python\"><a href=\"#autocomplete-python\" class=\"headerlink\" title=\"autocomplete-python\"></a>autocomplete-python</h4>【功能】: python补全<br>【快捷键】: 无<br>【简述】: 不多说，python开发者必备，前提是你在.py文件中进行。</li>\n<li><h4 id=\"autosave\"><a href=\"#autosave\" class=\"headerlink\" title=\"autosave\"></a>autosave</h4>【功能】: 自动保存<br>【快捷键】: 无<br>【简介】: 如果你是个懒人，跟我一样，最好安装这个插件。</li>\n<li><h4 id=\"file-icons\"><a href=\"#file-icons\" class=\"headerlink\" title=\"file-icons\"></a>file-icons</h4>【功能】: 文件类型icon<br>【快捷键】: 无<br>【简介】: 左侧目录文件类型icon显示。</li>\n<li><h4 id=\"highlight-selected\"><a href=\"#highlight-selected\" class=\"headerlink\" title=\"highlight-selected\"></a>highlight-selected</h4>【功能】: 高亮选中<br>【快捷键】: 无<br>【简介】: 高亮选中字符，同时所有相同字符高亮。</li>\n<li><h4 id=\"hyperclick\"><a href=\"#hyperclick\" class=\"headerlink\" title=\"hyperclick\"></a>hyperclick</h4>【功能】: 方法跳转<br>【快捷键】: command + click左键<br>【简介】: 用于方法跳转，用完之后，暂时我不知道怎么跳转回去，有知道的可以留言进行交流。</li>\n<li><h4 id=\"minimap-amp-amp-minimap-highlight-selected\"><a href=\"#minimap-amp-amp-minimap-highlight-selected\" class=\"headerlink\" title=\"minimap &amp;&amp; minimap-highlight-selected\"></a>minimap &amp;&amp; minimap-highlight-selected</h4>【功能】: minimap显示<br>【快捷键】: 无<br>【简介】: 以一个minimap进行显示当前的文件内容，方便进行拖拽，加minimap-highlight-selected插件，方便你在选中一个之后在minimap中进行查看，位置可以配置。</li>\n<li><h4 id=\"platformio-ide-terminal\"><a href=\"#platformio-ide-terminal\" class=\"headerlink\" title=\"platformio-ide-terminal\"></a>platformio-ide-terminal</h4>【功能】: terminal工具<br>【快捷键】: 新建：shift + command + T; 关闭：shift + command + X; 前一个：shift + command + J; 后一个：shift + command + K<br>【简介】: 方便控制台直接在atom中使用，省去切换。如果忘记快捷键，还是建议shift + command + p进行关键字terminal搜索，一目了然。</li>\n<li><h4 id=\"project-manager\"><a href=\"#project-manager\" class=\"headerlink\" title=\"project-manager\"></a>project-manager</h4>【功能】: project存储<br>【快捷键】: add: shift + command + O;list：control + command + p<br>【简介】: 新open一个atom是不记录上次的文件的，引用插件可以把project进行存储，每次方便进行打开。还是那句话，如果忘记快捷键，还是议shift + command + p进行关键字project搜索，一目了然。</li>\n<li><h4 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h4>【功能】: 脚本执行<br>【快捷键】: 执行：command + i; 关闭问题view：control + w; 选中执行: shift command + i<br>【简介】: 如果因为atom不能直接执行你写的脚本发愁，那么这个插件就完美的解决你的问题。当然还有一个其他的解决办法就是shift + command + t调用terminal去执行。显示还是command + i方便，哈哈。</li>\n<li><h4 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h4>【功能】: markdown编辑<br>【快捷键】: shift + control + m 显示md效果<br>【简介】:<br>markdown-image-paste 图片处理<br>markdown-preview-plus 预览效果<br>markdown-scroll-sync 同步滚动<br>markdown-table-editor 表格处理</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>快捷键大全：<a href=\"https://www.jianshu.com/p/e33f864981bb\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/e33f864981bb</a></p>\n<h3 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h3><p>atom可以集成git插件，以及flake8，但是我觉得还是这2个命令还是在item2上去敲，这2个命令必须得日常所用，敲得多熟悉的也就越深，玩python的人，当然是linux的基础命令都得熟悉。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p><strong>ATOM</strong></p>\n</blockquote>\n<p>日常开发中习惯了pycharm，但是平常记录点什么东西，最好要有一个自己的文本编译器，比如：subtext、vscode、notepad等等。下面介绍一下我用的atom，安装以及其他的设置我不做介绍了，网上教程一大推，主要介绍一下我用的几个插件：<br>查看安装的包【<strong>apm list</strong>】</p>","more":"<hr>\n\n<p> <img src=\"chuxueatom_list.jpg\" alt=\"apm list\"></p>\n<h3 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n<th>级别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shift+command+p</td>\n<td>功能查找命令行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+command+o</td>\n<td>打开目录</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+,</td>\n<td>配置</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+commadn+d</td>\n<td>复制当前行到下一行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+control+k</td>\n<td>删除光标所在当前行</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+\\</td>\n<td>显示或隐藏目录树</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>ctrl-0</td>\n<td>目录树与文本编辑区切换（切换到目录树：a新增【add】m修改【modify】delete删除）</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>alt+left</td>\n<td>单词开始</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>alt+right</td>\n<td>单词结束</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>command+left</td>\n<td>行开始</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+right</td>\n<td>行结束</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+up</td>\n<td>文件开始</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>command+down</td>\n<td>文件结束</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-b</td>\n<td>打开文件之间的切换</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-t</td>\n<td>目录文件之间的切换</td>\n<td>🌟🌟</td>\n</tr>\n<tr>\n<td>cmd-r</td>\n<td>查找与替换</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>shift+cmd+r</td>\n<td>项目查找与替换</td>\n<td>🌟🌟🌟</td>\n</tr>\n<tr>\n<td>command+/</td>\n<td>注释</td>\n<td>🌟🌟🌟</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"基础插件\"><a href=\"#基础插件\" class=\"headerlink\" title=\"基础插件\"></a>基础插件</h3><ul>\n<li><h4 id=\"activate-power-mode\"><a href=\"#activate-power-mode\" class=\"headerlink\" title=\"activate-power-mode\"></a>activate-power-mode</h4>【功能】: 敲代码炫酷效果<br>【快捷键】: 无<br>【简述】: 怎么说呢，这个插件对于实际开发没有卵用，but可以装B，足以。<br><img src=\"chuxueatom_power.jpg\" alt=\"activate-power-mode\"></li>\n<li><h4 id=\"atom-beautify\"><a href=\"#atom-beautify\" class=\"headerlink\" title=\"atom-beautify\"></a>atom-beautify</h4>【功能】: 格式化当前文件<br>【快捷键】: control + option + b<br>【简述】: 可以格式化当前文件，前提是这个文件可以被识别，如果你的文件不带后缀直接去格式化，会warning，建议保存完文件在进行格式化。直接快捷键control + option + b格式化，插件会自动识别，记不得快捷键格式化可以先shift + command + p调出命令行查找，在入beautify editor，也可以直接输入beautify + 计算机语言【例如：python】，确认既可以。</li>\n<li><h4 id=\"autocomplete-paths\"><a href=\"#autocomplete-paths\" class=\"headerlink\" title=\"autocomplete-paths\"></a>autocomplete-paths</h4>【功能】: 补全路径<br>【快捷键】: 无<br>【简述】: 在写代码时候，有时需要写文件路径，装上此插件，会自动完善文件路径，不过相信没有几个真正上线的project会写死文件路径吧。</li>\n<li><h4 id=\"autocomplete-python\"><a href=\"#autocomplete-python\" class=\"headerlink\" title=\"autocomplete-python\"></a>autocomplete-python</h4>【功能】: python补全<br>【快捷键】: 无<br>【简述】: 不多说，python开发者必备，前提是你在.py文件中进行。</li>\n<li><h4 id=\"autosave\"><a href=\"#autosave\" class=\"headerlink\" title=\"autosave\"></a>autosave</h4>【功能】: 自动保存<br>【快捷键】: 无<br>【简介】: 如果你是个懒人，跟我一样，最好安装这个插件。</li>\n<li><h4 id=\"file-icons\"><a href=\"#file-icons\" class=\"headerlink\" title=\"file-icons\"></a>file-icons</h4>【功能】: 文件类型icon<br>【快捷键】: 无<br>【简介】: 左侧目录文件类型icon显示。</li>\n<li><h4 id=\"highlight-selected\"><a href=\"#highlight-selected\" class=\"headerlink\" title=\"highlight-selected\"></a>highlight-selected</h4>【功能】: 高亮选中<br>【快捷键】: 无<br>【简介】: 高亮选中字符，同时所有相同字符高亮。</li>\n<li><h4 id=\"hyperclick\"><a href=\"#hyperclick\" class=\"headerlink\" title=\"hyperclick\"></a>hyperclick</h4>【功能】: 方法跳转<br>【快捷键】: command + click左键<br>【简介】: 用于方法跳转，用完之后，暂时我不知道怎么跳转回去，有知道的可以留言进行交流。</li>\n<li><h4 id=\"minimap-amp-amp-minimap-highlight-selected\"><a href=\"#minimap-amp-amp-minimap-highlight-selected\" class=\"headerlink\" title=\"minimap &amp;&amp; minimap-highlight-selected\"></a>minimap &amp;&amp; minimap-highlight-selected</h4>【功能】: minimap显示<br>【快捷键】: 无<br>【简介】: 以一个minimap进行显示当前的文件内容，方便进行拖拽，加minimap-highlight-selected插件，方便你在选中一个之后在minimap中进行查看，位置可以配置。</li>\n<li><h4 id=\"platformio-ide-terminal\"><a href=\"#platformio-ide-terminal\" class=\"headerlink\" title=\"platformio-ide-terminal\"></a>platformio-ide-terminal</h4>【功能】: terminal工具<br>【快捷键】: 新建：shift + command + T; 关闭：shift + command + X; 前一个：shift + command + J; 后一个：shift + command + K<br>【简介】: 方便控制台直接在atom中使用，省去切换。如果忘记快捷键，还是建议shift + command + p进行关键字terminal搜索，一目了然。</li>\n<li><h4 id=\"project-manager\"><a href=\"#project-manager\" class=\"headerlink\" title=\"project-manager\"></a>project-manager</h4>【功能】: project存储<br>【快捷键】: add: shift + command + O;list：control + command + p<br>【简介】: 新open一个atom是不记录上次的文件的，引用插件可以把project进行存储，每次方便进行打开。还是那句话，如果忘记快捷键，还是议shift + command + p进行关键字project搜索，一目了然。</li>\n<li><h4 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h4>【功能】: 脚本执行<br>【快捷键】: 执行：command + i; 关闭问题view：control + w; 选中执行: shift command + i<br>【简介】: 如果因为atom不能直接执行你写的脚本发愁，那么这个插件就完美的解决你的问题。当然还有一个其他的解决办法就是shift + command + t调用terminal去执行。显示还是command + i方便，哈哈。</li>\n<li><h4 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h4>【功能】: markdown编辑<br>【快捷键】: shift + control + m 显示md效果<br>【简介】:<br>markdown-image-paste 图片处理<br>markdown-preview-plus 预览效果<br>markdown-scroll-sync 同步滚动<br>markdown-table-editor 表格处理</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>快捷键大全：<a href=\"https://www.jianshu.com/p/e33f864981bb\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/e33f864981bb</a></p>\n<h3 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h3><p>atom可以集成git插件，以及flake8，但是我觉得还是这2个命令还是在item2上去敲，这2个命令必须得日常所用，敲得多熟悉的也就越深，玩python的人，当然是linux的基础命令都得熟悉。</p>"},{"title":"Linux学习之基础篇-cd","comments":0,"top":false,"abbrlink":42764,"date":"2017-05-24T09:31:20.000Z","updated":"2017-05-24T09:31:20.000Z","desc":"记录Linux命令学习基础篇之cd，用于变更目录change dir","keywords":"linux, cd, 服务器, 命令, shell, bash","_content":"\n![](/images/article_linux_cd.png)\n\n{% cq %}\n<font size=6.5 color='red'>change dir</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n{% note warning %}\n学习cd的用法【cd 目录】\n{% endnote %}\n\n### 介绍\n\n前篇关于linxu的文章，介绍linux最常用的命令之一的**ls**，本篇介绍一下它的兄弟**cd**。这个命令用的太多了，我推测的全拼应该是**change dir**，没有查资料，如果错了，欢迎留言。\n\n### 正文\n\n#### 格式\n\n```\ncd [目录名]\n```\n\n#### 参数说明\n\n没用过参数，下面学习中有个cd用法的介绍，有兴趣的可以看看。\n\n#### 常用命令\n\n> 基本\n\n```\ncd 目录\n```\n可以是相对路径，也可以是绝对路径\n\n> 根目录\n\n```\ncd /\n```\n> 用户home目录\n\n```\ncd\ncd ~\n```\n> 返回上级\n\n```\ncd ..\n```\n> 多个上级\n\n```\ncd ../../..\n```\n\n> 返回切换的上一个目录\n\n```\ncd -\n```\n这个命令平时用的相对较多。\n\n### 补充\n\n- \"~\"表示为用户home目录\n- \".\"表示当前所在的目录\n- \"..\"表示当前目录的上一层目录\n\n### 学习\n\n参数：https://www.computerhope.com/unix/ucd.htm\n","source":"_posts/Linux-学习之基础篇-cd.md","raw":"---\ntitle: Linux学习之基础篇-cd\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux基础篇]\ntop: false\nabbrlink: 42764\ndate: 2017-05-24 17:31:20\nupdated: 2017-05-24 17:31:20\ndesc: 记录Linux命令学习基础篇之cd，用于变更目录change dir\nkeywords: linux, cd, 服务器, 命令, shell, bash\n---\n\n![](/images/article_linux_cd.png)\n\n{% cq %}\n<font size=6.5 color='red'>change dir</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n{% note warning %}\n学习cd的用法【cd 目录】\n{% endnote %}\n\n### 介绍\n\n前篇关于linxu的文章，介绍linux最常用的命令之一的**ls**，本篇介绍一下它的兄弟**cd**。这个命令用的太多了，我推测的全拼应该是**change dir**，没有查资料，如果错了，欢迎留言。\n\n### 正文\n\n#### 格式\n\n```\ncd [目录名]\n```\n\n#### 参数说明\n\n没用过参数，下面学习中有个cd用法的介绍，有兴趣的可以看看。\n\n#### 常用命令\n\n> 基本\n\n```\ncd 目录\n```\n可以是相对路径，也可以是绝对路径\n\n> 根目录\n\n```\ncd /\n```\n> 用户home目录\n\n```\ncd\ncd ~\n```\n> 返回上级\n\n```\ncd ..\n```\n> 多个上级\n\n```\ncd ../../..\n```\n\n> 返回切换的上一个目录\n\n```\ncd -\n```\n这个命令平时用的相对较多。\n\n### 补充\n\n- \"~\"表示为用户home目录\n- \".\"表示当前所在的目录\n- \"..\"表示当前目录的上一层目录\n\n### 学习\n\n参数：https://www.computerhope.com/unix/ucd.htm\n","slug":"Linux-学习之基础篇-cd","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ua0041tabjkpk8n13y","content":"<p><img src=\"/images/article_linux_cd.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">change dir</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习cd的用法【cd 目录】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>前篇关于linxu的文章，介绍linux最常用的命令之一的<strong>ls</strong>，本篇介绍一下它的兄弟<strong>cd</strong>。这个命令用的太多了，我推测的全拼应该是<strong>change dir</strong>，没有查资料，如果错了，欢迎留言。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [目录名]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>没用过参数，下面学习中有个cd用法的介绍，有兴趣的可以看看。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>基本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 目录</span><br></pre></td></tr></table></figure>\n<p>可以是相对路径，也可以是绝对路径</p>\n<blockquote>\n<p>根目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>用户home目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd</span><br><span class=\"line\">cd ~</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>返回上级</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ..</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>多个上级</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>返回切换的上一个目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd -</span><br></pre></td></tr></table></figure>\n<p>这个命令平时用的相对较多。</p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><ul>\n<li>“~”表示为用户home目录</li>\n<li>“.”表示当前所在的目录</li>\n<li>“..”表示当前目录的上一层目录</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>参数：<a href=\"https://www.computerhope.com/unix/ucd.htm\" target=\"_blank\" rel=\"noopener\">https://www.computerhope.com/unix/ucd.htm</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_linux_cd.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">change dir</font></blockquote>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习cd的用法【cd 目录】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>前篇关于linxu的文章，介绍linux最常用的命令之一的<strong>ls</strong>，本篇介绍一下它的兄弟<strong>cd</strong>。这个命令用的太多了，我推测的全拼应该是<strong>change dir</strong>，没有查资料，如果错了，欢迎留言。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [目录名]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>没用过参数，下面学习中有个cd用法的介绍，有兴趣的可以看看。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>基本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd 目录</span><br></pre></td></tr></table></figure>\n<p>可以是相对路径，也可以是绝对路径</p>\n<blockquote>\n<p>根目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>用户home目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd</span><br><span class=\"line\">cd ~</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>返回上级</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ..</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>多个上级</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../../..</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>返回切换的上一个目录</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd -</span><br></pre></td></tr></table></figure>\n<p>这个命令平时用的相对较多。</p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><ul>\n<li>“~”表示为用户home目录</li>\n<li>“.”表示当前所在的目录</li>\n<li>“..”表示当前目录的上一层目录</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>参数：<a href=\"https://www.computerhope.com/unix/ucd.htm\" target=\"_blank\" rel=\"noopener\">https://www.computerhope.com/unix/ucd.htm</a></p>"},{"title":"Linux学习之基础篇-ls","comments":0,"desc":"记录Linux命令学习基础篇之ls，列举文件list file","keywords":"linux, ls, 服务器, 命令, shell, bash","abbrlink":22857,"date":"2017-05-15T08:51:42.000Z","updated":"2017-05-15T08:51:42.000Z","_content":"\n![](/images/article_linux_ls.png)\n\n{% cq %}\n<font size=6.5 color='red'>list file</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n{% note warning %}\n学习ls的用法【ls - list directory contents】\n{% endnote %}\n\n### 介绍\nlinux最常用的2个命令：***ls && cd***。\nls是打印当前目录/指定目录文件list的命令，全拼list。为何是文件呢，正所谓在***<font color=\"#dd0000\" size=\"4\">linux中一切皆文件</font>***。 ls命令不仅可以查看linux文件的类型、大小、权限等各种信息，而且最主要的是日常使用频率最高的命令之一。\n\n### 正文\n\n#### 格式\n\n```\nls [参数][目录]\n```\n\n#### 参数说明\n\n选用了一些自认为常用的参数进行说明，详细的请自行***man ls***进行查看。翻译过程中，使用了[fanyi.baidu.com](https://fanyi.baidu.com/)，如果不对，请见谅！\n\n> -a, –all\n\nEng：do not ignore entries starting with。\nChi：列出目录下的所有文件，包括隐含文件（.开头）。\n\n\n> -d, --directory\n\nEng：list directories themselves, not their contents。\nChi：列出目录本身，对于列出目录包含的哪有目录很有用，后面常用命令会讲到。\n\n> -F, --classify\n-p, --indicator-style=slash\n\nEng：append / indicator to directories。\nChi：2个参数是一样的效果，放到一起说了，都是在目录后面加个“/”作为结束标识。\n\n> -h, --human-readable\n\nEng：with -l, print sizes in human readable format (e.g., 1K 234M 2G)。\nChi：与l参数一起使用，就是文件大小变得可读性更高。\n\n>  -i, --inode\n\nEng：print the index number of each file。\nChi：经常与l参数使用，列出文件的存储节点id，一般情况用不上，但是有必要知晓一下。\n\n> -l\n-o\n\n\nEng：use a long listing format。\nChi：常用的参数没有之一，经常与h一起使用，列举文件的类型、大小、权限等各种信息。\n\n> -L\n\nEng： when showing file information for a symbolic link, show information for the file the link references rather than for the link itself。\nChi：显示链接文件直接引用文件的相关信息。\n\n> -m\n\nEng：fill width with a comma separated list of entries。\nChi：用逗号分隔的列表\n\n> -n, --numeric-uid-gid\n\nEng：like -l, but list numeric user and group IDs。\nChi：与l参数显示的内容一致，但是用户、组用相应的id代替。\n\n> -r, --reverse\n\nEng：reverse order while sorting。\nChi：反序。\n\n> -R, --recursive\n\nEng：list subdirectories recursively。\nChi：是否进行递归。\n\n>  -S\n\nEng：sort by file size。\nChi：按文件大小进行排序。\n\n> -t\n-c\n\nEng：sort by modification time, newest first\nChi：按文件的修改时间进行排序（最新优先排在前面）。\n\n#### 常用命令\n\n1. 列举文件详情，-i参数加不加都行\n```\nll -hi\n```\n![](article_linux_ls_ll.png)\ntotal 48：所列出内容的磁盘占用空间总和值，单位为kb。\n第一列：drwxr-xr-x，一共10个字符，分别解释一下。第一位用来代表文件的类型：“d”代表目录，“-”代表普通文件，2-4位rwx代表该文件的属主的权限，5-7位r-x代表文件用户主所在用户组的其他用户的权限，8-10位r-x代表其他用户的权限。其中r-读、w-写、x-执行。\n第二列：未知（网上查资料说如果是文件就是1，如果是目录就是目录下的文件，试验过不准确）。\n第三列：文件所属的用户。\n第四列：文件所属的用户组。\n第五列：文件的大小，如果文件是目录则代表该目录的大小（不包括目录下的子目录和文件的大小）。\n第六列：该文件最近修改或者查看的时间。\n第七列：文件名称。\n\n2. 列举文件中包含的目录/文件\n    - 列举当前文件目录包含文件目录，这个命令有个弊端，就是只能列举当前文件目录下【本人暂时还不能切换目录列举，知道的同学可以留言给我】\n    ```\n    ll -d */\n    ```\n    - 获取指定目录下的目录，可递归，把“^d”换成“^-”就可以获取对应的文件，-R代表是否启用递归操作。\n    ```\n    ll /home/q/psapproval -R | grep \"^d\"\n    ```\n    - 计算当前目录下的文件数和目录数，基于上面的命令加了***wc -l***，想要把子目录也计算进行，加上-R参数\n    ```\n     ls -l * |grep \"^d\"|wc -l\n    ```\n    - 列举文件以及目录，用“/”区别\n    ```\n    ll /home/q/psapproval -F\n    ll /home/q/psapproval -p\n    ```\n3. 按时间进行排序，最新的文件在最下面\n```\nll -rth\n```\n4. 文件按从小到大进行排序，最大的在下面，想要生序去掉-r参数即可。\n```\nll -Shr\n```\n5. help\n```\nman ls\nls --help\n```\n\n\n### 说明\n\n{% note primary %}\n1. 示例中的命令我都加了指定的目录，如果是当前目录，省略即可。\n2. 本文只讲解了ls常用的参数，了解更多请***man ls***查看。\n{% endnote %}\n\n### 补充\n\n{% note info %}\n文件类型\n{% endnote %}\n\n- “-”普通文件\n- “d”目录\n- “l”链接文件\n- “b”块设备文件\n- “c”字符设备文件\n- “s”套接字文件，主要用于sock通信用的文件\n\n{% note info %}\n文件权限\n{% endnote %}\n\n- r：读取的权限等于4，用r表示\n- w：写入的权限等于2，用w表示\n- x：执行的权限等于1，用x表示\n\n{% note info%}\nll命令\n{% endnote%}\n\n控制台直接执行：***alias ll='ls -l --color=auto'***\n\n### 学习\n\nls常用命令://www.tecmint.com/15-basic-ls-command-examples-in-linux/\nll详解：https://blog.csdn.net/LEON1741/article/details/82386520\n","source":"_posts/Linux-学习之基础篇-ls.md","raw":"---\ntitle: Linux学习之基础篇-ls\ncomments: false\ndesc: 记录Linux命令学习基础篇之ls，列举文件list file\ncategories:\n  - [Linux]\ntags: [Linux, Linux基础篇]\nkeywords: linux, ls, 服务器, 命令, shell, bash\nabbrlink: 22857\ndate: 2017-05-15 16:51:42\nupdated: 2017-05-15 16:51:42\n---\n\n![](/images/article_linux_ls.png)\n\n{% cq %}\n<font size=6.5 color='red'>list file</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n{% note warning %}\n学习ls的用法【ls - list directory contents】\n{% endnote %}\n\n### 介绍\nlinux最常用的2个命令：***ls && cd***。\nls是打印当前目录/指定目录文件list的命令，全拼list。为何是文件呢，正所谓在***<font color=\"#dd0000\" size=\"4\">linux中一切皆文件</font>***。 ls命令不仅可以查看linux文件的类型、大小、权限等各种信息，而且最主要的是日常使用频率最高的命令之一。\n\n### 正文\n\n#### 格式\n\n```\nls [参数][目录]\n```\n\n#### 参数说明\n\n选用了一些自认为常用的参数进行说明，详细的请自行***man ls***进行查看。翻译过程中，使用了[fanyi.baidu.com](https://fanyi.baidu.com/)，如果不对，请见谅！\n\n> -a, –all\n\nEng：do not ignore entries starting with。\nChi：列出目录下的所有文件，包括隐含文件（.开头）。\n\n\n> -d, --directory\n\nEng：list directories themselves, not their contents。\nChi：列出目录本身，对于列出目录包含的哪有目录很有用，后面常用命令会讲到。\n\n> -F, --classify\n-p, --indicator-style=slash\n\nEng：append / indicator to directories。\nChi：2个参数是一样的效果，放到一起说了，都是在目录后面加个“/”作为结束标识。\n\n> -h, --human-readable\n\nEng：with -l, print sizes in human readable format (e.g., 1K 234M 2G)。\nChi：与l参数一起使用，就是文件大小变得可读性更高。\n\n>  -i, --inode\n\nEng：print the index number of each file。\nChi：经常与l参数使用，列出文件的存储节点id，一般情况用不上，但是有必要知晓一下。\n\n> -l\n-o\n\n\nEng：use a long listing format。\nChi：常用的参数没有之一，经常与h一起使用，列举文件的类型、大小、权限等各种信息。\n\n> -L\n\nEng： when showing file information for a symbolic link, show information for the file the link references rather than for the link itself。\nChi：显示链接文件直接引用文件的相关信息。\n\n> -m\n\nEng：fill width with a comma separated list of entries。\nChi：用逗号分隔的列表\n\n> -n, --numeric-uid-gid\n\nEng：like -l, but list numeric user and group IDs。\nChi：与l参数显示的内容一致，但是用户、组用相应的id代替。\n\n> -r, --reverse\n\nEng：reverse order while sorting。\nChi：反序。\n\n> -R, --recursive\n\nEng：list subdirectories recursively。\nChi：是否进行递归。\n\n>  -S\n\nEng：sort by file size。\nChi：按文件大小进行排序。\n\n> -t\n-c\n\nEng：sort by modification time, newest first\nChi：按文件的修改时间进行排序（最新优先排在前面）。\n\n#### 常用命令\n\n1. 列举文件详情，-i参数加不加都行\n```\nll -hi\n```\n![](article_linux_ls_ll.png)\ntotal 48：所列出内容的磁盘占用空间总和值，单位为kb。\n第一列：drwxr-xr-x，一共10个字符，分别解释一下。第一位用来代表文件的类型：“d”代表目录，“-”代表普通文件，2-4位rwx代表该文件的属主的权限，5-7位r-x代表文件用户主所在用户组的其他用户的权限，8-10位r-x代表其他用户的权限。其中r-读、w-写、x-执行。\n第二列：未知（网上查资料说如果是文件就是1，如果是目录就是目录下的文件，试验过不准确）。\n第三列：文件所属的用户。\n第四列：文件所属的用户组。\n第五列：文件的大小，如果文件是目录则代表该目录的大小（不包括目录下的子目录和文件的大小）。\n第六列：该文件最近修改或者查看的时间。\n第七列：文件名称。\n\n2. 列举文件中包含的目录/文件\n    - 列举当前文件目录包含文件目录，这个命令有个弊端，就是只能列举当前文件目录下【本人暂时还不能切换目录列举，知道的同学可以留言给我】\n    ```\n    ll -d */\n    ```\n    - 获取指定目录下的目录，可递归，把“^d”换成“^-”就可以获取对应的文件，-R代表是否启用递归操作。\n    ```\n    ll /home/q/psapproval -R | grep \"^d\"\n    ```\n    - 计算当前目录下的文件数和目录数，基于上面的命令加了***wc -l***，想要把子目录也计算进行，加上-R参数\n    ```\n     ls -l * |grep \"^d\"|wc -l\n    ```\n    - 列举文件以及目录，用“/”区别\n    ```\n    ll /home/q/psapproval -F\n    ll /home/q/psapproval -p\n    ```\n3. 按时间进行排序，最新的文件在最下面\n```\nll -rth\n```\n4. 文件按从小到大进行排序，最大的在下面，想要生序去掉-r参数即可。\n```\nll -Shr\n```\n5. help\n```\nman ls\nls --help\n```\n\n\n### 说明\n\n{% note primary %}\n1. 示例中的命令我都加了指定的目录，如果是当前目录，省略即可。\n2. 本文只讲解了ls常用的参数，了解更多请***man ls***查看。\n{% endnote %}\n\n### 补充\n\n{% note info %}\n文件类型\n{% endnote %}\n\n- “-”普通文件\n- “d”目录\n- “l”链接文件\n- “b”块设备文件\n- “c”字符设备文件\n- “s”套接字文件，主要用于sock通信用的文件\n\n{% note info %}\n文件权限\n{% endnote %}\n\n- r：读取的权限等于4，用r表示\n- w：写入的权限等于2，用w表示\n- x：执行的权限等于1，用x表示\n\n{% note info%}\nll命令\n{% endnote%}\n\n控制台直接执行：***alias ll='ls -l --color=auto'***\n\n### 学习\n\nls常用命令://www.tecmint.com/15-basic-ls-command-examples-in-linux/\nll详解：https://blog.csdn.net/LEON1741/article/details/82386520\n","slug":"Linux-学习之基础篇-ls","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ug0044tabjd9pgihau","content":"<p><img src=\"/images/article_linux_ls.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">list file</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习ls的用法【ls - list directory contents】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>linux最常用的2个命令：<strong><em>ls &amp;&amp; cd</em></strong>。<br>ls是打印当前目录/指定目录文件list的命令，全拼list。为何是文件呢，正所谓在<strong><em><font color=\"#dd0000\" size=\"4\">linux中一切皆文件</font></em></strong>。 ls命令不仅可以查看linux文件的类型、大小、权限等各种信息，而且最主要的是日常使用频率最高的命令之一。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls [参数][目录]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>选用了一些自认为常用的参数进行说明，详细的请自行<strong><em>man ls</em></strong>进行查看。翻译过程中，使用了<a href=\"https://fanyi.baidu.com/\" target=\"_blank\" rel=\"noopener\">fanyi.baidu.com</a>，如果不对，请见谅！</p>\n<blockquote>\n<p>-a, –all</p>\n</blockquote>\n<p>Eng：do not ignore entries starting with。<br>Chi：列出目录下的所有文件，包括隐含文件（.开头）。</p>\n<blockquote>\n<p>-d, –directory</p>\n</blockquote>\n<p>Eng：list directories themselves, not their contents。<br>Chi：列出目录本身，对于列出目录包含的哪有目录很有用，后面常用命令会讲到。</p>\n<blockquote>\n<p>-F, –classify<br>-p, –indicator-style=slash</p>\n</blockquote>\n<p>Eng：append / indicator to directories。<br>Chi：2个参数是一样的效果，放到一起说了，都是在目录后面加个“/”作为结束标识。</p>\n<blockquote>\n<p>-h, –human-readable</p>\n</blockquote>\n<p>Eng：with -l, print sizes in human readable format (e.g., 1K 234M 2G)。<br>Chi：与l参数一起使用，就是文件大小变得可读性更高。</p>\n<blockquote>\n<p> -i, –inode</p>\n</blockquote>\n<p>Eng：print the index number of each file。<br>Chi：经常与l参数使用，列出文件的存储节点id，一般情况用不上，但是有必要知晓一下。</p>\n<blockquote>\n<p>-l<br>-o</p>\n</blockquote>\n<p>Eng：use a long listing format。<br>Chi：常用的参数没有之一，经常与h一起使用，列举文件的类型、大小、权限等各种信息。</p>\n<blockquote>\n<p>-L</p>\n</blockquote>\n<p>Eng： when showing file information for a symbolic link, show information for the file the link references rather than for the link itself。<br>Chi：显示链接文件直接引用文件的相关信息。</p>\n<blockquote>\n<p>-m</p>\n</blockquote>\n<p>Eng：fill width with a comma separated list of entries。<br>Chi：用逗号分隔的列表</p>\n<blockquote>\n<p>-n, –numeric-uid-gid</p>\n</blockquote>\n<p>Eng：like -l, but list numeric user and group IDs。<br>Chi：与l参数显示的内容一致，但是用户、组用相应的id代替。</p>\n<blockquote>\n<p>-r, –reverse</p>\n</blockquote>\n<p>Eng：reverse order while sorting。<br>Chi：反序。</p>\n<blockquote>\n<p>-R, –recursive</p>\n</blockquote>\n<p>Eng：list subdirectories recursively。<br>Chi：是否进行递归。</p>\n<blockquote>\n<p> -S</p>\n</blockquote>\n<p>Eng：sort by file size。<br>Chi：按文件大小进行排序。</p>\n<blockquote>\n<p>-t<br>-c</p>\n</blockquote>\n<p>Eng：sort by modification time, newest first<br>Chi：按文件的修改时间进行排序（最新优先排在前面）。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><ol>\n<li>列举文件详情，-i参数加不加都行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -hi</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"article_linux_ls_ll.png\" alt><br>total 48：所列出内容的磁盘占用空间总和值，单位为kb。<br>第一列：drwxr-xr-x，一共10个字符，分别解释一下。第一位用来代表文件的类型：“d”代表目录，“-”代表普通文件，2-4位rwx代表该文件的属主的权限，5-7位r-x代表文件用户主所在用户组的其他用户的权限，8-10位r-x代表其他用户的权限。其中r-读、w-写、x-执行。<br>第二列：未知（网上查资料说如果是文件就是1，如果是目录就是目录下的文件，试验过不准确）。<br>第三列：文件所属的用户。<br>第四列：文件所属的用户组。<br>第五列：文件的大小，如果文件是目录则代表该目录的大小（不包括目录下的子目录和文件的大小）。<br>第六列：该文件最近修改或者查看的时间。<br>第七列：文件名称。</p>\n<ol start=\"2\">\n<li><p>列举文件中包含的目录/文件</p>\n<ul>\n<li><p>列举当前文件目录包含文件目录，这个命令有个弊端，就是只能列举当前文件目录下【本人暂时还不能切换目录列举，知道的同学可以留言给我】</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -d */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取指定目录下的目录，可递归，把“^d”换成“^-”就可以获取对应的文件，-R代表是否启用递归操作。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /home/q/psapproval -R | grep &quot;^d&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算当前目录下的文件数和目录数，基于上面的命令加了<strong><em>wc -l</em></strong>，想要把子目录也计算进行，加上-R参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l * |grep &quot;^d&quot;|wc -l</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列举文件以及目录，用“/”区别</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /home/q/psapproval -F</span><br><span class=\"line\">ll /home/q/psapproval -p</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>按时间进行排序，最新的文件在最下面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -rth</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文件按从小到大进行排序，最大的在下面，想要生序去掉-r参数即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -Shr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>help</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">man ls</span><br><span class=\"line\">ls --help</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><div class=\"note primary\">\n            <ol><li>示例中的命令我都加了指定的目录，如果是当前目录，省略即可。</li><li>本文只讲解了ls常用的参数，了解更多请<strong><em>man ls</em></strong>查看。</li></ol>\n          </div>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><div class=\"note info\">\n            <p>文件类型</p>\n          </div>\n<ul>\n<li>“-”普通文件</li>\n<li>“d”目录</li>\n<li>“l”链接文件</li>\n<li>“b”块设备文件</li>\n<li>“c”字符设备文件</li>\n<li>“s”套接字文件，主要用于sock通信用的文件</li>\n</ul>\n<div class=\"note info\">\n            <p>文件权限</p>\n          </div>\n<ul>\n<li>r：读取的权限等于4，用r表示</li>\n<li>w：写入的权限等于2，用w表示</li>\n<li>x：执行的权限等于1，用x表示</li>\n</ul>\n<div class=\"note info\">\n            <p>ll命令</p>\n          </div>\n<p>控制台直接执行：<strong><em>alias ll=’ls -l –color=auto’</em></strong></p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>ls常用命令://<a href=\"http://www.tecmint.com/15-basic-ls-command-examples-in-linux/\" target=\"_blank\" rel=\"noopener\">www.tecmint.com/15-basic-ls-command-examples-in-linux/</a><br>ll详解：<a href=\"https://blog.csdn.net/LEON1741/article/details/82386520\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/LEON1741/article/details/82386520</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_linux_ls.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">list file</font></blockquote>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习ls的用法【ls - list directory contents】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>linux最常用的2个命令：<strong><em>ls &amp;&amp; cd</em></strong>。<br>ls是打印当前目录/指定目录文件list的命令，全拼list。为何是文件呢，正所谓在<strong><em><font color=\"#dd0000\" size=\"4\">linux中一切皆文件</font></em></strong>。 ls命令不仅可以查看linux文件的类型、大小、权限等各种信息，而且最主要的是日常使用频率最高的命令之一。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls [参数][目录]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>选用了一些自认为常用的参数进行说明，详细的请自行<strong><em>man ls</em></strong>进行查看。翻译过程中，使用了<a href=\"https://fanyi.baidu.com/\" target=\"_blank\" rel=\"noopener\">fanyi.baidu.com</a>，如果不对，请见谅！</p>\n<blockquote>\n<p>-a, –all</p>\n</blockquote>\n<p>Eng：do not ignore entries starting with。<br>Chi：列出目录下的所有文件，包括隐含文件（.开头）。</p>\n<blockquote>\n<p>-d, –directory</p>\n</blockquote>\n<p>Eng：list directories themselves, not their contents。<br>Chi：列出目录本身，对于列出目录包含的哪有目录很有用，后面常用命令会讲到。</p>\n<blockquote>\n<p>-F, –classify<br>-p, –indicator-style=slash</p>\n</blockquote>\n<p>Eng：append / indicator to directories。<br>Chi：2个参数是一样的效果，放到一起说了，都是在目录后面加个“/”作为结束标识。</p>\n<blockquote>\n<p>-h, –human-readable</p>\n</blockquote>\n<p>Eng：with -l, print sizes in human readable format (e.g., 1K 234M 2G)。<br>Chi：与l参数一起使用，就是文件大小变得可读性更高。</p>\n<blockquote>\n<p> -i, –inode</p>\n</blockquote>\n<p>Eng：print the index number of each file。<br>Chi：经常与l参数使用，列出文件的存储节点id，一般情况用不上，但是有必要知晓一下。</p>\n<blockquote>\n<p>-l<br>-o</p>\n</blockquote>\n<p>Eng：use a long listing format。<br>Chi：常用的参数没有之一，经常与h一起使用，列举文件的类型、大小、权限等各种信息。</p>\n<blockquote>\n<p>-L</p>\n</blockquote>\n<p>Eng： when showing file information for a symbolic link, show information for the file the link references rather than for the link itself。<br>Chi：显示链接文件直接引用文件的相关信息。</p>\n<blockquote>\n<p>-m</p>\n</blockquote>\n<p>Eng：fill width with a comma separated list of entries。<br>Chi：用逗号分隔的列表</p>\n<blockquote>\n<p>-n, –numeric-uid-gid</p>\n</blockquote>\n<p>Eng：like -l, but list numeric user and group IDs。<br>Chi：与l参数显示的内容一致，但是用户、组用相应的id代替。</p>\n<blockquote>\n<p>-r, –reverse</p>\n</blockquote>\n<p>Eng：reverse order while sorting。<br>Chi：反序。</p>\n<blockquote>\n<p>-R, –recursive</p>\n</blockquote>\n<p>Eng：list subdirectories recursively。<br>Chi：是否进行递归。</p>\n<blockquote>\n<p> -S</p>\n</blockquote>\n<p>Eng：sort by file size。<br>Chi：按文件大小进行排序。</p>\n<blockquote>\n<p>-t<br>-c</p>\n</blockquote>\n<p>Eng：sort by modification time, newest first<br>Chi：按文件的修改时间进行排序（最新优先排在前面）。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><ol>\n<li>列举文件详情，-i参数加不加都行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -hi</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"article_linux_ls_ll.png\" alt><br>total 48：所列出内容的磁盘占用空间总和值，单位为kb。<br>第一列：drwxr-xr-x，一共10个字符，分别解释一下。第一位用来代表文件的类型：“d”代表目录，“-”代表普通文件，2-4位rwx代表该文件的属主的权限，5-7位r-x代表文件用户主所在用户组的其他用户的权限，8-10位r-x代表其他用户的权限。其中r-读、w-写、x-执行。<br>第二列：未知（网上查资料说如果是文件就是1，如果是目录就是目录下的文件，试验过不准确）。<br>第三列：文件所属的用户。<br>第四列：文件所属的用户组。<br>第五列：文件的大小，如果文件是目录则代表该目录的大小（不包括目录下的子目录和文件的大小）。<br>第六列：该文件最近修改或者查看的时间。<br>第七列：文件名称。</p>\n<ol start=\"2\">\n<li><p>列举文件中包含的目录/文件</p>\n<ul>\n<li><p>列举当前文件目录包含文件目录，这个命令有个弊端，就是只能列举当前文件目录下【本人暂时还不能切换目录列举，知道的同学可以留言给我】</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -d */</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取指定目录下的目录，可递归，把“^d”换成“^-”就可以获取对应的文件，-R代表是否启用递归操作。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /home/q/psapproval -R | grep &quot;^d&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算当前目录下的文件数和目录数，基于上面的命令加了<strong><em>wc -l</em></strong>，想要把子目录也计算进行，加上-R参数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l * |grep &quot;^d&quot;|wc -l</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>列举文件以及目录，用“/”区别</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll /home/q/psapproval -F</span><br><span class=\"line\">ll /home/q/psapproval -p</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>按时间进行排序，最新的文件在最下面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -rth</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文件按从小到大进行排序，最大的在下面，想要生序去掉-r参数即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -Shr</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>help</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">man ls</span><br><span class=\"line\">ls --help</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><div class=\"note primary\">\n            <ol><li>示例中的命令我都加了指定的目录，如果是当前目录，省略即可。</li><li>本文只讲解了ls常用的参数，了解更多请<strong><em>man ls</em></strong>查看。</li></ol>\n          </div>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><div class=\"note info\">\n            <p>文件类型</p>\n          </div>\n<ul>\n<li>“-”普通文件</li>\n<li>“d”目录</li>\n<li>“l”链接文件</li>\n<li>“b”块设备文件</li>\n<li>“c”字符设备文件</li>\n<li>“s”套接字文件，主要用于sock通信用的文件</li>\n</ul>\n<div class=\"note info\">\n            <p>文件权限</p>\n          </div>\n<ul>\n<li>r：读取的权限等于4，用r表示</li>\n<li>w：写入的权限等于2，用w表示</li>\n<li>x：执行的权限等于1，用x表示</li>\n</ul>\n<div class=\"note info\">\n            <p>ll命令</p>\n          </div>\n<p>控制台直接执行：<strong><em>alias ll=’ls -l –color=auto’</em></strong></p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>ls常用命令://<a href=\"http://www.tecmint.com/15-basic-ls-command-examples-in-linux/\" target=\"_blank\" rel=\"noopener\">www.tecmint.com/15-basic-ls-command-examples-in-linux/</a><br>ll详解：<a href=\"https://blog.csdn.net/LEON1741/article/details/82386520\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/LEON1741/article/details/82386520</a></p>"},{"title":"Linux学习之基础篇-tar","comments":0,"top":false,"abbrlink":29844,"date":"2017-06-04T09:30:42.000Z","updated":"2017-06-04T09:30:42.000Z","desc":"记录Linux命令学习基础篇之tar，用于打包文件、目录等文件","keywords":"linux, tar, 解压, 压缩, 打包, 服务器, 命令, shell, bash","_content":"\n![](/images/article_linux_tar.png)\n\n{% cq %}\n<font size=6.5 color='red'>tape archive</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n{% note warning %}\n学习tar的用法【tar 参数 文件名 文件目录】\n{% endnote %}\n\n### 介绍\n\n今天学习的命令跟文件打包、压缩、解压相关，而且特别提醒一下打包与解压缩不是一码事。打个比方，打包就把一堆文件、文件夹等放在一块；压缩就是把文件进行换种格式进行存储，目的是为了减小size。\n在linux系统下，常用的一个命令***tar***，包含了以上的所有功能，在日常维护中非常常用，功能十分强大。当然，你也可以使用gzip、bzip等解压缩命令，但是一个***tar***就可以搞定所有事，何乐而不为。\ntar打包后的文件通常以**.tar**进行结尾，压缩而是相对于文件格式而定，通常有**.bz、.gz、.Z**等等。\n\n### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n### 正文\n\n这个命令用的频率很大，可以打包、压缩单文件、多个文件、多目录、文件+目录，建议记住常用参数，如果记不住，那么就多敲命令，熟能生巧。\n\n#### 格式\n\n【tar 参数 文件名 文件目录】\n\n#### 参数说明\n这个命令的参数相对来说还是比较多的，我这里列举了常用的参数，如果有兴趣查看全部参数的同学请**man tar**或者自行百度。\n\n> -c\n\n创建一个新的压缩文件。\n\n> -x\n\n解压文件，文件是压缩格式，与**-c**相反。\n\n> -t\n\n显示压缩文件的内容，对于只想查看却不想解压使用这个即可，常用。\n\n> -z\n\n解压**gzip**格式的文件。\n\n> -j\n\n解压**bzip2**格式的文件。\n\n> -Z\n\n解压**.Z**格式的文件。\n\n> -p\n\n保持原文件的原来属性（属性不会依据使用者而变）\n\n> -v\n\n显示打包、压缩、解压文件的详细过程。\n\n> -f\n\n指定压缩文件，通常会写上文件名，**-f**可省略。\n\n> --exclude FILE\n\n在压缩的过程中，排除指定的文件不进行打包、压缩\n\n#### 常用命令\n\n> 解包 && 打包\n\n```\ntar xvf file_name.tar\ntar cvf file_name.tar file1 file2 dir1 dir2 ...\n```\n\n> .tar.gz格式\n\n解压：\n```\ntar zxvf file_name.tar.gz\n```\n压缩：\n```\ntar zcvf file_name.tar.gz file1 file2 dir1 dir2 ...\n```\n\n> .tar.bz格式\n\n解压：\n```\ntar jxvf file_name.tar.bz\n```\n压缩：\n```\ntar jcvf file_name.tar.bz file1 file2 dir1 dir2 ...\n```\n\n> .tar.Z格式\n\n解压：\n```\ntar Zxvf file_name.tar.Z\n```\n压缩：\n```\ntar Zcvf file_name.tar.Z file1 file2 dir1 dir2 ...\n```\n\n> 查看打包、压缩文件\n\n主要用了**-t**参数，面对不同的压缩文件，更改对应参数：\n```\ntar -ztvf file.tar.gz\n```\n\n> 排除部分文件\n\n压缩指定文件夹file下的文件，但是排除file目录的子文件sub_file。\n```\ntar -zcvf file.tar.gz file/* --exclude file/sub_file\n```\n\n### 说明\n\n```\ntar -cvf file.tar file1 file2 ...\ntar -zcvf file.tar.gz file1 file2 ...\ntar -zxvf file.tar.gz\n```\n第一条：打包文件 && 不压缩\n第二条：打包 && gzip格式压缩\n第三条：gzip格式解压\n\n{% note info%}\n- 压缩-c（compress）\n- 解压-x\n- 查看-t\n- 压缩/解压格式：z-zip（常用）、j-bz、.Z-.Z\n{% endnote %}\n\n### 补充\n\n**.rar、.zip**格式的日常经常遇到，这里简单说明一下怎么处理\n\n> .zip\n\n主要用**zip && unzip**命令。\n解压：\n```\nunzip file_name.zip\n```\n压缩：\n```\nzip file_name.zip file1 file2 dir1 dir2 ...\n```\n\n> .rar\n\n主要用**rar**命令。\n解压：\n```\nrar x file_name.rar\n```\n压缩：\n```\nrar a file_name.rar file1 file2 dir1 dir2 ...\n```\n\n### 学习\n\n\n\n### 多说一句\n\n涉及到文件权限等文件，记得一定要加**-p**参数，tar打包、压缩文件进行传输，不会影响文件的用户、用户组、权限等信息，之前直接传输文件，导致用户、权限都发生改变了，趟过坑，不了解的同学注意一下。\n","source":"_posts/Linux-学习之基础篇-tar.md","raw":"---\ntitle: Linux学习之基础篇-tar\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux基础篇]\ntop: false\nabbrlink: 29844\ndate: 2017-06-04 17:30:42\nupdated: 2017-06-04 17:30:42\ndesc: 记录Linux命令学习基础篇之tar，用于打包文件、目录等文件\nkeywords: linux, tar, 解压, 压缩, 打包, 服务器, 命令, shell, bash\n---\n\n![](/images/article_linux_tar.png)\n\n{% cq %}\n<font size=6.5 color='red'>tape archive</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n{% note warning %}\n学习tar的用法【tar 参数 文件名 文件目录】\n{% endnote %}\n\n### 介绍\n\n今天学习的命令跟文件打包、压缩、解压相关，而且特别提醒一下打包与解压缩不是一码事。打个比方，打包就把一堆文件、文件夹等放在一块；压缩就是把文件进行换种格式进行存储，目的是为了减小size。\n在linux系统下，常用的一个命令***tar***，包含了以上的所有功能，在日常维护中非常常用，功能十分强大。当然，你也可以使用gzip、bzip等解压缩命令，但是一个***tar***就可以搞定所有事，何乐而不为。\ntar打包后的文件通常以**.tar**进行结尾，压缩而是相对于文件格式而定，通常有**.bz、.gz、.Z**等等。\n\n### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n### 正文\n\n这个命令用的频率很大，可以打包、压缩单文件、多个文件、多目录、文件+目录，建议记住常用参数，如果记不住，那么就多敲命令，熟能生巧。\n\n#### 格式\n\n【tar 参数 文件名 文件目录】\n\n#### 参数说明\n这个命令的参数相对来说还是比较多的，我这里列举了常用的参数，如果有兴趣查看全部参数的同学请**man tar**或者自行百度。\n\n> -c\n\n创建一个新的压缩文件。\n\n> -x\n\n解压文件，文件是压缩格式，与**-c**相反。\n\n> -t\n\n显示压缩文件的内容，对于只想查看却不想解压使用这个即可，常用。\n\n> -z\n\n解压**gzip**格式的文件。\n\n> -j\n\n解压**bzip2**格式的文件。\n\n> -Z\n\n解压**.Z**格式的文件。\n\n> -p\n\n保持原文件的原来属性（属性不会依据使用者而变）\n\n> -v\n\n显示打包、压缩、解压文件的详细过程。\n\n> -f\n\n指定压缩文件，通常会写上文件名，**-f**可省略。\n\n> --exclude FILE\n\n在压缩的过程中，排除指定的文件不进行打包、压缩\n\n#### 常用命令\n\n> 解包 && 打包\n\n```\ntar xvf file_name.tar\ntar cvf file_name.tar file1 file2 dir1 dir2 ...\n```\n\n> .tar.gz格式\n\n解压：\n```\ntar zxvf file_name.tar.gz\n```\n压缩：\n```\ntar zcvf file_name.tar.gz file1 file2 dir1 dir2 ...\n```\n\n> .tar.bz格式\n\n解压：\n```\ntar jxvf file_name.tar.bz\n```\n压缩：\n```\ntar jcvf file_name.tar.bz file1 file2 dir1 dir2 ...\n```\n\n> .tar.Z格式\n\n解压：\n```\ntar Zxvf file_name.tar.Z\n```\n压缩：\n```\ntar Zcvf file_name.tar.Z file1 file2 dir1 dir2 ...\n```\n\n> 查看打包、压缩文件\n\n主要用了**-t**参数，面对不同的压缩文件，更改对应参数：\n```\ntar -ztvf file.tar.gz\n```\n\n> 排除部分文件\n\n压缩指定文件夹file下的文件，但是排除file目录的子文件sub_file。\n```\ntar -zcvf file.tar.gz file/* --exclude file/sub_file\n```\n\n### 说明\n\n```\ntar -cvf file.tar file1 file2 ...\ntar -zcvf file.tar.gz file1 file2 ...\ntar -zxvf file.tar.gz\n```\n第一条：打包文件 && 不压缩\n第二条：打包 && gzip格式压缩\n第三条：gzip格式解压\n\n{% note info%}\n- 压缩-c（compress）\n- 解压-x\n- 查看-t\n- 压缩/解压格式：z-zip（常用）、j-bz、.Z-.Z\n{% endnote %}\n\n### 补充\n\n**.rar、.zip**格式的日常经常遇到，这里简单说明一下怎么处理\n\n> .zip\n\n主要用**zip && unzip**命令。\n解压：\n```\nunzip file_name.zip\n```\n压缩：\n```\nzip file_name.zip file1 file2 dir1 dir2 ...\n```\n\n> .rar\n\n主要用**rar**命令。\n解压：\n```\nrar x file_name.rar\n```\n压缩：\n```\nrar a file_name.rar file1 file2 dir1 dir2 ...\n```\n\n### 学习\n\n\n\n### 多说一句\n\n涉及到文件权限等文件，记得一定要加**-p**参数，tar打包、压缩文件进行传输，不会影响文件的用户、用户组、权限等信息，之前直接传输文件，导致用户、权限都发生改变了，趟过坑，不了解的同学注意一下。\n","slug":"Linux-学习之基础篇-tar","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2uj0048tabjb2vx9l1f","content":"<p><img src=\"/images/article_linux_tar.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">tape archive</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习tar的用法【tar 参数 文件名 文件目录】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>今天学习的命令跟文件打包、压缩、解压相关，而且特别提醒一下打包与解压缩不是一码事。打个比方，打包就把一堆文件、文件夹等放在一块；压缩就是把文件进行换种格式进行存储，目的是为了减小size。<br>在linux系统下，常用的一个命令<strong><em>tar</em></strong>，包含了以上的所有功能，在日常维护中非常常用，功能十分强大。当然，你也可以使用gzip、bzip等解压缩命令，但是一个<strong><em>tar</em></strong>就可以搞定所有事，何乐而不为。<br>tar打包后的文件通常以<strong>.tar</strong>进行结尾，压缩而是相对于文件格式而定，通常有<strong>.bz、.gz、.Z</strong>等等。</p>\n<h3 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>这个命令用的频率很大，可以打包、压缩单文件、多个文件、多目录、文件+目录，建议记住常用参数，如果记不住，那么就多敲命令，熟能生巧。</p>\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><p>【tar 参数 文件名 文件目录】</p>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>这个命令的参数相对来说还是比较多的，我这里列举了常用的参数，如果有兴趣查看全部参数的同学请<strong>man tar</strong>或者自行百度。</p>\n<blockquote>\n<p>-c</p>\n</blockquote>\n<p>创建一个新的压缩文件。</p>\n<blockquote>\n<p>-x</p>\n</blockquote>\n<p>解压文件，文件是压缩格式，与<strong>-c</strong>相反。</p>\n<blockquote>\n<p>-t</p>\n</blockquote>\n<p>显示压缩文件的内容，对于只想查看却不想解压使用这个即可，常用。</p>\n<blockquote>\n<p>-z</p>\n</blockquote>\n<p>解压<strong>gzip</strong>格式的文件。</p>\n<blockquote>\n<p>-j</p>\n</blockquote>\n<p>解压<strong>bzip2</strong>格式的文件。</p>\n<blockquote>\n<p>-Z</p>\n</blockquote>\n<p>解压<strong>.Z</strong>格式的文件。</p>\n<blockquote>\n<p>-p</p>\n</blockquote>\n<p>保持原文件的原来属性（属性不会依据使用者而变）</p>\n<blockquote>\n<p>-v</p>\n</blockquote>\n<p>显示打包、压缩、解压文件的详细过程。</p>\n<blockquote>\n<p>-f</p>\n</blockquote>\n<p>指定压缩文件，通常会写上文件名，<strong>-f</strong>可省略。</p>\n<blockquote>\n<p>–exclude FILE</p>\n</blockquote>\n<p>在压缩的过程中，排除指定的文件不进行打包、压缩</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>解包 &amp;&amp; 打包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xvf file_name.tar</span><br><span class=\"line\">tar cvf file_name.tar file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>.tar.gz格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf file_name.tar.gz</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zcvf file_name.tar.gz file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.tar.bz格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jxvf file_name.tar.bz</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jcvf file_name.tar.bz file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.tar.Z格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar Zxvf file_name.tar.Z</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar Zcvf file_name.tar.Z file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>查看打包、压缩文件</p>\n</blockquote>\n<p>主要用了<strong>-t</strong>参数，面对不同的压缩文件，更改对应参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -ztvf file.tar.gz</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>排除部分文件</p>\n</blockquote>\n<p>压缩指定文件夹file下的文件，但是排除file目录的子文件sub_file。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zcvf file.tar.gz file/* --exclude file/sub_file</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cvf file.tar file1 file2 ...</span><br><span class=\"line\">tar -zcvf file.tar.gz file1 file2 ...</span><br><span class=\"line\">tar -zxvf file.tar.gz</span><br></pre></td></tr></table></figure>\n<p>第一条：打包文件 &amp;&amp; 不压缩<br>第二条：打包 &amp;&amp; gzip格式压缩<br>第三条：gzip格式解压</p>\n<div class=\"note info\">\n            <ul><li>压缩-c（compress）</li><li>解压-x</li><li>查看-t</li><li>压缩/解压格式：z-zip（常用）、j-bz、.Z-.Z</li></ul>\n          </div>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p><strong>.rar、.zip</strong>格式的日常经常遇到，这里简单说明一下怎么处理</p>\n<blockquote>\n<p>.zip</p>\n</blockquote>\n<p>主要用<strong>zip &amp;&amp; unzip</strong>命令。<br>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip file_name.zip</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zip file_name.zip file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.rar</p>\n</blockquote>\n<p>主要用<strong>rar</strong>命令。<br>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rar x file_name.rar</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rar a file_name.rar file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><h3 id=\"多说一句\"><a href=\"#多说一句\" class=\"headerlink\" title=\"多说一句\"></a>多说一句</h3><p>涉及到文件权限等文件，记得一定要加<strong>-p</strong>参数，tar打包、压缩文件进行传输，不会影响文件的用户、用户组、权限等信息，之前直接传输文件，导致用户、权限都发生改变了，趟过坑，不了解的同学注意一下。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_linux_tar.png\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">tape archive</font></blockquote>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习tar的用法【tar 参数 文件名 文件目录】</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>今天学习的命令跟文件打包、压缩、解压相关，而且特别提醒一下打包与解压缩不是一码事。打个比方，打包就把一堆文件、文件夹等放在一块；压缩就是把文件进行换种格式进行存储，目的是为了减小size。<br>在linux系统下，常用的一个命令<strong><em>tar</em></strong>，包含了以上的所有功能，在日常维护中非常常用，功能十分强大。当然，你也可以使用gzip、bzip等解压缩命令，但是一个<strong><em>tar</em></strong>就可以搞定所有事，何乐而不为。<br>tar打包后的文件通常以<strong>.tar</strong>进行结尾，压缩而是相对于文件格式而定，通常有<strong>.bz、.gz、.Z</strong>等等。</p>\n<h3 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>这个命令用的频率很大，可以打包、压缩单文件、多个文件、多目录、文件+目录，建议记住常用参数，如果记不住，那么就多敲命令，熟能生巧。</p>\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><p>【tar 参数 文件名 文件目录】</p>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>这个命令的参数相对来说还是比较多的，我这里列举了常用的参数，如果有兴趣查看全部参数的同学请<strong>man tar</strong>或者自行百度。</p>\n<blockquote>\n<p>-c</p>\n</blockquote>\n<p>创建一个新的压缩文件。</p>\n<blockquote>\n<p>-x</p>\n</blockquote>\n<p>解压文件，文件是压缩格式，与<strong>-c</strong>相反。</p>\n<blockquote>\n<p>-t</p>\n</blockquote>\n<p>显示压缩文件的内容，对于只想查看却不想解压使用这个即可，常用。</p>\n<blockquote>\n<p>-z</p>\n</blockquote>\n<p>解压<strong>gzip</strong>格式的文件。</p>\n<blockquote>\n<p>-j</p>\n</blockquote>\n<p>解压<strong>bzip2</strong>格式的文件。</p>\n<blockquote>\n<p>-Z</p>\n</blockquote>\n<p>解压<strong>.Z</strong>格式的文件。</p>\n<blockquote>\n<p>-p</p>\n</blockquote>\n<p>保持原文件的原来属性（属性不会依据使用者而变）</p>\n<blockquote>\n<p>-v</p>\n</blockquote>\n<p>显示打包、压缩、解压文件的详细过程。</p>\n<blockquote>\n<p>-f</p>\n</blockquote>\n<p>指定压缩文件，通常会写上文件名，<strong>-f</strong>可省略。</p>\n<blockquote>\n<p>–exclude FILE</p>\n</blockquote>\n<p>在压缩的过程中，排除指定的文件不进行打包、压缩</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>解包 &amp;&amp; 打包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xvf file_name.tar</span><br><span class=\"line\">tar cvf file_name.tar file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>.tar.gz格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf file_name.tar.gz</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zcvf file_name.tar.gz file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.tar.bz格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jxvf file_name.tar.bz</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jcvf file_name.tar.bz file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.tar.Z格式</p>\n</blockquote>\n<p>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar Zxvf file_name.tar.Z</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar Zcvf file_name.tar.Z file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>查看打包、压缩文件</p>\n</blockquote>\n<p>主要用了<strong>-t</strong>参数，面对不同的压缩文件，更改对应参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -ztvf file.tar.gz</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>排除部分文件</p>\n</blockquote>\n<p>压缩指定文件夹file下的文件，但是排除file目录的子文件sub_file。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zcvf file.tar.gz file/* --exclude file/sub_file</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -cvf file.tar file1 file2 ...</span><br><span class=\"line\">tar -zcvf file.tar.gz file1 file2 ...</span><br><span class=\"line\">tar -zxvf file.tar.gz</span><br></pre></td></tr></table></figure>\n<p>第一条：打包文件 &amp;&amp; 不压缩<br>第二条：打包 &amp;&amp; gzip格式压缩<br>第三条：gzip格式解压</p>\n<div class=\"note info\">\n            <ul><li>压缩-c（compress）</li><li>解压-x</li><li>查看-t</li><li>压缩/解压格式：z-zip（常用）、j-bz、.Z-.Z</li></ul>\n          </div>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p><strong>.rar、.zip</strong>格式的日常经常遇到，这里简单说明一下怎么处理</p>\n<blockquote>\n<p>.zip</p>\n</blockquote>\n<p>主要用<strong>zip &amp;&amp; unzip</strong>命令。<br>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip file_name.zip</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zip file_name.zip file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>.rar</p>\n</blockquote>\n<p>主要用<strong>rar</strong>命令。<br>解压：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rar x file_name.rar</span><br></pre></td></tr></table></figure></p>\n<p>压缩：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rar a file_name.rar file1 file2 dir1 dir2 ...</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><h3 id=\"多说一句\"><a href=\"#多说一句\" class=\"headerlink\" title=\"多说一句\"></a>多说一句</h3><p>涉及到文件权限等文件，记得一定要加<strong>-p</strong>参数，tar打包、压缩文件进行传输，不会影响文件的用户、用户组、权限等信息，之前直接传输文件，导致用户、权限都发生改变了，趟过坑，不了解的同学注意一下。</p>"},{"title":"Linux学习之增强篇-awk","desc":"记录Linux命令学习基础篇之awk","comments":0,"keywords":"linux, awk, 服务器, 命令, 日志, grep, sed, nginx日志, access-log, shell, bash","abbrlink":35054,"date":"2017-10-15T13:11:14.000Z","updated":"2017-11-21T13:11:14.000Z","_content":"\n### 简介\n\n{% note danger %}\nawk不止是一个命令，其实更像是一个工具。\n![](/images/article_awk.jpeg)\n{% endnote %}\n\n<!--more-->\n<hr />\n\n如果你是做后端、运维，想必听说过awk，grep，sed等日志分析命令，今天给大家带来awk的详细用法。简单说一下原理，执行【awk + 文件】会把文件内容按行进行读取，行内容以指定的分隔符进行切割（默认是空格），切开的部分再进行各种分析处理。工作上我主要用来做nginx的access-log日志的分析，非常好用，熟练使用之后，在解析日志、文本方面你就会如鱼得水。\n\n### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n### 使用方法\n* ***awk -F '分隔符' '相关命令' 文件1,文件2,...***\n* ***cat 文件 | awk -F '分隔符' '相关命令'***\n\n> 分隔符\n\nawk会依据-F后的参数‘’对数据进行切割，常见的分隔符***空格(‘ ’)***、***冒号(‘:’)***、***关键字***，都为英文字符。\n\n> 内置变量\n\n|   变量   | 说明                                    | 指数 |\n|:--------:|:--------------------------------------- | :----: |\n|    $0    | 当前记录内容（作为单个变量）              |   🌟   |\n|  $1~$n   | 当前记录的第n个字段，字段间由-F参数分隔 |   🌟🌟🌟   |\n|    NF    | 当前记录中的字段个数，就是有多少列      |   🌟   |\n|    NR    | 已经读出的记录数，就是行号，从1开始     |   🌟🌟   |\n|   FNR    | 当前总记录数                        |   🌟   |\n|    FS    | 输入字段分隔符 默认是空格             |   🌟    |\n|   OFS    | 输出字段分隔符 默认也是空格           |      |\n|    RS    | 输入的记录他隔符默 认为换行符         |      |\n|   ORS    | 输出的记录分隔符，默认为换行符         |      |\n| FILENAME | 当前输入文件的名字                   |   🌟   |\n\n> 相关命令\n\n通用方式：***'BEGIN {print \"name, count\"}  {print $1\",\"$7;print $0;} END {print \"end------\"}'***\n- print：打印输出\n- printf：格式化打印输出(print format)\n- begin：第一行，主要用来打印头部\n- end：末尾一行，主要用来打印结束标识\n- 中间部分：可执行多行语句，每个语句以；结束\n***命令需要在单引号‘’内，有begin、end、中间3部门，begin && end可省略***\n\n### 基础使用\n    环境：MacOs\n    文件：/etc/passwd\n\n> 显示所有用户名\n\n命令：***cat /etc/passwd |awk  -F ':'  '{print $1}'***\n小解：\n- $1：分割的后的第1个变量\n![etc_1](etc_1.png)\n\n> 用户与对应的shell\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start=========\"}  {print $1\",\"$7} END {print \"end------\"}'***\n小解：\n- $7：分割的后的第7个变量\n- begin：输出的第一行标识\n- end：输出的结束标识(图片未显示完全)\n![etc_2](etc_2.png)\n\n> 统计/etc/passwd:文件名，行号，列数\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start==========================\"} {print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}'***\n小解：\n- $0：当前行的记录\n- FILENAME：文件名称\n- NR：当前记录的行数\n- NF：当前记录中的字段个数\n![etc_3](etc_3.png)\n\n> 统计用户数量\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start==========================\"} {print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}'***\n小解：\n- $0：当前行的记录\n- FILENAME：文件名称\n- NR：当前记录的行数\n- NF：当前记录中的字段个数\n![etc_3](etc_3.png)\n\n命令：***cat /etc/passwd | awk '{count++;} END{print \"user count is \", count}'***\n![etc_4](etc_4.png)\n\n\n\n### 实战解析nginx的access.log\n直接引用本人现在负责的项目日志进行分析，***reality && reliable ！！！***\n> demo1\n\n![isapi_dmeo](isapi_dmeo.png)\n\n统计不同类型require请求的次数：\ncat isapi-access.log | awk -F \"require=|&\" '{c[$2]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' | sort -nr | head -n 20\n统计ip的请求次数：\ncat isapi-access.log | awk -F \" \" '{c[$1]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' | sort -nr | head -n 20\n\n> demo2\n\n![papproval_dmeo](papproval_dmeo.png)\n\n统计不同类型请求次数\nawk '{c[$7]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' psapproval-access.log | sort -nr\n统计ip的请求次数：\nawk '{ips[$1]+=1;} END{for (ip in ips) printf(\"%d\\t%s\\n\",ips[ip], ip);}' /home/q/var/log/psapproval-access.log | sort -nr\n\n> 命令小解\n\n    cat：查看文件\n    awk：分析命令\n    sort：排序\n    head：查看文件，但是打开的是文件的前XX行\n\n### 相关连接\n- ***isapi_access.log：***https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log\n- ***psapproval_access.log：***https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log\n\n### 追加说明\n    本人对awk也是初步了解，如果有不对的地方，欢迎大家留言，一起share。。。。。。待续\n","source":"_posts/Linux-学习之增强篇-awk.md","raw":"---\ntitle: Linux学习之增强篇-awk\ndesc: 记录Linux命令学习基础篇之awk\ncategories:\n  - [Linux]\ntags: [Linux, Nginx, Linux增强篇]\ncomments: false\nkeywords: linux, awk, 服务器, 命令, 日志, grep, sed, nginx日志, access-log, shell, bash\nabbrlink: 35054\ndate: 2017-10-15 21:11:14\nupdated: 2017-11-21 21:11:14\n---\n\n### 简介\n\n{% note danger %}\nawk不止是一个命令，其实更像是一个工具。\n![](/images/article_awk.jpeg)\n{% endnote %}\n\n<!--more-->\n<hr />\n\n如果你是做后端、运维，想必听说过awk，grep，sed等日志分析命令，今天给大家带来awk的详细用法。简单说一下原理，执行【awk + 文件】会把文件内容按行进行读取，行内容以指定的分隔符进行切割（默认是空格），切开的部分再进行各种分析处理。工作上我主要用来做nginx的access-log日志的分析，非常好用，熟练使用之后，在解析日志、文本方面你就会如鱼得水。\n\n### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n### 使用方法\n* ***awk -F '分隔符' '相关命令' 文件1,文件2,...***\n* ***cat 文件 | awk -F '分隔符' '相关命令'***\n\n> 分隔符\n\nawk会依据-F后的参数‘’对数据进行切割，常见的分隔符***空格(‘ ’)***、***冒号(‘:’)***、***关键字***，都为英文字符。\n\n> 内置变量\n\n|   变量   | 说明                                    | 指数 |\n|:--------:|:--------------------------------------- | :----: |\n|    $0    | 当前记录内容（作为单个变量）              |   🌟   |\n|  $1~$n   | 当前记录的第n个字段，字段间由-F参数分隔 |   🌟🌟🌟   |\n|    NF    | 当前记录中的字段个数，就是有多少列      |   🌟   |\n|    NR    | 已经读出的记录数，就是行号，从1开始     |   🌟🌟   |\n|   FNR    | 当前总记录数                        |   🌟   |\n|    FS    | 输入字段分隔符 默认是空格             |   🌟    |\n|   OFS    | 输出字段分隔符 默认也是空格           |      |\n|    RS    | 输入的记录他隔符默 认为换行符         |      |\n|   ORS    | 输出的记录分隔符，默认为换行符         |      |\n| FILENAME | 当前输入文件的名字                   |   🌟   |\n\n> 相关命令\n\n通用方式：***'BEGIN {print \"name, count\"}  {print $1\",\"$7;print $0;} END {print \"end------\"}'***\n- print：打印输出\n- printf：格式化打印输出(print format)\n- begin：第一行，主要用来打印头部\n- end：末尾一行，主要用来打印结束标识\n- 中间部分：可执行多行语句，每个语句以；结束\n***命令需要在单引号‘’内，有begin、end、中间3部门，begin && end可省略***\n\n### 基础使用\n    环境：MacOs\n    文件：/etc/passwd\n\n> 显示所有用户名\n\n命令：***cat /etc/passwd |awk  -F ':'  '{print $1}'***\n小解：\n- $1：分割的后的第1个变量\n![etc_1](etc_1.png)\n\n> 用户与对应的shell\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start=========\"}  {print $1\",\"$7} END {print \"end------\"}'***\n小解：\n- $7：分割的后的第7个变量\n- begin：输出的第一行标识\n- end：输出的结束标识(图片未显示完全)\n![etc_2](etc_2.png)\n\n> 统计/etc/passwd:文件名，行号，列数\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start==========================\"} {print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}'***\n小解：\n- $0：当前行的记录\n- FILENAME：文件名称\n- NR：当前记录的行数\n- NF：当前记录中的字段个数\n![etc_3](etc_3.png)\n\n> 统计用户数量\n\n命令：***cat /etc/passwd |awk  -F ':'  'BEGIN {print \"start==========================\"} {print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}'***\n小解：\n- $0：当前行的记录\n- FILENAME：文件名称\n- NR：当前记录的行数\n- NF：当前记录中的字段个数\n![etc_3](etc_3.png)\n\n命令：***cat /etc/passwd | awk '{count++;} END{print \"user count is \", count}'***\n![etc_4](etc_4.png)\n\n\n\n### 实战解析nginx的access.log\n直接引用本人现在负责的项目日志进行分析，***reality && reliable ！！！***\n> demo1\n\n![isapi_dmeo](isapi_dmeo.png)\n\n统计不同类型require请求的次数：\ncat isapi-access.log | awk -F \"require=|&\" '{c[$2]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' | sort -nr | head -n 20\n统计ip的请求次数：\ncat isapi-access.log | awk -F \" \" '{c[$1]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' | sort -nr | head -n 20\n\n> demo2\n\n![papproval_dmeo](papproval_dmeo.png)\n\n统计不同类型请求次数\nawk '{c[$7]+=1;} END{for (i in c) printf\"%d\\t%s\\n\",c[i], i;}' psapproval-access.log | sort -nr\n统计ip的请求次数：\nawk '{ips[$1]+=1;} END{for (ip in ips) printf(\"%d\\t%s\\n\",ips[ip], ip);}' /home/q/var/log/psapproval-access.log | sort -nr\n\n> 命令小解\n\n    cat：查看文件\n    awk：分析命令\n    sort：排序\n    head：查看文件，但是打开的是文件的前XX行\n\n### 相关连接\n- ***isapi_access.log：***https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log\n- ***psapproval_access.log：***https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log\n\n### 追加说明\n    本人对awk也是初步了解，如果有不对的地方，欢迎大家留言，一起share。。。。。。待续\n","slug":"Linux-学习之增强篇-awk","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2un004ctabj6ag8cput","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note danger\">\n            <p>awk不止是一个命令，其实更像是一个工具。<br><img src=\"/images/article_awk.jpeg\" alt></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>如果你是做后端、运维，想必听说过awk，grep，sed等日志分析命令，今天给大家带来awk的详细用法。简单说一下原理，执行【awk + 文件】会把文件内容按行进行读取，行内容以指定的分隔符进行切割（默认是空格），切开的部分再进行各种分析处理。工作上我主要用来做nginx的access-log日志的分析，非常好用，熟练使用之后，在解析日志、文本方面你就会如鱼得水。</p>\n<h3 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><strong><em>awk -F ‘分隔符’ ‘相关命令’ 文件1,文件2,…</em></strong></li>\n<li><strong><em>cat 文件 | awk -F ‘分隔符’ ‘相关命令’</em></strong></li>\n</ul>\n<blockquote>\n<p>分隔符</p>\n</blockquote>\n<p>awk会依据-F后的参数‘’对数据进行切割，常见的分隔符<strong><em>空格(‘ ’)</em></strong>、<strong><em>冒号(‘:’)</em></strong>、<strong><em>关键字</em></strong>，都为英文字符。</p>\n<blockquote>\n<p>内置变量</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:center\">指数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0</td>\n<td style=\"text-align:left\">当前记录内容（作为单个变量）</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1~$n</td>\n<td style=\"text-align:left\">当前记录的第n个字段，字段间由-F参数分隔</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">当前记录中的字段个数，就是有多少列</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已经读出的记录数，就是行号，从1开始</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">当前总记录数</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">输入字段分隔符 默认是空格</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出字段分隔符 默认也是空格</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">输入的记录他隔符默 认为换行符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出的记录分隔符，默认为换行符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">当前输入文件的名字</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>相关命令</p>\n</blockquote>\n<p>通用方式：<strong><em>‘BEGIN {print “name, count”}  {print $1”,”$7;print $0;} END {print “end——“}’</em></strong></p>\n<ul>\n<li>print：打印输出</li>\n<li>printf：格式化打印输出(print format)</li>\n<li>begin：第一行，主要用来打印头部</li>\n<li>end：末尾一行，主要用来打印结束标识</li>\n<li>中间部分：可执行多行语句，每个语句以；结束<br><strong><em>命令需要在单引号‘’内，有begin、end、中间3部门，begin &amp;&amp; end可省略</em></strong></li>\n</ul>\n<h3 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h3><pre><code>环境：MacOs\n文件：/etc/passwd\n</code></pre><blockquote>\n<p>显示所有用户名</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘{print $1}’</em></strong><br>小解：</p>\n<ul>\n<li>$1：分割的后的第1个变量<br><img src=\"etc_1.png\" alt=\"etc_1\"></li>\n</ul>\n<blockquote>\n<p>用户与对应的shell</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start=========”}  {print $1”,”$7} END {print “end——“}’</em></strong><br>小解：</p>\n<ul>\n<li>$7：分割的后的第7个变量</li>\n<li>begin：输出的第一行标识</li>\n<li>end：输出的结束标识(图片未显示完全)<br><img src=\"etc_2.png\" alt=\"etc_2\"></li>\n</ul>\n<blockquote>\n<p>统计/etc/passwd:文件名，行号，列数</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start==========================”} {print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’</em></strong><br>小解：</p>\n<ul>\n<li>$0：当前行的记录</li>\n<li>FILENAME：文件名称</li>\n<li>NR：当前记录的行数</li>\n<li>NF：当前记录中的字段个数<br><img src=\"etc_3.png\" alt=\"etc_3\"></li>\n</ul>\n<blockquote>\n<p>统计用户数量</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start==========================”} {print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’</em></strong><br>小解：</p>\n<ul>\n<li>$0：当前行的记录</li>\n<li>FILENAME：文件名称</li>\n<li>NR：当前记录的行数</li>\n<li>NF：当前记录中的字段个数<br><img src=\"etc_3.png\" alt=\"etc_3\"></li>\n</ul>\n<p>命令：<strong><em>cat /etc/passwd | awk ‘{count++;} END{print “user count is “, count}’</em></strong><br><img src=\"etc_4.png\" alt=\"etc_4\"></p>\n<h3 id=\"实战解析nginx的access-log\"><a href=\"#实战解析nginx的access-log\" class=\"headerlink\" title=\"实战解析nginx的access.log\"></a>实战解析nginx的access.log</h3><p>直接引用本人现在负责的项目日志进行分析，<strong><em>reality &amp;&amp; reliable ！！！</em></strong></p>\n<blockquote>\n<p>demo1</p>\n</blockquote>\n<p><img src=\"isapi_dmeo.png\" alt=\"isapi_dmeo\"></p>\n<p>统计不同类型require请求的次数：<br>cat isapi-access.log | awk -F “require=|&amp;” ‘{c[$2]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ | sort -nr | head -n 20<br>统计ip的请求次数：<br>cat isapi-access.log | awk -F “ “ ‘{c[$1]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ | sort -nr | head -n 20</p>\n<blockquote>\n<p>demo2</p>\n</blockquote>\n<p><img src=\"papproval_dmeo.png\" alt=\"papproval_dmeo\"></p>\n<p>统计不同类型请求次数<br>awk ‘{c[$7]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ psapproval-access.log | sort -nr<br>统计ip的请求次数：<br>awk ‘{ips[$1]+=1;} END{for (ip in ips) printf(“%d\\t%s\\n”,ips[ip], ip);}’ /home/q/var/log/psapproval-access.log | sort -nr</p>\n<blockquote>\n<p>命令小解</p>\n</blockquote>\n<pre><code>cat：查看文件\nawk：分析命令\nsort：排序\nhead：查看文件，但是打开的是文件的前XX行\n</code></pre><h3 id=\"相关连接\"><a href=\"#相关连接\" class=\"headerlink\" title=\"相关连接\"></a>相关连接</h3><ul>\n<li><strong><em>isapi_access.log：</em></strong><a href=\"https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log</a></li>\n<li><strong><em>psapproval_access.log：</em></strong><a href=\"https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log</a></li>\n</ul>\n<h3 id=\"追加说明\"><a href=\"#追加说明\" class=\"headerlink\" title=\"追加说明\"></a>追加说明</h3><pre><code>本人对awk也是初步了解，如果有不对的地方，欢迎大家留言，一起share。。。。。。待续\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note danger\">\n            <p>awk不止是一个命令，其实更像是一个工具。<br><img src=\"/images/article_awk.jpeg\" alt></p>\n          </div>","more":"<hr>\n\n<p>如果你是做后端、运维，想必听说过awk，grep，sed等日志分析命令，今天给大家带来awk的详细用法。简单说一下原理，执行【awk + 文件】会把文件内容按行进行读取，行内容以指定的分隔符进行切割（默认是空格），切开的部分再进行各种分析处理。工作上我主要用来做nginx的access-log日志的分析，非常好用，熟练使用之后，在解析日志、文本方面你就会如鱼得水。</p>\n<h3 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><strong><em>awk -F ‘分隔符’ ‘相关命令’ 文件1,文件2,…</em></strong></li>\n<li><strong><em>cat 文件 | awk -F ‘分隔符’ ‘相关命令’</em></strong></li>\n</ul>\n<blockquote>\n<p>分隔符</p>\n</blockquote>\n<p>awk会依据-F后的参数‘’对数据进行切割，常见的分隔符<strong><em>空格(‘ ’)</em></strong>、<strong><em>冒号(‘:’)</em></strong>、<strong><em>关键字</em></strong>，都为英文字符。</p>\n<blockquote>\n<p>内置变量</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:center\">指数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">$0</td>\n<td style=\"text-align:left\">当前记录内容（作为单个变量）</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">$1~$n</td>\n<td style=\"text-align:left\">当前记录的第n个字段，字段间由-F参数分隔</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:left\">当前记录中的字段个数，就是有多少列</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:left\">已经读出的记录数，就是行号，从1开始</td>\n<td style=\"text-align:center\">🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:left\">当前总记录数</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:left\">输入字段分隔符 默认是空格</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:left\">输出字段分隔符 默认也是空格</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:left\">输入的记录他隔符默 认为换行符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:left\">输出的记录分隔符，默认为换行符</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:left\">当前输入文件的名字</td>\n<td style=\"text-align:center\">🌟</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>相关命令</p>\n</blockquote>\n<p>通用方式：<strong><em>‘BEGIN {print “name, count”}  {print $1”,”$7;print $0;} END {print “end——“}’</em></strong></p>\n<ul>\n<li>print：打印输出</li>\n<li>printf：格式化打印输出(print format)</li>\n<li>begin：第一行，主要用来打印头部</li>\n<li>end：末尾一行，主要用来打印结束标识</li>\n<li>中间部分：可执行多行语句，每个语句以；结束<br><strong><em>命令需要在单引号‘’内，有begin、end、中间3部门，begin &amp;&amp; end可省略</em></strong></li>\n</ul>\n<h3 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h3><pre><code>环境：MacOs\n文件：/etc/passwd\n</code></pre><blockquote>\n<p>显示所有用户名</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘{print $1}’</em></strong><br>小解：</p>\n<ul>\n<li>$1：分割的后的第1个变量<br><img src=\"etc_1.png\" alt=\"etc_1\"></li>\n</ul>\n<blockquote>\n<p>用户与对应的shell</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start=========”}  {print $1”,”$7} END {print “end——“}’</em></strong><br>小解：</p>\n<ul>\n<li>$7：分割的后的第7个变量</li>\n<li>begin：输出的第一行标识</li>\n<li>end：输出的结束标识(图片未显示完全)<br><img src=\"etc_2.png\" alt=\"etc_2\"></li>\n</ul>\n<blockquote>\n<p>统计/etc/passwd:文件名，行号，列数</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start==========================”} {print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’</em></strong><br>小解：</p>\n<ul>\n<li>$0：当前行的记录</li>\n<li>FILENAME：文件名称</li>\n<li>NR：当前记录的行数</li>\n<li>NF：当前记录中的字段个数<br><img src=\"etc_3.png\" alt=\"etc_3\"></li>\n</ul>\n<blockquote>\n<p>统计用户数量</p>\n</blockquote>\n<p>命令：<strong><em>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “start==========================”} {print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’</em></strong><br>小解：</p>\n<ul>\n<li>$0：当前行的记录</li>\n<li>FILENAME：文件名称</li>\n<li>NR：当前记录的行数</li>\n<li>NF：当前记录中的字段个数<br><img src=\"etc_3.png\" alt=\"etc_3\"></li>\n</ul>\n<p>命令：<strong><em>cat /etc/passwd | awk ‘{count++;} END{print “user count is “, count}’</em></strong><br><img src=\"etc_4.png\" alt=\"etc_4\"></p>\n<h3 id=\"实战解析nginx的access-log\"><a href=\"#实战解析nginx的access-log\" class=\"headerlink\" title=\"实战解析nginx的access.log\"></a>实战解析nginx的access.log</h3><p>直接引用本人现在负责的项目日志进行分析，<strong><em>reality &amp;&amp; reliable ！！！</em></strong></p>\n<blockquote>\n<p>demo1</p>\n</blockquote>\n<p><img src=\"isapi_dmeo.png\" alt=\"isapi_dmeo\"></p>\n<p>统计不同类型require请求的次数：<br>cat isapi-access.log | awk -F “require=|&amp;” ‘{c[$2]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ | sort -nr | head -n 20<br>统计ip的请求次数：<br>cat isapi-access.log | awk -F “ “ ‘{c[$1]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ | sort -nr | head -n 20</p>\n<blockquote>\n<p>demo2</p>\n</blockquote>\n<p><img src=\"papproval_dmeo.png\" alt=\"papproval_dmeo\"></p>\n<p>统计不同类型请求次数<br>awk ‘{c[$7]+=1;} END{for (i in c) printf”%d\\t%s\\n”,c[i], i;}’ psapproval-access.log | sort -nr<br>统计ip的请求次数：<br>awk ‘{ips[$1]+=1;} END{for (ip in ips) printf(“%d\\t%s\\n”,ips[ip], ip);}’ /home/q/var/log/psapproval-access.log | sort -nr</p>\n<blockquote>\n<p>命令小解</p>\n</blockquote>\n<pre><code>cat：查看文件\nawk：分析命令\nsort：排序\nhead：查看文件，但是打开的是文件的前XX行\n</code></pre><h3 id=\"相关连接\"><a href=\"#相关连接\" class=\"headerlink\" title=\"相关连接\"></a>相关连接</h3><ul>\n<li><strong><em>isapi_access.log：</em></strong><a href=\"https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/project_data_ref/blob/master/isapi_access.log</a></li>\n<li><strong><em>psapproval_access.log：</em></strong><a href=\"https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/project_data_ref/blob/master/psapproval_access.log</a></li>\n</ul>\n<h3 id=\"追加说明\"><a href=\"#追加说明\" class=\"headerlink\" title=\"追加说明\"></a>追加说明</h3><pre><code>本人对awk也是初步了解，如果有不对的地方，欢迎大家留言，一起share。。。。。。待续\n</code></pre>"},{"title":"Linux-学习之增强篇:crontab","comments":0,"top":false,"abbrlink":40314,"date":"2020-04-01T02:11:01.000Z","updated":"2020-04-01T02:11:01.000Z","desc":null,"keywords":null,"_content":"","source":"_posts/Linux-学习之增强篇-crontab.md","raw":"---\ntitle: 'Linux-学习之增强篇:crontab'\ncomments: false\ncategories:\n  - []\ntags: []\ntop: false\nabbrlink: 40314\ndate: 2020-04-01 10:11:01\nupdated: 2020-04-01 10:11:01\ndesc:\nkeywords:\n---\n","slug":"Linux-学习之增强篇-crontab","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2up004ftabjlbfcpc9l","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Linux学习之基础篇-ps","comments":0,"top":false,"abbrlink":9834,"date":"2020-02-21T10:45:32.000Z","updated":"2020-02-21T10:45:32.000Z","desc":"记录Linux命令学习基础篇之ps","keywords":"linux, cd, 服务器, 命令, shell, bash","_content":"\n![](/images/article_linux_ps.jpg)\n\n{% cq %}\n<font size=6.5 color='red'>process status</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n{% note warning %}\n学习ps的用法【ps 参数】，显示系统进程。\n{% endnote %}\n\n### 介绍\n\nLinux中有很多命令可以查询正在运行的进程的信息，其中**ps**与**top**最为常用，至于二者的区别，可以认为ps是当前进程的镜像，是静态的，top可以动态的显示进行信息、内存、CPU等信息。\n本文讲解ps的用法，至于top的使用会在后续中写出。\n\n### 正文\n\n{% raw %}\n<div class=\"post_cus_note\">来个美图  放飞一下</div>\n{% endraw %}\n\n![](hushi.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">开始正餐</div>\n{% endraw %}\n\n#### 格式\n\n```\nps [参数]\n\nps [参数] | grep [内容]\n```\n\n#### 参数说明\n\n由于ps的参数过多，这里常用的只列举常用参数，如有详细了解请<font color=\"red\" size=\"5\">man进行查询！！！</font>。\n\n> -a\n\n显示同一终端下的所有程序。\n\n> -A\n\n显示所有进程。\n\n> c\n\n显示进程的真实名称。\n\n> -C<指令名称> 　\n\n指定执行指令的名称，并列出该指令的进程的状况。\n\n> -N\n\n反向选择。\n\n> -e\n\n等于“-A”。\n\n> e\n\n显示环境变量。\n\n> f\n\n显示进程间的相互关系。\n\n> -p<进程识别码> 　\n\n指定进程识别码，并列出该进程的状况。\n\n> -H\n\n显示树状结构，表示进程间的相互关系。\n\n> r\n\n显示当前终端的进程。\n\n> -t<终端机编号> 　\n\n指定终端机编号，并列出属于该终端机的进程的状况。\n\n> T\n\n显示当前终端的所有程序\n\n> u\n\n指定用户的所有进程。\n\n> -G<群组识别码>\n-g<群组识别码>\n\n列出属于该群组的进程的状况，也可使用群组名称来指定。\n\n> --help\n\n显示帮助信息。\n\n> --version\n\n显示版本显示。\n\n#### 常用命令\n\n> ps -ef\n\n![](ef.jpg)\n\n- UID：进程拥有者ID\n- PID：进程的ID\n- PPID：父级进程的ID\n- C：进程CPU使用的百分比\n- STIME：进程的启动时间\n- TTY：登录终端\n- TIME：进程使用掉CPU的时间\n- CMD：执行的命令\n\n> ps -aux\n\n![](aux.jpg)\n\n- USER：用户名\n- %CPU：进程占用的CPU百分比\n- %MEM：占用内存的百分比\n- VSZ：进程使用的虚拟內存量（KB）\n- RSS：进程占用的固定內存量（KB）（驻留中页的数量）\n- TTY：登录终端\n- STAT：进程的状态\n\n| 状态码 |     简述     | 详情                                                              |\n|:------:|:------------:|:----------------------------------------------------------------- |\n|   D    |   不可中断   | 收到信号不唤醒和不可运行, 进程必须等待直到有中断发生              |\n|   R    |     运行     | 正在运行或在运行队列中等待                                        |\n|   S    |     中断     | 中断 sleeping                                                     |\n|   T    | 停止或被追踪 | 进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行         |\n|   Z    |   僵尸进程   | 进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放 |\n|   W    |   内存交换   | 进入内存交换                                                      |\n\n- START：进程被触发启动时间\n- TIME：进程实际使用CPU运行的时间\n- COMMAND：执行的命令\n\n如果需要显示进程的真是名称：\n```\nps -auxc\n```\n\n> ps -axjf\n\n![](axjf.jpg)\n\n信息内容与**ps -aux**差不多，唯一的区别就是在进程COMMAND显示这这块，***ps -axjf***树形显示进程，比较清晰。\n\n> ps -ef -u root\n\n查询指定用户的进程。\n\n![](ef.jpg)\n\n> 内容输出\n\n- 文本\n```\nps -ef > /home/mingliang.gao/cur_pro.txt\n```\n\n- 翻页\n```\nps -ef | less\n```\n\n### 补充\n\n> grep\n\n用ps去查询想要的进程，我一般都是配合上***grep***。\n```\n# 格式\nps -ef | grep \"XXXXX\"\n```\n\n> pstree\n\n如果想以树节点形式显示整体的进程，用这个命令，一般系统没有，需要进行安装。\n- 在 Mac OS上\n```\nbrew install pstree\n```\n\n- 在 Fedora/Red Hat/CentOS\n```\nyum -y install psmisc\n```\n\n- 在 Ubuntu/Debian\n```\napt-get install psmisc\n```\n\n### 学习\n\n菜鸟说明：https://www.runoob.com/linux/linux-comm-ps.html\nman手册：http://man7.org/linux/man-pages/man1/ps.1.html\n\n推荐使用man手册，是最全面的文档，在文档的***EXAMPLES***部分，会有常用的命令。\n\n![](examples.jpg)\n\n\n<font color=\"red\" size=\"5\">希望对大家有所帮助！！！</font>\n","source":"_posts/Linux-学习之基础篇-ps.md","raw":"---\ntitle: Linux学习之基础篇-ps\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux基础篇]\ntop: false\nabbrlink: 9834\ndate: 2020-02-21 18:45:32\nupdated: 2020-02-21 18:45:32\ndesc: 记录Linux命令学习基础篇之ps\nkeywords: linux, cd, 服务器, 命令, shell, bash\n---\n\n![](/images/article_linux_ps.jpg)\n\n{% cq %}\n<font size=6.5 color='red'>process status</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n{% note warning %}\n学习ps的用法【ps 参数】，显示系统进程。\n{% endnote %}\n\n### 介绍\n\nLinux中有很多命令可以查询正在运行的进程的信息，其中**ps**与**top**最为常用，至于二者的区别，可以认为ps是当前进程的镜像，是静态的，top可以动态的显示进行信息、内存、CPU等信息。\n本文讲解ps的用法，至于top的使用会在后续中写出。\n\n### 正文\n\n{% raw %}\n<div class=\"post_cus_note\">来个美图  放飞一下</div>\n{% endraw %}\n\n![](hushi.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">开始正餐</div>\n{% endraw %}\n\n#### 格式\n\n```\nps [参数]\n\nps [参数] | grep [内容]\n```\n\n#### 参数说明\n\n由于ps的参数过多，这里常用的只列举常用参数，如有详细了解请<font color=\"red\" size=\"5\">man进行查询！！！</font>。\n\n> -a\n\n显示同一终端下的所有程序。\n\n> -A\n\n显示所有进程。\n\n> c\n\n显示进程的真实名称。\n\n> -C<指令名称> 　\n\n指定执行指令的名称，并列出该指令的进程的状况。\n\n> -N\n\n反向选择。\n\n> -e\n\n等于“-A”。\n\n> e\n\n显示环境变量。\n\n> f\n\n显示进程间的相互关系。\n\n> -p<进程识别码> 　\n\n指定进程识别码，并列出该进程的状况。\n\n> -H\n\n显示树状结构，表示进程间的相互关系。\n\n> r\n\n显示当前终端的进程。\n\n> -t<终端机编号> 　\n\n指定终端机编号，并列出属于该终端机的进程的状况。\n\n> T\n\n显示当前终端的所有程序\n\n> u\n\n指定用户的所有进程。\n\n> -G<群组识别码>\n-g<群组识别码>\n\n列出属于该群组的进程的状况，也可使用群组名称来指定。\n\n> --help\n\n显示帮助信息。\n\n> --version\n\n显示版本显示。\n\n#### 常用命令\n\n> ps -ef\n\n![](ef.jpg)\n\n- UID：进程拥有者ID\n- PID：进程的ID\n- PPID：父级进程的ID\n- C：进程CPU使用的百分比\n- STIME：进程的启动时间\n- TTY：登录终端\n- TIME：进程使用掉CPU的时间\n- CMD：执行的命令\n\n> ps -aux\n\n![](aux.jpg)\n\n- USER：用户名\n- %CPU：进程占用的CPU百分比\n- %MEM：占用内存的百分比\n- VSZ：进程使用的虚拟內存量（KB）\n- RSS：进程占用的固定內存量（KB）（驻留中页的数量）\n- TTY：登录终端\n- STAT：进程的状态\n\n| 状态码 |     简述     | 详情                                                              |\n|:------:|:------------:|:----------------------------------------------------------------- |\n|   D    |   不可中断   | 收到信号不唤醒和不可运行, 进程必须等待直到有中断发生              |\n|   R    |     运行     | 正在运行或在运行队列中等待                                        |\n|   S    |     中断     | 中断 sleeping                                                     |\n|   T    | 停止或被追踪 | 进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行         |\n|   Z    |   僵尸进程   | 进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放 |\n|   W    |   内存交换   | 进入内存交换                                                      |\n\n- START：进程被触发启动时间\n- TIME：进程实际使用CPU运行的时间\n- COMMAND：执行的命令\n\n如果需要显示进程的真是名称：\n```\nps -auxc\n```\n\n> ps -axjf\n\n![](axjf.jpg)\n\n信息内容与**ps -aux**差不多，唯一的区别就是在进程COMMAND显示这这块，***ps -axjf***树形显示进程，比较清晰。\n\n> ps -ef -u root\n\n查询指定用户的进程。\n\n![](ef.jpg)\n\n> 内容输出\n\n- 文本\n```\nps -ef > /home/mingliang.gao/cur_pro.txt\n```\n\n- 翻页\n```\nps -ef | less\n```\n\n### 补充\n\n> grep\n\n用ps去查询想要的进程，我一般都是配合上***grep***。\n```\n# 格式\nps -ef | grep \"XXXXX\"\n```\n\n> pstree\n\n如果想以树节点形式显示整体的进程，用这个命令，一般系统没有，需要进行安装。\n- 在 Mac OS上\n```\nbrew install pstree\n```\n\n- 在 Fedora/Red Hat/CentOS\n```\nyum -y install psmisc\n```\n\n- 在 Ubuntu/Debian\n```\napt-get install psmisc\n```\n\n### 学习\n\n菜鸟说明：https://www.runoob.com/linux/linux-comm-ps.html\nman手册：http://man7.org/linux/man-pages/man1/ps.1.html\n\n推荐使用man手册，是最全面的文档，在文档的***EXAMPLES***部分，会有常用的命令。\n\n![](examples.jpg)\n\n\n<font color=\"red\" size=\"5\">希望对大家有所帮助！！！</font>\n","slug":"Linux-学习之基础篇-ps","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2ut004itabjbs278v6k","content":"<p><img src=\"/images/article_linux_ps.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">process status</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习ps的用法【ps 参数】，显示系统进程。</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>Linux中有很多命令可以查询正在运行的进程的信息，其中<strong>ps</strong>与<strong>top</strong>最为常用，至于二者的区别，可以认为ps是当前进程的镜像，是静态的，top可以动态的显示进行信息、内存、CPU等信息。<br>本文讲解ps的用法，至于top的使用会在后续中写出。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3>\n<div class=\"post_cus_note\">来个美图  放飞一下</div>\n\n<p><img src=\"hushi.jpg\" alt></p>\n\n<div class=\"post_cus_note\">开始正餐</div>\n\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps [参数]</span><br><span class=\"line\"></span><br><span class=\"line\">ps [参数] | grep [内容]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>由于ps的参数过多，这里常用的只列举常用参数，如有详细了解请<font color=\"red\" size=\"5\">man进行查询！！！</font>。</p>\n<blockquote>\n<p>-a</p>\n</blockquote>\n<p>显示同一终端下的所有程序。</p>\n<blockquote>\n<p>-A</p>\n</blockquote>\n<p>显示所有进程。</p>\n<blockquote>\n<p>c</p>\n</blockquote>\n<p>显示进程的真实名称。</p>\n<blockquote>\n<p>-C&lt;指令名称&gt; 　</p>\n</blockquote>\n<p>指定执行指令的名称，并列出该指令的进程的状况。</p>\n<blockquote>\n<p>-N</p>\n</blockquote>\n<p>反向选择。</p>\n<blockquote>\n<p>-e</p>\n</blockquote>\n<p>等于“-A”。</p>\n<blockquote>\n<p>e</p>\n</blockquote>\n<p>显示环境变量。</p>\n<blockquote>\n<p>f</p>\n</blockquote>\n<p>显示进程间的相互关系。</p>\n<blockquote>\n<p>-p&lt;进程识别码&gt; 　</p>\n</blockquote>\n<p>指定进程识别码，并列出该进程的状况。</p>\n<blockquote>\n<p>-H</p>\n</blockquote>\n<p>显示树状结构，表示进程间的相互关系。</p>\n<blockquote>\n<p>r</p>\n</blockquote>\n<p>显示当前终端的进程。</p>\n<blockquote>\n<p>-t&lt;终端机编号&gt; 　</p>\n</blockquote>\n<p>指定终端机编号，并列出属于该终端机的进程的状况。</p>\n<blockquote>\n<p>T</p>\n</blockquote>\n<p>显示当前终端的所有程序</p>\n<blockquote>\n<p>u</p>\n</blockquote>\n<p>指定用户的所有进程。</p>\n<blockquote>\n<p>-G&lt;群组识别码&gt;<br>-g&lt;群组识别码&gt;</p>\n</blockquote>\n<p>列出属于该群组的进程的状况，也可使用群组名称来指定。</p>\n<blockquote>\n<p>–help</p>\n</blockquote>\n<p>显示帮助信息。</p>\n<blockquote>\n<p>–version</p>\n</blockquote>\n<p>显示版本显示。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>ps -ef</p>\n</blockquote>\n<p><img src=\"ef.jpg\" alt></p>\n<ul>\n<li>UID：进程拥有者ID</li>\n<li>PID：进程的ID</li>\n<li>PPID：父级进程的ID</li>\n<li>C：进程CPU使用的百分比</li>\n<li>STIME：进程的启动时间</li>\n<li>TTY：登录终端</li>\n<li>TIME：进程使用掉CPU的时间</li>\n<li>CMD：执行的命令</li>\n</ul>\n<blockquote>\n<p>ps -aux</p>\n</blockquote>\n<p><img src=\"aux.jpg\" alt></p>\n<ul>\n<li>USER：用户名</li>\n<li>%CPU：进程占用的CPU百分比</li>\n<li>%MEM：占用内存的百分比</li>\n<li>VSZ：进程使用的虚拟內存量（KB）</li>\n<li>RSS：进程占用的固定內存量（KB）（驻留中页的数量）</li>\n<li>TTY：登录终端</li>\n<li>STAT：进程的状态</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">简述</th>\n<th style=\"text-align:left\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">D</td>\n<td style=\"text-align:center\">不可中断</td>\n<td style=\"text-align:left\">收到信号不唤醒和不可运行, 进程必须等待直到有中断发生</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">R</td>\n<td style=\"text-align:center\">运行</td>\n<td style=\"text-align:left\">正在运行或在运行队列中等待</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">S</td>\n<td style=\"text-align:center\">中断</td>\n<td style=\"text-align:left\">中断 sleeping</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">停止或被追踪</td>\n<td style=\"text-align:left\">进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Z</td>\n<td style=\"text-align:center\">僵尸进程</td>\n<td style=\"text-align:left\">进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">W</td>\n<td style=\"text-align:center\">内存交换</td>\n<td style=\"text-align:left\">进入内存交换</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>START：进程被触发启动时间</li>\n<li>TIME：进程实际使用CPU运行的时间</li>\n<li>COMMAND：执行的命令</li>\n</ul>\n<p>如果需要显示进程的真是名称：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -auxc</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps -axjf</p>\n</blockquote>\n<p><img src=\"axjf.jpg\" alt></p>\n<p>信息内容与<strong>ps -aux</strong>差不多，唯一的区别就是在进程COMMAND显示这这块，<strong><em>ps -axjf</em></strong>树形显示进程，比较清晰。</p>\n<blockquote>\n<p>ps -ef -u root</p>\n</blockquote>\n<p>查询指定用户的进程。</p>\n<p><img src=\"ef.jpg\" alt></p>\n<blockquote>\n<p>内容输出</p>\n</blockquote>\n<ul>\n<li><p>文本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef &gt; /home/mingliang.gao/cur_pro.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>翻页</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | less</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><blockquote>\n<p>grep</p>\n</blockquote>\n<p>用ps去查询想要的进程，我一般都是配合上<strong><em>grep</em></strong>。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 格式</span><br><span class=\"line\">ps -ef | grep &quot;XXXXX&quot;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>pstree</p>\n</blockquote>\n<p>如果想以树节点形式显示整体的进程，用这个命令，一般系统没有，需要进行安装。</p>\n<ul>\n<li><p>在 Mac OS上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pstree</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Fedora/Red Hat/CentOS</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install psmisc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Ubuntu/Debian</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install psmisc</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>菜鸟说明：<a href=\"https://www.runoob.com/linux/linux-comm-ps.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/linux/linux-comm-ps.html</a><br>man手册：<a href=\"http://man7.org/linux/man-pages/man1/ps.1.html\" target=\"_blank\" rel=\"noopener\">http://man7.org/linux/man-pages/man1/ps.1.html</a></p>\n<p>推荐使用man手册，是最全面的文档，在文档的<strong><em>EXAMPLES</em></strong>部分，会有常用的命令。</p>\n<p><img src=\"examples.jpg\" alt></p>\n<font color=\"red\" size=\"5\">希望对大家有所帮助！！！</font>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_linux_ps.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font size=\"6.5\" color=\"red\">process status</font></blockquote>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note warning\">\n            <p>学习ps的用法【ps 参数】，显示系统进程。</p>\n          </div>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>Linux中有很多命令可以查询正在运行的进程的信息，其中<strong>ps</strong>与<strong>top</strong>最为常用，至于二者的区别，可以认为ps是当前进程的镜像，是静态的，top可以动态的显示进行信息、内存、CPU等信息。<br>本文讲解ps的用法，至于top的使用会在后续中写出。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3>\n<div class=\"post_cus_note\">来个美图  放飞一下</div>\n\n<p><img src=\"hushi.jpg\" alt></p>\n\n<div class=\"post_cus_note\">开始正餐</div>\n\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps [参数]</span><br><span class=\"line\"></span><br><span class=\"line\">ps [参数] | grep [内容]</span><br></pre></td></tr></table></figure>\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><p>由于ps的参数过多，这里常用的只列举常用参数，如有详细了解请<font color=\"red\" size=\"5\">man进行查询！！！</font>。</p>\n<blockquote>\n<p>-a</p>\n</blockquote>\n<p>显示同一终端下的所有程序。</p>\n<blockquote>\n<p>-A</p>\n</blockquote>\n<p>显示所有进程。</p>\n<blockquote>\n<p>c</p>\n</blockquote>\n<p>显示进程的真实名称。</p>\n<blockquote>\n<p>-C&lt;指令名称&gt; 　</p>\n</blockquote>\n<p>指定执行指令的名称，并列出该指令的进程的状况。</p>\n<blockquote>\n<p>-N</p>\n</blockquote>\n<p>反向选择。</p>\n<blockquote>\n<p>-e</p>\n</blockquote>\n<p>等于“-A”。</p>\n<blockquote>\n<p>e</p>\n</blockquote>\n<p>显示环境变量。</p>\n<blockquote>\n<p>f</p>\n</blockquote>\n<p>显示进程间的相互关系。</p>\n<blockquote>\n<p>-p&lt;进程识别码&gt; 　</p>\n</blockquote>\n<p>指定进程识别码，并列出该进程的状况。</p>\n<blockquote>\n<p>-H</p>\n</blockquote>\n<p>显示树状结构，表示进程间的相互关系。</p>\n<blockquote>\n<p>r</p>\n</blockquote>\n<p>显示当前终端的进程。</p>\n<blockquote>\n<p>-t&lt;终端机编号&gt; 　</p>\n</blockquote>\n<p>指定终端机编号，并列出属于该终端机的进程的状况。</p>\n<blockquote>\n<p>T</p>\n</blockquote>\n<p>显示当前终端的所有程序</p>\n<blockquote>\n<p>u</p>\n</blockquote>\n<p>指定用户的所有进程。</p>\n<blockquote>\n<p>-G&lt;群组识别码&gt;<br>-g&lt;群组识别码&gt;</p>\n</blockquote>\n<p>列出属于该群组的进程的状况，也可使用群组名称来指定。</p>\n<blockquote>\n<p>–help</p>\n</blockquote>\n<p>显示帮助信息。</p>\n<blockquote>\n<p>–version</p>\n</blockquote>\n<p>显示版本显示。</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>ps -ef</p>\n</blockquote>\n<p><img src=\"ef.jpg\" alt></p>\n<ul>\n<li>UID：进程拥有者ID</li>\n<li>PID：进程的ID</li>\n<li>PPID：父级进程的ID</li>\n<li>C：进程CPU使用的百分比</li>\n<li>STIME：进程的启动时间</li>\n<li>TTY：登录终端</li>\n<li>TIME：进程使用掉CPU的时间</li>\n<li>CMD：执行的命令</li>\n</ul>\n<blockquote>\n<p>ps -aux</p>\n</blockquote>\n<p><img src=\"aux.jpg\" alt></p>\n<ul>\n<li>USER：用户名</li>\n<li>%CPU：进程占用的CPU百分比</li>\n<li>%MEM：占用内存的百分比</li>\n<li>VSZ：进程使用的虚拟內存量（KB）</li>\n<li>RSS：进程占用的固定內存量（KB）（驻留中页的数量）</li>\n<li>TTY：登录终端</li>\n<li>STAT：进程的状态</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">简述</th>\n<th style=\"text-align:left\">详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">D</td>\n<td style=\"text-align:center\">不可中断</td>\n<td style=\"text-align:left\">收到信号不唤醒和不可运行, 进程必须等待直到有中断发生</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">R</td>\n<td style=\"text-align:center\">运行</td>\n<td style=\"text-align:left\">正在运行或在运行队列中等待</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">S</td>\n<td style=\"text-align:center\">中断</td>\n<td style=\"text-align:left\">中断 sleeping</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">停止或被追踪</td>\n<td style=\"text-align:left\">进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Z</td>\n<td style=\"text-align:center\">僵尸进程</td>\n<td style=\"text-align:left\">进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">W</td>\n<td style=\"text-align:center\">内存交换</td>\n<td style=\"text-align:left\">进入内存交换</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>START：进程被触发启动时间</li>\n<li>TIME：进程实际使用CPU运行的时间</li>\n<li>COMMAND：执行的命令</li>\n</ul>\n<p>如果需要显示进程的真是名称：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -auxc</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps -axjf</p>\n</blockquote>\n<p><img src=\"axjf.jpg\" alt></p>\n<p>信息内容与<strong>ps -aux</strong>差不多，唯一的区别就是在进程COMMAND显示这这块，<strong><em>ps -axjf</em></strong>树形显示进程，比较清晰。</p>\n<blockquote>\n<p>ps -ef -u root</p>\n</blockquote>\n<p>查询指定用户的进程。</p>\n<p><img src=\"ef.jpg\" alt></p>\n<blockquote>\n<p>内容输出</p>\n</blockquote>\n<ul>\n<li><p>文本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef &gt; /home/mingliang.gao/cur_pro.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>翻页</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | less</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><blockquote>\n<p>grep</p>\n</blockquote>\n<p>用ps去查询想要的进程，我一般都是配合上<strong><em>grep</em></strong>。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 格式</span><br><span class=\"line\">ps -ef | grep &quot;XXXXX&quot;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>pstree</p>\n</blockquote>\n<p>如果想以树节点形式显示整体的进程，用这个命令，一般系统没有，需要进行安装。</p>\n<ul>\n<li><p>在 Mac OS上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pstree</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Fedora/Red Hat/CentOS</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install psmisc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Ubuntu/Debian</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install psmisc</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>菜鸟说明：<a href=\"https://www.runoob.com/linux/linux-comm-ps.html\" target=\"_blank\" rel=\"noopener\">https://www.runoob.com/linux/linux-comm-ps.html</a><br>man手册：<a href=\"http://man7.org/linux/man-pages/man1/ps.1.html\" target=\"_blank\" rel=\"noopener\">http://man7.org/linux/man-pages/man1/ps.1.html</a></p>\n<p>推荐使用man手册，是最全面的文档，在文档的<strong><em>EXAMPLES</em></strong>部分，会有常用的命令。</p>\n<p><img src=\"examples.jpg\" alt></p>\n<font color=\"red\" size=\"5\">希望对大家有所帮助！！！</font>"},{"title":"Linux学习之番外篇-w、who、whoami","comments":0,"top":false,"abbrlink":52265,"date":"2019-12-24T00:54:11.000Z","updated":"2019-12-24T00:54:11.000Z","desc":"总结一下Linux在w、who、whoami在用于显示用户信息的相关操作","keywords":"Linux, w, who, whoami, 用户, id, last","_content":"\n![](/images/article_w.jpg)\n\n#### 简介\n{% note danger %}\n简单总结一下<font color=\"#dd0000\" size=\"5\">w、who、whoami</font>，用于显示当前登录Linux的用户信息，在本篇结束的时候又额外赠送了2个命令，关于学习<font size=6.5 color='red'>多多益善。。。。。。</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。\n\n#### 总结\n\n|  命令  |                         说明                         |\n|:------:|:----------------------------------------------------:|\n|   w    |               显示当前登录的用户及信息               |\n|  who   | 显示当前已经登录的用户名、终端名称、登录时间及登录IP |\n| whoami |                 显示当前用户的用户名                 |\n|   id   |               用于check系统是有此用户                |\n|  last  |             显示近期用户或终端的登录情况             |\n\n#### w\n\n显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。\n\n```\n[root@bash ~]# w\n 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty1                      Tue21   15:27m  0.09s  0.09s -bash\nroot     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w\nroot     tty2                      07:43   19:29   0.02s  0.02s -bash\n```\n\n#### who\n\n显示当前已经登录的用户名、终端名称、登录时间及登录IP。\n\n```\n[root@bash ~]# who\nroot     tty1         2019-12-24 21:23\nroot     pts/0        2019-12-24 19:23 (192.168.1.116)\nroot     tty2         2019-12-24 07:43\n```\n#### whoami\n\n显示当前用户的用户名。\n```\n[root@bash ~]# whoami\nroot\n```\n\n{% raw %}\n<div class=\"post_cus_note\">额外赠送</div>\n{% endraw %}\n\n#### id\n\n用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。\n```\n[root@bash ~]# id root\nuid=0(root) gid=0(wheel) groups=0(wheel)\n```\n\n#### last\n\n显示近期用户或终端的登录情况。\n```\n[root@bash ~]# last -n 5\nroot     pts/0        :0.0             Wed Apr 25 10:12   still logged in\nroot     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)\nroot     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)\n```\n","source":"_posts/Linux-学习之番外篇-w、who、whoami.md","raw":"---\ntitle: Linux学习之番外篇-w、who、whoami\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux番外篇]\ntop: false\nabbrlink: 52265\ndate: 2019-12-24 08:54:11\nupdated: 2019-12-24 08:54:11\ndesc: 总结一下Linux在w、who、whoami在用于显示用户信息的相关操作\nkeywords: Linux, w, who, whoami, 用户, id, last\n---\n\n![](/images/article_w.jpg)\n\n#### 简介\n{% note danger %}\n简单总结一下<font color=\"#dd0000\" size=\"5\">w、who、whoami</font>，用于显示当前登录Linux的用户信息，在本篇结束的时候又额外赠送了2个命令，关于学习<font size=6.5 color='red'>多多益善。。。。。。</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。\n\n#### 总结\n\n|  命令  |                         说明                         |\n|:------:|:----------------------------------------------------:|\n|   w    |               显示当前登录的用户及信息               |\n|  who   | 显示当前已经登录的用户名、终端名称、登录时间及登录IP |\n| whoami |                 显示当前用户的用户名                 |\n|   id   |               用于check系统是有此用户                |\n|  last  |             显示近期用户或终端的登录情况             |\n\n#### w\n\n显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。\n\n```\n[root@bash ~]# w\n 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty1                      Tue21   15:27m  0.09s  0.09s -bash\nroot     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w\nroot     tty2                      07:43   19:29   0.02s  0.02s -bash\n```\n\n#### who\n\n显示当前已经登录的用户名、终端名称、登录时间及登录IP。\n\n```\n[root@bash ~]# who\nroot     tty1         2019-12-24 21:23\nroot     pts/0        2019-12-24 19:23 (192.168.1.116)\nroot     tty2         2019-12-24 07:43\n```\n#### whoami\n\n显示当前用户的用户名。\n```\n[root@bash ~]# whoami\nroot\n```\n\n{% raw %}\n<div class=\"post_cus_note\">额外赠送</div>\n{% endraw %}\n\n#### id\n\n用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。\n```\n[root@bash ~]# id root\nuid=0(root) gid=0(wheel) groups=0(wheel)\n```\n\n#### last\n\n显示近期用户或终端的登录情况。\n```\n[root@bash ~]# last -n 5\nroot     pts/0        :0.0             Wed Apr 25 10:12   still logged in\nroot     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)\nroot     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)\n```\n","slug":"Linux-学习之番外篇-w、who、whoami","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2uw004ltabjkhxh8x7y","content":"<p><img src=\"/images/article_w.jpg\" alt></p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>简单总结一下<font color=\"#dd0000\" size=\"5\">w、who、whoami</font>，用于显示当前登录Linux的用户信息，在本篇结束的时候又额外赠送了2个命令，关于学习<font size=\"6.5\" color=\"red\">多多益善。。。。。。</font>。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">显示当前登录的用户及信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">who</td>\n<td style=\"text-align:center\">显示当前已经登录的用户名、终端名称、登录时间及登录IP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">whoami</td>\n<td style=\"text-align:center\">显示当前用户的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">id</td>\n<td style=\"text-align:center\">用于check系统是有此用户</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">last</td>\n<td style=\"text-align:center\">显示近期用户或终端的登录情况</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"w\"></a>w</h4><p>显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# w</span><br><span class=\"line\"> 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     tty1                      Tue21   15:27m  0.09s  0.09s -bash</span><br><span class=\"line\">root     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w</span><br><span class=\"line\">root     tty2                      07:43   19:29   0.02s  0.02s -bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h4><p>显示当前已经登录的用户名、终端名称、登录时间及登录IP。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# who</span><br><span class=\"line\">root     tty1         2019-12-24 21:23</span><br><span class=\"line\">root     pts/0        2019-12-24 19:23 (192.168.1.116)</span><br><span class=\"line\">root     tty2         2019-12-24 07:43</span><br></pre></td></tr></table></figure>\n<h4 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h4><p>显示当前用户的用户名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure></p>\n\n<div class=\"post_cus_note\">额外赠送</div>\n\n<h4 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h4><p>用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# id root</span><br><span class=\"line\">uid=0(root) gid=0(wheel) groups=0(wheel)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"last\"><a href=\"#last\" class=\"headerlink\" title=\"last\"></a>last</h4><p>显示近期用户或终端的登录情况。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# last -n 5</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:12   still logged in</span><br><span class=\"line\">root     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_w.jpg\" alt></p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>简单总结一下<font color=\"#dd0000\" size=\"5\">w、who、whoami</font>，用于显示当前登录Linux的用户信息，在本篇结束的时候又额外赠送了2个命令，关于学习<font size=\"6.5\" color=\"red\">多多益善。。。。。。</font>。</p>\n          </div>","more":"<hr>\n\n<p>在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">显示当前登录的用户及信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">who</td>\n<td style=\"text-align:center\">显示当前已经登录的用户名、终端名称、登录时间及登录IP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">whoami</td>\n<td style=\"text-align:center\">显示当前用户的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">id</td>\n<td style=\"text-align:center\">用于check系统是有此用户</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">last</td>\n<td style=\"text-align:center\">显示近期用户或终端的登录情况</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"w\"></a>w</h4><p>显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# w</span><br><span class=\"line\"> 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     tty1                      Tue21   15:27m  0.09s  0.09s -bash</span><br><span class=\"line\">root     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w</span><br><span class=\"line\">root     tty2                      07:43   19:29   0.02s  0.02s -bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h4><p>显示当前已经登录的用户名、终端名称、登录时间及登录IP。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# who</span><br><span class=\"line\">root     tty1         2019-12-24 21:23</span><br><span class=\"line\">root     pts/0        2019-12-24 19:23 (192.168.1.116)</span><br><span class=\"line\">root     tty2         2019-12-24 07:43</span><br></pre></td></tr></table></figure>\n<h4 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h4><p>显示当前用户的用户名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure></p>\n\n<div class=\"post_cus_note\">额外赠送</div>\n\n<h4 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h4><p>用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# id root</span><br><span class=\"line\">uid=0(root) gid=0(wheel) groups=0(wheel)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"last\"><a href=\"#last\" class=\"headerlink\" title=\"last\"></a>last</h4><p>显示近期用户或终端的登录情况。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# last -n 5</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:12   still logged in</span><br><span class=\"line\">root     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)</span><br><span class=\"line\">root     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)</span><br></pre></td></tr></table></figure></p>"},{"title":"Linux-学习之增强篇:firewall-cmd","comments":0,"top":false,"desc":"记录Linux命令学习基础篇之lsof","keywords":"linux, firewall, 服务器, 命令, 防火墙, centos7, shell, bash","abbrlink":60013,"date":"2020-03-28T01:16:18.000Z","updated":"2020-03-28T01:16:18.000Z","_content":"\n\n### 简介\n\n{% note danger %}\nCentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。\n![](/images/article_firewall.jpg)\n<font color=\"#dd0000\" size=\"5\">时代在更新、CentOS也在更新，我们也必须要更新。</font>\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n防火墙没什么好说的，直接开始正餐。\n\n#### 推荐指数\n\n```\n🌟🌟🌟🌟🌟\n```\n\n#### 安装\n```\nyum install firewalld\n```\n\n#### 使用方法\n\n> 查看运行状态\n\n|          command           |\n|:--------------------------:|\n|    firewall-cmd --state    |\n| systemctl status firewalld |\n\n> 启动\n\n|   function   |               command               |\n|:------------:|:-----------------------------------:|\n|   开启服务   |  systemctl start firewalld.service  |\n|   关闭服务   |  systemctl stop firewalld.service   |\n| 开机自动启动 | systemctl enable firewalld.service  |\n| 关闭开机启动 | systemctl disable firewalld.service |\n\n> 增加端口\n\n| function |                             command                             |\n|:--------:|:---------------------------------------------------------------:|\n|   永久   | firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp |\n|   临时   |       firewall-cmd --zone=public --add-port=8080-8081/tcp       |\n\n- firewall-cmd：Linux中提供的操作firewall的工具。\n– zone：指定作用域。\n– add-port=3306/tcp：添加的端口，格式为：端口/通讯协议。\n– permanent：表示永久生效，没有此参数重启后会失效。\n\n> 删除端口\n\n```\nfirewall-cmd --zone=public --remove-port=3306/tcp --permanent\n```\n改变端口即可。\n\n> 查看端口\n\n| function |          command          |\n|:--------:|:-------------------------:|\n|   简略   | firewall-cmd --list-ports |\n|   详情   | firewall-cmd --list-ports |\n\n\n#### 其他知识\n\n关于***--zone=public***，应该会有人不了解，对**--zone**的参数做个说明：\n\n|   type   | desc                                                                                       |\n|:--------:|:------------------------------------------------------------------------------------------ |\n|   drop   | 任何接受的网络数据包都被丢弃，没有任何回复                                                 |\n|  block   | 任何接收的网络连接都被IPv4的icmp-host-prohibited信息和IPv6的icmp6-adm-prohibited信息所拒绝 |\n|  public  | 在公共区域内使用，不能相信网络内的其他计算机不会对你的计算机造成危害                       |\n| external | 特别是为路由器启动了伪装功能的外部网                                                       |\n|   dmz    | 用于你的非军事区内的电脑                                                                   |\n|   work   | 用于工作区                                                                                 |\n|   home   | 用于家庭网络                                                                               |\n| internal | 用于内部网络。你可以基本相信网络内的其他计算机不会危害到你                                 |\n| trusted  | 可接受所有的网络连接                                                                       |\n\nfirewalld 的默认zone是public。\n\n详细了解firewall-cmd，请使用***firewall-cmd --help***查看。\n\n#### 特殊说明\n\n添加完端口之后，记得reload或者重启，重新加载，否则不会生效。\n```\n# reload\nfirewall-cmd --reload\n\n# restart\n#别忘记重启防火墙\nsystemctl restart firewalld\n```\n\n本人也是属于探索阶段，欢迎大家一起交流，有问题请在博客进行留言。\n","source":"_posts/Linux-学习之增强篇-firewall-cmd.md","raw":"---\ntitle: 'Linux-学习之增强篇:firewall-cmd'\ncomments: false\ncategories: [Linux]\ntags: [Linux, Linux增强篇]\ntop: false\ndesc: 记录Linux命令学习基础篇之lsof\nkeywords: 'linux, firewall, 服务器, 命令, 防火墙, centos7, shell, bash'\nabbrlink: 60013\ndate: 2020-03-28 09:16:18\nupdated: 2020-03-28 09:16:18\n---\n\n\n### 简介\n\n{% note danger %}\nCentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。\n![](/images/article_firewall.jpg)\n<font color=\"#dd0000\" size=\"5\">时代在更新、CentOS也在更新，我们也必须要更新。</font>\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n防火墙没什么好说的，直接开始正餐。\n\n#### 推荐指数\n\n```\n🌟🌟🌟🌟🌟\n```\n\n#### 安装\n```\nyum install firewalld\n```\n\n#### 使用方法\n\n> 查看运行状态\n\n|          command           |\n|:--------------------------:|\n|    firewall-cmd --state    |\n| systemctl status firewalld |\n\n> 启动\n\n|   function   |               command               |\n|:------------:|:-----------------------------------:|\n|   开启服务   |  systemctl start firewalld.service  |\n|   关闭服务   |  systemctl stop firewalld.service   |\n| 开机自动启动 | systemctl enable firewalld.service  |\n| 关闭开机启动 | systemctl disable firewalld.service |\n\n> 增加端口\n\n| function |                             command                             |\n|:--------:|:---------------------------------------------------------------:|\n|   永久   | firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp |\n|   临时   |       firewall-cmd --zone=public --add-port=8080-8081/tcp       |\n\n- firewall-cmd：Linux中提供的操作firewall的工具。\n– zone：指定作用域。\n– add-port=3306/tcp：添加的端口，格式为：端口/通讯协议。\n– permanent：表示永久生效，没有此参数重启后会失效。\n\n> 删除端口\n\n```\nfirewall-cmd --zone=public --remove-port=3306/tcp --permanent\n```\n改变端口即可。\n\n> 查看端口\n\n| function |          command          |\n|:--------:|:-------------------------:|\n|   简略   | firewall-cmd --list-ports |\n|   详情   | firewall-cmd --list-ports |\n\n\n#### 其他知识\n\n关于***--zone=public***，应该会有人不了解，对**--zone**的参数做个说明：\n\n|   type   | desc                                                                                       |\n|:--------:|:------------------------------------------------------------------------------------------ |\n|   drop   | 任何接受的网络数据包都被丢弃，没有任何回复                                                 |\n|  block   | 任何接收的网络连接都被IPv4的icmp-host-prohibited信息和IPv6的icmp6-adm-prohibited信息所拒绝 |\n|  public  | 在公共区域内使用，不能相信网络内的其他计算机不会对你的计算机造成危害                       |\n| external | 特别是为路由器启动了伪装功能的外部网                                                       |\n|   dmz    | 用于你的非军事区内的电脑                                                                   |\n|   work   | 用于工作区                                                                                 |\n|   home   | 用于家庭网络                                                                               |\n| internal | 用于内部网络。你可以基本相信网络内的其他计算机不会危害到你                                 |\n| trusted  | 可接受所有的网络连接                                                                       |\n\nfirewalld 的默认zone是public。\n\n详细了解firewall-cmd，请使用***firewall-cmd --help***查看。\n\n#### 特殊说明\n\n添加完端口之后，记得reload或者重启，重新加载，否则不会生效。\n```\n# reload\nfirewall-cmd --reload\n\n# restart\n#别忘记重启防火墙\nsystemctl restart firewalld\n```\n\n本人也是属于探索阶段，欢迎大家一起交流，有问题请在博客进行留言。\n","slug":"Linux-学习之增强篇-firewall-cmd","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2v1004ptabjfouqn929","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note danger\">\n            <p>CentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。<br><img src=\"/images/article_firewall.jpg\" alt></p><font color=\"#dd0000\" size=\"5\">时代在更新、CentOS也在更新，我们也必须要更新。</font>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>防火墙没什么好说的，直接开始正餐。</p>\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install firewalld</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><blockquote>\n<p>查看运行状态</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">firewall-cmd –state</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">systemctl status firewalld</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>启动</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">开启服务</td>\n<td style=\"text-align:center\">systemctl start firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关闭服务</td>\n<td style=\"text-align:center\">systemctl stop firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">开机自动启动</td>\n<td style=\"text-align:center\">systemctl enable firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关闭开机启动</td>\n<td style=\"text-align:center\">systemctl disable firewalld.service</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>增加端口</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">永久</td>\n<td style=\"text-align:center\">firewall-cmd –permanent –zone=public –add-port=8080-8081/tcp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">临时</td>\n<td style=\"text-align:center\">firewall-cmd –zone=public –add-port=8080-8081/tcp</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>firewall-cmd：Linux中提供的操作firewall的工具。<br>– zone：指定作用域。<br>– add-port=3306/tcp：添加的端口，格式为：端口/通讯协议。<br>– permanent：表示永久生效，没有此参数重启后会失效。</li>\n</ul>\n<blockquote>\n<p>删除端口</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --remove-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>改变端口即可。</p>\n<blockquote>\n<p>查看端口</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">简略</td>\n<td style=\"text-align:center\">firewall-cmd –list-ports</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">详情</td>\n<td style=\"text-align:center\">firewall-cmd –list-ports</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"其他知识\"><a href=\"#其他知识\" class=\"headerlink\" title=\"其他知识\"></a>其他知识</h4><p>关于<strong><em>–zone=public</em></strong>，应该会有人不了解，对<strong>–zone</strong>的参数做个说明：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">type</th>\n<th style=\"text-align:left\">desc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">drop</td>\n<td style=\"text-align:left\">任何接受的网络数据包都被丢弃，没有任何回复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">block</td>\n<td style=\"text-align:left\">任何接收的网络连接都被IPv4的icmp-host-prohibited信息和IPv6的icmp6-adm-prohibited信息所拒绝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">public</td>\n<td style=\"text-align:left\">在公共区域内使用，不能相信网络内的其他计算机不会对你的计算机造成危害</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">external</td>\n<td style=\"text-align:left\">特别是为路由器启动了伪装功能的外部网</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dmz</td>\n<td style=\"text-align:left\">用于你的非军事区内的电脑</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">work</td>\n<td style=\"text-align:left\">用于工作区</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">home</td>\n<td style=\"text-align:left\">用于家庭网络</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">internal</td>\n<td style=\"text-align:left\">用于内部网络。你可以基本相信网络内的其他计算机不会危害到你</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">trusted</td>\n<td style=\"text-align:left\">可接受所有的网络连接</td>\n</tr>\n</tbody>\n</table>\n<p>firewalld 的默认zone是public。</p>\n<p>详细了解firewall-cmd，请使用<strong><em>firewall-cmd –help</em></strong>查看。</p>\n<h4 id=\"特殊说明\"><a href=\"#特殊说明\" class=\"headerlink\" title=\"特殊说明\"></a>特殊说明</h4><p>添加完端口之后，记得reload或者重启，重新加载，否则不会生效。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># reload</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"># restart</span><br><span class=\"line\">#别忘记重启防火墙</span><br><span class=\"line\">systemctl restart firewalld</span><br></pre></td></tr></table></figure></p>\n<p>本人也是属于探索阶段，欢迎大家一起交流，有问题请在博客进行留言。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note danger\">\n            <p>CentOS7开始，默认使用firewall来配置防火墙，没有安装iptables（旧版默认安装）。<br><img src=\"/images/article_firewall.jpg\" alt></p><font color=\"#dd0000\" size=\"5\">时代在更新、CentOS也在更新，我们也必须要更新。</font>\n          </div>","more":"<hr>\n\n<p>防火墙没什么好说的，直接开始正餐。</p>\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install firewalld</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><blockquote>\n<p>查看运行状态</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">firewall-cmd –state</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">systemctl status firewalld</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>启动</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">开启服务</td>\n<td style=\"text-align:center\">systemctl start firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关闭服务</td>\n<td style=\"text-align:center\">systemctl stop firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">开机自动启动</td>\n<td style=\"text-align:center\">systemctl enable firewalld.service</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">关闭开机启动</td>\n<td style=\"text-align:center\">systemctl disable firewalld.service</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>增加端口</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">永久</td>\n<td style=\"text-align:center\">firewall-cmd –permanent –zone=public –add-port=8080-8081/tcp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">临时</td>\n<td style=\"text-align:center\">firewall-cmd –zone=public –add-port=8080-8081/tcp</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>firewall-cmd：Linux中提供的操作firewall的工具。<br>– zone：指定作用域。<br>– add-port=3306/tcp：添加的端口，格式为：端口/通讯协议。<br>– permanent：表示永久生效，没有此参数重启后会失效。</li>\n</ul>\n<blockquote>\n<p>删除端口</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --remove-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure>\n<p>改变端口即可。</p>\n<blockquote>\n<p>查看端口</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">function</th>\n<th style=\"text-align:center\">command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">简略</td>\n<td style=\"text-align:center\">firewall-cmd –list-ports</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">详情</td>\n<td style=\"text-align:center\">firewall-cmd –list-ports</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"其他知识\"><a href=\"#其他知识\" class=\"headerlink\" title=\"其他知识\"></a>其他知识</h4><p>关于<strong><em>–zone=public</em></strong>，应该会有人不了解，对<strong>–zone</strong>的参数做个说明：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">type</th>\n<th style=\"text-align:left\">desc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">drop</td>\n<td style=\"text-align:left\">任何接受的网络数据包都被丢弃，没有任何回复</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">block</td>\n<td style=\"text-align:left\">任何接收的网络连接都被IPv4的icmp-host-prohibited信息和IPv6的icmp6-adm-prohibited信息所拒绝</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">public</td>\n<td style=\"text-align:left\">在公共区域内使用，不能相信网络内的其他计算机不会对你的计算机造成危害</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">external</td>\n<td style=\"text-align:left\">特别是为路由器启动了伪装功能的外部网</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dmz</td>\n<td style=\"text-align:left\">用于你的非军事区内的电脑</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">work</td>\n<td style=\"text-align:left\">用于工作区</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">home</td>\n<td style=\"text-align:left\">用于家庭网络</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">internal</td>\n<td style=\"text-align:left\">用于内部网络。你可以基本相信网络内的其他计算机不会危害到你</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">trusted</td>\n<td style=\"text-align:left\">可接受所有的网络连接</td>\n</tr>\n</tbody>\n</table>\n<p>firewalld 的默认zone是public。</p>\n<p>详细了解firewall-cmd，请使用<strong><em>firewall-cmd –help</em></strong>查看。</p>\n<h4 id=\"特殊说明\"><a href=\"#特殊说明\" class=\"headerlink\" title=\"特殊说明\"></a>特殊说明</h4><p>添加完端口之后，记得reload或者重启，重新加载，否则不会生效。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># reload</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"># restart</span><br><span class=\"line\">#别忘记重启防火墙</span><br><span class=\"line\">systemctl restart firewalld</span><br></pre></td></tr></table></figure></p>\n<p>本人也是属于探索阶段，欢迎大家一起交流，有问题请在博客进行留言。</p>"},{"title":"Linux学习之番外篇-多命令执行","comments":0,"top":false,"abbrlink":64874,"date":"2019-06-26T12:26:09.000Z","updated":"2019-06-26T12:26:09.000Z","desc":"Linux学习之番外篇-多命令执行","keywords":"Linux, 多命令执行, &, &&, ||, shell","_content":"\n#### 简介\n{% note danger %}\n解决多命令command1，command1，command1...。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n学习以下多命令一起执行：&、&&、；、||。\n\n#### 推荐指数\n🌟🌟🌟🌟🌟\n\n#### 使用方法\n\n> ;\n\n语法：command1 ; command2 \\[; command3\\] ...\n不管前面命令执行成功没有，后面的命令按顺序继续执行。\n\n> &\n\n语法：command1 & command2 \\[& command3\\] ...\n多命令同时执行，互不影响。\n```\nls & ll & ls\n```\n\n> &&\n\n语法：command1 && command2 \\[&& command3\\] ...\n命令之间使用 && 连接，实现逻辑<font color=\"red\" size=5>与</font>的功能，只有左边的命令执行成功，后面命令才继续执行。\n```\ntouch 1.txt && rm ~/Desktop/1.txt && echo \"rm success\"\n```\n先touch一个1.txt文件，接下来在rm删除，最后输出success。\n\n\n> ||\n\n语法：command1 || command2 \\[|| command3\\] ...\n命令之间使用 || 连接，实现逻辑<font color=\"red\" size=5>或</font>的功能，只有左边的命令执行失败，后面命令才继续执行。\n```\nlas || echo \"无命令\"\n```\n","source":"_posts/Linux-学习之番外篇-多命令执行.md","raw":"---\ntitle: Linux学习之番外篇-多命令执行\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux番外篇]\ntop: false\nabbrlink: 64874\ndate: 2019-06-26 20:26:09\nupdated: 2019-06-26 20:26:09\ndesc: Linux学习之番外篇-多命令执行\nkeywords: Linux, 多命令执行, &, &&, ||, shell\n---\n\n#### 简介\n{% note danger %}\n解决多命令command1，command1，command1...。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n学习以下多命令一起执行：&、&&、；、||。\n\n#### 推荐指数\n🌟🌟🌟🌟🌟\n\n#### 使用方法\n\n> ;\n\n语法：command1 ; command2 \\[; command3\\] ...\n不管前面命令执行成功没有，后面的命令按顺序继续执行。\n\n> &\n\n语法：command1 & command2 \\[& command3\\] ...\n多命令同时执行，互不影响。\n```\nls & ll & ls\n```\n\n> &&\n\n语法：command1 && command2 \\[&& command3\\] ...\n命令之间使用 && 连接，实现逻辑<font color=\"red\" size=5>与</font>的功能，只有左边的命令执行成功，后面命令才继续执行。\n```\ntouch 1.txt && rm ~/Desktop/1.txt && echo \"rm success\"\n```\n先touch一个1.txt文件，接下来在rm删除，最后输出success。\n\n\n> ||\n\n语法：command1 || command2 \\[|| command3\\] ...\n命令之间使用 || 连接，实现逻辑<font color=\"red\" size=5>或</font>的功能，只有左边的命令执行失败，后面命令才继续执行。\n```\nlas || echo \"无命令\"\n```\n","slug":"Linux-学习之番外篇-多命令执行","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2v5004stabjchqv13e5","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>解决多命令command1，command1，command1…。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>学习以下多命令一起执行：&amp;、&amp;&amp;、；、||。</p>\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><p>🌟🌟🌟🌟🌟</p>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><blockquote>\n<p>;</p>\n</blockquote>\n<p>语法：command1 ; command2 [; command3] …<br>不管前面命令执行成功没有，后面的命令按顺序继续执行。</p>\n<blockquote>\n<p>&amp;</p>\n</blockquote>\n<p>语法：command1 &amp; command2 [&amp; command3] …<br>多命令同时执行，互不影响。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls &amp; ll &amp; ls</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>&amp;&amp;</p>\n</blockquote>\n<p>语法：command1 &amp;&amp; command2 [&amp;&amp; command3] …<br>命令之间使用 &amp;&amp; 连接，实现逻辑<font color=\"red\" size=\"5\">与</font>的功能，只有左边的命令执行成功，后面命令才继续执行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch 1.txt &amp;&amp; rm ~/Desktop/1.txt &amp;&amp; echo &quot;rm success&quot;</span><br></pre></td></tr></table></figure></p>\n<p>先touch一个1.txt文件，接下来在rm删除，最后输出success。</p>\n<blockquote>\n<p>||</p>\n</blockquote>\n<p>语法：command1 || command2 [|| command3] …<br>命令之间使用 || 连接，实现逻辑<font color=\"red\" size=\"5\">或</font>的功能，只有左边的命令执行失败，后面命令才继续执行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">las || echo &quot;无命令&quot;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>解决多命令command1，command1，command1…。</p>\n          </div>","more":"<hr>\n\n<p>学习以下多命令一起执行：&amp;、&amp;&amp;、；、||。</p>\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><p>🌟🌟🌟🌟🌟</p>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><blockquote>\n<p>;</p>\n</blockquote>\n<p>语法：command1 ; command2 [; command3] …<br>不管前面命令执行成功没有，后面的命令按顺序继续执行。</p>\n<blockquote>\n<p>&amp;</p>\n</blockquote>\n<p>语法：command1 &amp; command2 [&amp; command3] …<br>多命令同时执行，互不影响。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls &amp; ll &amp; ls</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>&amp;&amp;</p>\n</blockquote>\n<p>语法：command1 &amp;&amp; command2 [&amp;&amp; command3] …<br>命令之间使用 &amp;&amp; 连接，实现逻辑<font color=\"red\" size=\"5\">与</font>的功能，只有左边的命令执行成功，后面命令才继续执行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch 1.txt &amp;&amp; rm ~/Desktop/1.txt &amp;&amp; echo &quot;rm success&quot;</span><br></pre></td></tr></table></figure></p>\n<p>先touch一个1.txt文件，接下来在rm删除，最后输出success。</p>\n<blockquote>\n<p>||</p>\n</blockquote>\n<p>语法：command1 || command2 [|| command3] …<br>命令之间使用 || 连接，实现逻辑<font color=\"red\" size=\"5\">或</font>的功能，只有左边的命令执行失败，后面命令才继续执行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">las || echo &quot;无命令&quot;</span><br></pre></td></tr></table></figure></p>"},{"title":"百词斩打卡","comments":0,"top":false,"desc":"利用百词斩APP分享的照片记录每日百词斩英语打卡","keywords":"百词斩, 生活, 学习, 英语, 记录, 回忆, 照片","abbrlink":58192,"date":"2019-05-24T02:12:04.000Z","updated":"2019-05-24T02:12:04.000Z","_content":"\n{% cq %}\n百词斩\n<font size=\"4\" color=\"red\">**打卡**</font>\n{% endcq%}\n\n<!--more-->\n\n<hr />\n\n#### 2019-05\n{% note success %}\n{% tabs 2019-05 %}\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190524daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190527daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190528daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190529daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190530daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-06\n{% note success %}\n{% tabs 2019-06 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"20190603daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190604daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190605daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190606daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"20190610daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190611daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190612daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190613daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190614daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"20190617daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190618daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190619daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190620daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190621daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190624daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190625daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190626daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190627daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190628daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-07\n{% note success %}\n{% tabs 2019-07 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"20190701daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190702daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190703daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190704daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190716daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190717daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190718daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190719daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190722daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190723daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190724daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190725daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190726daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第五周 -->\n{% gp 5-3 %}\n<img src=\"20190729daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190730daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190731daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-08\n{% note success %}\n{% tabs 2019-08 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190801daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190802daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"20180805daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190808daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190809daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"20190812daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190813daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190814daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190815daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190816daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n","source":"_posts/Live-百词斩打卡.md","raw":"---\ntitle: 百词斩打卡\ncomments: false\ncategories:\n  - [生活]\ntags: [英语学习, 生活]\ntop: false\ndesc: 利用百词斩APP分享的照片记录每日百词斩英语打卡\nkeywords: 百词斩, 生活, 学习, 英语, 记录, 回忆, 照片\nabbrlink: 58192\ndate: 2019-05-24 10:12:04\nupdated: 2019-05-24 10:12:04\n---\n\n{% cq %}\n百词斩\n<font size=\"4\" color=\"red\">**打卡**</font>\n{% endcq%}\n\n<!--more-->\n\n<hr />\n\n#### 2019-05\n{% note success %}\n{% tabs 2019-05 %}\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190524daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190527daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190528daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190529daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190530daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-06\n{% note success %}\n{% tabs 2019-06 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"20190603daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190604daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190605daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190606daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"20190610daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190611daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190612daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190613daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190614daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"20190617daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190618daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190619daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190620daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190621daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190624daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190625daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190626daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190627daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190628daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-07\n{% note success %}\n{% tabs 2019-07 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"20190701daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190702daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190703daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190704daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190716daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190717daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190718daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190719daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"20190722daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190723daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190724daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190725daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190726daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第五周 -->\n{% gp 5-3 %}\n<img src=\"20190729daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190730daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190731daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n#### 2019-08\n{% note success %}\n{% tabs 2019-08 %}\n<!-- tab 第一周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190801daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190802daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第二周 -->\n{% gp 5-3 %}\n<img src=\"20180805daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190808daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190809daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第三周 -->\n{% gp 5-3 %}\n<img src=\"20190812daka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"20190813daka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"20190814daka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"20190815daka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"20190816daka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n<!-- tab 第四周 -->\n{% gp 5-3 %}\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"/>\n<img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"/>\n<img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"/>\n{% endgp %}\n<!-- endtab -->\n{% endtabs %}\n{% endnote %}\n\n<hr />\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n","slug":"Live-百词斩打卡","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vb004xtabjg2u4a3pa","content":"<blockquote class=\"blockquote-center\"><p>百词斩</p>\n<font size=\"4\" color=\"red\"><strong>打卡</strong></font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"2019-05\"><a href=\"#2019-05\" class=\"headerlink\" title=\"2019-05\"></a>2019-05</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-05\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-05-1\">第三周</a></li><li class=\"tab\"><a href=\"#2019-05-2\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-05-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190524daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-05-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190527daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190528daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190529daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190530daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-06\"><a href=\"#2019-06\" class=\"headerlink\" title=\"2019-06\"></a>2019-06</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-06\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-06-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-06-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-06-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-06-4\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-06-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190603daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190604daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190605daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190606daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190610daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190611daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190612daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190613daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190614daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190617daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190618daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190619daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190620daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190621daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190624daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190625daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190626daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190627daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190628daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-07\"><a href=\"#2019-07\" class=\"headerlink\" title=\"2019-07\"></a>2019-07</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-07\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-07-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-07-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-07-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-07-4\">第四周</a></li><li class=\"tab\"><a href=\"#2019-07-5\">第五周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-07-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190701daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190702daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190703daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190704daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190716daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190717daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190718daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190719daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190722daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190723daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190724daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190725daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190726daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-5\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190729daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190730daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190731daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-08\"><a href=\"#2019-08\" class=\"headerlink\" title=\"2019-08\"></a>2019-08</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-08\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-08-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-08-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-08-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-08-4\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-08-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190801daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190802daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20180805daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190808daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190809daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190812daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190813daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190814daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190815daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190816daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>百词斩</p>\n<font size=\"4\" color=\"red\"><strong>打卡</strong></font></blockquote>","more":"<hr>\n\n<h4 id=\"2019-05\"><a href=\"#2019-05\" class=\"headerlink\" title=\"2019-05\"></a>2019-05</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-05\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-05-1\">第三周</a></li><li class=\"tab\"><a href=\"#2019-05-2\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-05-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190524daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-05-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190527daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190528daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190529daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190530daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-06\"><a href=\"#2019-06\" class=\"headerlink\" title=\"2019-06\"></a>2019-06</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-06\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-06-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-06-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-06-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-06-4\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-06-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190603daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190604daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190605daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190606daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190610daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190611daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190612daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190613daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190614daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190617daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190618daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190619daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190620daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190621daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-06-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190624daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190625daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190626daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190627daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190628daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-07\"><a href=\"#2019-07\" class=\"headerlink\" title=\"2019-07\"></a>2019-07</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-07\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-07-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-07-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-07-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-07-4\">第四周</a></li><li class=\"tab\"><a href=\"#2019-07-5\">第五周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-07-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190701daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190702daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190703daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190704daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190716daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190717daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190718daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190719daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190722daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190723daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190724daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190725daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190726daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-07-5\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190729daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190730daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190731daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<h4 id=\"2019-08\"><a href=\"#2019-08\" class=\"headerlink\" title=\"2019-08\"></a>2019-08</h4><div class=\"note success\">\n            <div class=\"tabs\" id=\"2019-08\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#2019-08-1\">第一周</a></li><li class=\"tab\"><a href=\"#2019-08-2\">第二周</a></li><li class=\"tab\"><a href=\"#2019-08-3\">第三周</a></li><li class=\"tab\"><a href=\"#2019-08-4\">第四周</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"2019-08-1\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190801daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190802daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-2\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20180805daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190808daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190809daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-3\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190812daka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"20190813daka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190814daka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190815daka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"20190816daka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div><div class=\"tab-pane\" id=\"2019-08-4\"><div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期一\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"undaka.jpg\" width=\"240\" alt=\"星期二\"></div></div><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期三\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期四\"></div><div class=\"group-picture-column\" style=\"width: 33.333333333333336%;\"><img src=\"undaka.jpg\" width=\"200\" alt=\"星期五\"></div></div></div></div></div></div></div>\n          </div>\n<hr>\n\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>"},{"title":"夏洛克·福尔摩斯","comments":0,"top":false,"abbrlink":25456,"date":"2019-05-06T05:58:32.000Z","updated":"2019-05-06T05:58:32.000Z","desc":"记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部烧脑连载电影之夏洛克·福尔摩斯","keywords":"影视说, 夏洛克·福尔摩斯, 烧脑剧, 电视剧, 影视, 影视欣赏","_content":"\n![](/images/article_xialuoke.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">《夏洛克·福尔摩斯》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n烧脑神剧，可谓是电视剧版本的名侦探柯南，哈哈，看过**《名侦探·柯南》**的人，应该都是知道柯南这个名字是福尔摩斯的作者，而且柯南最喜欢的人也是福尔摩斯。\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n主角：[***夏洛克·福尔摩斯（Sherlock·Holmes）***](https://baike.baidu.com/item/%E5%A4%8F%E6%B4%9B%E5%85%8B%C2%B7%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF/65994)\n\n> 主线剧情\n\n现在已经出到共分4季，每一季又分为3集，每集大约时长1h30min，我是在优酷上看的，并不是给优酷打广告，而且优酷独播。\n\n总结来说，**福尔摩斯**与好基友**约翰·H·华生**带你一点点揭开谜团。\n\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">烧脑</font>***\n***<font color=\"#dd0000\" size=\"5\">逻辑思维的理性</font>***\n\n> 建议\n\n不要跳进观看，会影响观看效果，一点点观看，你会觉得非常有意思。\n","source":"_posts/Movie-夏洛克·福尔摩斯.md","raw":"---\ntitle: 夏洛克·福尔摩斯\ncomments: false\ncategories:\n  - [影视说]\ntags: [电视剧, 烧脑剧]\ntop: false\nabbrlink: 25456\ndate: 2019-05-06 13:58:32\nupdated: 2019-05-06 13:58:32\ndesc: 记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部烧脑连载电影之夏洛克·福尔摩斯\nkeywords: 影视说, 夏洛克·福尔摩斯, 烧脑剧, 电视剧, 影视, 影视欣赏\n---\n\n![](/images/article_xialuoke.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">《夏洛克·福尔摩斯》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n烧脑神剧，可谓是电视剧版本的名侦探柯南，哈哈，看过**《名侦探·柯南》**的人，应该都是知道柯南这个名字是福尔摩斯的作者，而且柯南最喜欢的人也是福尔摩斯。\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n主角：[***夏洛克·福尔摩斯（Sherlock·Holmes）***](https://baike.baidu.com/item/%E5%A4%8F%E6%B4%9B%E5%85%8B%C2%B7%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF/65994)\n\n> 主线剧情\n\n现在已经出到共分4季，每一季又分为3集，每集大约时长1h30min，我是在优酷上看的，并不是给优酷打广告，而且优酷独播。\n\n总结来说，**福尔摩斯**与好基友**约翰·H·华生**带你一点点揭开谜团。\n\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">烧脑</font>***\n***<font color=\"#dd0000\" size=\"5\">逻辑思维的理性</font>***\n\n> 建议\n\n不要跳进观看，会影响观看效果，一点点观看，你会觉得非常有意思。\n","slug":"Movie-夏洛克·福尔摩斯","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vd0050tabj5z8689fc","content":"<p><img src=\"/images/article_xialuoke.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">《夏洛克·福尔摩斯》</div>\n\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>烧脑神剧，可谓是电视剧版本的名侦探柯南，哈哈，看过<strong>《名侦探·柯南》</strong>的人，应该都是知道柯南这个名字是福尔摩斯的作者，而且柯南最喜欢的人也是福尔摩斯。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>主角：<a href=\"https://baike.baidu.com/item/%E5%A4%8F%E6%B4%9B%E5%85%8B%C2%B7%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF/65994\" target=\"_blank\" rel=\"noopener\"><strong><em>夏洛克·福尔摩斯（Sherlock·Holmes）</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>现在已经出到共分4季，每一季又分为3集，每集大约时长1h30min，我是在优酷上看的，并不是给优酷打广告，而且优酷独播。</p>\n<p>总结来说，<strong>福尔摩斯</strong>与好基友<strong>约翰·H·华生</strong>带你一点点揭开谜团。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">烧脑</font></em></strong><br><strong><em><font color=\"#dd0000\" size=\"5\">逻辑思维的理性</font></em></strong></p>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<p>不要跳进观看，会影响观看效果，一点点观看，你会觉得非常有意思。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_xialuoke.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">《夏洛克·福尔摩斯》</div>","more":"<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>烧脑神剧，可谓是电视剧版本的名侦探柯南，哈哈，看过<strong>《名侦探·柯南》</strong>的人，应该都是知道柯南这个名字是福尔摩斯的作者，而且柯南最喜欢的人也是福尔摩斯。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>主角：<a href=\"https://baike.baidu.com/item/%E5%A4%8F%E6%B4%9B%E5%85%8B%C2%B7%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF/65994\" target=\"_blank\" rel=\"noopener\"><strong><em>夏洛克·福尔摩斯（Sherlock·Holmes）</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>现在已经出到共分4季，每一季又分为3集，每集大约时长1h30min，我是在优酷上看的，并不是给优酷打广告，而且优酷独播。</p>\n<p>总结来说，<strong>福尔摩斯</strong>与好基友<strong>约翰·H·华生</strong>带你一点点揭开谜团。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">烧脑</font></em></strong><br><strong><em><font color=\"#dd0000\" size=\"5\">逻辑思维的理性</font></em></strong></p>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<p>不要跳进观看，会影响观看效果，一点点观看，你会觉得非常有意思。</p>"},{"title":"我的英雄学院","comments":0,"desc":"记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部动漫我的英雄学院，好看的动漫","keywords":"影视说, 动漫, 我的英雄学院, 影视, 影视欣赏","abbrlink":16168,"date":"2019-04-01T15:10:49.000Z","updated":"2019-04-01T15:10:49.000Z","_content":"\n![](/images/article_wdyxxy.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">《我的英雄学院》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n喜欢**《火影忍者》、《海贼王》**等热血动漫的你，这个也是你的菜。\n{% endnote %}\n\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n主角：[***绿谷出久***](https://baike.baidu.com/item/%E7%BB%BF%E8%B0%B7%E5%87%BA%E4%B9%85/16302755)\n\n> 主线剧情\n\n动画版共分3季。\n- 第一季\n主角是一位没有\"个性\"的人【个性：说白了就是超能力】，机缘巧合相遇英雄欧尔麦特【最强王者】，获得***One For All*** 的力量，命运从此发生改变。少年通过自己的努力，获取英雄高校雄英高校英雄科资格。\n\n- 第二季\n主角成功进入了雄英高中入学，与英雄科1年A班的同学们一起在互相学习并进步。在这种情况下，主角在“体育祭”活动中崭露头角。\n\n- 第三季\n***观看中***\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">热血的青春</font>***\n","source":"_posts/Movie-我的英雄学院.md","raw":"---\ntitle: 我的英雄学院\ncomments: false\ndesc: 记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部动漫我的英雄学院，好看的动漫\ncategories:\n  - [影视说]\ntags: [动漫]\nkeywords: 影视说, 动漫, 我的英雄学院, 影视, 影视欣赏\nabbrlink: 16168\ndate: 2019-04-01 23:10:49\nupdated: 2019-04-01 23:10:49\n---\n\n![](/images/article_wdyxxy.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">《我的英雄学院》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n喜欢**《火影忍者》、《海贼王》**等热血动漫的你，这个也是你的菜。\n{% endnote %}\n\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n主角：[***绿谷出久***](https://baike.baidu.com/item/%E7%BB%BF%E8%B0%B7%E5%87%BA%E4%B9%85/16302755)\n\n> 主线剧情\n\n动画版共分3季。\n- 第一季\n主角是一位没有\"个性\"的人【个性：说白了就是超能力】，机缘巧合相遇英雄欧尔麦特【最强王者】，获得***One For All*** 的力量，命运从此发生改变。少年通过自己的努力，获取英雄高校雄英高校英雄科资格。\n\n- 第二季\n主角成功进入了雄英高中入学，与英雄科1年A班的同学们一起在互相学习并进步。在这种情况下，主角在“体育祭”活动中崭露头角。\n\n- 第三季\n***观看中***\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">热血的青春</font>***\n","slug":"Movie-我的英雄学院","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vf0052tabjbfoubnvs","content":"<p><img src=\"/images/article_wdyxxy.jpg\" alt></p>\n\n<div class=\"post_cus_note\">《我的英雄学院》</div>\n\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>喜欢<strong>《火影忍者》、《海贼王》</strong>等热血动漫的你，这个也是你的菜。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>主角：<a href=\"https://baike.baidu.com/item/%E7%BB%BF%E8%B0%B7%E5%87%BA%E4%B9%85/16302755\" target=\"_blank\" rel=\"noopener\"><strong><em>绿谷出久</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>动画版共分3季。</p>\n<ul>\n<li><p>第一季<br>主角是一位没有”个性”的人【个性：说白了就是超能力】，机缘巧合相遇英雄欧尔麦特【最强王者】，获得<strong><em>One For All</em></strong> 的力量，命运从此发生改变。少年通过自己的努力，获取英雄高校雄英高校英雄科资格。</p>\n</li>\n<li><p>第二季<br>主角成功进入了雄英高中入学，与英雄科1年A班的同学们一起在互相学习并进步。在这种情况下，主角在“体育祭”活动中崭露头角。</p>\n</li>\n<li><p>第三季<br><strong><em>观看中</em></strong></p>\n</li>\n</ul>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">热血的青春</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_wdyxxy.jpg\" alt></p>\n\n<div class=\"post_cus_note\">《我的英雄学院》</div>","more":"<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>喜欢<strong>《火影忍者》、《海贼王》</strong>等热血动漫的你，这个也是你的菜。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>主角：<a href=\"https://baike.baidu.com/item/%E7%BB%BF%E8%B0%B7%E5%87%BA%E4%B9%85/16302755\" target=\"_blank\" rel=\"noopener\"><strong><em>绿谷出久</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>动画版共分3季。</p>\n<ul>\n<li><p>第一季<br>主角是一位没有”个性”的人【个性：说白了就是超能力】，机缘巧合相遇英雄欧尔麦特【最强王者】，获得<strong><em>One For All</em></strong> 的力量，命运从此发生改变。少年通过自己的努力，获取英雄高校雄英高校英雄科资格。</p>\n</li>\n<li><p>第二季<br>主角成功进入了雄英高中入学，与英雄科1年A班的同学们一起在互相学习并进步。在这种情况下，主角在“体育祭”活动中崭露头角。</p>\n</li>\n<li><p>第三季<br><strong><em>观看中</em></strong></p>\n</li>\n</ul>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">热血的青春</font></em></strong></p>"},{"title":"北京西单抓娃娃心得篇","comments":0,"top":false,"abbrlink":8059,"date":"2019-08-05T02:48:37.000Z","updated":"2019-08-05T02:48:37.000Z","desc":"总结一下北京西单风云电动抓娃娃的心得体会","keywords":"生活, 抓娃娃, 北京, 西单","_content":"\n![](/images/article_zhuawawa_main.jpg)\n\n{% cq %}\n<font color='red' size=5.0>本篇文章讲述作者本人总结的抓娃娃技巧</font>\n<font color='blue' size=4.0>不光只会敲代码的工程师</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n相信生活中大部分人都看过抓娃娃机，甚至不少人也尝试过，但结果一般都是差强人意。本人在北京上班，经常去西单的一个游戏风云娱乐去抓娃娃，也总结了一些经验，写出来与大家进行***Share***。\n\n#### 地点\n\n北京西单新一代商城7层\n无直梯，需要一层层电梯上去\n\n#### 时间\n\n周一 ～ 周日\n10:00 ～ 22:00\n\n#### 简介\n\n这家娱乐地，我并不是为了给这家打广告，而且单纯的觉得这家真的好玩，里面抓娃娃机有不同种的，娃娃更是大小不一样，五花八门，还有跳舞机、篮球机等等，最重要的还有拳皇97、98，相信很多人都有着美好的回忆，而且还经常能遇到***cosplay***。\n\n#### 价格\n\n通过扫码进行网购，反正就是买的多赠送的也多。\n\n![](jiage.png)\n\n#### 技巧\n\n我的抓娃娃技巧都是基于这家练出来的，总结一下：\n\n- 先观察爪子的松紧程度，看别人再决定是否进行抓取，紧的通常抓出来的概率大一些。\n\n- 娃娃的摆放位置，最好选那些靠近出口的，周围又没有阻挡的娃娃，近边的娃娃通常会比远边的娃娃更容易出来。\n\n- 等娃娃机秒数结束，让爪子自然下落，爪子抓到娃娃以后按住，按住会比按一下抓得更紧一些，出来的概率大。\n\n- 抓娃娃的爪子有的时候可以靠摇晃的惯性把娃娃甩出来，有时间需要平稳的爪子取抓取，这种属于难一些的操作，看情况而定，如果不知道怎么选择，建议选择平稳的爪子去抓取娃娃。\n\n- 根据娃娃的形状进行抓取，尽量让爪子抓到娃娃的<font color='red' size=4.0>重心</font>、<font color='red' size=5>重心</font>、<font color='red' size=6.0>重心</font>，看好了。【头大抓身】\n\n- 还可以根据娃娃的材质柔软程度进行抓取，软的相对于硬材质的娃娃好抓，不止轻，抓到了还变形，出来的概率大。\n\n- 还有一种情况，就是尽量选择满的娃娃机，有可能让娃娃抓起在滚落下来，也不失为一种方法。\n\n\n#### 特别说明\n\n下面说的这几条都是非常重要的，也是针对于西单这家，掌握了你将会抓的更多：\n{% note danger %}\n\n- <font color='blue' size=4.2>娃娃机挡板有2个方向，多抓挡板右侧的，不要抓上侧的，右侧出来的概率远远大于上侧的。</font>\n\n- <font color='blue' size=4.2>如果特别喜欢哪个，可以让服务人员帮忙摆一下，摆完之后抓取的概率也大大提高。</font>\n\n{% endnote %}\n\n#### 演示\n\n{% video /publicfiles/zhuawawa.mp4 %}\n","source":"_posts/Live-北京西单抓娃娃心得篇.md","raw":"---\ntitle: 北京西单抓娃娃心得篇\ncomments: false\ncategories:\n  - [生活]\ntags: [生活, 抓娃娃]\ntop: false\nabbrlink: 8059\ndate: 2019-08-05 10:48:37\nupdated: 2019-08-05 10:48:37\ndesc: 总结一下北京西单风云电动抓娃娃的心得体会\nkeywords: 生活, 抓娃娃, 北京, 西单\n---\n\n![](/images/article_zhuawawa_main.jpg)\n\n{% cq %}\n<font color='red' size=5.0>本篇文章讲述作者本人总结的抓娃娃技巧</font>\n<font color='blue' size=4.0>不光只会敲代码的工程师</font>\n{% endcq %}\n\n<!--more-->\n<hr />\n\n相信生活中大部分人都看过抓娃娃机，甚至不少人也尝试过，但结果一般都是差强人意。本人在北京上班，经常去西单的一个游戏风云娱乐去抓娃娃，也总结了一些经验，写出来与大家进行***Share***。\n\n#### 地点\n\n北京西单新一代商城7层\n无直梯，需要一层层电梯上去\n\n#### 时间\n\n周一 ～ 周日\n10:00 ～ 22:00\n\n#### 简介\n\n这家娱乐地，我并不是为了给这家打广告，而且单纯的觉得这家真的好玩，里面抓娃娃机有不同种的，娃娃更是大小不一样，五花八门，还有跳舞机、篮球机等等，最重要的还有拳皇97、98，相信很多人都有着美好的回忆，而且还经常能遇到***cosplay***。\n\n#### 价格\n\n通过扫码进行网购，反正就是买的多赠送的也多。\n\n![](jiage.png)\n\n#### 技巧\n\n我的抓娃娃技巧都是基于这家练出来的，总结一下：\n\n- 先观察爪子的松紧程度，看别人再决定是否进行抓取，紧的通常抓出来的概率大一些。\n\n- 娃娃的摆放位置，最好选那些靠近出口的，周围又没有阻挡的娃娃，近边的娃娃通常会比远边的娃娃更容易出来。\n\n- 等娃娃机秒数结束，让爪子自然下落，爪子抓到娃娃以后按住，按住会比按一下抓得更紧一些，出来的概率大。\n\n- 抓娃娃的爪子有的时候可以靠摇晃的惯性把娃娃甩出来，有时间需要平稳的爪子取抓取，这种属于难一些的操作，看情况而定，如果不知道怎么选择，建议选择平稳的爪子去抓取娃娃。\n\n- 根据娃娃的形状进行抓取，尽量让爪子抓到娃娃的<font color='red' size=4.0>重心</font>、<font color='red' size=5>重心</font>、<font color='red' size=6.0>重心</font>，看好了。【头大抓身】\n\n- 还可以根据娃娃的材质柔软程度进行抓取，软的相对于硬材质的娃娃好抓，不止轻，抓到了还变形，出来的概率大。\n\n- 还有一种情况，就是尽量选择满的娃娃机，有可能让娃娃抓起在滚落下来，也不失为一种方法。\n\n\n#### 特别说明\n\n下面说的这几条都是非常重要的，也是针对于西单这家，掌握了你将会抓的更多：\n{% note danger %}\n\n- <font color='blue' size=4.2>娃娃机挡板有2个方向，多抓挡板右侧的，不要抓上侧的，右侧出来的概率远远大于上侧的。</font>\n\n- <font color='blue' size=4.2>如果特别喜欢哪个，可以让服务人员帮忙摆一下，摆完之后抓取的概率也大大提高。</font>\n\n{% endnote %}\n\n#### 演示\n\n{% video /publicfiles/zhuawawa.mp4 %}\n","slug":"Live-北京西单抓娃娃心得篇","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vi0054tabj41gw5khw","content":"<p><img src=\"/images/article_zhuawawa_main.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font color=\"red\" size=\"5.0\">本篇文章讲述作者本人总结的抓娃娃技巧</font><br><font color=\"blue\" size=\"4.0\">不光只会敲代码的工程师</font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<p>相信生活中大部分人都看过抓娃娃机，甚至不少人也尝试过，但结果一般都是差强人意。本人在北京上班，经常去西单的一个游戏风云娱乐去抓娃娃，也总结了一些经验，写出来与大家进行<strong><em>Share</em></strong>。</p>\n<h4 id=\"地点\"><a href=\"#地点\" class=\"headerlink\" title=\"地点\"></a>地点</h4><p>北京西单新一代商城7层<br>无直梯，需要一层层电梯上去</p>\n<h4 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h4><p>周一 ～ 周日<br>10:00 ～ 22:00</p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>这家娱乐地，我并不是为了给这家打广告，而且单纯的觉得这家真的好玩，里面抓娃娃机有不同种的，娃娃更是大小不一样，五花八门，还有跳舞机、篮球机等等，最重要的还有拳皇97、98，相信很多人都有着美好的回忆，而且还经常能遇到<strong><em>cosplay</em></strong>。</p>\n<h4 id=\"价格\"><a href=\"#价格\" class=\"headerlink\" title=\"价格\"></a>价格</h4><p>通过扫码进行网购，反正就是买的多赠送的也多。</p>\n<p><img src=\"jiage.png\" alt></p>\n<h4 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h4><p>我的抓娃娃技巧都是基于这家练出来的，总结一下：</p>\n<ul>\n<li><p>先观察爪子的松紧程度，看别人再决定是否进行抓取，紧的通常抓出来的概率大一些。</p>\n</li>\n<li><p>娃娃的摆放位置，最好选那些靠近出口的，周围又没有阻挡的娃娃，近边的娃娃通常会比远边的娃娃更容易出来。</p>\n</li>\n<li><p>等娃娃机秒数结束，让爪子自然下落，爪子抓到娃娃以后按住，按住会比按一下抓得更紧一些，出来的概率大。</p>\n</li>\n<li><p>抓娃娃的爪子有的时候可以靠摇晃的惯性把娃娃甩出来，有时间需要平稳的爪子取抓取，这种属于难一些的操作，看情况而定，如果不知道怎么选择，建议选择平稳的爪子去抓取娃娃。</p>\n</li>\n<li><p>根据娃娃的形状进行抓取，尽量让爪子抓到娃娃的<font color=\"red\" size=\"4.0\">重心</font>、<font color=\"red\" size=\"5\">重心</font>、<font color=\"red\" size=\"6.0\">重心</font>，看好了。【头大抓身】</p>\n</li>\n<li><p>还可以根据娃娃的材质柔软程度进行抓取，软的相对于硬材质的娃娃好抓，不止轻，抓到了还变形，出来的概率大。</p>\n</li>\n<li><p>还有一种情况，就是尽量选择满的娃娃机，有可能让娃娃抓起在滚落下来，也不失为一种方法。</p>\n</li>\n</ul>\n<h4 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h4><p>下面说的这几条都是非常重要的，也是针对于西单这家，掌握了你将会抓的更多：<br><div class=\"note danger\">\n            <ul><li><font color=\"blue\" size=\"4.2\">娃娃机挡板有2个方向，多抓挡板右侧的，不要抓上侧的，右侧出来的概率远远大于上侧的。</font></li><li><font color=\"blue\" size=\"4.2\">如果特别喜欢哪个，可以让服务人员帮忙摆一下，摆完之后抓取的概率也大大提高。</font></li></ul>\n          </div></p>\n<h4 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h4><video src=\"/publicfiles/zhuawawa.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_zhuawawa_main.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font color=\"red\" size=\"5.0\">本篇文章讲述作者本人总结的抓娃娃技巧</font><br><font color=\"blue\" size=\"4.0\">不光只会敲代码的工程师</font></blockquote>","more":"<hr>\n\n<p>相信生活中大部分人都看过抓娃娃机，甚至不少人也尝试过，但结果一般都是差强人意。本人在北京上班，经常去西单的一个游戏风云娱乐去抓娃娃，也总结了一些经验，写出来与大家进行<strong><em>Share</em></strong>。</p>\n<h4 id=\"地点\"><a href=\"#地点\" class=\"headerlink\" title=\"地点\"></a>地点</h4><p>北京西单新一代商城7层<br>无直梯，需要一层层电梯上去</p>\n<h4 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h4><p>周一 ～ 周日<br>10:00 ～ 22:00</p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>这家娱乐地，我并不是为了给这家打广告，而且单纯的觉得这家真的好玩，里面抓娃娃机有不同种的，娃娃更是大小不一样，五花八门，还有跳舞机、篮球机等等，最重要的还有拳皇97、98，相信很多人都有着美好的回忆，而且还经常能遇到<strong><em>cosplay</em></strong>。</p>\n<h4 id=\"价格\"><a href=\"#价格\" class=\"headerlink\" title=\"价格\"></a>价格</h4><p>通过扫码进行网购，反正就是买的多赠送的也多。</p>\n<p><img src=\"jiage.png\" alt></p>\n<h4 id=\"技巧\"><a href=\"#技巧\" class=\"headerlink\" title=\"技巧\"></a>技巧</h4><p>我的抓娃娃技巧都是基于这家练出来的，总结一下：</p>\n<ul>\n<li><p>先观察爪子的松紧程度，看别人再决定是否进行抓取，紧的通常抓出来的概率大一些。</p>\n</li>\n<li><p>娃娃的摆放位置，最好选那些靠近出口的，周围又没有阻挡的娃娃，近边的娃娃通常会比远边的娃娃更容易出来。</p>\n</li>\n<li><p>等娃娃机秒数结束，让爪子自然下落，爪子抓到娃娃以后按住，按住会比按一下抓得更紧一些，出来的概率大。</p>\n</li>\n<li><p>抓娃娃的爪子有的时候可以靠摇晃的惯性把娃娃甩出来，有时间需要平稳的爪子取抓取，这种属于难一些的操作，看情况而定，如果不知道怎么选择，建议选择平稳的爪子去抓取娃娃。</p>\n</li>\n<li><p>根据娃娃的形状进行抓取，尽量让爪子抓到娃娃的<font color=\"red\" size=\"4.0\">重心</font>、<font color=\"red\" size=\"5\">重心</font>、<font color=\"red\" size=\"6.0\">重心</font>，看好了。【头大抓身】</p>\n</li>\n<li><p>还可以根据娃娃的材质柔软程度进行抓取，软的相对于硬材质的娃娃好抓，不止轻，抓到了还变形，出来的概率大。</p>\n</li>\n<li><p>还有一种情况，就是尽量选择满的娃娃机，有可能让娃娃抓起在滚落下来，也不失为一种方法。</p>\n</li>\n</ul>\n<h4 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h4><p>下面说的这几条都是非常重要的，也是针对于西单这家，掌握了你将会抓的更多：<br><div class=\"note danger\">\n            <ul><li><font color=\"blue\" size=\"4.2\">娃娃机挡板有2个方向，多抓挡板右侧的，不要抓上侧的，右侧出来的概率远远大于上侧的。</font></li><li><font color=\"blue\" size=\"4.2\">如果特别喜欢哪个，可以让服务人员帮忙摆一下，摆完之后抓取的概率也大大提高。</font></li></ul>\n          </div></p>\n<h4 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h4><video src=\"/publicfiles/zhuawawa.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>"},{"title":"权力的游戏","desc":"记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部美国大片电视剧","comments":0,"keywords":"影视说, 电视剧, 美国大片, 权力的游戏, 影视, 影视欣赏","abbrlink":18454,"date":"2019-01-25T15:06:33.000Z","_content":"\n![](/images/article_quanlideyouxi.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">《权力的游戏》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n《权力的游戏》（***Game of Thrones***），是美国HBO电视网制作推出的一部中世纪史诗奇幻题材的电视剧。已上映共7季，第8季终章预计在今年2019年4月推出，很期待。\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n男主：[***琼恩·雪诺***](https://baike.baidu.com/item/%E5%9F%BA%E7%89%B9%C2%B7%E5%93%88%E7%81%B5%E9%A1%BF)\n女主：[***丹尼莉丝·坦格利安（龙妈）***](https://baike.baidu.com/item/%E8%89%BE%E7%B1%B3%E8%8E%89%E4%BA%9A%C2%B7%E5%85%8B%E6%8B%89%E5%85%8B)\n男二-小恶魔：[***提利昂·兰尼斯特***](https://baike.baidu.com/item/%E5%BD%BC%E7%89%B9%C2%B7%E4%B8%81%E6%8B%89%E5%9F%BA)\n女二-小恶魔姐姐：[***瑟曦·兰尼斯特·拜拉席恩***](https://baike.baidu.com/item/%E7%90%B3%E5%A8%9C%C2%B7%E6%B5%B7%E8%92%82)\n女二-小恶魔哥哥：[***詹姆·兰尼斯特***](https://baike.baidu.com/item/%E8%A9%B9%E5%A7%86%C2%B7%E5%85%B0%E5%B0%BC%E6%96%AF%E7%89%B9)\n女二-男主姐姐：[***珊莎·史塔克***](https://baike.baidu.com/item/%E9%BA%A6%E8%8C%9C%C2%B7%E5%A8%81%E5%BB%89%E5%A7%86%E6%96%AF)\n女二-男主妹妹：[***艾莉亚·史塔克***](https://baike.baidu.com/item/%E8%89%BE%E8%8E%89%E4%BA%9A%C2%B7%E5%8F%B2%E5%A1%94%E5%85%8B)\n男二-男主弟弟：[***布尼·史塔克***](https://baike.baidu.com/item/%E4%BC%8A%E8%90%A8%E5%85%8B%C2%B7%E4%BA%A8%E6%99%AE%E6%96%AF%E7%89%B9%E5%BE%B7-%E6%80%80%E7%89%B9/6068574?fromtitle=%E8%89%BE%E8%90%A8%E5%85%8B%C2%B7%E8%B5%AB%E6%99%AE%E6%96%AF%E6%88%B4%E5%BE%B7-%E6%80%80%E7%89%B9&fromid=1811482)\n\n> 主线剧情\n\n本篇核心内容如大片名称一样，主要讲述七大国权力之间的争斗，按我的理解，剧中主要有2大主线。\n- ***男主对抗异鬼***\n男主出生在史塔克家族（北境之王），是一位私生子（未婚先出生的孩子）。年年轻轻就到北境边界长城守护七大国的安全，免受野人与异鬼的侵袭。同时，史塔克家族遭遇衰败。这条主线主要讲述男主、男主姐姐、男主弟弟、男主妹妹各自的成长，最终走到一起对抗异鬼（可以理解成boss）以及复兴家族崛起的线路。\n- ***女主统治七国***\n女主是前任国王的子嗣，踏上复兴坦格利安家族的重任。现任国家由小恶魔兰尼斯特家族所统治，民不聊生。机缘巧合，女主获得3条龙（那个年代龙已经绝技），被称为龙妈。龙妈、小恶魔以及手下猛将与小恶魔哥哥、小恶魔姐姐对抗的故事。\n\n最终的男主、女主以及小恶魔姐姐暂时放下眼前的争斗，联手对抗异鬼。第8季还没出，但是依据故事情节推断，就是人类展示异鬼，以及男主、女主联合与战胜小恶魔姐姐取得胜利。\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">政治的黑暗以及人真正的本性！！！</font>***\n","source":"_posts/Movie-权力的游戏.md","raw":"---\ntitle: 权力的游戏\ncategories:\n  - [影视说]\ntags: [电视剧, 美国大片]\ndesc: 记录一些观看过的影片，有电影、电视剧、动漫，本篇为权力的游戏，一部美国大片电视剧\ncomments: false\nkeywords: 影视说, 电视剧, 美国大片, 权力的游戏, 影视, 影视欣赏\nabbrlink: 18454\ndate: 2019-01-25 23:06:33\n---\n\n![](/images/article_quanlideyouxi.jpg)\n\n{% raw %}\n<div class=\"post_cus_note\">《权力的游戏》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n《权力的游戏》（***Game of Thrones***），是美国HBO电视网制作推出的一部中世纪史诗奇幻题材的电视剧。已上映共7季，第8季终章预计在今年2019年4月推出，很期待。\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n男主：[***琼恩·雪诺***](https://baike.baidu.com/item/%E5%9F%BA%E7%89%B9%C2%B7%E5%93%88%E7%81%B5%E9%A1%BF)\n女主：[***丹尼莉丝·坦格利安（龙妈）***](https://baike.baidu.com/item/%E8%89%BE%E7%B1%B3%E8%8E%89%E4%BA%9A%C2%B7%E5%85%8B%E6%8B%89%E5%85%8B)\n男二-小恶魔：[***提利昂·兰尼斯特***](https://baike.baidu.com/item/%E5%BD%BC%E7%89%B9%C2%B7%E4%B8%81%E6%8B%89%E5%9F%BA)\n女二-小恶魔姐姐：[***瑟曦·兰尼斯特·拜拉席恩***](https://baike.baidu.com/item/%E7%90%B3%E5%A8%9C%C2%B7%E6%B5%B7%E8%92%82)\n女二-小恶魔哥哥：[***詹姆·兰尼斯特***](https://baike.baidu.com/item/%E8%A9%B9%E5%A7%86%C2%B7%E5%85%B0%E5%B0%BC%E6%96%AF%E7%89%B9)\n女二-男主姐姐：[***珊莎·史塔克***](https://baike.baidu.com/item/%E9%BA%A6%E8%8C%9C%C2%B7%E5%A8%81%E5%BB%89%E5%A7%86%E6%96%AF)\n女二-男主妹妹：[***艾莉亚·史塔克***](https://baike.baidu.com/item/%E8%89%BE%E8%8E%89%E4%BA%9A%C2%B7%E5%8F%B2%E5%A1%94%E5%85%8B)\n男二-男主弟弟：[***布尼·史塔克***](https://baike.baidu.com/item/%E4%BC%8A%E8%90%A8%E5%85%8B%C2%B7%E4%BA%A8%E6%99%AE%E6%96%AF%E7%89%B9%E5%BE%B7-%E6%80%80%E7%89%B9/6068574?fromtitle=%E8%89%BE%E8%90%A8%E5%85%8B%C2%B7%E8%B5%AB%E6%99%AE%E6%96%AF%E6%88%B4%E5%BE%B7-%E6%80%80%E7%89%B9&fromid=1811482)\n\n> 主线剧情\n\n本篇核心内容如大片名称一样，主要讲述七大国权力之间的争斗，按我的理解，剧中主要有2大主线。\n- ***男主对抗异鬼***\n男主出生在史塔克家族（北境之王），是一位私生子（未婚先出生的孩子）。年年轻轻就到北境边界长城守护七大国的安全，免受野人与异鬼的侵袭。同时，史塔克家族遭遇衰败。这条主线主要讲述男主、男主姐姐、男主弟弟、男主妹妹各自的成长，最终走到一起对抗异鬼（可以理解成boss）以及复兴家族崛起的线路。\n- ***女主统治七国***\n女主是前任国王的子嗣，踏上复兴坦格利安家族的重任。现任国家由小恶魔兰尼斯特家族所统治，民不聊生。机缘巧合，女主获得3条龙（那个年代龙已经绝技），被称为龙妈。龙妈、小恶魔以及手下猛将与小恶魔哥哥、小恶魔姐姐对抗的故事。\n\n最终的男主、女主以及小恶魔姐姐暂时放下眼前的争斗，联手对抗异鬼。第8季还没出，但是依据故事情节推断，就是人类展示异鬼，以及男主、女主联合与战胜小恶魔姐姐取得胜利。\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">政治的黑暗以及人真正的本性！！！</font>***\n","slug":"Movie-权力的游戏","published":1,"updated":"2020-03-14T06:26:12.546Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2vk0056tabj67k9podt","content":"<p><img src=\"/images/article_quanlideyouxi.jpg\" alt></p>\n\n<div class=\"post_cus_note\">《权力的游戏》</div>\n\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>《权力的游戏》（<strong><em>Game of Thrones</em></strong>），是美国HBO电视网制作推出的一部中世纪史诗奇幻题材的电视剧。已上映共7季，第8季终章预计在今年2019年4月推出，很期待。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>男主：<a href=\"https://baike.baidu.com/item/%E5%9F%BA%E7%89%B9%C2%B7%E5%93%88%E7%81%B5%E9%A1%BF\" target=\"_blank\" rel=\"noopener\"><strong><em>琼恩·雪诺</em></strong></a><br>女主：<a href=\"https://baike.baidu.com/item/%E8%89%BE%E7%B1%B3%E8%8E%89%E4%BA%9A%C2%B7%E5%85%8B%E6%8B%89%E5%85%8B\" target=\"_blank\" rel=\"noopener\"><strong><em>丹尼莉丝·坦格利安（龙妈）</em></strong></a><br>男二-小恶魔：<a href=\"https://baike.baidu.com/item/%E5%BD%BC%E7%89%B9%C2%B7%E4%B8%81%E6%8B%89%E5%9F%BA\" target=\"_blank\" rel=\"noopener\"><strong><em>提利昂·兰尼斯特</em></strong></a><br>女二-小恶魔姐姐：<a href=\"https://baike.baidu.com/item/%E7%90%B3%E5%A8%9C%C2%B7%E6%B5%B7%E8%92%82\" target=\"_blank\" rel=\"noopener\"><strong><em>瑟曦·兰尼斯特·拜拉席恩</em></strong></a><br>女二-小恶魔哥哥：<a href=\"https://baike.baidu.com/item/%E8%A9%B9%E5%A7%86%C2%B7%E5%85%B0%E5%B0%BC%E6%96%AF%E7%89%B9\" target=\"_blank\" rel=\"noopener\"><strong><em>詹姆·兰尼斯特</em></strong></a><br>女二-男主姐姐：<a href=\"https://baike.baidu.com/item/%E9%BA%A6%E8%8C%9C%C2%B7%E5%A8%81%E5%BB%89%E5%A7%86%E6%96%AF\" target=\"_blank\" rel=\"noopener\"><strong><em>珊莎·史塔克</em></strong></a><br>女二-男主妹妹：<a href=\"https://baike.baidu.com/item/%E8%89%BE%E8%8E%89%E4%BA%9A%C2%B7%E5%8F%B2%E5%A1%94%E5%85%8B\" target=\"_blank\" rel=\"noopener\"><strong><em>艾莉亚·史塔克</em></strong></a><br>男二-男主弟弟：<a href=\"https://baike.baidu.com/item/%E4%BC%8A%E8%90%A8%E5%85%8B%C2%B7%E4%BA%A8%E6%99%AE%E6%96%AF%E7%89%B9%E5%BE%B7-%E6%80%80%E7%89%B9/6068574?fromtitle=%E8%89%BE%E8%90%A8%E5%85%8B%C2%B7%E8%B5%AB%E6%99%AE%E6%96%AF%E6%88%B4%E5%BE%B7-%E6%80%80%E7%89%B9&amp;fromid=1811482\" target=\"_blank\" rel=\"noopener\"><strong><em>布尼·史塔克</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>本篇核心内容如大片名称一样，主要讲述七大国权力之间的争斗，按我的理解，剧中主要有2大主线。</p>\n<ul>\n<li><strong><em>男主对抗异鬼</em></strong><br>男主出生在史塔克家族（北境之王），是一位私生子（未婚先出生的孩子）。年年轻轻就到北境边界长城守护七大国的安全，免受野人与异鬼的侵袭。同时，史塔克家族遭遇衰败。这条主线主要讲述男主、男主姐姐、男主弟弟、男主妹妹各自的成长，最终走到一起对抗异鬼（可以理解成boss）以及复兴家族崛起的线路。</li>\n<li><strong><em>女主统治七国</em></strong><br>女主是前任国王的子嗣，踏上复兴坦格利安家族的重任。现任国家由小恶魔兰尼斯特家族所统治，民不聊生。机缘巧合，女主获得3条龙（那个年代龙已经绝技），被称为龙妈。龙妈、小恶魔以及手下猛将与小恶魔哥哥、小恶魔姐姐对抗的故事。</li>\n</ul>\n<p>最终的男主、女主以及小恶魔姐姐暂时放下眼前的争斗，联手对抗异鬼。第8季还没出，但是依据故事情节推断，就是人类展示异鬼，以及男主、女主联合与战胜小恶魔姐姐取得胜利。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">政治的黑暗以及人真正的本性！！！</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_quanlideyouxi.jpg\" alt></p>\n\n<div class=\"post_cus_note\">《权力的游戏》</div>","more":"<hr>\n\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"red\"><strong>简介</strong></font><br>《权力的游戏》（<strong><em>Game of Thrones</em></strong>），是美国HBO电视网制作推出的一部中世纪史诗奇幻题材的电视剧。已上映共7季，第8季终章预计在今年2019年4月推出，很期待。</p>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>男主：<a href=\"https://baike.baidu.com/item/%E5%9F%BA%E7%89%B9%C2%B7%E5%93%88%E7%81%B5%E9%A1%BF\" target=\"_blank\" rel=\"noopener\"><strong><em>琼恩·雪诺</em></strong></a><br>女主：<a href=\"https://baike.baidu.com/item/%E8%89%BE%E7%B1%B3%E8%8E%89%E4%BA%9A%C2%B7%E5%85%8B%E6%8B%89%E5%85%8B\" target=\"_blank\" rel=\"noopener\"><strong><em>丹尼莉丝·坦格利安（龙妈）</em></strong></a><br>男二-小恶魔：<a href=\"https://baike.baidu.com/item/%E5%BD%BC%E7%89%B9%C2%B7%E4%B8%81%E6%8B%89%E5%9F%BA\" target=\"_blank\" rel=\"noopener\"><strong><em>提利昂·兰尼斯特</em></strong></a><br>女二-小恶魔姐姐：<a href=\"https://baike.baidu.com/item/%E7%90%B3%E5%A8%9C%C2%B7%E6%B5%B7%E8%92%82\" target=\"_blank\" rel=\"noopener\"><strong><em>瑟曦·兰尼斯特·拜拉席恩</em></strong></a><br>女二-小恶魔哥哥：<a href=\"https://baike.baidu.com/item/%E8%A9%B9%E5%A7%86%C2%B7%E5%85%B0%E5%B0%BC%E6%96%AF%E7%89%B9\" target=\"_blank\" rel=\"noopener\"><strong><em>詹姆·兰尼斯特</em></strong></a><br>女二-男主姐姐：<a href=\"https://baike.baidu.com/item/%E9%BA%A6%E8%8C%9C%C2%B7%E5%A8%81%E5%BB%89%E5%A7%86%E6%96%AF\" target=\"_blank\" rel=\"noopener\"><strong><em>珊莎·史塔克</em></strong></a><br>女二-男主妹妹：<a href=\"https://baike.baidu.com/item/%E8%89%BE%E8%8E%89%E4%BA%9A%C2%B7%E5%8F%B2%E5%A1%94%E5%85%8B\" target=\"_blank\" rel=\"noopener\"><strong><em>艾莉亚·史塔克</em></strong></a><br>男二-男主弟弟：<a href=\"https://baike.baidu.com/item/%E4%BC%8A%E8%90%A8%E5%85%8B%C2%B7%E4%BA%A8%E6%99%AE%E6%96%AF%E7%89%B9%E5%BE%B7-%E6%80%80%E7%89%B9/6068574?fromtitle=%E8%89%BE%E8%90%A8%E5%85%8B%C2%B7%E8%B5%AB%E6%99%AE%E6%96%AF%E6%88%B4%E5%BE%B7-%E6%80%80%E7%89%B9&amp;fromid=1811482\" target=\"_blank\" rel=\"noopener\"><strong><em>布尼·史塔克</em></strong></a></p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>本篇核心内容如大片名称一样，主要讲述七大国权力之间的争斗，按我的理解，剧中主要有2大主线。</p>\n<ul>\n<li><strong><em>男主对抗异鬼</em></strong><br>男主出生在史塔克家族（北境之王），是一位私生子（未婚先出生的孩子）。年年轻轻就到北境边界长城守护七大国的安全，免受野人与异鬼的侵袭。同时，史塔克家族遭遇衰败。这条主线主要讲述男主、男主姐姐、男主弟弟、男主妹妹各自的成长，最终走到一起对抗异鬼（可以理解成boss）以及复兴家族崛起的线路。</li>\n<li><strong><em>女主统治七国</em></strong><br>女主是前任国王的子嗣，踏上复兴坦格利安家族的重任。现任国家由小恶魔兰尼斯特家族所统治，民不聊生。机缘巧合，女主获得3条龙（那个年代龙已经绝技），被称为龙妈。龙妈、小恶魔以及手下猛将与小恶魔哥哥、小恶魔姐姐对抗的故事。</li>\n</ul>\n<p>最终的男主、女主以及小恶魔姐姐暂时放下眼前的争斗，联手对抗异鬼。第8季还没出，但是依据故事情节推断，就是人类展示异鬼，以及男主、女主联合与战胜小恶魔姐姐取得胜利。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">政治的黑暗以及人真正的本性！！！</font></em></strong></p>"},{"title":"行尸走肉","comments":0,"top":false,"abbrlink":21862,"date":"2020-01-09T03:19:04.000Z","updated":"2020-01-09T03:19:04.000Z","desc":"关于《行尸走肉》的推荐说明","keywords":"影视说, 电视剧, 美国大片, 行尸走肉, 影视, 影视欣赏","_content":"\n![](/images/article_xingshizourou.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">《行尸走肉》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n《行尸走肉》（The walking dead），是一部美国恐怖电视系列剧，改编自同名漫画，始于2010年10月31日在AMC有线电视网开播，是电视史上第一部正宗的丧尸电视剧。\n<font color=\"red\" size=\"5\">如果你喜欢丧尸剧，那么这个绝对是你的菜！！！</font>\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n男主（前八季）：[***瑞克·格莱姆斯***](https://baike.baidu.com/item/%E7%91%9E%E5%85%8B%C2%B7%E6%A0%BC%E8%8E%B1%E5%A7%86%E6%96%AF)\n男二：[***达里尔·迪克森(弩哥)***](https://baike.baidu.com/item/%E8%BE%BE%E9%87%8C%E5%B0%94%C2%B7%E8%BF%AA%E5%85%8B%E6%A3%AE/22218077?fromtitle=%E8%BE%BE%E9%87%8C%E5%B0%94&fromid=16985070)\n女二：[***卡萝尔(卡妈)***](https://baike.baidu.com/item/%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7/16413532?fromtitle=%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E8%8B%8F%E5%A7%97%E5%A6%AE%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7&fromid=16282064)\n男主（8、9、10季）：[***Negan(尼根)***](https://baike.baidu.com/item/%E6%9D%B0%E5%BC%97%E9%87%8C%C2%B7%E8%BF%AA%E6%81%A9%C2%B7%E6%91%A9%E6%A0%B9)\n\n人物实在是太多了，这里只列举了我比较喜欢的几个人。\n\n> 主线剧情\n\n世界突然变成充满丧尸的世界，但是人必须需要活下去，由瑞克带领的团队与***丧尸、总督、食人族、低语者***等等一系列团队进行斗争。\n前几季丧尸比较牛逼的，后来全都是人与人之间的争斗。\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">如果我是瑞克，我该怎么做？真是人性的考验！！！</font>***\n","source":"_posts/Movie-行尸走肉.md","raw":"---\ntitle: 行尸走肉\ncomments: false\ncategories:\n  - [影视说]\ntags: [电视剧, 美国大片]\ntop: false\nabbrlink: 21862\ndate: 2020-01-09 11:19:04\nupdated: 2020-01-09 11:19:04\ndesc: 关于《行尸走肉》的推荐说明\nkeywords: 影视说, 电视剧, 美国大片, 行尸走肉, 影视, 影视欣赏\n---\n\n![](/images/article_xingshizourou.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">《行尸走肉》</div>\n{% endraw %}\n\n<!-- more -->\n<hr />\n\n{% note success %}\n<font size=\"4\" color=\"red\">**简介**</font>\n《行尸走肉》（The walking dead），是一部美国恐怖电视系列剧，改编自同名漫画，始于2010年10月31日在AMC有线电视网开播，是电视史上第一部正宗的丧尸电视剧。\n<font color=\"red\" size=\"5\">如果你喜欢丧尸剧，那么这个绝对是你的菜！！！</font>\n{% endnote %}\n\n> 推荐指数\n\n    ⭐️⭐️⭐️⭐️⭐️\n\n> 人物角色\n\n男主（前八季）：[***瑞克·格莱姆斯***](https://baike.baidu.com/item/%E7%91%9E%E5%85%8B%C2%B7%E6%A0%BC%E8%8E%B1%E5%A7%86%E6%96%AF)\n男二：[***达里尔·迪克森(弩哥)***](https://baike.baidu.com/item/%E8%BE%BE%E9%87%8C%E5%B0%94%C2%B7%E8%BF%AA%E5%85%8B%E6%A3%AE/22218077?fromtitle=%E8%BE%BE%E9%87%8C%E5%B0%94&fromid=16985070)\n女二：[***卡萝尔(卡妈)***](https://baike.baidu.com/item/%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7/16413532?fromtitle=%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E8%8B%8F%E5%A7%97%E5%A6%AE%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7&fromid=16282064)\n男主（8、9、10季）：[***Negan(尼根)***](https://baike.baidu.com/item/%E6%9D%B0%E5%BC%97%E9%87%8C%C2%B7%E8%BF%AA%E6%81%A9%C2%B7%E6%91%A9%E6%A0%B9)\n\n人物实在是太多了，这里只列举了我比较喜欢的几个人。\n\n> 主线剧情\n\n世界突然变成充满丧尸的世界，但是人必须需要活下去，由瑞克带领的团队与***丧尸、总督、食人族、低语者***等等一系列团队进行斗争。\n前几季丧尸比较牛逼的，后来全都是人与人之间的争斗。\n\n> 观后感\n\n***<font color=\"#dd0000\" size=\"5\">如果我是瑞克，我该怎么做？真是人性的考验！！！</font>***\n","slug":"Movie-行尸走肉","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vr0059tabjwthe15uk","content":"<p><img src=\"/images/article_xingshizourou.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">《行尸走肉》</div>\n\n<a id=\"more\"></a>\n<hr>\n\n<div class=\"note success\">\n            <font size=\"4\" color=\"red\"><strong>简介</strong></font><br>《行尸走肉》（The walking dead），是一部美国恐怖电视系列剧，改编自同名漫画，始于2010年10月31日在AMC有线电视网开播，是电视史上第一部正宗的丧尸电视剧。<br><font color=\"red\" size=\"5\">如果你喜欢丧尸剧，那么这个绝对是你的菜！！！</font>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>男主（前八季）：<a href=\"https://baike.baidu.com/item/%E7%91%9E%E5%85%8B%C2%B7%E6%A0%BC%E8%8E%B1%E5%A7%86%E6%96%AF\" target=\"_blank\" rel=\"noopener\"><strong><em>瑞克·格莱姆斯</em></strong></a><br>男二：<a href=\"https://baike.baidu.com/item/%E8%BE%BE%E9%87%8C%E5%B0%94%C2%B7%E8%BF%AA%E5%85%8B%E6%A3%AE/22218077?fromtitle=%E8%BE%BE%E9%87%8C%E5%B0%94&amp;fromid=16985070\" target=\"_blank\" rel=\"noopener\"><strong><em>达里尔·迪克森(弩哥)</em></strong></a><br>女二：<a href=\"https://baike.baidu.com/item/%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7/16413532?fromtitle=%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E8%8B%8F%E5%A7%97%E5%A6%AE%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7&amp;fromid=16282064\" target=\"_blank\" rel=\"noopener\"><strong><em>卡萝尔(卡妈)</em></strong></a><br>男主（8、9、10季）：<a href=\"https://baike.baidu.com/item/%E6%9D%B0%E5%BC%97%E9%87%8C%C2%B7%E8%BF%AA%E6%81%A9%C2%B7%E6%91%A9%E6%A0%B9\" target=\"_blank\" rel=\"noopener\"><strong><em>Negan(尼根)</em></strong></a></p>\n<p>人物实在是太多了，这里只列举了我比较喜欢的几个人。</p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>世界突然变成充满丧尸的世界，但是人必须需要活下去，由瑞克带领的团队与<strong><em>丧尸、总督、食人族、低语者</em></strong>等等一系列团队进行斗争。<br>前几季丧尸比较牛逼的，后来全都是人与人之间的争斗。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">如果我是瑞克，我该怎么做？真是人性的考验！！！</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_xingshizourou.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">《行尸走肉》</div>","more":"<hr>\n\n<div class=\"note success\">\n            <font size=\"4\" color=\"red\"><strong>简介</strong></font><br>《行尸走肉》（The walking dead），是一部美国恐怖电视系列剧，改编自同名漫画，始于2010年10月31日在AMC有线电视网开播，是电视史上第一部正宗的丧尸电视剧。<br><font color=\"red\" size=\"5\">如果你喜欢丧尸剧，那么这个绝对是你的菜！！！</font>\n          </div>\n<blockquote>\n<p>推荐指数</p>\n</blockquote>\n<pre><code>⭐️⭐️⭐️⭐️⭐️\n</code></pre><blockquote>\n<p>人物角色</p>\n</blockquote>\n<p>男主（前八季）：<a href=\"https://baike.baidu.com/item/%E7%91%9E%E5%85%8B%C2%B7%E6%A0%BC%E8%8E%B1%E5%A7%86%E6%96%AF\" target=\"_blank\" rel=\"noopener\"><strong><em>瑞克·格莱姆斯</em></strong></a><br>男二：<a href=\"https://baike.baidu.com/item/%E8%BE%BE%E9%87%8C%E5%B0%94%C2%B7%E8%BF%AA%E5%85%8B%E6%A3%AE/22218077?fromtitle=%E8%BE%BE%E9%87%8C%E5%B0%94&amp;fromid=16985070\" target=\"_blank\" rel=\"noopener\"><strong><em>达里尔·迪克森(弩哥)</em></strong></a><br>女二：<a href=\"https://baike.baidu.com/item/%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7/16413532?fromtitle=%E6%A2%85%E4%B8%BD%E8%8E%8E%C2%B7%E8%8B%8F%E5%A7%97%E5%A6%AE%C2%B7%E9%BA%A6%E5%85%8B%E5%B8%83%E8%8E%B1%E5%BE%B7&amp;fromid=16282064\" target=\"_blank\" rel=\"noopener\"><strong><em>卡萝尔(卡妈)</em></strong></a><br>男主（8、9、10季）：<a href=\"https://baike.baidu.com/item/%E6%9D%B0%E5%BC%97%E9%87%8C%C2%B7%E8%BF%AA%E6%81%A9%C2%B7%E6%91%A9%E6%A0%B9\" target=\"_blank\" rel=\"noopener\"><strong><em>Negan(尼根)</em></strong></a></p>\n<p>人物实在是太多了，这里只列举了我比较喜欢的几个人。</p>\n<blockquote>\n<p>主线剧情</p>\n</blockquote>\n<p>世界突然变成充满丧尸的世界，但是人必须需要活下去，由瑞克带领的团队与<strong><em>丧尸、总督、食人族、低语者</em></strong>等等一系列团队进行斗争。<br>前几季丧尸比较牛逼的，后来全都是人与人之间的争斗。</p>\n<blockquote>\n<p>观后感</p>\n</blockquote>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">如果我是瑞克，我该怎么做？真是人性的考验！！！</font></em></strong></p>"},{"title":"Github热门的Python项目推荐","comments":0,"top":false,"abbrlink":12867,"date":"2019-12-27T02:27:58.000Z","updated":"2019-12-27T02:27:58.000Z","desc":"推荐几款Github上热门的Python项目：抢票神器、实时GPS接数处理程序","keywords":"Python, Github, 热门, 程序, 抢票神器、GPS","_content":"\n{% raw %}\n<div class=\"post_cus_note\">推荐几款Github上热门的Python项目</div>\n{% endraw %}\n\n![](/images/article_github.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n<!--more-->\n<hr />\n\n|        NAME         |                     URL                      |\n|:-------------------:|:--------------------------------------------:|\n|  抢票神器（web版）  |     https://github.com/pjialin/py12306/      |\n| 实时GPS接数处理程序 |  https://github.com/GIS90/realgpserver.git   |\n|      自由上网       |   https://github.com/Alvin9999/new-pac.git   |\n|      爬虫集合       | https://github.com/facert/awesome-spider.git |\n|      年会抽奖       |    https://github.com/fouber/lottery.git     |\n\n从事于Python语言开发。。。。。。\n","source":"_posts/Python-github项目推荐.md","raw":"---\ntitle: Github热门的Python项目推荐\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, Github]\ntop: false\nabbrlink: 12867\ndate: 2019-12-27 10:27:58\nupdated: 2019-12-27 10:27:58\ndesc: 推荐几款Github上热门的Python项目：抢票神器、实时GPS接数处理程序\nkeywords: Python, Github, 热门, 程序, 抢票神器、GPS\n---\n\n{% raw %}\n<div class=\"post_cus_note\">推荐几款Github上热门的Python项目</div>\n{% endraw %}\n\n![](/images/article_github.jpg)\n\n<font size=6.5 color='red'>持续更新中。。。。。。</font>\n\n<!--more-->\n<hr />\n\n|        NAME         |                     URL                      |\n|:-------------------:|:--------------------------------------------:|\n|  抢票神器（web版）  |     https://github.com/pjialin/py12306/      |\n| 实时GPS接数处理程序 |  https://github.com/GIS90/realgpserver.git   |\n|      自由上网       |   https://github.com/Alvin9999/new-pac.git   |\n|      爬虫集合       | https://github.com/facert/awesome-spider.git |\n|      年会抽奖       |    https://github.com/fouber/lottery.git     |\n\n从事于Python语言开发。。。。。。\n","slug":"Python-github项目推荐","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2vw005ctabjwijbsuao","content":"\n<div class=\"post_cus_note\">推荐几款Github上热门的Python项目</div>\n\n<p><img src=\"/images/article_github.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>\n\n<a id=\"more\"></a>\n<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">NAME</th>\n<th style=\"text-align:center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">抢票神器（web版）</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/pjialin/py12306/\" target=\"_blank\" rel=\"noopener\">https://github.com/pjialin/py12306/</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">实时GPS接数处理程序</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/GIS90/realgpserver.git\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/realgpserver.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自由上网</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/Alvin9999/new-pac.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Alvin9999/new-pac.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">爬虫集合</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/facert/awesome-spider.git\" target=\"_blank\" rel=\"noopener\">https://github.com/facert/awesome-spider.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">年会抽奖</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/fouber/lottery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/fouber/lottery.git</a></td>\n</tr>\n</tbody>\n</table>\n<p>从事于Python语言开发。。。。。。</p>\n","site":{"data":{}},"excerpt":"<div class=\"post_cus_note\">推荐几款Github上热门的Python项目</div>\n\n<p><img src=\"/images/article_github.jpg\" alt></p>\n<font size=\"6.5\" color=\"red\">持续更新中。。。。。。</font>","more":"<hr>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">NAME</th>\n<th style=\"text-align:center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">抢票神器（web版）</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/pjialin/py12306/\" target=\"_blank\" rel=\"noopener\">https://github.com/pjialin/py12306/</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">实时GPS接数处理程序</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/GIS90/realgpserver.git\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/realgpserver.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自由上网</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/Alvin9999/new-pac.git\" target=\"_blank\" rel=\"noopener\">https://github.com/Alvin9999/new-pac.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">爬虫集合</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/facert/awesome-spider.git\" target=\"_blank\" rel=\"noopener\">https://github.com/facert/awesome-spider.git</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">年会抽奖</td>\n<td style=\"text-align:center\"><a href=\"https://github.com/fouber/lottery.git\" target=\"_blank\" rel=\"noopener\">https://github.com/fouber/lottery.git</a></td>\n</tr>\n</tbody>\n</table>\n<p>从事于Python语言开发。。。。。。</p>"},{"title":"Python的for_break_else的坑","desc":"总结以下for_break_else语法糖在Python中使用的坑","comments":0,"keywords":"python, for, break, else, 语法, 语法糖","abbrlink":14093,"date":"2018-12-02T02:52:23.000Z","_content":"\n### 简介\n{% note primary %}\npython语法糖中for/while循环中else+break的使用，别让break坑你\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n​​​​​在python语法糖中，大家应该经常使用for/while...else，官方是这么解释循环中else的使用的：\n![引用官方原著引用官方原著](for_break_else_english.jpg)\n重要知识点是划线部分，大致意思for/while正常结束走else，break跳转循环是不走else的。下面就用例子强行解释一波👇（最简单的例子，别介意）：\n​先看个正常的：\n![正常for_else](for_else.jpg)\nbreak非正常结束for：​\n![正常for_else](for_break_else.jpg)\n可见，break可以引起for/while循环非正常结束​，经常使用for_else的小盆友，如果使用了break，一定要注意，本人就在使用中被坑了一把，调试了好久才知道。。。\n\n### 备注\n    官方地址：http://book.pythontips.com/en/latest/for_-_else.html​​​​​\n","source":"_posts/Python-for-break-else的坑.md","raw":"---\ntitle: Python的for_break_else的坑\ndesc: 总结以下for_break_else语法糖在Python中使用的坑\ncategories:\n  - [Python]\ntags: [Python, Python基础篇]\ncomments: false\nkeywords: python, for, break, else, 语法, 语法糖\nabbrlink: 14093\ndate: 2018-12-02 10:52:23\n---\n\n### 简介\n{% note primary %}\npython语法糖中for/while循环中else+break的使用，别让break坑你\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n​​​​​在python语法糖中，大家应该经常使用for/while...else，官方是这么解释循环中else的使用的：\n![引用官方原著引用官方原著](for_break_else_english.jpg)\n重要知识点是划线部分，大致意思for/while正常结束走else，break跳转循环是不走else的。下面就用例子强行解释一波👇（最简单的例子，别介意）：\n​先看个正常的：\n![正常for_else](for_else.jpg)\nbreak非正常结束for：​\n![正常for_else](for_break_else.jpg)\n可见，break可以引起for/while循环非正常结束​，经常使用for_else的小盆友，如果使用了break，一定要注意，本人就在使用中被坑了一把，调试了好久才知道。。。\n\n### 备注\n    官方地址：http://book.pythontips.com/en/latest/for_-_else.html​​​​​\n","slug":"Python-for-break-else的坑","published":1,"updated":"2019-12-26T01:10:12.350Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2w1005gtabjszl71ksm","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p>python语法糖中for/while循环中else+break的使用，别让break坑你</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>​​​​​在python语法糖中，大家应该经常使用for/while…else，官方是这么解释循环中else的使用的：<br><img src=\"for_break_else_english.jpg\" alt=\"引用官方原著引用官方原著\"><br>重要知识点是划线部分，大致意思for/while正常结束走else，break跳转循环是不走else的。下面就用例子强行解释一波👇（最简单的例子，别介意）：<br>​先看个正常的：<br><img src=\"for_else.jpg\" alt=\"正常for_else\"><br>break非正常结束for：​<br><img src=\"for_break_else.jpg\" alt=\"正常for_else\"><br>可见，break可以引起for/while循环非正常结束​，经常使用for_else的小盆友，如果使用了break，一定要注意，本人就在使用中被坑了一把，调试了好久才知道。。。</p>\n<h3 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h3><pre><code>官方地址：http://book.pythontips.com/en/latest/for_-_else.html​​​​​\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p>python语法糖中for/while循环中else+break的使用，别让break坑你</p>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>​​​​​在python语法糖中，大家应该经常使用for/while…else，官方是这么解释循环中else的使用的：<br><img src=\"for_break_else_english.jpg\" alt=\"引用官方原著引用官方原著\"><br>重要知识点是划线部分，大致意思for/while正常结束走else，break跳转循环是不走else的。下面就用例子强行解释一波👇（最简单的例子，别介意）：<br>​先看个正常的：<br><img src=\"for_else.jpg\" alt=\"正常for_else\"><br>break非正常结束for：​<br><img src=\"for_break_else.jpg\" alt=\"正常for_else\"><br>可见，break可以引起for/while循环非正常结束​，经常使用for_else的小盆友，如果使用了break，一定要注意，本人就在使用中被坑了一把，调试了好久才知道。。。</p>\n<h3 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h3><pre><code>官方地址：http://book.pythontips.com/en/latest/for_-_else.html​​​​​\n</code></pre>"},{"title":"Python之pip包管理","comments":0,"top":false,"abbrlink":22308,"date":"2017-12-24T02:58:52.000Z","updated":"2018-03-24T02:58:52.000Z","desc":"介绍一下关于pip的相关操作，pip主要用于python环境的包管理","keywords":"Python, Packages, pip, install, update, 安装, 包, 管理","_content":"\n![](/images/article_python.jpg)\n\n### 简介\n{% note primary %}\n{% code %}\npip is the package installer for Python.\nYou can use pip to install packages from the Python Package Index and other indexes.\n{% endcode %}\n官网说明：pip是Python包管理工具，主要用于包的查找、下载、安装、卸载的功能。\n当前版本：<font size=6.5 color='red'>V19.3.1</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 安装\n\n本人主要使用MacOX、Centos7系统，关于安装，这里介绍2种方式。\n\n> curl\n\n```\n# 下载安装脚本\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n\n# 运行安装脚本\nsudo python get-pip.py\n```\n\n> easy_install\n\n```\neasy_install pip\n```\n\n### 参数说明\n```\n[root@bash ~]# pip --help\n\nUsage:\n  pip <command> [options]\n\nCommands:\n  install                     Install packages.\n  download                    Download packages.\n  uninstall                   Uninstall packages.\n  freeze                      Output installed packages in requirements format.\n  list                        List installed packages.\n  show                        Show information about installed packages.\n  check                       Verify installed packages have compatible dependencies.\n  config                      Manage local and global configuration.\n  search                      Search PyPI for packages.\n  wheel                       Build wheels from your requirements.\n  hash                        Compute hashes of package archives.\n  completion                  A helper command used for command completion.\n  debug                       Show information useful for debugging.\n  help                        Show help for commands.\n\nGeneral Options:\n  -h, --help                  Show help.\n  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.\n  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.\n  -V, --version               Show version and exit.\n  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).\n  --log <path>                Path to a verbose appending log.\n  --proxy <proxy>             Specify a proxy in the form [user:passwd@]proxy.server:port.\n  --retries <retries>         Maximum number of retries each connection should attempt (default 3 times).\n  --timeout <sec>             Set the socket timeout (default 90.0 seconds).\n  --exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.\n  --trusted-host <hostname>   Mark this host as trusted, even though it does not have valid or any HTTPS.\n  --cert <path>               Path to alternate CA bundle.\n  --client-cert <path>        Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.\n  --cache-dir <dir>           Store the cache data in <dir>.\n  --no-cache-dir              Disable the cache.\n  --disable-pip-version-check\n                              Don't periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.\n  --no-color                  Suppress colored output\n```\n参数说明略，在下面有具体使用。\n\n### 基础使用\n\n基于上面的详细参数，列举一下常用的命令。\n\n#### 安装包\n\n> 基础安装\n\n使用此命令，默认安装源的最新版本。\n```\npip install numpy\n```\n\n> 安装指定版本\n\n```\npip install numpy==1.14.0\n```\n\n> 大于指定版本\n\n```\npip install numpy>=1.14.0\n```\n\n> requirements文件安装\n\nrequirements.txt为指定的路径文件。\n```\npip install -r requirements.txt\n```\n\n#### 卸载\n\n```\npip uninstall numpy\n```\n\n#### 升级包\n\n直接升级指定的包。\n\n```\npip install -U numpy\n\npip install --upgrade numpy\n```\n\n#### 查看已安装的包\n\n> 包==版本\n\n执行这个命令，可以获取项目能run的包相关信息，把这些信息直接写到***requirements.txt***文件，方便项目迁移以及在其他环境运行。\n```\n[root@bash ~]# pip freeze\n\nalembic==0.9.9\naltgraph==0.10.2\namqp==2.2.2\naniso8601==1.2.1\nanyjson==0.3.3\nappnope==0.1.0\nasn1crypto==0.24.0\naspy.yaml==1.1.1\n```\n\n> 包  版本\n\n```\n[root@bash ~]# pip list\n\nPackage                                Version\n-------------------------------------- -------------\nalembic                                0.9.9\naltgraph                               0.10.2\namqp                                   2.2.2\naniso8601                              1.2.1\nanyjson                                0.3.3\nappnope                                0.1.0\nasn1crypto                             0.24.0\naspy.yaml                              1.1.1\n```\n\n> 查看指定包信息\n\n```\n[root@bash ~]# pip show numpy\n\nName: numpy\nVersion: 1.8.0rc1\nSummary: NumPy: array processing for numbers, strings, records, and objects.\nHome-page: http://www.numpy.org\nAuthor: NumPy Developers\nAuthor-email: numpy-discussion@scipy.org\nLicense: BSD\nLocation: /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\nRequires:\nRequired-by: wordcloud, matplotlib\n```\n\n#### 搜索\n\n```\npip search numpy\n```\n\n#### 查看版本\n\n```\n[root@bash ~]# pip --version\n\npip 19.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7)\n```\n\n### 配置\n\n> 建立pip配置文件\n\n```\nmkdir ~/.pip\ncd ~/.pip\ntouch pip.conf\n```\n\n> 编辑pip配置文件\n\n```\nvim ~/.pip/pip.conf\n```\n\n本人配置文件：\n\n```\n[global]\nindex-url=http://pypi.douban.com/simple\ntimeout=90\ndisable-pip-version-check=true\nretries=3\ncache-dir=~/.pip/cache/\ndownload-cache=~/.pip/cache\nignore-installed=true\nno-dependencies=yes\n\n[install]\ntrusted-host = pypi.douban.com\n\n[list]\nformat=columns\n```\n\n### 常用命令\n\n> 安装指定源指定包\n\n```\npip install dateutil -i http://pypi.python.org/simple --trusted-host pypi.python.org\n```\n\n> 安装下载wheel包\n\nwhl包文件下载地址：https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n```\npython -m pip install Pillow-4.0.0-cp27-cp27m-win_amd64.whl\n```\n\n### 学习参考\n\npip官网：https://pypi.org/project/pip/\nwhl包下载地址：https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\npip源：\n- 清华大学：https://pypi.tuna.tsinghua.edu.cn/simple\n- 阿里云：http://mirrors.aliyun.com/pypi/simple/\n- 豆瓣：http://pypi.douban.com/simple/\n","source":"_posts/Python-pip.md","raw":"---\ntitle: Python之pip包管理\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, Python基础篇, Python包]\ntop: false\nabbrlink: 22308\ndate: 2017-12-24 10:58:52\nupdated: 2018-03-24 10:58:52\ndesc: 介绍一下关于pip的相关操作，pip主要用于python环境的包管理\nkeywords: Python, Packages, pip, install, update, 安装, 包, 管理\n---\n\n![](/images/article_python.jpg)\n\n### 简介\n{% note primary %}\n{% code %}\npip is the package installer for Python.\nYou can use pip to install packages from the Python Package Index and other indexes.\n{% endcode %}\n官网说明：pip是Python包管理工具，主要用于包的查找、下载、安装、卸载的功能。\n当前版本：<font size=6.5 color='red'>V19.3.1</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 安装\n\n本人主要使用MacOX、Centos7系统，关于安装，这里介绍2种方式。\n\n> curl\n\n```\n# 下载安装脚本\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n\n# 运行安装脚本\nsudo python get-pip.py\n```\n\n> easy_install\n\n```\neasy_install pip\n```\n\n### 参数说明\n```\n[root@bash ~]# pip --help\n\nUsage:\n  pip <command> [options]\n\nCommands:\n  install                     Install packages.\n  download                    Download packages.\n  uninstall                   Uninstall packages.\n  freeze                      Output installed packages in requirements format.\n  list                        List installed packages.\n  show                        Show information about installed packages.\n  check                       Verify installed packages have compatible dependencies.\n  config                      Manage local and global configuration.\n  search                      Search PyPI for packages.\n  wheel                       Build wheels from your requirements.\n  hash                        Compute hashes of package archives.\n  completion                  A helper command used for command completion.\n  debug                       Show information useful for debugging.\n  help                        Show help for commands.\n\nGeneral Options:\n  -h, --help                  Show help.\n  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.\n  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.\n  -V, --version               Show version and exit.\n  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).\n  --log <path>                Path to a verbose appending log.\n  --proxy <proxy>             Specify a proxy in the form [user:passwd@]proxy.server:port.\n  --retries <retries>         Maximum number of retries each connection should attempt (default 3 times).\n  --timeout <sec>             Set the socket timeout (default 90.0 seconds).\n  --exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.\n  --trusted-host <hostname>   Mark this host as trusted, even though it does not have valid or any HTTPS.\n  --cert <path>               Path to alternate CA bundle.\n  --client-cert <path>        Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.\n  --cache-dir <dir>           Store the cache data in <dir>.\n  --no-cache-dir              Disable the cache.\n  --disable-pip-version-check\n                              Don't periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.\n  --no-color                  Suppress colored output\n```\n参数说明略，在下面有具体使用。\n\n### 基础使用\n\n基于上面的详细参数，列举一下常用的命令。\n\n#### 安装包\n\n> 基础安装\n\n使用此命令，默认安装源的最新版本。\n```\npip install numpy\n```\n\n> 安装指定版本\n\n```\npip install numpy==1.14.0\n```\n\n> 大于指定版本\n\n```\npip install numpy>=1.14.0\n```\n\n> requirements文件安装\n\nrequirements.txt为指定的路径文件。\n```\npip install -r requirements.txt\n```\n\n#### 卸载\n\n```\npip uninstall numpy\n```\n\n#### 升级包\n\n直接升级指定的包。\n\n```\npip install -U numpy\n\npip install --upgrade numpy\n```\n\n#### 查看已安装的包\n\n> 包==版本\n\n执行这个命令，可以获取项目能run的包相关信息，把这些信息直接写到***requirements.txt***文件，方便项目迁移以及在其他环境运行。\n```\n[root@bash ~]# pip freeze\n\nalembic==0.9.9\naltgraph==0.10.2\namqp==2.2.2\naniso8601==1.2.1\nanyjson==0.3.3\nappnope==0.1.0\nasn1crypto==0.24.0\naspy.yaml==1.1.1\n```\n\n> 包  版本\n\n```\n[root@bash ~]# pip list\n\nPackage                                Version\n-------------------------------------- -------------\nalembic                                0.9.9\naltgraph                               0.10.2\namqp                                   2.2.2\naniso8601                              1.2.1\nanyjson                                0.3.3\nappnope                                0.1.0\nasn1crypto                             0.24.0\naspy.yaml                              1.1.1\n```\n\n> 查看指定包信息\n\n```\n[root@bash ~]# pip show numpy\n\nName: numpy\nVersion: 1.8.0rc1\nSummary: NumPy: array processing for numbers, strings, records, and objects.\nHome-page: http://www.numpy.org\nAuthor: NumPy Developers\nAuthor-email: numpy-discussion@scipy.org\nLicense: BSD\nLocation: /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\nRequires:\nRequired-by: wordcloud, matplotlib\n```\n\n#### 搜索\n\n```\npip search numpy\n```\n\n#### 查看版本\n\n```\n[root@bash ~]# pip --version\n\npip 19.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7)\n```\n\n### 配置\n\n> 建立pip配置文件\n\n```\nmkdir ~/.pip\ncd ~/.pip\ntouch pip.conf\n```\n\n> 编辑pip配置文件\n\n```\nvim ~/.pip/pip.conf\n```\n\n本人配置文件：\n\n```\n[global]\nindex-url=http://pypi.douban.com/simple\ntimeout=90\ndisable-pip-version-check=true\nretries=3\ncache-dir=~/.pip/cache/\ndownload-cache=~/.pip/cache\nignore-installed=true\nno-dependencies=yes\n\n[install]\ntrusted-host = pypi.douban.com\n\n[list]\nformat=columns\n```\n\n### 常用命令\n\n> 安装指定源指定包\n\n```\npip install dateutil -i http://pypi.python.org/simple --trusted-host pypi.python.org\n```\n\n> 安装下载wheel包\n\nwhl包文件下载地址：https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n```\npython -m pip install Pillow-4.0.0-cp27-cp27m-win_amd64.whl\n```\n\n### 学习参考\n\npip官网：https://pypi.org/project/pip/\nwhl包下载地址：https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\npip源：\n- 清华大学：https://pypi.tuna.tsinghua.edu.cn/simple\n- 阿里云：http://mirrors.aliyun.com/pypi/simple/\n- 豆瓣：http://pypi.douban.com/simple/\n","slug":"Python-pip","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2w3005ktabjurq8wx9r","content":"<p><img src=\"/images/article_python.jpg\" alt></p>\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip is the package installer for Python.</span><br><span class=\"line\">You can use pip to install packages from the Python Package Index and other indexes.</span><br></pre></td></tr></table></figure><br>官网说明：pip是Python包管理工具，主要用于包的查找、下载、安装、卸载的功能。<br>当前版本：<font size=\"6.5\" color=\"red\">V19.3.1</font></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>本人主要使用MacOX、Centos7系统，关于安装，这里介绍2种方式。</p>\n<blockquote>\n<p>curl</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载安装脚本</span><br><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class=\"line\"></span><br><span class=\"line\"># 运行安装脚本</span><br><span class=\"line\">sudo python get-pip.py</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>easy_install</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">easy_install pip</span><br></pre></td></tr></table></figure>\n<h3 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip --help</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  pip &lt;command&gt; [options]</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  install                     Install packages.</span><br><span class=\"line\">  download                    Download packages.</span><br><span class=\"line\">  uninstall                   Uninstall packages.</span><br><span class=\"line\">  freeze                      Output installed packages in requirements format.</span><br><span class=\"line\">  list                        List installed packages.</span><br><span class=\"line\">  show                        Show information about installed packages.</span><br><span class=\"line\">  check                       Verify installed packages have compatible dependencies.</span><br><span class=\"line\">  config                      Manage local and global configuration.</span><br><span class=\"line\">  search                      Search PyPI for packages.</span><br><span class=\"line\">  wheel                       Build wheels from your requirements.</span><br><span class=\"line\">  hash                        Compute hashes of package archives.</span><br><span class=\"line\">  completion                  A helper command used for command completion.</span><br><span class=\"line\">  debug                       Show information useful for debugging.</span><br><span class=\"line\">  help                        Show help for commands.</span><br><span class=\"line\"></span><br><span class=\"line\">General Options:</span><br><span class=\"line\">  -h, --help                  Show help.</span><br><span class=\"line\">  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.</span><br><span class=\"line\">  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.</span><br><span class=\"line\">  -V, --version               Show version and exit.</span><br><span class=\"line\">  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).</span><br><span class=\"line\">  --log &lt;path&gt;                Path to a verbose appending log.</span><br><span class=\"line\">  --proxy &lt;proxy&gt;             Specify a proxy in the form [user:passwd@]proxy.server:port.</span><br><span class=\"line\">  --retries &lt;retries&gt;         Maximum number of retries each connection should attempt (default 3 times).</span><br><span class=\"line\">  --timeout &lt;sec&gt;             Set the socket timeout (default 90.0 seconds).</span><br><span class=\"line\">  --exists-action &lt;action&gt;    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.</span><br><span class=\"line\">  --trusted-host &lt;hostname&gt;   Mark this host as trusted, even though it does not have valid or any HTTPS.</span><br><span class=\"line\">  --cert &lt;path&gt;               Path to alternate CA bundle.</span><br><span class=\"line\">  --client-cert &lt;path&gt;        Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.</span><br><span class=\"line\">  --cache-dir &lt;dir&gt;           Store the cache data in &lt;dir&gt;.</span><br><span class=\"line\">  --no-cache-dir              Disable the cache.</span><br><span class=\"line\">  --disable-pip-version-check</span><br><span class=\"line\">                              Don&apos;t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.</span><br><span class=\"line\">  --no-color                  Suppress colored output</span><br></pre></td></tr></table></figure>\n<p>参数说明略，在下面有具体使用。</p>\n<h3 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h3><p>基于上面的详细参数，列举一下常用的命令。</p>\n<h4 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h4><blockquote>\n<p>基础安装</p>\n</blockquote>\n<p>使用此命令，默认安装源的最新版本。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>安装指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy==1.14.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>大于指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy&gt;=1.14.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>requirements文件安装</p>\n</blockquote>\n<p>requirements.txt为指定的路径文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"升级包\"><a href=\"#升级包\" class=\"headerlink\" title=\"升级包\"></a>升级包</h4><p>直接升级指定的包。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -U numpy</span><br><span class=\"line\"></span><br><span class=\"line\">pip install --upgrade numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看已安装的包\"><a href=\"#查看已安装的包\" class=\"headerlink\" title=\"查看已安装的包\"></a>查看已安装的包</h4><blockquote>\n<p>包==版本</p>\n</blockquote>\n<p>执行这个命令，可以获取项目能run的包相关信息，把这些信息直接写到<strong><em>requirements.txt</em></strong>文件，方便项目迁移以及在其他环境运行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip freeze</span><br><span class=\"line\"></span><br><span class=\"line\">alembic==0.9.9</span><br><span class=\"line\">altgraph==0.10.2</span><br><span class=\"line\">amqp==2.2.2</span><br><span class=\"line\">aniso8601==1.2.1</span><br><span class=\"line\">anyjson==0.3.3</span><br><span class=\"line\">appnope==0.1.0</span><br><span class=\"line\">asn1crypto==0.24.0</span><br><span class=\"line\">aspy.yaml==1.1.1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>包  版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip list</span><br><span class=\"line\"></span><br><span class=\"line\">Package                                Version</span><br><span class=\"line\">-------------------------------------- -------------</span><br><span class=\"line\">alembic                                0.9.9</span><br><span class=\"line\">altgraph                               0.10.2</span><br><span class=\"line\">amqp                                   2.2.2</span><br><span class=\"line\">aniso8601                              1.2.1</span><br><span class=\"line\">anyjson                                0.3.3</span><br><span class=\"line\">appnope                                0.1.0</span><br><span class=\"line\">asn1crypto                             0.24.0</span><br><span class=\"line\">aspy.yaml                              1.1.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查看指定包信息</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip show numpy</span><br><span class=\"line\"></span><br><span class=\"line\">Name: numpy</span><br><span class=\"line\">Version: 1.8.0rc1</span><br><span class=\"line\">Summary: NumPy: array processing for numbers, strings, records, and objects.</span><br><span class=\"line\">Home-page: http://www.numpy.org</span><br><span class=\"line\">Author: NumPy Developers</span><br><span class=\"line\">Author-email: numpy-discussion@scipy.org</span><br><span class=\"line\">License: BSD</span><br><span class=\"line\">Location: /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python</span><br><span class=\"line\">Requires:</span><br><span class=\"line\">Required-by: wordcloud, matplotlib</span><br></pre></td></tr></table></figure>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip search numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip --version</span><br><span class=\"line\"></span><br><span class=\"line\">pip 19.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7)</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><blockquote>\n<p>建立pip配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.pip</span><br><span class=\"line\">cd ~/.pip</span><br><span class=\"line\">touch pip.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑pip配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.pip/pip.conf</span><br></pre></td></tr></table></figure>\n<p>本人配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url=http://pypi.douban.com/simple</span><br><span class=\"line\">timeout=90</span><br><span class=\"line\">disable-pip-version-check=true</span><br><span class=\"line\">retries=3</span><br><span class=\"line\">cache-dir=~/.pip/cache/</span><br><span class=\"line\">download-cache=~/.pip/cache</span><br><span class=\"line\">ignore-installed=true</span><br><span class=\"line\">no-dependencies=yes</span><br><span class=\"line\"></span><br><span class=\"line\">[install]</span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br><span class=\"line\"></span><br><span class=\"line\">[list]</span><br><span class=\"line\">format=columns</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><blockquote>\n<p>安装指定源指定包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dateutil -i http://pypi.python.org/simple --trusted-host pypi.python.org</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>安装下载wheel包</p>\n</blockquote>\n<p>whl包文件下载地址：<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"noopener\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install Pillow-4.0.0-cp27-cp27m-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>pip官网：<a href=\"https://pypi.org/project/pip/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/pip/</a><br>whl包下载地址：<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"noopener\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>\n<p>pip源：</p>\n<ul>\n<li>清华大学：<a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">https://pypi.tuna.tsinghua.edu.cn/simple</a></li>\n<li>阿里云：<a href=\"http://mirrors.aliyun.com/pypi/simple/\" target=\"_blank\" rel=\"noopener\">http://mirrors.aliyun.com/pypi/simple/</a></li>\n<li>豆瓣：<a href=\"http://pypi.douban.com/simple/\" target=\"_blank\" rel=\"noopener\">http://pypi.douban.com/simple/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_python.jpg\" alt></p>\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip is the package installer for Python.</span><br><span class=\"line\">You can use pip to install packages from the Python Package Index and other indexes.</span><br></pre></td></tr></table></figure><br>官网说明：pip是Python包管理工具，主要用于包的查找、下载、安装、卸载的功能。<br>当前版本：<font size=\"6.5\" color=\"red\">V19.3.1</font></p>\n          </div>","more":"<hr>\n\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>本人主要使用MacOX、Centos7系统，关于安装，这里介绍2种方式。</p>\n<blockquote>\n<p>curl</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载安装脚本</span><br><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class=\"line\"></span><br><span class=\"line\"># 运行安装脚本</span><br><span class=\"line\">sudo python get-pip.py</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>easy_install</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">easy_install pip</span><br></pre></td></tr></table></figure>\n<h3 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip --help</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  pip &lt;command&gt; [options]</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  install                     Install packages.</span><br><span class=\"line\">  download                    Download packages.</span><br><span class=\"line\">  uninstall                   Uninstall packages.</span><br><span class=\"line\">  freeze                      Output installed packages in requirements format.</span><br><span class=\"line\">  list                        List installed packages.</span><br><span class=\"line\">  show                        Show information about installed packages.</span><br><span class=\"line\">  check                       Verify installed packages have compatible dependencies.</span><br><span class=\"line\">  config                      Manage local and global configuration.</span><br><span class=\"line\">  search                      Search PyPI for packages.</span><br><span class=\"line\">  wheel                       Build wheels from your requirements.</span><br><span class=\"line\">  hash                        Compute hashes of package archives.</span><br><span class=\"line\">  completion                  A helper command used for command completion.</span><br><span class=\"line\">  debug                       Show information useful for debugging.</span><br><span class=\"line\">  help                        Show help for commands.</span><br><span class=\"line\"></span><br><span class=\"line\">General Options:</span><br><span class=\"line\">  -h, --help                  Show help.</span><br><span class=\"line\">  --isolated                  Run pip in an isolated mode, ignoring environment variables and user configuration.</span><br><span class=\"line\">  -v, --verbose               Give more output. Option is additive, and can be used up to 3 times.</span><br><span class=\"line\">  -V, --version               Show version and exit.</span><br><span class=\"line\">  -q, --quiet                 Give less output. Option is additive, and can be used up to 3 times (corresponding to WARNING, ERROR, and CRITICAL logging levels).</span><br><span class=\"line\">  --log &lt;path&gt;                Path to a verbose appending log.</span><br><span class=\"line\">  --proxy &lt;proxy&gt;             Specify a proxy in the form [user:passwd@]proxy.server:port.</span><br><span class=\"line\">  --retries &lt;retries&gt;         Maximum number of retries each connection should attempt (default 3 times).</span><br><span class=\"line\">  --timeout &lt;sec&gt;             Set the socket timeout (default 90.0 seconds).</span><br><span class=\"line\">  --exists-action &lt;action&gt;    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.</span><br><span class=\"line\">  --trusted-host &lt;hostname&gt;   Mark this host as trusted, even though it does not have valid or any HTTPS.</span><br><span class=\"line\">  --cert &lt;path&gt;               Path to alternate CA bundle.</span><br><span class=\"line\">  --client-cert &lt;path&gt;        Path to SSL client certificate, a single file containing the private key and the certificate in PEM format.</span><br><span class=\"line\">  --cache-dir &lt;dir&gt;           Store the cache data in &lt;dir&gt;.</span><br><span class=\"line\">  --no-cache-dir              Disable the cache.</span><br><span class=\"line\">  --disable-pip-version-check</span><br><span class=\"line\">                              Don&apos;t periodically check PyPI to determine whether a new version of pip is available for download. Implied with --no-index.</span><br><span class=\"line\">  --no-color                  Suppress colored output</span><br></pre></td></tr></table></figure>\n<p>参数说明略，在下面有具体使用。</p>\n<h3 id=\"基础使用\"><a href=\"#基础使用\" class=\"headerlink\" title=\"基础使用\"></a>基础使用</h3><p>基于上面的详细参数，列举一下常用的命令。</p>\n<h4 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h4><blockquote>\n<p>基础安装</p>\n</blockquote>\n<p>使用此命令，默认安装源的最新版本。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>安装指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy==1.14.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>大于指定版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy&gt;=1.14.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>requirements文件安装</p>\n</blockquote>\n<p>requirements.txt为指定的路径文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"卸载\"><a href=\"#卸载\" class=\"headerlink\" title=\"卸载\"></a>卸载</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"升级包\"><a href=\"#升级包\" class=\"headerlink\" title=\"升级包\"></a>升级包</h4><p>直接升级指定的包。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -U numpy</span><br><span class=\"line\"></span><br><span class=\"line\">pip install --upgrade numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看已安装的包\"><a href=\"#查看已安装的包\" class=\"headerlink\" title=\"查看已安装的包\"></a>查看已安装的包</h4><blockquote>\n<p>包==版本</p>\n</blockquote>\n<p>执行这个命令，可以获取项目能run的包相关信息，把这些信息直接写到<strong><em>requirements.txt</em></strong>文件，方便项目迁移以及在其他环境运行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip freeze</span><br><span class=\"line\"></span><br><span class=\"line\">alembic==0.9.9</span><br><span class=\"line\">altgraph==0.10.2</span><br><span class=\"line\">amqp==2.2.2</span><br><span class=\"line\">aniso8601==1.2.1</span><br><span class=\"line\">anyjson==0.3.3</span><br><span class=\"line\">appnope==0.1.0</span><br><span class=\"line\">asn1crypto==0.24.0</span><br><span class=\"line\">aspy.yaml==1.1.1</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>包  版本</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip list</span><br><span class=\"line\"></span><br><span class=\"line\">Package                                Version</span><br><span class=\"line\">-------------------------------------- -------------</span><br><span class=\"line\">alembic                                0.9.9</span><br><span class=\"line\">altgraph                               0.10.2</span><br><span class=\"line\">amqp                                   2.2.2</span><br><span class=\"line\">aniso8601                              1.2.1</span><br><span class=\"line\">anyjson                                0.3.3</span><br><span class=\"line\">appnope                                0.1.0</span><br><span class=\"line\">asn1crypto                             0.24.0</span><br><span class=\"line\">aspy.yaml                              1.1.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>查看指定包信息</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip show numpy</span><br><span class=\"line\"></span><br><span class=\"line\">Name: numpy</span><br><span class=\"line\">Version: 1.8.0rc1</span><br><span class=\"line\">Summary: NumPy: array processing for numbers, strings, records, and objects.</span><br><span class=\"line\">Home-page: http://www.numpy.org</span><br><span class=\"line\">Author: NumPy Developers</span><br><span class=\"line\">Author-email: numpy-discussion@scipy.org</span><br><span class=\"line\">License: BSD</span><br><span class=\"line\">Location: /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python</span><br><span class=\"line\">Requires:</span><br><span class=\"line\">Required-by: wordcloud, matplotlib</span><br></pre></td></tr></table></figure>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip search numpy</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# pip --version</span><br><span class=\"line\"></span><br><span class=\"line\">pip 19.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7)</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><blockquote>\n<p>建立pip配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.pip</span><br><span class=\"line\">cd ~/.pip</span><br><span class=\"line\">touch pip.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑pip配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.pip/pip.conf</span><br></pre></td></tr></table></figure>\n<p>本人配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[global]</span><br><span class=\"line\">index-url=http://pypi.douban.com/simple</span><br><span class=\"line\">timeout=90</span><br><span class=\"line\">disable-pip-version-check=true</span><br><span class=\"line\">retries=3</span><br><span class=\"line\">cache-dir=~/.pip/cache/</span><br><span class=\"line\">download-cache=~/.pip/cache</span><br><span class=\"line\">ignore-installed=true</span><br><span class=\"line\">no-dependencies=yes</span><br><span class=\"line\"></span><br><span class=\"line\">[install]</span><br><span class=\"line\">trusted-host = pypi.douban.com</span><br><span class=\"line\"></span><br><span class=\"line\">[list]</span><br><span class=\"line\">format=columns</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><blockquote>\n<p>安装指定源指定包</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install dateutil -i http://pypi.python.org/simple --trusted-host pypi.python.org</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>安装下载wheel包</p>\n</blockquote>\n<p>whl包文件下载地址：<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"noopener\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install Pillow-4.0.0-cp27-cp27m-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>pip官网：<a href=\"https://pypi.org/project/pip/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/pip/</a><br>whl包下载地址：<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"noopener\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>\n<p>pip源：</p>\n<ul>\n<li>清华大学：<a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">https://pypi.tuna.tsinghua.edu.cn/simple</a></li>\n<li>阿里云：<a href=\"http://mirrors.aliyun.com/pypi/simple/\" target=\"_blank\" rel=\"noopener\">http://mirrors.aliyun.com/pypi/simple/</a></li>\n<li>豆瓣：<a href=\"http://pypi.douban.com/simple/\" target=\"_blank\" rel=\"noopener\">http://pypi.douban.com/simple/</a></li>\n</ul>"},{"title":"Python-信息管理系统","comments":0,"top":false,"abbrlink":12268,"date":"2020-06-25T05:09:00.000Z","updated":"2020-06-25T05:09:00.000Z","desc":null,"keywords":null,"_content":"","source":"_posts/Python-信息管理系统.md","raw":"---\ntitle: Python-信息管理系统\ncomments: false\ncategories:\n  - - Python\ntags:\n  - Python\n  - Python程序篇\ntop: false\nabbrlink: 12268\ndate: 2020-06-25 13:09:00\nupdated: 2020-06-25 13:09:00\ndesc:\nkeywords:\n---\n","slug":"Python-信息管理系统","published":1,"_id":"ckcd0s2w6005otabjh6fb77p4","layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Python内置函数:any与all","comments":0,"desc":"介绍一下python的内置函数:any与all","keywords":"python, any, all, 内置方法, 内置函数, 语法, 语法糖, 脚本, 程序","abbrlink":4591,"date":"2017-05-06T12:34:44.000Z","updated":"2017-05-06T12:34:44.000Z","_content":"\n### 总结\n{% note primary %}\nany()：有‘真’为True，全‘假’为False，iterable为空是False\nall()：有‘假’为False，全‘真’为True，iterable为空是True\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n这两个函数的参数都是iterable，也就是list或者tuple，接下来分别详细介绍一下。\n\n#### any\n\n![any](any.png)\n\n- iterable的任何元素只要有一个不为False、0、''，返回True；否则元素都为False、0、''或全为空，则any(iterable)为False。也就是说只有所有的iterable都为'假'，则any(iterable)为False。\n- 当iterable为空的时候，函数返回值为False\n- 代码\n![any_demo](any_demo.png)\n#### all\n\n![all](all.png)\n\n- iterable的所有元素都不为False、''、0或者iterable为空，则all(iterable)为True，也就是说只要iterable元素有一个为\"假\"，则为False。\n- 当iterable为空的时候，函数返回值为True\n- 代码\n![all_demo](all_demo.png)\n\n### 学习\n\n* any：https://www.programiz.com/python-programming/methods/built-in/any\n* all：https://www.programiz.com/python-programming/methods/built-in/all\n","source":"_posts/Python-内置函数-any与all.md","raw":"---\ntitle: 'Python内置函数:any与all'\ncomments: false\ndesc: 介绍一下python的内置函数:any与all\ncategories:\n  - [Python]\ntags: [Python, Python基础篇]\nkeywords: python, any, all, 内置方法, 内置函数, 语法, 语法糖, 脚本, 程序\nabbrlink: 4591\ndate: 2017-05-06 20:34:44\nupdated: 2017-05-06 20:34:44\n---\n\n### 总结\n{% note primary %}\nany()：有‘真’为True，全‘假’为False，iterable为空是False\nall()：有‘假’为False，全‘真’为True，iterable为空是True\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 正文\n\n这两个函数的参数都是iterable，也就是list或者tuple，接下来分别详细介绍一下。\n\n#### any\n\n![any](any.png)\n\n- iterable的任何元素只要有一个不为False、0、''，返回True；否则元素都为False、0、''或全为空，则any(iterable)为False。也就是说只有所有的iterable都为'假'，则any(iterable)为False。\n- 当iterable为空的时候，函数返回值为False\n- 代码\n![any_demo](any_demo.png)\n#### all\n\n![all](all.png)\n\n- iterable的所有元素都不为False、''、0或者iterable为空，则all(iterable)为True，也就是说只要iterable元素有一个为\"假\"，则为False。\n- 当iterable为空的时候，函数返回值为True\n- 代码\n![all_demo](all_demo.png)\n\n### 学习\n\n* any：https://www.programiz.com/python-programming/methods/built-in/any\n* all：https://www.programiz.com/python-programming/methods/built-in/all\n","slug":"Python-内置函数-any与all","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2w8005qtabj20a2hsba","content":"<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><div class=\"note primary\">\n            <p>any()：有‘真’为True，全‘假’为False，iterable为空是False<br>all()：有‘假’为False，全‘真’为True，iterable为空是True</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>这两个函数的参数都是iterable，也就是list或者tuple，接下来分别详细介绍一下。</p>\n<h4 id=\"any\"><a href=\"#any\" class=\"headerlink\" title=\"any\"></a>any</h4><p><img src=\"any.png\" alt=\"any\"></p>\n<ul>\n<li>iterable的任何元素只要有一个不为False、0、’’，返回True；否则元素都为False、0、’’或全为空，则any(iterable)为False。也就是说只有所有的iterable都为’假’，则any(iterable)为False。</li>\n<li>当iterable为空的时候，函数返回值为False</li>\n<li>代码<br><img src=\"any_demo.png\" alt=\"any_demo\"><h4 id=\"all\"><a href=\"#all\" class=\"headerlink\" title=\"all\"></a>all</h4></li>\n</ul>\n<p><img src=\"all.png\" alt=\"all\"></p>\n<ul>\n<li>iterable的所有元素都不为False、’’、0或者iterable为空，则all(iterable)为True，也就是说只要iterable元素有一个为”假”，则为False。</li>\n<li>当iterable为空的时候，函数返回值为True</li>\n<li>代码<br><img src=\"all_demo.png\" alt=\"all_demo\"></li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><ul>\n<li>any：<a href=\"https://www.programiz.com/python-programming/methods/built-in/any\" target=\"_blank\" rel=\"noopener\">https://www.programiz.com/python-programming/methods/built-in/any</a></li>\n<li>all：<a href=\"https://www.programiz.com/python-programming/methods/built-in/all\" target=\"_blank\" rel=\"noopener\">https://www.programiz.com/python-programming/methods/built-in/all</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><div class=\"note primary\">\n            <p>any()：有‘真’为True，全‘假’为False，iterable为空是False<br>all()：有‘假’为False，全‘真’为True，iterable为空是True</p>\n          </div>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>这两个函数的参数都是iterable，也就是list或者tuple，接下来分别详细介绍一下。</p>\n<h4 id=\"any\"><a href=\"#any\" class=\"headerlink\" title=\"any\"></a>any</h4><p><img src=\"any.png\" alt=\"any\"></p>\n<ul>\n<li>iterable的任何元素只要有一个不为False、0、’’，返回True；否则元素都为False、0、’’或全为空，则any(iterable)为False。也就是说只有所有的iterable都为’假’，则any(iterable)为False。</li>\n<li>当iterable为空的时候，函数返回值为False</li>\n<li>代码<br><img src=\"any_demo.png\" alt=\"any_demo\"><h4 id=\"all\"><a href=\"#all\" class=\"headerlink\" title=\"all\"></a>all</h4></li>\n</ul>\n<p><img src=\"all.png\" alt=\"all\"></p>\n<ul>\n<li>iterable的所有元素都不为False、’’、0或者iterable为空，则all(iterable)为True，也就是说只要iterable元素有一个为”假”，则为False。</li>\n<li>当iterable为空的时候，函数返回值为True</li>\n<li>代码<br><img src=\"all_demo.png\" alt=\"all_demo\"></li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><ul>\n<li>any：<a href=\"https://www.programiz.com/python-programming/methods/built-in/any\" target=\"_blank\" rel=\"noopener\">https://www.programiz.com/python-programming/methods/built-in/any</a></li>\n<li>all：<a href=\"https://www.programiz.com/python-programming/methods/built-in/all\" target=\"_blank\" rel=\"noopener\">https://www.programiz.com/python-programming/methods/built-in/all</a></li>\n</ul>"},{"title":"Python-判断PC是否连网","comments":0,"top":false,"abbrlink":19515,"date":"2019-12-31T02:34:17.000Z","updated":"2019-12-31T02:34:17.000Z","desc":"利用Python的socket去测试PC是否连网，socket是开发必备技能之一","keywords":"python, socket, curl, wget, curl, 连网","_content":"\n\n![](/images/article_python_socket.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">life is short, me use Python.</div>\n{% endraw %}\n\n2019年的最后一片技术博客了，写一个初始学Python的知识点，在这里先祝<font size=6.5 color='red'>【大家元旦快乐】</font>。\n<!--more-->\n<hr />\n\n代码很简单，需要设置能访问的url即可。\n\n```\nimport socket\n\ndef is_connected(url):\n\ntry:\n    host = socket.gethostbyname(url)\n    s = socket.create_connection((host, 80), 2)\n    return True\nexcept Exception as e:\n    return False\nURL = \"www.baidu.com\"\n\nprint is_connected(URL )\n```\n\n<font size=6.5 color='red'>此代码写于2016-09-12。。。。。。【自学Python期间】</font>\n\n{% raw %}\n<div class=\"post_cus_note\">其他方式</div>\n{% endraw %}\n\n> curl\n\n```\ncurl http://www.baidu.com\n```\n\n> wget\n\n```\nwget http://www.baidu.com\n```\n\n<font size=6.5 color='blue'>生命不息，奋斗不止！</font>\n","source":"_posts/Python-判断PC是否连网.md","raw":"---\ntitle: Python-判断PC是否连网\ncomments: false\ncategories:\n  - Python\ntags:\n  [Python, Python基础篇, Python程序篇]\ntop: false\nabbrlink: 19515\ndate: 2019-12-31 10:34:17\nupdated: 2019-12-31 10:34:17\ndesc: 利用Python的socket去测试PC是否连网，socket是开发必备技能之一\nkeywords: python, socket, curl, wget, curl, 连网\n---\n\n\n![](/images/article_python_socket.jpeg)\n\n{% raw %}\n<div class=\"post_cus_note\">life is short, me use Python.</div>\n{% endraw %}\n\n2019年的最后一片技术博客了，写一个初始学Python的知识点，在这里先祝<font size=6.5 color='red'>【大家元旦快乐】</font>。\n<!--more-->\n<hr />\n\n代码很简单，需要设置能访问的url即可。\n\n```\nimport socket\n\ndef is_connected(url):\n\ntry:\n    host = socket.gethostbyname(url)\n    s = socket.create_connection((host, 80), 2)\n    return True\nexcept Exception as e:\n    return False\nURL = \"www.baidu.com\"\n\nprint is_connected(URL )\n```\n\n<font size=6.5 color='red'>此代码写于2016-09-12。。。。。。【自学Python期间】</font>\n\n{% raw %}\n<div class=\"post_cus_note\">其他方式</div>\n{% endraw %}\n\n> curl\n\n```\ncurl http://www.baidu.com\n```\n\n> wget\n\n```\nwget http://www.baidu.com\n```\n\n<font size=6.5 color='blue'>生命不息，奋斗不止！</font>\n","slug":"Python-判断PC是否连网","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2wb005utabj7v199vu4","content":"<p><img src=\"/images/article_python_socket.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">life is short, me use Python.</div>\n\n<p>2019年的最后一片技术博客了，写一个初始学Python的知识点，在这里先祝<font size=\"6.5\" color=\"red\">【大家元旦快乐】</font>。<br><a id=\"more\"></a></p>\n<hr>\n\n<p>代码很简单，需要设置能访问的url即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import socket</span><br><span class=\"line\"></span><br><span class=\"line\">def is_connected(url):</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    host = socket.gethostbyname(url)</span><br><span class=\"line\">    s = socket.create_connection((host, 80), 2)</span><br><span class=\"line\">    return True</span><br><span class=\"line\">except Exception as e:</span><br><span class=\"line\">    return False</span><br><span class=\"line\">URL = &quot;www.baidu.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">print is_connected(URL )</span><br></pre></td></tr></table></figure>\n<font size=\"6.5\" color=\"red\">此代码写于2016-09-12。。。。。。【自学Python期间】</font>\n\n\n<div class=\"post_cus_note\">其他方式</div>\n\n<blockquote>\n<p>curl</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://www.baidu.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>wget</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.baidu.com</span><br></pre></td></tr></table></figure>\n<font size=\"6.5\" color=\"blue\">生命不息，奋斗不止！</font>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_python_socket.jpeg\" alt></p>\n\n<div class=\"post_cus_note\">life is short, me use Python.</div>\n\n<p>2019年的最后一片技术博客了，写一个初始学Python的知识点，在这里先祝<font size=\"6.5\" color=\"red\">【大家元旦快乐】</font>。<br>","more":"</p>\n<hr>\n\n<p>代码很简单，需要设置能访问的url即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import socket</span><br><span class=\"line\"></span><br><span class=\"line\">def is_connected(url):</span><br><span class=\"line\"></span><br><span class=\"line\">try:</span><br><span class=\"line\">    host = socket.gethostbyname(url)</span><br><span class=\"line\">    s = socket.create_connection((host, 80), 2)</span><br><span class=\"line\">    return True</span><br><span class=\"line\">except Exception as e:</span><br><span class=\"line\">    return False</span><br><span class=\"line\">URL = &quot;www.baidu.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">print is_connected(URL )</span><br></pre></td></tr></table></figure>\n<font size=\"6.5\" color=\"red\">此代码写于2016-09-12。。。。。。【自学Python期间】</font>\n\n\n<div class=\"post_cus_note\">其他方式</div>\n\n<blockquote>\n<p>curl</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://www.baidu.com</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>wget</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.baidu.com</span><br></pre></td></tr></table></figure>\n<font size=\"6.5\" color=\"blue\">生命不息，奋斗不止！</font>"},{"title":"Python制作天气数据api","desc":"利用Python语言开发一个天气数据api，有获取数据源的api","comments":0,"keywords":"python, api, 天气, 程序, 爬虫, 数据库, 脚本, 程序","abbrlink":53966,"date":"2018-09-24T03:55:30.000Z","_content":"\n### 简介\n    还再找免费的天气API接口吗，这里给你答案\n    开发语言：python\n    技术方案：requests + sqlalchemy\n    感谢python，（数据源：官方中国天气网http://www.weather.com.cn）\n\n<!--more-->\n<hr />\n\n### 正文\n​​​偶然工作中用到了天气状况数据，后来就不需要了，但还是想做一个天气的，因为想给自己的女票做个天气短信提醒。说搞就搞，第一想法就是apistore，上去了之后，好贵。。。。。。<!-- more -->百度一了一下，全都不好用，决定自己写一个，自己动手丰衣足食嘛。再百度天气，中国天气网是第一条，还是官方的，说明应该不错，点进去之后，看了数据，需求基本满足了，那么，走起。\n![百度搜索引擎（本人声明，不是百度员工）](baidu.jpg)\n#### 查询数据源\ngoogle打开天气网，搜了下北京天气，alt+cmd+i打开调试模式（mac快快捷键），network查看数据来源。经过分析，基本可以确定数据主要来源于2个接口：http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753 （地之一）和http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752 （地址二），多打开了几个别的城市进行查看，最后结论：101010100参数一城市的id值，1537709265753参数二时间戳（毫秒级）。\n![调试&&分析调试&&分析](tiaoshi.jpg)\n\n#### 获取城市id\n    在官网反反复复尝试获取城市的数据，发个城市id有几个规律：\n* 城市id由9位数字组成(可能大家觉得感觉有点废话了，别急往后看)，例如：北京101010100。\n* 城市id的第三位，第四位是表示省份（免费普及一下：中国34个省级行政区域，包括23个省，5个自治区，4个直辖市，2个特别行政区），01-北京，02-上海，03-天津，04-重庆。。。34-台湾。\n* 后三位尾数，针对于直辖市，尾数从000开始计数，非直辖市尾数从001开始计数。\n* 天气网数据细到乡镇，街道。乡镇的id：101080503(cityid) + xxx(数字，001开始)，12位组成；街道数据过于细致，没必要获取，而且本人能力有限，只初始化了到城市级别的的数据。\n* 额外赠送：中国每个省份的城市最大值位21，代码中会用到。\n\n知道规律，也了解了request url，response，就可以搞定城市id的数据源了。解决方法如下：\n* 语言：python\n* 思想：依据id的范围生成范围id，requests去get请求，获取结果\n* 要点：省份的标志位01～04位直辖市，05～34非直辖市，城市的标志位01～23即可；header必须含有Referer值，应该用来做一个访问标识response返回值类型是string，但是weatherinfo的信息为json，需转化。不多说，直接上代码：\n![城市id值生成城市id值生成](id.jpg)\n\n#### 数据入库\n数据库决定直接用sqlite，主要考虑到数据库的可移植性，git项目直接运行就可以，不用额外配置数据库，而且单张表，数据量不会很大，性能没有太高要求。python + requests + sqlalchemy + db，玩py的不知道sqlalchemy&&requests，自己赶快恶补一下吧。。。废话也不多说，git项目看db.py文件，创建表以及数据库见下图：\n![数据库创建&&表查询数据库创建&&表查询](db.jpg)\n城市id获取的整理流程设计ok，执行python citys.py就可以见证奇迹。不过，这个奇迹有点慢而已，我的本大概执行了30个小时左右，后来想的是python配合多进程（GIL机制，不要使用多线程）来提速，搞了个pool在那，不过我把多进程注释了，有兴趣的人可以去试下多进程。\n\n#### api接口服务\n做web服务，flask是不错的选择，简单易用，性能也不差。用blueprint做了个weather的接口，但是信息由地址一与地址二组成，地址一主要用来获取最高/最低温度，地址二获取实时的天气相关信息，请求的地址参数均由第三步回去的城市id以及时间戳。\n\nrequests基础：http://docs.python-requests.org/zh_CN/latest/user/quickstart.html\n\n请求的时候，我把浏览器正常访问的header都记录，请求成功，把结果封装json返回。在controller那，我对请求方式，请求参数做了限制，加强接口的严谨性。详细自己看代码，post请求的参数那块，args，form，json，get_json分不清的，请自行百度，我做了个小技巧：\n![获取post请求参数获取post请求参数](api.jpg)\n\n#### 测试\n这里介绍2种测试方式，postman + curl。\n\ncurl：curl -X POST http://127.0.0.1:8888/weather/ -H 'Content-Type: application/json' -d '{\"city\": \"昌平\"}' | python -m json.tool\n\npostman：图形化界面。。。自己点把\n\n没有curl命令的，自己搞下，做开发的话，不知道curl，会很low的，看下结果，完美：\n![成果](test.jpg)\n\n\n\n### 总结\n代码很简单，不过在获取数据源id上花费了一些时间，后来一想，城市id的表有个问题，表有：id，cityname，cityid 3个字段，没有记录省份，查询同名的城市可能会有问题，后续在改吧。。。就先到这里了，我是程序猿，python程序猿。\n\n二期功能：定时任务 + 短信提醒 + 邮件报警\n\n项目git地址：https://github.com/GIS90/weathers\n","source":"_posts/Python-制作天气数据api.md","raw":"---\ntitle: Python制作天气数据api\ndesc: 利用Python语言开发一个天气数据api，有获取数据源的api\ncategories:\n  - [Python]\ntags: [Python, Python程序篇, 爬虫]\ncomments: false\nkeywords: python, api, 天气, 程序, 爬虫, 数据库, 脚本, 程序\nabbrlink: 53966\ndate: 2018-09-24 11:55:30\n---\n\n### 简介\n    还再找免费的天气API接口吗，这里给你答案\n    开发语言：python\n    技术方案：requests + sqlalchemy\n    感谢python，（数据源：官方中国天气网http://www.weather.com.cn）\n\n<!--more-->\n<hr />\n\n### 正文\n​​​偶然工作中用到了天气状况数据，后来就不需要了，但还是想做一个天气的，因为想给自己的女票做个天气短信提醒。说搞就搞，第一想法就是apistore，上去了之后，好贵。。。。。。<!-- more -->百度一了一下，全都不好用，决定自己写一个，自己动手丰衣足食嘛。再百度天气，中国天气网是第一条，还是官方的，说明应该不错，点进去之后，看了数据，需求基本满足了，那么，走起。\n![百度搜索引擎（本人声明，不是百度员工）](baidu.jpg)\n#### 查询数据源\ngoogle打开天气网，搜了下北京天气，alt+cmd+i打开调试模式（mac快快捷键），network查看数据来源。经过分析，基本可以确定数据主要来源于2个接口：http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753 （地之一）和http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752 （地址二），多打开了几个别的城市进行查看，最后结论：101010100参数一城市的id值，1537709265753参数二时间戳（毫秒级）。\n![调试&&分析调试&&分析](tiaoshi.jpg)\n\n#### 获取城市id\n    在官网反反复复尝试获取城市的数据，发个城市id有几个规律：\n* 城市id由9位数字组成(可能大家觉得感觉有点废话了，别急往后看)，例如：北京101010100。\n* 城市id的第三位，第四位是表示省份（免费普及一下：中国34个省级行政区域，包括23个省，5个自治区，4个直辖市，2个特别行政区），01-北京，02-上海，03-天津，04-重庆。。。34-台湾。\n* 后三位尾数，针对于直辖市，尾数从000开始计数，非直辖市尾数从001开始计数。\n* 天气网数据细到乡镇，街道。乡镇的id：101080503(cityid) + xxx(数字，001开始)，12位组成；街道数据过于细致，没必要获取，而且本人能力有限，只初始化了到城市级别的的数据。\n* 额外赠送：中国每个省份的城市最大值位21，代码中会用到。\n\n知道规律，也了解了request url，response，就可以搞定城市id的数据源了。解决方法如下：\n* 语言：python\n* 思想：依据id的范围生成范围id，requests去get请求，获取结果\n* 要点：省份的标志位01～04位直辖市，05～34非直辖市，城市的标志位01～23即可；header必须含有Referer值，应该用来做一个访问标识response返回值类型是string，但是weatherinfo的信息为json，需转化。不多说，直接上代码：\n![城市id值生成城市id值生成](id.jpg)\n\n#### 数据入库\n数据库决定直接用sqlite，主要考虑到数据库的可移植性，git项目直接运行就可以，不用额外配置数据库，而且单张表，数据量不会很大，性能没有太高要求。python + requests + sqlalchemy + db，玩py的不知道sqlalchemy&&requests，自己赶快恶补一下吧。。。废话也不多说，git项目看db.py文件，创建表以及数据库见下图：\n![数据库创建&&表查询数据库创建&&表查询](db.jpg)\n城市id获取的整理流程设计ok，执行python citys.py就可以见证奇迹。不过，这个奇迹有点慢而已，我的本大概执行了30个小时左右，后来想的是python配合多进程（GIL机制，不要使用多线程）来提速，搞了个pool在那，不过我把多进程注释了，有兴趣的人可以去试下多进程。\n\n#### api接口服务\n做web服务，flask是不错的选择，简单易用，性能也不差。用blueprint做了个weather的接口，但是信息由地址一与地址二组成，地址一主要用来获取最高/最低温度，地址二获取实时的天气相关信息，请求的地址参数均由第三步回去的城市id以及时间戳。\n\nrequests基础：http://docs.python-requests.org/zh_CN/latest/user/quickstart.html\n\n请求的时候，我把浏览器正常访问的header都记录，请求成功，把结果封装json返回。在controller那，我对请求方式，请求参数做了限制，加强接口的严谨性。详细自己看代码，post请求的参数那块，args，form，json，get_json分不清的，请自行百度，我做了个小技巧：\n![获取post请求参数获取post请求参数](api.jpg)\n\n#### 测试\n这里介绍2种测试方式，postman + curl。\n\ncurl：curl -X POST http://127.0.0.1:8888/weather/ -H 'Content-Type: application/json' -d '{\"city\": \"昌平\"}' | python -m json.tool\n\npostman：图形化界面。。。自己点把\n\n没有curl命令的，自己搞下，做开发的话，不知道curl，会很low的，看下结果，完美：\n![成果](test.jpg)\n\n\n\n### 总结\n代码很简单，不过在获取数据源id上花费了一些时间，后来一想，城市id的表有个问题，表有：id，cityname，cityid 3个字段，没有记录省份，查询同名的城市可能会有问题，后续在改吧。。。就先到这里了，我是程序猿，python程序猿。\n\n二期功能：定时任务 + 短信提醒 + 邮件报警\n\n项目git地址：https://github.com/GIS90/weathers\n","slug":"Python-制作天气数据api","published":1,"updated":"2019-12-22T12:05:33.142Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2wf005vtabjz64hdlna","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><pre><code>还再找免费的天气API接口吗，这里给你答案\n开发语言：python\n技术方案：requests + sqlalchemy\n感谢python，（数据源：官方中国天气网http://www.weather.com.cn）\n</code></pre><a id=\"more\"></a>\n<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>​​​偶然工作中用到了天气状况数据，后来就不需要了，但还是想做一个天气的，因为想给自己的女票做个天气短信提醒。说搞就搞，第一想法就是apistore，上去了之后，好贵。。。。。。<!-- more -->百度一了一下，全都不好用，决定自己写一个，自己动手丰衣足食嘛。再百度天气，中国天气网是第一条，还是官方的，说明应该不错，点进去之后，看了数据，需求基本满足了，那么，走起。<br><img src=\"baidu.jpg\" alt=\"百度搜索引擎（本人声明，不是百度员工）\"></p>\n<h4 id=\"查询数据源\"><a href=\"#查询数据源\" class=\"headerlink\" title=\"查询数据源\"></a>查询数据源</h4><p>google打开天气网，搜了下北京天气，alt+cmd+i打开调试模式（mac快快捷键），network查看数据来源。经过分析，基本可以确定数据主要来源于2个接口：<a href=\"http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753\" target=\"_blank\" rel=\"noopener\">http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753</a> （地之一）和<a href=\"http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752\" target=\"_blank\" rel=\"noopener\">http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752</a> （地址二），多打开了几个别的城市进行查看，最后结论：101010100参数一城市的id值，1537709265753参数二时间戳（毫秒级）。<br><img src=\"tiaoshi.jpg\" alt=\"调试&amp;&amp;分析调试&amp;&amp;分析\"></p>\n<h4 id=\"获取城市id\"><a href=\"#获取城市id\" class=\"headerlink\" title=\"获取城市id\"></a>获取城市id</h4><pre><code>在官网反反复复尝试获取城市的数据，发个城市id有几个规律：\n</code></pre><ul>\n<li>城市id由9位数字组成(可能大家觉得感觉有点废话了，别急往后看)，例如：北京101010100。</li>\n<li>城市id的第三位，第四位是表示省份（免费普及一下：中国34个省级行政区域，包括23个省，5个自治区，4个直辖市，2个特别行政区），01-北京，02-上海，03-天津，04-重庆。。。34-台湾。</li>\n<li>后三位尾数，针对于直辖市，尾数从000开始计数，非直辖市尾数从001开始计数。</li>\n<li>天气网数据细到乡镇，街道。乡镇的id：101080503(cityid) + xxx(数字，001开始)，12位组成；街道数据过于细致，没必要获取，而且本人能力有限，只初始化了到城市级别的的数据。</li>\n<li>额外赠送：中国每个省份的城市最大值位21，代码中会用到。</li>\n</ul>\n<p>知道规律，也了解了request url，response，就可以搞定城市id的数据源了。解决方法如下：</p>\n<ul>\n<li>语言：python</li>\n<li>思想：依据id的范围生成范围id，requests去get请求，获取结果</li>\n<li>要点：省份的标志位01～04位直辖市，05～34非直辖市，城市的标志位01～23即可；header必须含有Referer值，应该用来做一个访问标识response返回值类型是string，但是weatherinfo的信息为json，需转化。不多说，直接上代码：<br><img src=\"id.jpg\" alt=\"城市id值生成城市id值生成\"></li>\n</ul>\n<h4 id=\"数据入库\"><a href=\"#数据入库\" class=\"headerlink\" title=\"数据入库\"></a>数据入库</h4><p>数据库决定直接用sqlite，主要考虑到数据库的可移植性，git项目直接运行就可以，不用额外配置数据库，而且单张表，数据量不会很大，性能没有太高要求。python + requests + sqlalchemy + db，玩py的不知道sqlalchemy&amp;&amp;requests，自己赶快恶补一下吧。。。废话也不多说，git项目看db.py文件，创建表以及数据库见下图：<br><img src=\"db.jpg\" alt=\"数据库创建&amp;&amp;表查询数据库创建&amp;&amp;表查询\"><br>城市id获取的整理流程设计ok，执行python citys.py就可以见证奇迹。不过，这个奇迹有点慢而已，我的本大概执行了30个小时左右，后来想的是python配合多进程（GIL机制，不要使用多线程）来提速，搞了个pool在那，不过我把多进程注释了，有兴趣的人可以去试下多进程。</p>\n<h4 id=\"api接口服务\"><a href=\"#api接口服务\" class=\"headerlink\" title=\"api接口服务\"></a>api接口服务</h4><p>做web服务，flask是不错的选择，简单易用，性能也不差。用blueprint做了个weather的接口，但是信息由地址一与地址二组成，地址一主要用来获取最高/最低温度，地址二获取实时的天气相关信息，请求的地址参数均由第三步回去的城市id以及时间戳。</p>\n<p>requests基础：<a href=\"http://docs.python-requests.org/zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</a></p>\n<p>请求的时候，我把浏览器正常访问的header都记录，请求成功，把结果封装json返回。在controller那，我对请求方式，请求参数做了限制，加强接口的严谨性。详细自己看代码，post请求的参数那块，args，form，json，get_json分不清的，请自行百度，我做了个小技巧：<br><img src=\"api.jpg\" alt=\"获取post请求参数获取post请求参数\"></p>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>这里介绍2种测试方式，postman + curl。</p>\n<p>curl：curl -X POST <a href=\"http://127.0.0.1:8888/weather/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/weather/</a> -H ‘Content-Type: application/json’ -d ‘{“city”: “昌平”}’ | python -m json.tool</p>\n<p>postman：图形化界面。。。自己点把</p>\n<p>没有curl命令的，自己搞下，做开发的话，不知道curl，会很low的，看下结果，完美：<br><img src=\"test.jpg\" alt=\"成果\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>代码很简单，不过在获取数据源id上花费了一些时间，后来一想，城市id的表有个问题，表有：id，cityname，cityid 3个字段，没有记录省份，查询同名的城市可能会有问题，后续在改吧。。。就先到这里了，我是程序猿，python程序猿。</p>\n<p>二期功能：定时任务 + 短信提醒 + 邮件报警</p>\n<p>项目git地址：<a href=\"https://github.com/GIS90/weathers\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/weathers</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><pre><code>还再找免费的天气API接口吗，这里给你答案\n开发语言：python\n技术方案：requests + sqlalchemy\n感谢python，（数据源：官方中国天气网http://www.weather.com.cn）\n</code></pre>","more":"<hr>\n\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>​​​偶然工作中用到了天气状况数据，后来就不需要了，但还是想做一个天气的，因为想给自己的女票做个天气短信提醒。说搞就搞，第一想法就是apistore，上去了之后，好贵。。。。。。<!-- more -->百度一了一下，全都不好用，决定自己写一个，自己动手丰衣足食嘛。再百度天气，中国天气网是第一条，还是官方的，说明应该不错，点进去之后，看了数据，需求基本满足了，那么，走起。<br><img src=\"baidu.jpg\" alt=\"百度搜索引擎（本人声明，不是百度员工）\"></p>\n<h4 id=\"查询数据源\"><a href=\"#查询数据源\" class=\"headerlink\" title=\"查询数据源\"></a>查询数据源</h4><p>google打开天气网，搜了下北京天气，alt+cmd+i打开调试模式（mac快快捷键），network查看数据来源。经过分析，基本可以确定数据主要来源于2个接口：<a href=\"http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753\" target=\"_blank\" rel=\"noopener\">http://d1.weather.com.cn/dingzhi/101010100.html?_=1537709265753</a> （地之一）和<a href=\"http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752\" target=\"_blank\" rel=\"noopener\">http://d1.weather.com.cn/sk_2d/101010100.html?_=1537709265752</a> （地址二），多打开了几个别的城市进行查看，最后结论：101010100参数一城市的id值，1537709265753参数二时间戳（毫秒级）。<br><img src=\"tiaoshi.jpg\" alt=\"调试&amp;&amp;分析调试&amp;&amp;分析\"></p>\n<h4 id=\"获取城市id\"><a href=\"#获取城市id\" class=\"headerlink\" title=\"获取城市id\"></a>获取城市id</h4><pre><code>在官网反反复复尝试获取城市的数据，发个城市id有几个规律：\n</code></pre><ul>\n<li>城市id由9位数字组成(可能大家觉得感觉有点废话了，别急往后看)，例如：北京101010100。</li>\n<li>城市id的第三位，第四位是表示省份（免费普及一下：中国34个省级行政区域，包括23个省，5个自治区，4个直辖市，2个特别行政区），01-北京，02-上海，03-天津，04-重庆。。。34-台湾。</li>\n<li>后三位尾数，针对于直辖市，尾数从000开始计数，非直辖市尾数从001开始计数。</li>\n<li>天气网数据细到乡镇，街道。乡镇的id：101080503(cityid) + xxx(数字，001开始)，12位组成；街道数据过于细致，没必要获取，而且本人能力有限，只初始化了到城市级别的的数据。</li>\n<li>额外赠送：中国每个省份的城市最大值位21，代码中会用到。</li>\n</ul>\n<p>知道规律，也了解了request url，response，就可以搞定城市id的数据源了。解决方法如下：</p>\n<ul>\n<li>语言：python</li>\n<li>思想：依据id的范围生成范围id，requests去get请求，获取结果</li>\n<li>要点：省份的标志位01～04位直辖市，05～34非直辖市，城市的标志位01～23即可；header必须含有Referer值，应该用来做一个访问标识response返回值类型是string，但是weatherinfo的信息为json，需转化。不多说，直接上代码：<br><img src=\"id.jpg\" alt=\"城市id值生成城市id值生成\"></li>\n</ul>\n<h4 id=\"数据入库\"><a href=\"#数据入库\" class=\"headerlink\" title=\"数据入库\"></a>数据入库</h4><p>数据库决定直接用sqlite，主要考虑到数据库的可移植性，git项目直接运行就可以，不用额外配置数据库，而且单张表，数据量不会很大，性能没有太高要求。python + requests + sqlalchemy + db，玩py的不知道sqlalchemy&amp;&amp;requests，自己赶快恶补一下吧。。。废话也不多说，git项目看db.py文件，创建表以及数据库见下图：<br><img src=\"db.jpg\" alt=\"数据库创建&amp;&amp;表查询数据库创建&amp;&amp;表查询\"><br>城市id获取的整理流程设计ok，执行python citys.py就可以见证奇迹。不过，这个奇迹有点慢而已，我的本大概执行了30个小时左右，后来想的是python配合多进程（GIL机制，不要使用多线程）来提速，搞了个pool在那，不过我把多进程注释了，有兴趣的人可以去试下多进程。</p>\n<h4 id=\"api接口服务\"><a href=\"#api接口服务\" class=\"headerlink\" title=\"api接口服务\"></a>api接口服务</h4><p>做web服务，flask是不错的选择，简单易用，性能也不差。用blueprint做了个weather的接口，但是信息由地址一与地址二组成，地址一主要用来获取最高/最低温度，地址二获取实时的天气相关信息，请求的地址参数均由第三步回去的城市id以及时间戳。</p>\n<p>requests基础：<a href=\"http://docs.python-requests.org/zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</a></p>\n<p>请求的时候，我把浏览器正常访问的header都记录，请求成功，把结果封装json返回。在controller那，我对请求方式，请求参数做了限制，加强接口的严谨性。详细自己看代码，post请求的参数那块，args，form，json，get_json分不清的，请自行百度，我做了个小技巧：<br><img src=\"api.jpg\" alt=\"获取post请求参数获取post请求参数\"></p>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>这里介绍2种测试方式，postman + curl。</p>\n<p>curl：curl -X POST <a href=\"http://127.0.0.1:8888/weather/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8888/weather/</a> -H ‘Content-Type: application/json’ -d ‘{“city”: “昌平”}’ | python -m json.tool</p>\n<p>postman：图形化界面。。。自己点把</p>\n<p>没有curl命令的，自己搞下，做开发的话，不知道curl，会很low的，看下结果，完美：<br><img src=\"test.jpg\" alt=\"成果\"></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>代码很简单，不过在获取数据源id上花费了一些时间，后来一想，城市id的表有个问题，表有：id，cityname，cityid 3个字段，没有记录省份，查询同名的城市可能会有问题，后续在改吧。。。就先到这里了，我是程序猿，python程序猿。</p>\n<p>二期功能：定时任务 + 短信提醒 + 邮件报警</p>\n<p>项目git地址：<a href=\"https://github.com/GIS90/weathers\" target=\"_blank\" rel=\"noopener\">https://github.com/GIS90/weathers</a></p>"},{"title":"python处理ArcGIS多图层矢量裁剪","comments":0,"keywords":"python, ArcGIS, 脚本, 程序","desc":"python编写的脚本自动化处理ArcGIS多图层矢量裁剪","abbrlink":61166,"date":"2015-10-12T07:55:30.000Z","_content":"\n{% note primary %}\n今天给大家带来利用python调用ArcGIS函数实现矢量多图层裁剪，出现问题给我留言，帮你解决，不过我都调试好了，问题不大。python的使用我就不叫大家了(主要我也在自学阶段)，代码很少但是很实用，所以把自己的东西跟大家***share***一下，以后会陆续跟大家一起分享交流，希望对大家有帮助。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> 环境相关\n\n开发语言：python2\n系统：win7\n\n> 相关代码\n\n    # -*- coding: utf-8 -*-\n\n    # 导入包\n    import arcpy\n    import os\n    import datetime\n\n\n    startTime=datetime.datetime.now()\n    print \"python tool start--------^_^---------\"\n\n    # 裁剪文件的工作空间\n    InputSpace=r\"F:\\data\\fuzhou_data\"\n    # 结果文件的存放目录\n    OutputSpace=r\"F:\\data\\fuzhou_map_Demo\"\n    # 被裁剪文件路径+名称\n    clip_features=r\"F:\\data\\clip\\clip.shp\"\n\n    # 实现的主体，添加个变量用于处理次数\n    num=1\n    # 设置工作空间\n    arcpy.env.workspace=InputSpace\n    for in_features in arcpy.ListFiles(\"*.shp\"):\n        clipName=os.path.splitext(in_features)[0]\n        out_features=os.path.join(OutputSpace,clipName)\n        cluster_tolerance=\"0.0000001 DecimalDegrees\"\n        print \"Execute num=\", num, \"Chip feature is:\", clipName\n\n        try:\n            arcpy.Clip_analysis(in_features, clip_features,\n            out_features, cluster_tolerance)\n            print \"Finish\"\n            num=num+1\n        except Exception as e:\n            print e.message\n\n    endTime=datetime.datetime.now()\n    exeTime=(endTime-startTime).seconds\n    print \"sum=\", num, \"All finish, cost time is :\", exeTime,\"s\"\n","source":"_posts/Python-处理ArcGIS多图层矢量裁剪.md","raw":"---\ntitle: python处理ArcGIS多图层矢量裁剪\ncategories:\n  - [ArcGIS]\n  - [Python]\ntags: [Python, ArcGIS, Python程序篇]\ncomments: false\nkeywords: python, ArcGIS, 脚本, 程序\ndesc: python编写的脚本自动化处理ArcGIS多图层矢量裁剪\nabbrlink: 61166\ndate: 2015-10-12 15:55:30\n---\n\n{% note primary %}\n今天给大家带来利用python调用ArcGIS函数实现矢量多图层裁剪，出现问题给我留言，帮你解决，不过我都调试好了，问题不大。python的使用我就不叫大家了(主要我也在自学阶段)，代码很少但是很实用，所以把自己的东西跟大家***share***一下，以后会陆续跟大家一起分享交流，希望对大家有帮助。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n> 环境相关\n\n开发语言：python2\n系统：win7\n\n> 相关代码\n\n    # -*- coding: utf-8 -*-\n\n    # 导入包\n    import arcpy\n    import os\n    import datetime\n\n\n    startTime=datetime.datetime.now()\n    print \"python tool start--------^_^---------\"\n\n    # 裁剪文件的工作空间\n    InputSpace=r\"F:\\data\\fuzhou_data\"\n    # 结果文件的存放目录\n    OutputSpace=r\"F:\\data\\fuzhou_map_Demo\"\n    # 被裁剪文件路径+名称\n    clip_features=r\"F:\\data\\clip\\clip.shp\"\n\n    # 实现的主体，添加个变量用于处理次数\n    num=1\n    # 设置工作空间\n    arcpy.env.workspace=InputSpace\n    for in_features in arcpy.ListFiles(\"*.shp\"):\n        clipName=os.path.splitext(in_features)[0]\n        out_features=os.path.join(OutputSpace,clipName)\n        cluster_tolerance=\"0.0000001 DecimalDegrees\"\n        print \"Execute num=\", num, \"Chip feature is:\", clipName\n\n        try:\n            arcpy.Clip_analysis(in_features, clip_features,\n            out_features, cluster_tolerance)\n            print \"Finish\"\n            num=num+1\n        except Exception as e:\n            print e.message\n\n    endTime=datetime.datetime.now()\n    exeTime=(endTime-startTime).seconds\n    print \"sum=\", num, \"All finish, cost time is :\", exeTime,\"s\"\n","slug":"Python-处理ArcGIS多图层矢量裁剪","published":1,"updated":"2019-12-22T11:59:59.797Z","layout":"post","photos":[],"link":"","_id":"ckcd0s2wl005ztabj8s589o82","content":"<div class=\"note primary\">\n            <p>今天给大家带来利用python调用ArcGIS函数实现矢量多图层裁剪，出现问题给我留言，帮你解决，不过我都调试好了，问题不大。python的使用我就不叫大家了(主要我也在自学阶段)，代码很少但是很实用，所以把自己的东西跟大家<strong><em>share</em></strong>一下，以后会陆续跟大家一起分享交流，希望对大家有帮助。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<blockquote>\n<p>环境相关</p>\n</blockquote>\n<p>开发语言：python2<br>系统：win7</p>\n<blockquote>\n<p>相关代码</p>\n</blockquote>\n<pre><code># -*- coding: utf-8 -*-\n\n# 导入包\nimport arcpy\nimport os\nimport datetime\n\n\nstartTime=datetime.datetime.now()\nprint &quot;python tool start--------^_^---------&quot;\n\n# 裁剪文件的工作空间\nInputSpace=r&quot;F:\\data\\fuzhou_data&quot;\n# 结果文件的存放目录\nOutputSpace=r&quot;F:\\data\\fuzhou_map_Demo&quot;\n# 被裁剪文件路径+名称\nclip_features=r&quot;F:\\data\\clip\\clip.shp&quot;\n\n# 实现的主体，添加个变量用于处理次数\nnum=1\n# 设置工作空间\narcpy.env.workspace=InputSpace\nfor in_features in arcpy.ListFiles(&quot;*.shp&quot;):\n    clipName=os.path.splitext(in_features)[0]\n    out_features=os.path.join(OutputSpace,clipName)\n    cluster_tolerance=&quot;0.0000001 DecimalDegrees&quot;\n    print &quot;Execute num=&quot;, num, &quot;Chip feature is:&quot;, clipName\n\n    try:\n        arcpy.Clip_analysis(in_features, clip_features,\n        out_features, cluster_tolerance)\n        print &quot;Finish&quot;\n        num=num+1\n    except Exception as e:\n        print e.message\n\nendTime=datetime.datetime.now()\nexeTime=(endTime-startTime).seconds\nprint &quot;sum=&quot;, num, &quot;All finish, cost time is :&quot;, exeTime,&quot;s&quot;\n</code></pre>","site":{"data":{}},"excerpt":"<div class=\"note primary\">\n            <p>今天给大家带来利用python调用ArcGIS函数实现矢量多图层裁剪，出现问题给我留言，帮你解决，不过我都调试好了，问题不大。python的使用我就不叫大家了(主要我也在自学阶段)，代码很少但是很实用，所以把自己的东西跟大家<strong><em>share</em></strong>一下，以后会陆续跟大家一起分享交流，希望对大家有帮助。</p>\n          </div>","more":"<hr>\n\n<blockquote>\n<p>环境相关</p>\n</blockquote>\n<p>开发语言：python2<br>系统：win7</p>\n<blockquote>\n<p>相关代码</p>\n</blockquote>\n<pre><code># -*- coding: utf-8 -*-\n\n# 导入包\nimport arcpy\nimport os\nimport datetime\n\n\nstartTime=datetime.datetime.now()\nprint &quot;python tool start--------^_^---------&quot;\n\n# 裁剪文件的工作空间\nInputSpace=r&quot;F:\\data\\fuzhou_data&quot;\n# 结果文件的存放目录\nOutputSpace=r&quot;F:\\data\\fuzhou_map_Demo&quot;\n# 被裁剪文件路径+名称\nclip_features=r&quot;F:\\data\\clip\\clip.shp&quot;\n\n# 实现的主体，添加个变量用于处理次数\nnum=1\n# 设置工作空间\narcpy.env.workspace=InputSpace\nfor in_features in arcpy.ListFiles(&quot;*.shp&quot;):\n    clipName=os.path.splitext(in_features)[0]\n    out_features=os.path.join(OutputSpace,clipName)\n    cluster_tolerance=&quot;0.0000001 DecimalDegrees&quot;\n    print &quot;Execute num=&quot;, num, &quot;Chip feature is:&quot;, clipName\n\n    try:\n        arcpy.Clip_analysis(in_features, clip_features,\n        out_features, cluster_tolerance)\n        print &quot;Finish&quot;\n        num=num+1\n    except Exception as e:\n        print e.message\n\nendTime=datetime.datetime.now()\nexeTime=(endTime-startTime).seconds\nprint &quot;sum=&quot;, num, &quot;All finish, cost time is :&quot;, exeTime,&quot;s&quot;\n</code></pre>"},{"title":"Python实现微信小机器人","comments":0,"desc":"Python开发的一个微信小机器人，智能化微信机器人由此诞生","keywords":"python, api, 图灵, 微信, 机器人, AI, 人工智能, 脚本, 程序","abbrlink":12618,"date":"2018-10-19T15:02:31.000Z","updated":"2018-10-19T15:02:31.000Z","_content":"\n### 背景\n{% note primary %}\n其实做这个微信小机器人的动机不纯，请勿见怪，也许我是一位假的程序猿😄。\n{% endnote %}\n\n>某天，我犯了我并不知道的错误，惹生气了女票，并且长达24h没有理我。我一看不行啊，总不能上班时间总一直抱着微信说话吧，而且最近微信小机器人貌似蛮火的，我也跟风，搞一搞。\n\n### 技术架构\n\n    python + itchat + 图灵机器人\n\n<!--more-->\n<hr />\n\n### 准备材料\n\n| id  |  name   |    Function    |\n|:---:|:-------:|:--------------:|\n|  1  | Mac电脑 |      开发      |\n|  2  |  手机   |                |\n|  3  | 微信号  |      微信      |\n|  4  |  网络   | 电脑、手机使用 |\n\n### 正文\n\n首先，先实现微信的登录、接受消息、发送消息等基本功能。只有先实现了最基础的发消息功能，才可以做出自动回复的小机器人，接下来一步步去实现。文章中主要用到了[itchat](https://itchat.readthedocs.io/zh/latest/)这个包，官方有简单的case。\n\n#### 登录\n我自己封装了一个运行的主方法，加了一些是否开启特殊人处理、bug日志处理的参数，enableCmdQR开启二维码登录。登录之后发现我的PC端微信被挤掉了。。。\n```\ndef run(is_unique=False, is_debug=False):\n    \"\"\"\n    main method enter\n    :param is_unique: is or not unique\n    :param is_debug: is or not debug\n    :return: None\n    \"\"\"\n    init_work()\n    global IS_UNIQUE, IS_DEBUG\n    IS_UNIQUE = is_unique\n    IS_DEBUG = is_debug\n    itchat.auto_login(hotReload=True, enableCmdQR=2)\n    itchat.run(True)\n```\n针对于***init_work()***这个方法，做了一个文件夹初始化的方法，用来记录日志、聊天信息。\n```\ndef init_work():\n    \"\"\"\n    initialize the chat user time file\n    :return: None\n    \"\"\"\n    user_file = get_default_refile()\n    if os.path.exists(user_file) and os.path.isfile(user_file):\n        return\n    open(user_file, 'a').close()\n    print 'init work of record user chat file is ok'\n\n\ndef get_default_refile():\n    \"\"\"\n    default record file\n    :return: file\n    \"\"\"\n    cur_path = os.path.abspath(os.path.dirname(os.path.abspath(__file__)))\n    user_file = cur_path + '/record_user.log'\n    return user_file\n```\n\n#### 个人消息\n注册各类型的消息，通过下列代码，微信可以接收、发送私聊的消息。itchat暂时支持接口TEXT, MAP, CARD, NOTE, SHARING, PICTURE这几种类型，因为用itacht是登录网页版微信进行操作，所以微信网页版支持这几种消息。\n```\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING, PICTURE])\ndef handler_text_msg(msg):\n    \"\"\"\n    auto reply messages [text, map, card, note, sharing] by friend or group\n    :param msg: wx message (dict)\n    :return: text message\n    \"\"\"\n    print msg.get('Type')\n    print json.dumps(msg)\n```\n参数msg是消息体，可以打印出来，是个标准的json，可以解析，举个最简单的例子，消息体自己慢慢看，我就说几种重要的。\n\n![itchat_msg](itchat_msg.png)\n\n```\n \"ToUserName\": 接受人微信ID,\n \"FromUserName\": 发送人微信ID,\n\"Content\": 微信内容\n\"Type\": 微信消息类型\n```\n发送消息\n```\nitchat.send(rely_msg_text, toUserName=form_user_name)\n```\nrely_msg_text：消息内容\ntoUserName：接受人ID，就是上面消息题解析的\n\n#### 群消息\n群消息也是一样，通过注册进行获取，但是获取全部的群消息太多了，我只选取了几个群进行消息监听。群消息体json在这里不做展示，几乎与chat消息体内容差不多，代码如下：\n```\n@itchat.msg_register([TEXT, SHARING, SYSTEM], isGroupChat=True)\ndef group_text_reply(msg):\n    print json.dumps(msg)\n    print '%s: %s' % (msg.get('ActualNickName'), msg.get('Text'))\n\n    monitor_chats = [\n                     # u'家族群',\n                     u'宝龙山&amp;保康！.宝龙山&amp;保康',\n                     u'媳妇私房钱'\n                    ]\n    chat_id_list = list()\n    for chat in monitor_chats:\n        if not chat:\n            continue\n```\n群消息类型不像chat那样类型那么多，只有几种。\n#### 注册图灵\n\n- 登录&&注册\n官网：http://www.tuling123.com/member/robot/index.jhtml\n![itchat_tuling_login](itchat_tuling_login.png)\n- 创建\n![itchat_tuling_create](itchat_tuling_create.png)\n- 设置\n![itchat_tuling_set](itchat_tuling_set.png)\n- apikey\n![itchat_tuling_key](itchat_tuling_key.png)\n\n#### 小机器人\n注册好小机器人之后，只需要查看[api教程](https://www.kancloud.cn/turing/www-tuling123-com/718229)进行http请求即可，代码如下：\n```\n\ndef reply_by_ai(msg):\n    \"\"\"\n    auto reply by ai robot\n    :param msg: message body by wx friend\n    :return: send message\n    \"\"\"\n    user_name = msg.get('FromUserName')\n    msg_type = msg.get('Type')\n    msg_text = msg.get('Text')\n    API_ROBOT_URL = 'http://openapi.tuling123.com/openapi/api/v2'\n    API_KEY = '65d96c7612e14a3ba8c6d43fa7a84111'\n    USER_ID = '113972'\n\n    payload = {\n        \"reqType\": 0,\n        \"perception\": {\n            \"inputText\": {\n                \"text\": msg_text\n            }\n        },\n        \"userInfo\": {\n            \"apiKey\": API_KEY,\n            \"userId\": USER_ID\n        }\n    }\n    payload = json.dumps(payload)\n    headers = {\"Content-Type\": \"application/json\"}\n\n    resp = requests.post(url=API_ROBOT_URL,\n                         headers=headers,\n                         data=payload)\n    try:\n        resp_json = resp.json()\n        code = resp_json.get('intent').get('code')\n        if resp.status_code == 200 and code >= 10000:\n            result = resp_json.get('results')[0]\n            rely_msg_text = result.get('values').get('text')\n        else:\n            rely_msg_text = \"小6好像出问题了, 正在通知主人回来抢修\"\n    except:\n        rely_msg_text = \"小6没有找到答案😭😭😭, 尝试换个话题吧\"\n    finally:\n        return rely_msg_text\n```\n\n#### 温馨提示\n\n+ 微信消息不要连续发，会被腾讯禁止一段时间内不能发消息\n\n### 总结\n\n总的来说，实现起来并不难，喜欢记录的同学后续可以打算把消息存到自己的DB里去。没事就喜欢捣鼓捣鼓，只有真的去搞了，才能亲身体验其中的奥秘～代码带来的快乐。\n\n### 学习资料\n\nITCHAT(py官方)：https://pypi.org/project/itchat/\nITCHAT(中文)：https://itchat.readthedocs.io/zh/latest/\n图灵API：https://www.kancloud.cn/turing/www-tuling123-com/718229\n\n\n### github\n\n我把项目上传到了github，有喜欢的同学下载看看，可直接运行。\n\n    微信小机器人：https://github.com/GIS90/itchatmy\n","source":"_posts/Python-实现微信小机器人.md","raw":"---\ntitle: Python实现微信小机器人\ncomments: false\ndesc: Python开发的一个微信小机器人，智能化微信机器人由此诞生\ncategories:\n  - [Python]\ntags: [Python, Python程序篇]\nkeywords: python, api, 图灵, 微信, 机器人, AI, 人工智能, 脚本, 程序\nabbrlink: 12618\ndate: 2018-10-19 23:02:31\nupdated: 2018-10-19 23:02:31\n---\n\n### 背景\n{% note primary %}\n其实做这个微信小机器人的动机不纯，请勿见怪，也许我是一位假的程序猿😄。\n{% endnote %}\n\n>某天，我犯了我并不知道的错误，惹生气了女票，并且长达24h没有理我。我一看不行啊，总不能上班时间总一直抱着微信说话吧，而且最近微信小机器人貌似蛮火的，我也跟风，搞一搞。\n\n### 技术架构\n\n    python + itchat + 图灵机器人\n\n<!--more-->\n<hr />\n\n### 准备材料\n\n| id  |  name   |    Function    |\n|:---:|:-------:|:--------------:|\n|  1  | Mac电脑 |      开发      |\n|  2  |  手机   |                |\n|  3  | 微信号  |      微信      |\n|  4  |  网络   | 电脑、手机使用 |\n\n### 正文\n\n首先，先实现微信的登录、接受消息、发送消息等基本功能。只有先实现了最基础的发消息功能，才可以做出自动回复的小机器人，接下来一步步去实现。文章中主要用到了[itchat](https://itchat.readthedocs.io/zh/latest/)这个包，官方有简单的case。\n\n#### 登录\n我自己封装了一个运行的主方法，加了一些是否开启特殊人处理、bug日志处理的参数，enableCmdQR开启二维码登录。登录之后发现我的PC端微信被挤掉了。。。\n```\ndef run(is_unique=False, is_debug=False):\n    \"\"\"\n    main method enter\n    :param is_unique: is or not unique\n    :param is_debug: is or not debug\n    :return: None\n    \"\"\"\n    init_work()\n    global IS_UNIQUE, IS_DEBUG\n    IS_UNIQUE = is_unique\n    IS_DEBUG = is_debug\n    itchat.auto_login(hotReload=True, enableCmdQR=2)\n    itchat.run(True)\n```\n针对于***init_work()***这个方法，做了一个文件夹初始化的方法，用来记录日志、聊天信息。\n```\ndef init_work():\n    \"\"\"\n    initialize the chat user time file\n    :return: None\n    \"\"\"\n    user_file = get_default_refile()\n    if os.path.exists(user_file) and os.path.isfile(user_file):\n        return\n    open(user_file, 'a').close()\n    print 'init work of record user chat file is ok'\n\n\ndef get_default_refile():\n    \"\"\"\n    default record file\n    :return: file\n    \"\"\"\n    cur_path = os.path.abspath(os.path.dirname(os.path.abspath(__file__)))\n    user_file = cur_path + '/record_user.log'\n    return user_file\n```\n\n#### 个人消息\n注册各类型的消息，通过下列代码，微信可以接收、发送私聊的消息。itchat暂时支持接口TEXT, MAP, CARD, NOTE, SHARING, PICTURE这几种类型，因为用itacht是登录网页版微信进行操作，所以微信网页版支持这几种消息。\n```\n@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING, PICTURE])\ndef handler_text_msg(msg):\n    \"\"\"\n    auto reply messages [text, map, card, note, sharing] by friend or group\n    :param msg: wx message (dict)\n    :return: text message\n    \"\"\"\n    print msg.get('Type')\n    print json.dumps(msg)\n```\n参数msg是消息体，可以打印出来，是个标准的json，可以解析，举个最简单的例子，消息体自己慢慢看，我就说几种重要的。\n\n![itchat_msg](itchat_msg.png)\n\n```\n \"ToUserName\": 接受人微信ID,\n \"FromUserName\": 发送人微信ID,\n\"Content\": 微信内容\n\"Type\": 微信消息类型\n```\n发送消息\n```\nitchat.send(rely_msg_text, toUserName=form_user_name)\n```\nrely_msg_text：消息内容\ntoUserName：接受人ID，就是上面消息题解析的\n\n#### 群消息\n群消息也是一样，通过注册进行获取，但是获取全部的群消息太多了，我只选取了几个群进行消息监听。群消息体json在这里不做展示，几乎与chat消息体内容差不多，代码如下：\n```\n@itchat.msg_register([TEXT, SHARING, SYSTEM], isGroupChat=True)\ndef group_text_reply(msg):\n    print json.dumps(msg)\n    print '%s: %s' % (msg.get('ActualNickName'), msg.get('Text'))\n\n    monitor_chats = [\n                     # u'家族群',\n                     u'宝龙山&amp;保康！.宝龙山&amp;保康',\n                     u'媳妇私房钱'\n                    ]\n    chat_id_list = list()\n    for chat in monitor_chats:\n        if not chat:\n            continue\n```\n群消息类型不像chat那样类型那么多，只有几种。\n#### 注册图灵\n\n- 登录&&注册\n官网：http://www.tuling123.com/member/robot/index.jhtml\n![itchat_tuling_login](itchat_tuling_login.png)\n- 创建\n![itchat_tuling_create](itchat_tuling_create.png)\n- 设置\n![itchat_tuling_set](itchat_tuling_set.png)\n- apikey\n![itchat_tuling_key](itchat_tuling_key.png)\n\n#### 小机器人\n注册好小机器人之后，只需要查看[api教程](https://www.kancloud.cn/turing/www-tuling123-com/718229)进行http请求即可，代码如下：\n```\n\ndef reply_by_ai(msg):\n    \"\"\"\n    auto reply by ai robot\n    :param msg: message body by wx friend\n    :return: send message\n    \"\"\"\n    user_name = msg.get('FromUserName')\n    msg_type = msg.get('Type')\n    msg_text = msg.get('Text')\n    API_ROBOT_URL = 'http://openapi.tuling123.com/openapi/api/v2'\n    API_KEY = '65d96c7612e14a3ba8c6d43fa7a84111'\n    USER_ID = '113972'\n\n    payload = {\n        \"reqType\": 0,\n        \"perception\": {\n            \"inputText\": {\n                \"text\": msg_text\n            }\n        },\n        \"userInfo\": {\n            \"apiKey\": API_KEY,\n            \"userId\": USER_ID\n        }\n    }\n    payload = json.dumps(payload)\n    headers = {\"Content-Type\": \"application/json\"}\n\n    resp = requests.post(url=API_ROBOT_URL,\n                         headers=headers,\n                         data=payload)\n    try:\n        resp_json = resp.json()\n        code = resp_json.get('intent').get('code')\n        if resp.status_code == 200 and code >= 10000:\n            result = resp_json.get('results')[0]\n            rely_msg_text = result.get('values').get('text')\n        else:\n            rely_msg_text = \"小6好像出问题了, 正在通知主人回来抢修\"\n    except:\n        rely_msg_text = \"小6没有找到答案😭😭😭, 尝试换个话题吧\"\n    finally:\n        return rely_msg_text\n```\n\n#### 温馨提示\n\n+ 微信消息不要连续发，会被腾讯禁止一段时间内不能发消息\n\n### 总结\n\n总的来说，实现起来并不难，喜欢记录的同学后续可以打算把消息存到自己的DB里去。没事就喜欢捣鼓捣鼓，只有真的去搞了，才能亲身体验其中的奥秘～代码带来的快乐。\n\n### 学习资料\n\nITCHAT(py官方)：https://pypi.org/project/itchat/\nITCHAT(中文)：https://itchat.readthedocs.io/zh/latest/\n图灵API：https://www.kancloud.cn/turing/www-tuling123-com/718229\n\n\n### github\n\n我把项目上传到了github，有喜欢的同学下载看看，可直接运行。\n\n    微信小机器人：https://github.com/GIS90/itchatmy\n","slug":"Python-实现微信小机器人","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2wo0060tabju9vs2cwr","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>其实做这个微信小机器人的动机不纯，请勿见怪，也许我是一位假的程序猿😄。</p>\n          </div>\n<blockquote>\n<p>某天，我犯了我并不知道的错误，惹生气了女票，并且长达24h没有理我。我一看不行啊，总不能上班时间总一直抱着微信说话吧，而且最近微信小机器人貌似蛮火的，我也跟风，搞一搞。</p>\n</blockquote>\n<h3 id=\"技术架构\"><a href=\"#技术架构\" class=\"headerlink\" title=\"技术架构\"></a>技术架构</h3><pre><code>python + itchat + 图灵机器人\n</code></pre><a id=\"more\"></a>\n<hr>\n\n<h3 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Mac电脑</td>\n<td style=\"text-align:center\">开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">手机</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">微信号</td>\n<td style=\"text-align:center\">微信</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">网络</td>\n<td style=\"text-align:center\">电脑、手机使用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>首先，先实现微信的登录、接受消息、发送消息等基本功能。只有先实现了最基础的发消息功能，才可以做出自动回复的小机器人，接下来一步步去实现。文章中主要用到了<a href=\"https://itchat.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">itchat</a>这个包，官方有简单的case。</p>\n<h4 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>我自己封装了一个运行的主方法，加了一些是否开启特殊人处理、bug日志处理的参数，enableCmdQR开启二维码登录。登录之后发现我的PC端微信被挤掉了。。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def run(is_unique=False, is_debug=False):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    main method enter</span><br><span class=\"line\">    :param is_unique: is or not unique</span><br><span class=\"line\">    :param is_debug: is or not debug</span><br><span class=\"line\">    :return: None</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    init_work()</span><br><span class=\"line\">    global IS_UNIQUE, IS_DEBUG</span><br><span class=\"line\">    IS_UNIQUE = is_unique</span><br><span class=\"line\">    IS_DEBUG = is_debug</span><br><span class=\"line\">    itchat.auto_login(hotReload=True, enableCmdQR=2)</span><br><span class=\"line\">    itchat.run(True)</span><br></pre></td></tr></table></figure></p>\n<p>针对于<strong><em>init_work()</em></strong>这个方法，做了一个文件夹初始化的方法，用来记录日志、聊天信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def init_work():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    initialize the chat user time file</span><br><span class=\"line\">    :return: None</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    user_file = get_default_refile()</span><br><span class=\"line\">    if os.path.exists(user_file) and os.path.isfile(user_file):</span><br><span class=\"line\">        return</span><br><span class=\"line\">    open(user_file, &apos;a&apos;).close()</span><br><span class=\"line\">    print &apos;init work of record user chat file is ok&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_default_refile():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    default record file</span><br><span class=\"line\">    :return: file</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    cur_path = os.path.abspath(os.path.dirname(os.path.abspath(__file__)))</span><br><span class=\"line\">    user_file = cur_path + &apos;/record_user.log&apos;</span><br><span class=\"line\">    return user_file</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"个人消息\"><a href=\"#个人消息\" class=\"headerlink\" title=\"个人消息\"></a>个人消息</h4><p>注册各类型的消息，通过下列代码，微信可以接收、发送私聊的消息。itchat暂时支持接口TEXT, MAP, CARD, NOTE, SHARING, PICTURE这几种类型，因为用itacht是登录网页版微信进行操作，所以微信网页版支持这几种消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING, PICTURE])</span><br><span class=\"line\">def handler_text_msg(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    auto reply messages [text, map, card, note, sharing] by friend or group</span><br><span class=\"line\">    :param msg: wx message (dict)</span><br><span class=\"line\">    :return: text message</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    print msg.get(&apos;Type&apos;)</span><br><span class=\"line\">    print json.dumps(msg)</span><br></pre></td></tr></table></figure></p>\n<p>参数msg是消息体，可以打印出来，是个标准的json，可以解析，举个最简单的例子，消息体自己慢慢看，我就说几种重要的。</p>\n<p><img src=\"itchat_msg.png\" alt=\"itchat_msg\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &quot;ToUserName&quot;: 接受人微信ID,</span><br><span class=\"line\"> &quot;FromUserName&quot;: 发送人微信ID,</span><br><span class=\"line\">&quot;Content&quot;: 微信内容</span><br><span class=\"line\">&quot;Type&quot;: 微信消息类型</span><br></pre></td></tr></table></figure>\n<p>发送消息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">itchat.send(rely_msg_text, toUserName=form_user_name)</span><br></pre></td></tr></table></figure></p>\n<p>rely_msg_text：消息内容<br>toUserName：接受人ID，就是上面消息题解析的</p>\n<h4 id=\"群消息\"><a href=\"#群消息\" class=\"headerlink\" title=\"群消息\"></a>群消息</h4><p>群消息也是一样，通过注册进行获取，但是获取全部的群消息太多了，我只选取了几个群进行消息监听。群消息体json在这里不做展示，几乎与chat消息体内容差不多，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@itchat.msg_register([TEXT, SHARING, SYSTEM], isGroupChat=True)</span><br><span class=\"line\">def group_text_reply(msg):</span><br><span class=\"line\">    print json.dumps(msg)</span><br><span class=\"line\">    print &apos;%s: %s&apos; % (msg.get(&apos;ActualNickName&apos;), msg.get(&apos;Text&apos;))</span><br><span class=\"line\"></span><br><span class=\"line\">    monitor_chats = [</span><br><span class=\"line\">                     # u&apos;家族群&apos;,</span><br><span class=\"line\">                     u&apos;宝龙山&amp;amp;保康！.宝龙山&amp;amp;保康&apos;,</span><br><span class=\"line\">                     u&apos;媳妇私房钱&apos;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">    chat_id_list = list()</span><br><span class=\"line\">    for chat in monitor_chats:</span><br><span class=\"line\">        if not chat:</span><br><span class=\"line\">            continue</span><br></pre></td></tr></table></figure></p>\n<p>群消息类型不像chat那样类型那么多，只有几种。</p>\n<h4 id=\"注册图灵\"><a href=\"#注册图灵\" class=\"headerlink\" title=\"注册图灵\"></a>注册图灵</h4><ul>\n<li>登录&amp;&amp;注册<br>官网：<a href=\"http://www.tuling123.com/member/robot/index.jhtml\" target=\"_blank\" rel=\"noopener\">http://www.tuling123.com/member/robot/index.jhtml</a><br><img src=\"itchat_tuling_login.png\" alt=\"itchat_tuling_login\"></li>\n<li>创建<br><img src=\"itchat_tuling_create.png\" alt=\"itchat_tuling_create\"></li>\n<li>设置<br><img src=\"itchat_tuling_set.png\" alt=\"itchat_tuling_set\"></li>\n<li>apikey<br><img src=\"itchat_tuling_key.png\" alt=\"itchat_tuling_key\"></li>\n</ul>\n<h4 id=\"小机器人\"><a href=\"#小机器人\" class=\"headerlink\" title=\"小机器人\"></a>小机器人</h4><p>注册好小机器人之后，只需要查看<a href=\"https://www.kancloud.cn/turing/www-tuling123-com/718229\" target=\"_blank\" rel=\"noopener\">api教程</a>进行http请求即可，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def reply_by_ai(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    auto reply by ai robot</span><br><span class=\"line\">    :param msg: message body by wx friend</span><br><span class=\"line\">    :return: send message</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    user_name = msg.get(&apos;FromUserName&apos;)</span><br><span class=\"line\">    msg_type = msg.get(&apos;Type&apos;)</span><br><span class=\"line\">    msg_text = msg.get(&apos;Text&apos;)</span><br><span class=\"line\">    API_ROBOT_URL = &apos;http://openapi.tuling123.com/openapi/api/v2&apos;</span><br><span class=\"line\">    API_KEY = &apos;65d96c7612e14a3ba8c6d43fa7a84111&apos;</span><br><span class=\"line\">    USER_ID = &apos;113972&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    payload = &#123;</span><br><span class=\"line\">        &quot;reqType&quot;: 0,</span><br><span class=\"line\">        &quot;perception&quot;: &#123;</span><br><span class=\"line\">            &quot;inputText&quot;: &#123;</span><br><span class=\"line\">                &quot;text&quot;: msg_text</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;userInfo&quot;: &#123;</span><br><span class=\"line\">            &quot;apiKey&quot;: API_KEY,</span><br><span class=\"line\">            &quot;userId&quot;: USER_ID</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    payload = json.dumps(payload)</span><br><span class=\"line\">    headers = &#123;&quot;Content-Type&quot;: &quot;application/json&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    resp = requests.post(url=API_ROBOT_URL,</span><br><span class=\"line\">                         headers=headers,</span><br><span class=\"line\">                         data=payload)</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        resp_json = resp.json()</span><br><span class=\"line\">        code = resp_json.get(&apos;intent&apos;).get(&apos;code&apos;)</span><br><span class=\"line\">        if resp.status_code == 200 and code &gt;= 10000:</span><br><span class=\"line\">            result = resp_json.get(&apos;results&apos;)[0]</span><br><span class=\"line\">            rely_msg_text = result.get(&apos;values&apos;).get(&apos;text&apos;)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            rely_msg_text = &quot;小6好像出问题了, 正在通知主人回来抢修&quot;</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        rely_msg_text = &quot;小6没有找到答案😭😭😭, 尝试换个话题吧&quot;</span><br><span class=\"line\">    finally:</span><br><span class=\"line\">        return rely_msg_text</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h4><ul>\n<li>微信消息不要连续发，会被腾讯禁止一段时间内不能发消息</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总的来说，实现起来并不难，喜欢记录的同学后续可以打算把消息存到自己的DB里去。没事就喜欢捣鼓捣鼓，只有真的去搞了，才能亲身体验其中的奥秘～代码带来的快乐。</p>\n<h3 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h3><p>ITCHAT(py官方)：<a href=\"https://pypi.org/project/itchat/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/itchat/</a><br>ITCHAT(中文)：<a href=\"https://itchat.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">https://itchat.readthedocs.io/zh/latest/</a><br>图灵API：<a href=\"https://www.kancloud.cn/turing/www-tuling123-com/718229\" target=\"_blank\" rel=\"noopener\">https://www.kancloud.cn/turing/www-tuling123-com/718229</a></p>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p>我把项目上传到了github，有喜欢的同学下载看看，可直接运行。</p>\n<pre><code>微信小机器人：https://github.com/GIS90/itchatmy\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>其实做这个微信小机器人的动机不纯，请勿见怪，也许我是一位假的程序猿😄。</p>\n          </div>\n<blockquote>\n<p>某天，我犯了我并不知道的错误，惹生气了女票，并且长达24h没有理我。我一看不行啊，总不能上班时间总一直抱着微信说话吧，而且最近微信小机器人貌似蛮火的，我也跟风，搞一搞。</p>\n</blockquote>\n<h3 id=\"技术架构\"><a href=\"#技术架构\" class=\"headerlink\" title=\"技术架构\"></a>技术架构</h3><pre><code>python + itchat + 图灵机器人\n</code></pre>","more":"<hr>\n\n<h3 id=\"准备材料\"><a href=\"#准备材料\" class=\"headerlink\" title=\"准备材料\"></a>准备材料</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Mac电脑</td>\n<td style=\"text-align:center\">开发</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">手机</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">微信号</td>\n<td style=\"text-align:center\">微信</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">网络</td>\n<td style=\"text-align:center\">电脑、手机使用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>首先，先实现微信的登录、接受消息、发送消息等基本功能。只有先实现了最基础的发消息功能，才可以做出自动回复的小机器人，接下来一步步去实现。文章中主要用到了<a href=\"https://itchat.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">itchat</a>这个包，官方有简单的case。</p>\n<h4 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h4><p>我自己封装了一个运行的主方法，加了一些是否开启特殊人处理、bug日志处理的参数，enableCmdQR开启二维码登录。登录之后发现我的PC端微信被挤掉了。。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def run(is_unique=False, is_debug=False):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    main method enter</span><br><span class=\"line\">    :param is_unique: is or not unique</span><br><span class=\"line\">    :param is_debug: is or not debug</span><br><span class=\"line\">    :return: None</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    init_work()</span><br><span class=\"line\">    global IS_UNIQUE, IS_DEBUG</span><br><span class=\"line\">    IS_UNIQUE = is_unique</span><br><span class=\"line\">    IS_DEBUG = is_debug</span><br><span class=\"line\">    itchat.auto_login(hotReload=True, enableCmdQR=2)</span><br><span class=\"line\">    itchat.run(True)</span><br></pre></td></tr></table></figure></p>\n<p>针对于<strong><em>init_work()</em></strong>这个方法，做了一个文件夹初始化的方法，用来记录日志、聊天信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def init_work():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    initialize the chat user time file</span><br><span class=\"line\">    :return: None</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    user_file = get_default_refile()</span><br><span class=\"line\">    if os.path.exists(user_file) and os.path.isfile(user_file):</span><br><span class=\"line\">        return</span><br><span class=\"line\">    open(user_file, &apos;a&apos;).close()</span><br><span class=\"line\">    print &apos;init work of record user chat file is ok&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_default_refile():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    default record file</span><br><span class=\"line\">    :return: file</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    cur_path = os.path.abspath(os.path.dirname(os.path.abspath(__file__)))</span><br><span class=\"line\">    user_file = cur_path + &apos;/record_user.log&apos;</span><br><span class=\"line\">    return user_file</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"个人消息\"><a href=\"#个人消息\" class=\"headerlink\" title=\"个人消息\"></a>个人消息</h4><p>注册各类型的消息，通过下列代码，微信可以接收、发送私聊的消息。itchat暂时支持接口TEXT, MAP, CARD, NOTE, SHARING, PICTURE这几种类型，因为用itacht是登录网页版微信进行操作，所以微信网页版支持这几种消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING, PICTURE])</span><br><span class=\"line\">def handler_text_msg(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    auto reply messages [text, map, card, note, sharing] by friend or group</span><br><span class=\"line\">    :param msg: wx message (dict)</span><br><span class=\"line\">    :return: text message</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    print msg.get(&apos;Type&apos;)</span><br><span class=\"line\">    print json.dumps(msg)</span><br></pre></td></tr></table></figure></p>\n<p>参数msg是消息体，可以打印出来，是个标准的json，可以解析，举个最简单的例子，消息体自己慢慢看，我就说几种重要的。</p>\n<p><img src=\"itchat_msg.png\" alt=\"itchat_msg\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &quot;ToUserName&quot;: 接受人微信ID,</span><br><span class=\"line\"> &quot;FromUserName&quot;: 发送人微信ID,</span><br><span class=\"line\">&quot;Content&quot;: 微信内容</span><br><span class=\"line\">&quot;Type&quot;: 微信消息类型</span><br></pre></td></tr></table></figure>\n<p>发送消息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">itchat.send(rely_msg_text, toUserName=form_user_name)</span><br></pre></td></tr></table></figure></p>\n<p>rely_msg_text：消息内容<br>toUserName：接受人ID，就是上面消息题解析的</p>\n<h4 id=\"群消息\"><a href=\"#群消息\" class=\"headerlink\" title=\"群消息\"></a>群消息</h4><p>群消息也是一样，通过注册进行获取，但是获取全部的群消息太多了，我只选取了几个群进行消息监听。群消息体json在这里不做展示，几乎与chat消息体内容差不多，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@itchat.msg_register([TEXT, SHARING, SYSTEM], isGroupChat=True)</span><br><span class=\"line\">def group_text_reply(msg):</span><br><span class=\"line\">    print json.dumps(msg)</span><br><span class=\"line\">    print &apos;%s: %s&apos; % (msg.get(&apos;ActualNickName&apos;), msg.get(&apos;Text&apos;))</span><br><span class=\"line\"></span><br><span class=\"line\">    monitor_chats = [</span><br><span class=\"line\">                     # u&apos;家族群&apos;,</span><br><span class=\"line\">                     u&apos;宝龙山&amp;amp;保康！.宝龙山&amp;amp;保康&apos;,</span><br><span class=\"line\">                     u&apos;媳妇私房钱&apos;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">    chat_id_list = list()</span><br><span class=\"line\">    for chat in monitor_chats:</span><br><span class=\"line\">        if not chat:</span><br><span class=\"line\">            continue</span><br></pre></td></tr></table></figure></p>\n<p>群消息类型不像chat那样类型那么多，只有几种。</p>\n<h4 id=\"注册图灵\"><a href=\"#注册图灵\" class=\"headerlink\" title=\"注册图灵\"></a>注册图灵</h4><ul>\n<li>登录&amp;&amp;注册<br>官网：<a href=\"http://www.tuling123.com/member/robot/index.jhtml\" target=\"_blank\" rel=\"noopener\">http://www.tuling123.com/member/robot/index.jhtml</a><br><img src=\"itchat_tuling_login.png\" alt=\"itchat_tuling_login\"></li>\n<li>创建<br><img src=\"itchat_tuling_create.png\" alt=\"itchat_tuling_create\"></li>\n<li>设置<br><img src=\"itchat_tuling_set.png\" alt=\"itchat_tuling_set\"></li>\n<li>apikey<br><img src=\"itchat_tuling_key.png\" alt=\"itchat_tuling_key\"></li>\n</ul>\n<h4 id=\"小机器人\"><a href=\"#小机器人\" class=\"headerlink\" title=\"小机器人\"></a>小机器人</h4><p>注册好小机器人之后，只需要查看<a href=\"https://www.kancloud.cn/turing/www-tuling123-com/718229\" target=\"_blank\" rel=\"noopener\">api教程</a>进行http请求即可，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">def reply_by_ai(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    auto reply by ai robot</span><br><span class=\"line\">    :param msg: message body by wx friend</span><br><span class=\"line\">    :return: send message</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    user_name = msg.get(&apos;FromUserName&apos;)</span><br><span class=\"line\">    msg_type = msg.get(&apos;Type&apos;)</span><br><span class=\"line\">    msg_text = msg.get(&apos;Text&apos;)</span><br><span class=\"line\">    API_ROBOT_URL = &apos;http://openapi.tuling123.com/openapi/api/v2&apos;</span><br><span class=\"line\">    API_KEY = &apos;65d96c7612e14a3ba8c6d43fa7a84111&apos;</span><br><span class=\"line\">    USER_ID = &apos;113972&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    payload = &#123;</span><br><span class=\"line\">        &quot;reqType&quot;: 0,</span><br><span class=\"line\">        &quot;perception&quot;: &#123;</span><br><span class=\"line\">            &quot;inputText&quot;: &#123;</span><br><span class=\"line\">                &quot;text&quot;: msg_text</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &quot;userInfo&quot;: &#123;</span><br><span class=\"line\">            &quot;apiKey&quot;: API_KEY,</span><br><span class=\"line\">            &quot;userId&quot;: USER_ID</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    payload = json.dumps(payload)</span><br><span class=\"line\">    headers = &#123;&quot;Content-Type&quot;: &quot;application/json&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    resp = requests.post(url=API_ROBOT_URL,</span><br><span class=\"line\">                         headers=headers,</span><br><span class=\"line\">                         data=payload)</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        resp_json = resp.json()</span><br><span class=\"line\">        code = resp_json.get(&apos;intent&apos;).get(&apos;code&apos;)</span><br><span class=\"line\">        if resp.status_code == 200 and code &gt;= 10000:</span><br><span class=\"line\">            result = resp_json.get(&apos;results&apos;)[0]</span><br><span class=\"line\">            rely_msg_text = result.get(&apos;values&apos;).get(&apos;text&apos;)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            rely_msg_text = &quot;小6好像出问题了, 正在通知主人回来抢修&quot;</span><br><span class=\"line\">    except:</span><br><span class=\"line\">        rely_msg_text = &quot;小6没有找到答案😭😭😭, 尝试换个话题吧&quot;</span><br><span class=\"line\">    finally:</span><br><span class=\"line\">        return rely_msg_text</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h4><ul>\n<li>微信消息不要连续发，会被腾讯禁止一段时间内不能发消息</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>总的来说，实现起来并不难，喜欢记录的同学后续可以打算把消息存到自己的DB里去。没事就喜欢捣鼓捣鼓，只有真的去搞了，才能亲身体验其中的奥秘～代码带来的快乐。</p>\n<h3 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h3><p>ITCHAT(py官方)：<a href=\"https://pypi.org/project/itchat/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/itchat/</a><br>ITCHAT(中文)：<a href=\"https://itchat.readthedocs.io/zh/latest/\" target=\"_blank\" rel=\"noopener\">https://itchat.readthedocs.io/zh/latest/</a><br>图灵API：<a href=\"https://www.kancloud.cn/turing/www-tuling123-com/718229\" target=\"_blank\" rel=\"noopener\">https://www.kancloud.cn/turing/www-tuling123-com/718229</a></p>\n<h3 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h3><p>我把项目上传到了github，有喜欢的同学下载看看，可直接运行。</p>\n<pre><code>微信小机器人：https://github.com/GIS90/itchatmy\n</code></pre>"},{"title":"爬虫之公司网站首页Title、Keywords、Description","comments":0,"top":false,"abbrlink":43681,"date":"2019-11-04T08:38:46.000Z","updated":"2019-11-05T08:38:46.000Z","desc":"利用python爬虫技术获取指定公司网站首页的Title、Keywords、Description","keywords":"python, 爬虫, requests, BeautifulSoup, bs4, Title, Keywords, Description, 脚本, 程序","_content":"\n{% note primary %}\n工作上涉及公司网站SEO优化相关的工作，但是在<font color='red' size=6.5>Title、Keywords、Description</font>这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的<font color='red' size=6.5>Keywords</font>。\n{% endnote %}\n\n<img src=\"/images/article_kwpachong.jpg\" style=\"border:1.5px solid blue\"/>\n\n<!--more-->\n<hr />\n\n废话也不多说了，关于爬虫相关使用的教程在前面以及介绍了，而且还有栗子，这里主要贴上相关代码。除了爬取数据之外，本程序还把处理好的数据进行分析选取出现频率最多***Keywords***，以及把爬取的数据存储到excel中。\n\n> 思路\n\n抓取数据 -> 解析 -> 存储 -> 分析\n\n> 特色\n\n在本次爬虫中，运用了***gevent协程***，玩python不清楚协程的同学请自行脑补。\n\n> 代码\n\n{% code %}\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\n\ndescribe:\n    用来抓取指定的物流公司官网的信息，包含title、keywords、description。\n\nusage:\n    python comp_infos_grab.py\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"PyGo\"\n    __time__ = \"2019/12/3\"\n    __mail__ = \"gaoming971366@163.com\"\n\n------------------------------------------------\n\"\"\"\nimport requests\nimport gevent\nimport xlrd\nimport xlwt\nfrom gevent import monkey; monkey.patch_all()\nfrom bs4 import BeautifulSoup\nimport jieba\n\nPUBLIC_URL_LIST = {\n    \"IML俄罗斯海外仓\": \"http://www.imlb2c.com/\",\n    \"旺集科技\": \"http://www.wangjigroup.com/\",\n    \"黑龙江俄速通国际物流有限公司\": \"http://www.ruston.cc/\",\n    \"AliExpress全球速卖通\": \"https://sell.aliexpress.com/zh/__pc/shipping/aliexpress_shipping.htm\",\n    \"中外运集装箱运输有限公司\": \"http://www.sinolines.com/\",\n    \"乐泰国际物流有限公司\": \"http://www.letaimzl.com/\",\n    \"NOEL诺艾尔集团\": \"http://www.noelworld.com/\",\n    \"慧承国际物流\": \"http://www.hcwuliu.com/\",\n    \"满洲里新颖国际货运代理有限公司\": \"http://www.mzlxinying.com/\",\n    \"运盟国际物流\": \"http://www.ym-trans.com/\",\n    \"如易科技\": \"http://www.ruecom.cn/\"\n}\n\n\nclass companyGrap(object):\n    _instance = None\n\n    def __init__(self):\n        super(companyGrap, self).__init__()\n\n    def __new__(cls, *args, **kwargs):\n        if companyGrap._instance is None:\n            companyGrap._instance = object.__new__(cls, *args, **kwargs)\n\n        return companyGrap._instance\n\n    def _get_infos(self, url):\n\n        results = dict()\n        results['url'] = url\n\n        if not url:\n            return results\n\n        payload = \"\"\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\"\n            }\n        response = requests.get(url, data=payload, headers=headers)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.content, 'html.parser')\n            head = soup.head\n            titles = head.find_all('title')\n            tl = titles[0].string if titles else \"\"\n            results['title'] = tl\n            keywords = head.find_all('meta', attrs={'name': 'keywords'})\n            kw = keywords[0].attrs.get('content') if keywords else \"\"\n            results['keyword'] = kw\n            descriptions = head.find_all('meta', attrs={'name': 'description'})\n            desc = descriptions[0].attrs.get('content') if descriptions else \"\"\n            results['description'] = desc\n\n        return results\n\n    def to_excel(self, datas, exlname):\n        \"\"\"\n        generate data of excel format to save\n        :param datas: excel data\n        :param exlname: excel name\n        :return: None, excel data\n        \"\"\"\n        f = xlwt.Workbook(encoding='utf-8')\n        sheet = f.add_sheet('sheet', cell_overwrite_ok=True)\n        EXCEL_TITLES = [\"ID\", \"NAME\", \"URL\", 'TITLE', 'KEYWORDS', 'DESCRIPTION', \"REMARK\"]\n        BUSINESS = \"BUSINESS\"\n\n        style_title = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = 'Times New Roman'\n        font.bold = True\n        font.color_index = 4\n        font.height = 220\n        style_title.font = font\n\n        style_content = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = 'Times New Roman'\n        font.bold = False\n        font.color_index = 4\n        font.height = 220\n        style_content.font = font\n\n        # 标题\n        for i in range(0, len(EXCEL_TITLES)):\n            sheet.write(0, i, EXCEL_TITLES[i], style_title)\n\n        # 合并 && 重写\n        sheet.write_merge(0, 0, 3, 5, BUSINESS, style_title)\n        sheet.write_merge(0, 1, 0, 0, 'ID', style_title)\n        sheet.write_merge(0, 1, 1, 1, 'NAME', style_title)\n        sheet.write_merge(0, 1, 2, 2, 'URL', style_title)\n        sheet.write_merge(0, 1, 6, 6, 'REMARK', style_title)\n        for i in range(3, 6):\n            sheet.write(1, i, EXCEL_TITLES[i], style_content)\n\n        row = 2\n        count = 1\n        for line in datas:\n            sheet.write(row, 0, count, style_title)\n            sheet.write(row, 1, line.get('name'), style_content)\n            sheet.write(row, 2, line.get('url'), style_content)\n            sheet.write(row, 3, line.get('title'), style_content)\n            sheet.write(row, 4, line.get('keyword'), style_content)\n            sheet.write(row, 5, line.get('description'), style_content)\n            row += 1\n            count += 1\n\n        f.save(exlname)\n\n    def _deal_url(self, k, v):\n        return self._get_infos(v)\n\n    def to_generate_kw(self, datas):\n        keywords_src = \"\"\n        for data in datas:\n            if not data:\n                continue\n            keywords_src += data.get('keyword')\n\n        keywords = jieba.lcut(keywords_src, cut_all=False)\n        counts = dict()\n        for word in keywords:\n            if not word:\n                continue\n            if isinstance(word, unicode):\n                word = word.encode('utf-8')\n            if word in ('|', ',', ' ', '-', '，'):\n                continue\n            counts[word] = counts.get(word, 0) + 1\n\n        ord_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)\n        for k in ord_counts:\n            print \"%s: %s\" % (k[0], k[1])\n\n    def run(self, to_excel=False):\n        \"\"\"\n        process run\n        :param to_excel:\n        :return:\n        \"\"\"\n        jobs = list()\n        names = list()\n        excel_datas = list()\n        for k, v in PUBLIC_URL_LIST.iteritems():\n            if not k or not v:\n                continue\n            names.append(k)\n            jobs.append(gevent.spawn(self._deal_url, k, v))\n        gevent.joinall(jobs)\n        for name, job in zip(names, jobs):\n            value = job.value\n            print '==================%s==================' % name\n            print 'Title: %s' % value.get('title')\n            print 'Keyword: %s' % value.get('keyword')\n            print 'Description: %s' % value.get('description')\n            value['name'] = name\n            excel_datas.append(value)\n\n        self.to_generate_kw(excel_datas)\n\n        if to_excel:\n            print '---------excel ok'\n            self.to_excel(excel_datas, 'companys.xls')\n\n\nif __name__ == '__main__':\n    companyGrap().run(to_excel=False)\n{% endcode %}\n","source":"_posts/Python-爬虫之公司网站首页.md","raw":"---\ntitle: 爬虫之公司网站首页Title、Keywords、Description\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, 爬虫系列, Python程序篇]\ntop: false\nabbrlink: 43681\ndate: 2019-11-04 16:38:46\nupdated: 2019-11-05 16:38:46\ndesc: 利用python爬虫技术获取指定公司网站首页的Title、Keywords、Description\nkeywords: python, 爬虫, requests, BeautifulSoup, bs4, Title, Keywords, Description, 脚本, 程序\n---\n\n{% note primary %}\n工作上涉及公司网站SEO优化相关的工作，但是在<font color='red' size=6.5>Title、Keywords、Description</font>这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的<font color='red' size=6.5>Keywords</font>。\n{% endnote %}\n\n<img src=\"/images/article_kwpachong.jpg\" style=\"border:1.5px solid blue\"/>\n\n<!--more-->\n<hr />\n\n废话也不多说了，关于爬虫相关使用的教程在前面以及介绍了，而且还有栗子，这里主要贴上相关代码。除了爬取数据之外，本程序还把处理好的数据进行分析选取出现频率最多***Keywords***，以及把爬取的数据存储到excel中。\n\n> 思路\n\n抓取数据 -> 解析 -> 存储 -> 分析\n\n> 特色\n\n在本次爬虫中，运用了***gevent协程***，玩python不清楚协程的同学请自行脑补。\n\n> 代码\n\n{% code %}\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\n\ndescribe:\n    用来抓取指定的物流公司官网的信息，包含title、keywords、description。\n\nusage:\n    python comp_infos_grab.py\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"PyGo\"\n    __time__ = \"2019/12/3\"\n    __mail__ = \"gaoming971366@163.com\"\n\n------------------------------------------------\n\"\"\"\nimport requests\nimport gevent\nimport xlrd\nimport xlwt\nfrom gevent import monkey; monkey.patch_all()\nfrom bs4 import BeautifulSoup\nimport jieba\n\nPUBLIC_URL_LIST = {\n    \"IML俄罗斯海外仓\": \"http://www.imlb2c.com/\",\n    \"旺集科技\": \"http://www.wangjigroup.com/\",\n    \"黑龙江俄速通国际物流有限公司\": \"http://www.ruston.cc/\",\n    \"AliExpress全球速卖通\": \"https://sell.aliexpress.com/zh/__pc/shipping/aliexpress_shipping.htm\",\n    \"中外运集装箱运输有限公司\": \"http://www.sinolines.com/\",\n    \"乐泰国际物流有限公司\": \"http://www.letaimzl.com/\",\n    \"NOEL诺艾尔集团\": \"http://www.noelworld.com/\",\n    \"慧承国际物流\": \"http://www.hcwuliu.com/\",\n    \"满洲里新颖国际货运代理有限公司\": \"http://www.mzlxinying.com/\",\n    \"运盟国际物流\": \"http://www.ym-trans.com/\",\n    \"如易科技\": \"http://www.ruecom.cn/\"\n}\n\n\nclass companyGrap(object):\n    _instance = None\n\n    def __init__(self):\n        super(companyGrap, self).__init__()\n\n    def __new__(cls, *args, **kwargs):\n        if companyGrap._instance is None:\n            companyGrap._instance = object.__new__(cls, *args, **kwargs)\n\n        return companyGrap._instance\n\n    def _get_infos(self, url):\n\n        results = dict()\n        results['url'] = url\n\n        if not url:\n            return results\n\n        payload = \"\"\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36\"\n            }\n        response = requests.get(url, data=payload, headers=headers)\n        if response.status_code == 200:\n            soup = BeautifulSoup(response.content, 'html.parser')\n            head = soup.head\n            titles = head.find_all('title')\n            tl = titles[0].string if titles else \"\"\n            results['title'] = tl\n            keywords = head.find_all('meta', attrs={'name': 'keywords'})\n            kw = keywords[0].attrs.get('content') if keywords else \"\"\n            results['keyword'] = kw\n            descriptions = head.find_all('meta', attrs={'name': 'description'})\n            desc = descriptions[0].attrs.get('content') if descriptions else \"\"\n            results['description'] = desc\n\n        return results\n\n    def to_excel(self, datas, exlname):\n        \"\"\"\n        generate data of excel format to save\n        :param datas: excel data\n        :param exlname: excel name\n        :return: None, excel data\n        \"\"\"\n        f = xlwt.Workbook(encoding='utf-8')\n        sheet = f.add_sheet('sheet', cell_overwrite_ok=True)\n        EXCEL_TITLES = [\"ID\", \"NAME\", \"URL\", 'TITLE', 'KEYWORDS', 'DESCRIPTION', \"REMARK\"]\n        BUSINESS = \"BUSINESS\"\n\n        style_title = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = 'Times New Roman'\n        font.bold = True\n        font.color_index = 4\n        font.height = 220\n        style_title.font = font\n\n        style_content = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = 'Times New Roman'\n        font.bold = False\n        font.color_index = 4\n        font.height = 220\n        style_content.font = font\n\n        # 标题\n        for i in range(0, len(EXCEL_TITLES)):\n            sheet.write(0, i, EXCEL_TITLES[i], style_title)\n\n        # 合并 && 重写\n        sheet.write_merge(0, 0, 3, 5, BUSINESS, style_title)\n        sheet.write_merge(0, 1, 0, 0, 'ID', style_title)\n        sheet.write_merge(0, 1, 1, 1, 'NAME', style_title)\n        sheet.write_merge(0, 1, 2, 2, 'URL', style_title)\n        sheet.write_merge(0, 1, 6, 6, 'REMARK', style_title)\n        for i in range(3, 6):\n            sheet.write(1, i, EXCEL_TITLES[i], style_content)\n\n        row = 2\n        count = 1\n        for line in datas:\n            sheet.write(row, 0, count, style_title)\n            sheet.write(row, 1, line.get('name'), style_content)\n            sheet.write(row, 2, line.get('url'), style_content)\n            sheet.write(row, 3, line.get('title'), style_content)\n            sheet.write(row, 4, line.get('keyword'), style_content)\n            sheet.write(row, 5, line.get('description'), style_content)\n            row += 1\n            count += 1\n\n        f.save(exlname)\n\n    def _deal_url(self, k, v):\n        return self._get_infos(v)\n\n    def to_generate_kw(self, datas):\n        keywords_src = \"\"\n        for data in datas:\n            if not data:\n                continue\n            keywords_src += data.get('keyword')\n\n        keywords = jieba.lcut(keywords_src, cut_all=False)\n        counts = dict()\n        for word in keywords:\n            if not word:\n                continue\n            if isinstance(word, unicode):\n                word = word.encode('utf-8')\n            if word in ('|', ',', ' ', '-', '，'):\n                continue\n            counts[word] = counts.get(word, 0) + 1\n\n        ord_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)\n        for k in ord_counts:\n            print \"%s: %s\" % (k[0], k[1])\n\n    def run(self, to_excel=False):\n        \"\"\"\n        process run\n        :param to_excel:\n        :return:\n        \"\"\"\n        jobs = list()\n        names = list()\n        excel_datas = list()\n        for k, v in PUBLIC_URL_LIST.iteritems():\n            if not k or not v:\n                continue\n            names.append(k)\n            jobs.append(gevent.spawn(self._deal_url, k, v))\n        gevent.joinall(jobs)\n        for name, job in zip(names, jobs):\n            value = job.value\n            print '==================%s==================' % name\n            print 'Title: %s' % value.get('title')\n            print 'Keyword: %s' % value.get('keyword')\n            print 'Description: %s' % value.get('description')\n            value['name'] = name\n            excel_datas.append(value)\n\n        self.to_generate_kw(excel_datas)\n\n        if to_excel:\n            print '---------excel ok'\n            self.to_excel(excel_datas, 'companys.xls')\n\n\nif __name__ == '__main__':\n    companyGrap().run(to_excel=False)\n{% endcode %}\n","slug":"Python-爬虫之公司网站首页","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2wr0064tabjscuqyrjb","content":"<div class=\"note primary\">\n            <p>工作上涉及公司网站SEO优化相关的工作，但是在<font color=\"red\" size=\"6.5\">Title、Keywords、Description</font>这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的<font color=\"red\" size=\"6.5\">Keywords</font>。</p>\n          </div>\n<p><img src=\"/images/article_kwpachong.jpg\" style=\"border:1.5px solid blue\"></p>\n<a id=\"more\"></a>\n<hr>\n\n<p>废话也不多说了，关于爬虫相关使用的教程在前面以及介绍了，而且还有栗子，这里主要贴上相关代码。除了爬取数据之外，本程序还把处理好的数据进行分析选取出现频率最多<strong><em>Keywords</em></strong>，以及把爬取的数据存储到excel中。</p>\n<blockquote>\n<p>思路</p>\n</blockquote>\n<p>抓取数据 -&gt; 解析 -&gt; 存储 -&gt; 分析</p>\n<blockquote>\n<p>特色</p>\n</blockquote>\n<p>在本次爬虫中，运用了<strong><em>gevent协程</em></strong>，玩python不清楚协程的同学请自行脑补。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">describe:</span><br><span class=\"line\">    用来抓取指定的物流公司官网的信息，包含title、keywords、description。</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python comp_infos_grab.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;PyGo&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/12/3&quot;</span><br><span class=\"line\">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import gevent</span><br><span class=\"line\">import xlrd</span><br><span class=\"line\">import xlwt</span><br><span class=\"line\">from gevent import monkey; monkey.patch_all()</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">import jieba</span><br><span class=\"line\"></span><br><span class=\"line\">PUBLIC_URL_LIST = &#123;</span><br><span class=\"line\">    &quot;IML俄罗斯海外仓&quot;: &quot;http://www.imlb2c.com/&quot;,</span><br><span class=\"line\">    &quot;旺集科技&quot;: &quot;http://www.wangjigroup.com/&quot;,</span><br><span class=\"line\">    &quot;黑龙江俄速通国际物流有限公司&quot;: &quot;http://www.ruston.cc/&quot;,</span><br><span class=\"line\">    &quot;AliExpress全球速卖通&quot;: &quot;https://sell.aliexpress.com/zh/__pc/shipping/aliexpress_shipping.htm&quot;,</span><br><span class=\"line\">    &quot;中外运集装箱运输有限公司&quot;: &quot;http://www.sinolines.com/&quot;,</span><br><span class=\"line\">    &quot;乐泰国际物流有限公司&quot;: &quot;http://www.letaimzl.com/&quot;,</span><br><span class=\"line\">    &quot;NOEL诺艾尔集团&quot;: &quot;http://www.noelworld.com/&quot;,</span><br><span class=\"line\">    &quot;慧承国际物流&quot;: &quot;http://www.hcwuliu.com/&quot;,</span><br><span class=\"line\">    &quot;满洲里新颖国际货运代理有限公司&quot;: &quot;http://www.mzlxinying.com/&quot;,</span><br><span class=\"line\">    &quot;运盟国际物流&quot;: &quot;http://www.ym-trans.com/&quot;,</span><br><span class=\"line\">    &quot;如易科技&quot;: &quot;http://www.ruecom.cn/&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class companyGrap(object):</span><br><span class=\"line\">    _instance = None</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        super(companyGrap, self).__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">    def __new__(cls, *args, **kwargs):</span><br><span class=\"line\">        if companyGrap._instance is None:</span><br><span class=\"line\">            companyGrap._instance = object.__new__(cls, *args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">        return companyGrap._instance</span><br><span class=\"line\"></span><br><span class=\"line\">    def _get_infos(self, url):</span><br><span class=\"line\"></span><br><span class=\"line\">        results = dict()</span><br><span class=\"line\">        results[&apos;url&apos;] = url</span><br><span class=\"line\"></span><br><span class=\"line\">        if not url:</span><br><span class=\"line\">            return results</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = &quot;&quot;</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        response = requests.get(url, data=payload, headers=headers)</span><br><span class=\"line\">        if response.status_code == 200:</span><br><span class=\"line\">            soup = BeautifulSoup(response.content, &apos;html.parser&apos;)</span><br><span class=\"line\">            head = soup.head</span><br><span class=\"line\">            titles = head.find_all(&apos;title&apos;)</span><br><span class=\"line\">            tl = titles[0].string if titles else &quot;&quot;</span><br><span class=\"line\">            results[&apos;title&apos;] = tl</span><br><span class=\"line\">            keywords = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;keywords&apos;&#125;)</span><br><span class=\"line\">            kw = keywords[0].attrs.get(&apos;content&apos;) if keywords else &quot;&quot;</span><br><span class=\"line\">            results[&apos;keyword&apos;] = kw</span><br><span class=\"line\">            descriptions = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;description&apos;&#125;)</span><br><span class=\"line\">            desc = descriptions[0].attrs.get(&apos;content&apos;) if descriptions else &quot;&quot;</span><br><span class=\"line\">            results[&apos;description&apos;] = desc</span><br><span class=\"line\"></span><br><span class=\"line\">        return results</span><br><span class=\"line\"></span><br><span class=\"line\">    def to_excel(self, datas, exlname):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        generate data of excel format to save</span><br><span class=\"line\">        :param datas: excel data</span><br><span class=\"line\">        :param exlname: excel name</span><br><span class=\"line\">        :return: None, excel data</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        f = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">        sheet = f.add_sheet(&apos;sheet&apos;, cell_overwrite_ok=True)</span><br><span class=\"line\">        EXCEL_TITLES = [&quot;ID&quot;, &quot;NAME&quot;, &quot;URL&quot;, &apos;TITLE&apos;, &apos;KEYWORDS&apos;, &apos;DESCRIPTION&apos;, &quot;REMARK&quot;]</span><br><span class=\"line\">        BUSINESS = &quot;BUSINESS&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        style_title = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = &apos;Times New Roman&apos;</span><br><span class=\"line\">        font.bold = True</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = 220</span><br><span class=\"line\">        style_title.font = font</span><br><span class=\"line\"></span><br><span class=\"line\">        style_content = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = &apos;Times New Roman&apos;</span><br><span class=\"line\">        font.bold = False</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = 220</span><br><span class=\"line\">        style_content.font = font</span><br><span class=\"line\"></span><br><span class=\"line\">        # 标题</span><br><span class=\"line\">        for i in range(0, len(EXCEL_TITLES)):</span><br><span class=\"line\">            sheet.write(0, i, EXCEL_TITLES[i], style_title)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 合并 &amp;&amp; 重写</span><br><span class=\"line\">        sheet.write_merge(0, 0, 3, 5, BUSINESS, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 0, 0, &apos;ID&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 1, 1, &apos;NAME&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 2, 2, &apos;URL&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 6, 6, &apos;REMARK&apos;, style_title)</span><br><span class=\"line\">        for i in range(3, 6):</span><br><span class=\"line\">            sheet.write(1, i, EXCEL_TITLES[i], style_content)</span><br><span class=\"line\"></span><br><span class=\"line\">        row = 2</span><br><span class=\"line\">        count = 1</span><br><span class=\"line\">        for line in datas:</span><br><span class=\"line\">            sheet.write(row, 0, count, style_title)</span><br><span class=\"line\">            sheet.write(row, 1, line.get(&apos;name&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 2, line.get(&apos;url&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 3, line.get(&apos;title&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 4, line.get(&apos;keyword&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 5, line.get(&apos;description&apos;), style_content)</span><br><span class=\"line\">            row += 1</span><br><span class=\"line\">            count += 1</span><br><span class=\"line\"></span><br><span class=\"line\">        f.save(exlname)</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_url(self, k, v):</span><br><span class=\"line\">        return self._get_infos(v)</span><br><span class=\"line\"></span><br><span class=\"line\">    def to_generate_kw(self, datas):</span><br><span class=\"line\">        keywords_src = &quot;&quot;</span><br><span class=\"line\">        for data in datas:</span><br><span class=\"line\">            if not data:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            keywords_src += data.get(&apos;keyword&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        keywords = jieba.lcut(keywords_src, cut_all=False)</span><br><span class=\"line\">        counts = dict()</span><br><span class=\"line\">        for word in keywords:</span><br><span class=\"line\">            if not word:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            if isinstance(word, unicode):</span><br><span class=\"line\">                word = word.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if word in (&apos;|&apos;, &apos;,&apos;, &apos; &apos;, &apos;-&apos;, &apos;，&apos;):</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            counts[word] = counts.get(word, 0) + 1</span><br><span class=\"line\"></span><br><span class=\"line\">        ord_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)</span><br><span class=\"line\">        for k in ord_counts:</span><br><span class=\"line\">            print &quot;%s: %s&quot; % (k[0], k[1])</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self, to_excel=False):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        process run</span><br><span class=\"line\">        :param to_excel:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        jobs = list()</span><br><span class=\"line\">        names = list()</span><br><span class=\"line\">        excel_datas = list()</span><br><span class=\"line\">        for k, v in PUBLIC_URL_LIST.iteritems():</span><br><span class=\"line\">            if not k or not v:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            names.append(k)</span><br><span class=\"line\">            jobs.append(gevent.spawn(self._deal_url, k, v))</span><br><span class=\"line\">        gevent.joinall(jobs)</span><br><span class=\"line\">        for name, job in zip(names, jobs):</span><br><span class=\"line\">            value = job.value</span><br><span class=\"line\">            print &apos;==================%s==================&apos; % name</span><br><span class=\"line\">            print &apos;Title: %s&apos; % value.get(&apos;title&apos;)</span><br><span class=\"line\">            print &apos;Keyword: %s&apos; % value.get(&apos;keyword&apos;)</span><br><span class=\"line\">            print &apos;Description: %s&apos; % value.get(&apos;description&apos;)</span><br><span class=\"line\">            value[&apos;name&apos;] = name</span><br><span class=\"line\">            excel_datas.append(value)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.to_generate_kw(excel_datas)</span><br><span class=\"line\"></span><br><span class=\"line\">        if to_excel:</span><br><span class=\"line\">            print &apos;---------excel ok&apos;</span><br><span class=\"line\">            self.to_excel(excel_datas, &apos;companys.xls&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    companyGrap().run(to_excel=False)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<div class=\"note primary\">\n            <p>工作上涉及公司网站SEO优化相关的工作，但是在<font color=\"red\" size=\"6.5\">Title、Keywords、Description</font>这块有点不清楚。于是，参考了一些与自己公司业务上有相同的公司网站内容，在进行词语分析选取一些关键词，在结合本公司的业务内容关键词进行综合，完成了网站SEO优化的<font color=\"red\" size=\"6.5\">Keywords</font>。</p>\n          </div>\n<p><img src=\"/images/article_kwpachong.jpg\" style=\"border:1.5px solid blue\"></p>","more":"<hr>\n\n<p>废话也不多说了，关于爬虫相关使用的教程在前面以及介绍了，而且还有栗子，这里主要贴上相关代码。除了爬取数据之外，本程序还把处理好的数据进行分析选取出现频率最多<strong><em>Keywords</em></strong>，以及把爬取的数据存储到excel中。</p>\n<blockquote>\n<p>思路</p>\n</blockquote>\n<p>抓取数据 -&gt; 解析 -&gt; 存储 -&gt; 分析</p>\n<blockquote>\n<p>特色</p>\n</blockquote>\n<p>在本次爬虫中，运用了<strong><em>gevent协程</em></strong>，玩python不清楚协程的同学请自行脑补。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">describe:</span><br><span class=\"line\">    用来抓取指定的物流公司官网的信息，包含title、keywords、description。</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python comp_infos_grab.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;PyGo&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/12/3&quot;</span><br><span class=\"line\">    __mail__ = &quot;gaoming971366@163.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import gevent</span><br><span class=\"line\">import xlrd</span><br><span class=\"line\">import xlwt</span><br><span class=\"line\">from gevent import monkey; monkey.patch_all()</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">import jieba</span><br><span class=\"line\"></span><br><span class=\"line\">PUBLIC_URL_LIST = &#123;</span><br><span class=\"line\">    &quot;IML俄罗斯海外仓&quot;: &quot;http://www.imlb2c.com/&quot;,</span><br><span class=\"line\">    &quot;旺集科技&quot;: &quot;http://www.wangjigroup.com/&quot;,</span><br><span class=\"line\">    &quot;黑龙江俄速通国际物流有限公司&quot;: &quot;http://www.ruston.cc/&quot;,</span><br><span class=\"line\">    &quot;AliExpress全球速卖通&quot;: &quot;https://sell.aliexpress.com/zh/__pc/shipping/aliexpress_shipping.htm&quot;,</span><br><span class=\"line\">    &quot;中外运集装箱运输有限公司&quot;: &quot;http://www.sinolines.com/&quot;,</span><br><span class=\"line\">    &quot;乐泰国际物流有限公司&quot;: &quot;http://www.letaimzl.com/&quot;,</span><br><span class=\"line\">    &quot;NOEL诺艾尔集团&quot;: &quot;http://www.noelworld.com/&quot;,</span><br><span class=\"line\">    &quot;慧承国际物流&quot;: &quot;http://www.hcwuliu.com/&quot;,</span><br><span class=\"line\">    &quot;满洲里新颖国际货运代理有限公司&quot;: &quot;http://www.mzlxinying.com/&quot;,</span><br><span class=\"line\">    &quot;运盟国际物流&quot;: &quot;http://www.ym-trans.com/&quot;,</span><br><span class=\"line\">    &quot;如易科技&quot;: &quot;http://www.ruecom.cn/&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class companyGrap(object):</span><br><span class=\"line\">    _instance = None</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        super(companyGrap, self).__init__()</span><br><span class=\"line\"></span><br><span class=\"line\">    def __new__(cls, *args, **kwargs):</span><br><span class=\"line\">        if companyGrap._instance is None:</span><br><span class=\"line\">            companyGrap._instance = object.__new__(cls, *args, **kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">        return companyGrap._instance</span><br><span class=\"line\"></span><br><span class=\"line\">    def _get_infos(self, url):</span><br><span class=\"line\"></span><br><span class=\"line\">        results = dict()</span><br><span class=\"line\">        results[&apos;url&apos;] = url</span><br><span class=\"line\"></span><br><span class=\"line\">        if not url:</span><br><span class=\"line\">            return results</span><br><span class=\"line\"></span><br><span class=\"line\">        payload = &quot;&quot;</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        response = requests.get(url, data=payload, headers=headers)</span><br><span class=\"line\">        if response.status_code == 200:</span><br><span class=\"line\">            soup = BeautifulSoup(response.content, &apos;html.parser&apos;)</span><br><span class=\"line\">            head = soup.head</span><br><span class=\"line\">            titles = head.find_all(&apos;title&apos;)</span><br><span class=\"line\">            tl = titles[0].string if titles else &quot;&quot;</span><br><span class=\"line\">            results[&apos;title&apos;] = tl</span><br><span class=\"line\">            keywords = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;keywords&apos;&#125;)</span><br><span class=\"line\">            kw = keywords[0].attrs.get(&apos;content&apos;) if keywords else &quot;&quot;</span><br><span class=\"line\">            results[&apos;keyword&apos;] = kw</span><br><span class=\"line\">            descriptions = head.find_all(&apos;meta&apos;, attrs=&#123;&apos;name&apos;: &apos;description&apos;&#125;)</span><br><span class=\"line\">            desc = descriptions[0].attrs.get(&apos;content&apos;) if descriptions else &quot;&quot;</span><br><span class=\"line\">            results[&apos;description&apos;] = desc</span><br><span class=\"line\"></span><br><span class=\"line\">        return results</span><br><span class=\"line\"></span><br><span class=\"line\">    def to_excel(self, datas, exlname):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        generate data of excel format to save</span><br><span class=\"line\">        :param datas: excel data</span><br><span class=\"line\">        :param exlname: excel name</span><br><span class=\"line\">        :return: None, excel data</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        f = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">        sheet = f.add_sheet(&apos;sheet&apos;, cell_overwrite_ok=True)</span><br><span class=\"line\">        EXCEL_TITLES = [&quot;ID&quot;, &quot;NAME&quot;, &quot;URL&quot;, &apos;TITLE&apos;, &apos;KEYWORDS&apos;, &apos;DESCRIPTION&apos;, &quot;REMARK&quot;]</span><br><span class=\"line\">        BUSINESS = &quot;BUSINESS&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        style_title = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = &apos;Times New Roman&apos;</span><br><span class=\"line\">        font.bold = True</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = 220</span><br><span class=\"line\">        style_title.font = font</span><br><span class=\"line\"></span><br><span class=\"line\">        style_content = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = &apos;Times New Roman&apos;</span><br><span class=\"line\">        font.bold = False</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = 220</span><br><span class=\"line\">        style_content.font = font</span><br><span class=\"line\"></span><br><span class=\"line\">        # 标题</span><br><span class=\"line\">        for i in range(0, len(EXCEL_TITLES)):</span><br><span class=\"line\">            sheet.write(0, i, EXCEL_TITLES[i], style_title)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 合并 &amp;&amp; 重写</span><br><span class=\"line\">        sheet.write_merge(0, 0, 3, 5, BUSINESS, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 0, 0, &apos;ID&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 1, 1, &apos;NAME&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 2, 2, &apos;URL&apos;, style_title)</span><br><span class=\"line\">        sheet.write_merge(0, 1, 6, 6, &apos;REMARK&apos;, style_title)</span><br><span class=\"line\">        for i in range(3, 6):</span><br><span class=\"line\">            sheet.write(1, i, EXCEL_TITLES[i], style_content)</span><br><span class=\"line\"></span><br><span class=\"line\">        row = 2</span><br><span class=\"line\">        count = 1</span><br><span class=\"line\">        for line in datas:</span><br><span class=\"line\">            sheet.write(row, 0, count, style_title)</span><br><span class=\"line\">            sheet.write(row, 1, line.get(&apos;name&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 2, line.get(&apos;url&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 3, line.get(&apos;title&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 4, line.get(&apos;keyword&apos;), style_content)</span><br><span class=\"line\">            sheet.write(row, 5, line.get(&apos;description&apos;), style_content)</span><br><span class=\"line\">            row += 1</span><br><span class=\"line\">            count += 1</span><br><span class=\"line\"></span><br><span class=\"line\">        f.save(exlname)</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_url(self, k, v):</span><br><span class=\"line\">        return self._get_infos(v)</span><br><span class=\"line\"></span><br><span class=\"line\">    def to_generate_kw(self, datas):</span><br><span class=\"line\">        keywords_src = &quot;&quot;</span><br><span class=\"line\">        for data in datas:</span><br><span class=\"line\">            if not data:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            keywords_src += data.get(&apos;keyword&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        keywords = jieba.lcut(keywords_src, cut_all=False)</span><br><span class=\"line\">        counts = dict()</span><br><span class=\"line\">        for word in keywords:</span><br><span class=\"line\">            if not word:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            if isinstance(word, unicode):</span><br><span class=\"line\">                word = word.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if word in (&apos;|&apos;, &apos;,&apos;, &apos; &apos;, &apos;-&apos;, &apos;，&apos;):</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            counts[word] = counts.get(word, 0) + 1</span><br><span class=\"line\"></span><br><span class=\"line\">        ord_counts = sorted(counts.items(), key=lambda x: x[1], reverse=True)</span><br><span class=\"line\">        for k in ord_counts:</span><br><span class=\"line\">            print &quot;%s: %s&quot; % (k[0], k[1])</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self, to_excel=False):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        process run</span><br><span class=\"line\">        :param to_excel:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        jobs = list()</span><br><span class=\"line\">        names = list()</span><br><span class=\"line\">        excel_datas = list()</span><br><span class=\"line\">        for k, v in PUBLIC_URL_LIST.iteritems():</span><br><span class=\"line\">            if not k or not v:</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            names.append(k)</span><br><span class=\"line\">            jobs.append(gevent.spawn(self._deal_url, k, v))</span><br><span class=\"line\">        gevent.joinall(jobs)</span><br><span class=\"line\">        for name, job in zip(names, jobs):</span><br><span class=\"line\">            value = job.value</span><br><span class=\"line\">            print &apos;==================%s==================&apos; % name</span><br><span class=\"line\">            print &apos;Title: %s&apos; % value.get(&apos;title&apos;)</span><br><span class=\"line\">            print &apos;Keyword: %s&apos; % value.get(&apos;keyword&apos;)</span><br><span class=\"line\">            print &apos;Description: %s&apos; % value.get(&apos;description&apos;)</span><br><span class=\"line\">            value[&apos;name&apos;] = name</span><br><span class=\"line\">            excel_datas.append(value)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.to_generate_kw(excel_datas)</span><br><span class=\"line\"></span><br><span class=\"line\">        if to_excel:</span><br><span class=\"line\">            print &apos;---------excel ok&apos;</span><br><span class=\"line\">            self.to_excel(excel_datas, &apos;companys.xls&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    companyGrap().run(to_excel=False)</span><br></pre></td></tr></table></figure>"},{"title":"爬虫之糗百笑话","comments":0,"top":false,"abbrlink":32384,"date":"2019-10-03T11:01:59.000Z","updated":"2019-10-03T11:01:59.000Z","desc":"爬虫之糗百笑话","keywords":"Python, Packages, 爬虫, BeautifulSoup, requests, 脚本, 程序","_content":"\n{% note primary %}\n之前已经介绍过了<font color='red' size=6.5>爬虫</font>的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。\n{% endnote %}\n\n<img src=\"/images/article_qiubaipachong.gif\" style=\"border:1.5px solid blue\"/>\n\n<font size=6.5 color='red'>糗百服务器更新中。。。。。。文章暂无</font>\n\n<!--more-->\n<hr />\n\n### 简介\n\n实现糗百网站的文本笑话以及笑话图片数据获取，并存储到本地。\n\n### 技术流程\n\n![](article_qiubai_liuchengtu.png)\n\n\n\n### 结束语\n\n本人不是专业做爬虫数据方向的，业余爱好。\n","source":"_posts/Python-爬虫之糗百笑话.md","raw":"---\ntitle: 爬虫之糗百笑话\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, 爬虫系列]\ntop: false\nabbrlink: 32384\ndate: 2019-10-03 19:01:59\nupdated: 2019-10-03 19:01:59\ndesc: 爬虫之糗百笑话\nkeywords: Python, Packages, 爬虫, BeautifulSoup, requests, 脚本, 程序\n---\n\n{% note primary %}\n之前已经介绍过了<font color='red' size=6.5>爬虫</font>的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。\n{% endnote %}\n\n<img src=\"/images/article_qiubaipachong.gif\" style=\"border:1.5px solid blue\"/>\n\n<font size=6.5 color='red'>糗百服务器更新中。。。。。。文章暂无</font>\n\n<!--more-->\n<hr />\n\n### 简介\n\n实现糗百网站的文本笑话以及笑话图片数据获取，并存储到本地。\n\n### 技术流程\n\n![](article_qiubai_liuchengtu.png)\n\n\n\n### 结束语\n\n本人不是专业做爬虫数据方向的，业余爱好。\n","slug":"Python-爬虫之糗百笑话","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2wu0066tabjo9n307uf","content":"<div class=\"note primary\">\n            <p>之前已经介绍过了<font color=\"red\" size=\"6.5\">爬虫</font>的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。</p>\n          </div>\n<p><img src=\"/images/article_qiubaipachong.gif\" style=\"border:1.5px solid blue\"></p>\n<font size=\"6.5\" color=\"red\">糗百服务器更新中。。。。。。文章暂无</font>\n\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>实现糗百网站的文本笑话以及笑话图片数据获取，并存储到本地。</p>\n<h3 id=\"技术流程\"><a href=\"#技术流程\" class=\"headerlink\" title=\"技术流程\"></a>技术流程</h3><p><img src=\"article_qiubai_liuchengtu.png\" alt></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>本人不是专业做爬虫数据方向的，业余爱好。</p>\n","site":{"data":{}},"excerpt":"<div class=\"note primary\">\n            <p>之前已经介绍过了<font color=\"red\" size=\"6.5\">爬虫</font>的利器：Requests、BeautifulSoup。在陆续跟上几个实战来进行演示，本篇主要是爬糗百网站的文本笑话以及笑话图片，纯属于技术宅的磨牙的事情。</p>\n          </div>\n<p><img src=\"/images/article_qiubaipachong.gif\" style=\"border:1.5px solid blue\"></p>\n<font size=\"6.5\" color=\"red\">糗百服务器更新中。。。。。。文章暂无</font>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>实现糗百网站的文本笑话以及笑话图片数据获取，并存储到本地。</p>\n<h3 id=\"技术流程\"><a href=\"#技术流程\" class=\"headerlink\" title=\"技术流程\"></a>技术流程</h3><p><img src=\"article_qiubai_liuchengtu.png\" alt></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>本人不是专业做爬虫数据方向的，业余爱好。</p>"},{"title":"博客tags词云","comments":0,"top":false,"abbrlink":31753,"date":"2018-11-21T07:39:04.000Z","updated":"2018-11-21T07:39:04.000Z","desc":"利用Python写的一个生成博客tag词云脚本，用于hexo博客关于我中博客技术统计使用","keywords":"Python, hexo, 词云, tag, 脚本, 程序","_content":"\n#### 背景\n{% note primary %}\n博客已经了一些技术文章，在写about页面的时候，想把自己tags分类展示在页面上，但是直接写文字，能不能在low点。。。想到了词云，于是写个脚本自动生产博客的词云图片，<font color='red' size=4.5>完美</font>！！！。\n{% endnote %}\n\n![](/images/blog_tags.jpg)\n\n<!--more-->\n<hr />\n\n#### 环境\n\n| id  |  name  | Version |\n|:---:|:------:|:-------:|\n|  1  | Python |   2.7   |\n\n#### 数据流\n\n<font color='red' size=5>html数据源 -> html解析收集tag -> 词云生成图片</font>\n\n#### 正文\n\n脚本是针对博客建立的，所以数据源取的就是博客文章的tag标签。脚本开发起来很简单，代码也不是很复杂，每个方法有基本的注释，代码如下：\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n    词云生成器\n\nusage:\n    python tag_cloud.py\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2018/11/21\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n------------------------------------------------\n\"\"\"\n\nimport os\nimport re\nimport jieba\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nfrom wordcloud import WordCloud\nfrom bs4 import BeautifulSoup\n\n\nBACKGROUND_NAME = 'public/images/tags_background.png'\nHTML_REL_DIR = 'public/articles'\nTAR_IMG = 'public/images/blog_tags.jpg'\n\n\ndef get_cur_dir():\n    return os.path.abspath(os.path.dirname(__file__))\n\n\nclass TagCloudGenerator(object):\n    def __init__(self):\n        self.background = os.path.join(get_cur_dir(), BACKGROUND_NAME)\n        self.text_source = os.path.join(get_cur_dir(), HTML_REL_DIR)\n        self.tar_img = os.path.join(get_cur_dir(), TAR_IMG)\n\n    def get_index_files(self):\n        \"\"\"\n        get all index.html file\n        :return: list type\n        \"\"\"\n        index_files = list()\n        pattern = re.compile('index\\.html')\n        for root, dirs, files in os.walk(self.text_source):\n            for f in files:\n                f_full = os.path.join(root, f)\n                match = pattern.search(f_full)\n                index_files.append(f_full) if match else None\n        else:\n            return index_files\n\n    def get_index_tags(self, index_html):\n        \"\"\"\n        get tags of index.html\n        :param index_html: index html\n        :return: list type\n        \"\"\"\n        tags = list()\n        if not index_html:\n            return tags\n        if not os.path.exists(index_html):\n            return tags\n\n        def _deal_html_tas():\n            soup = BeautifulSoup(open(index_html), 'html.parser', from_encoding='utf-8')\n            post_a_tags = soup.find_all('a', attrs={\"rel\": \"tag\"})\n            if post_a_tags:\n                for tag in post_a_tags:\n                    tag_text = tag.get_text()\n                    tags.append(tag_text.strip())\n            return tags\n\n        return _deal_html_tas()\n\n    def collect_tags(self):\n        all_tags = list()\n        all_indexs = self.get_index_files()\n        for index_file in all_indexs:\n            if not index_file:\n                continue\n\n            tags = self.get_index_tags(index_file)\n            print index_file\n            all_tags.extend(tags) if tags else None\n        else:\n            return all_tags\n\n    def run(self):\n        all_html_tags = self.collect_tags() * 100\n        wl_space_split = \" \".join(all_html_tags)\n        d = os.path.dirname(__file__)\n        tag_background = np.array(Image.open(self.background))\n        my_wordcloud = WordCloud(background_color=\"#CACFD2\",\n                                 max_words=2000,\n                                 font_path=\"public/publicfiles/fangsong_GB2312.ttf\",\n                                 mask=tag_background,\n                                 stopwords={'企业'},\n                                 max_font_size=150,\n                                 scale=1,\n                                 width=800,\n                                 random_state=1).generate(wl_space_split)\n\n        plt.imshow(my_wordcloud)\n        plt.axis(\"off\")\n        # plt.show()\n        my_wordcloud.to_file(self.tar_img)\n\n\nif __name__ == '__main__':\n    tc = TagCloudGenerator()\n    tc.run()\n```\n代码存在tag_cloud.py文件中，放在blog的根目录，图片生成的位置：blog/public/images/blog_tags.jpg。\n\n#### 执行方法\n```\npython tag_cloud.py\n```\n\n#### 嵌入about\n\n找到about页面的index.md文件，嵌入图片，代码如下：\n```\n<img src=\"/images/blog_tags.jpg\"  alt=\"tags cloud\" width=\"88%\"/>\n```\n","source":"_posts/Python-生成博客tag词云.md","raw":"---\ntitle: 博客tags词云\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, Python程序篇, Hexo]\ntop: false\nabbrlink: 31753\ndate: 2018-11-21 15:39:04\nupdated: 2018-11-21 15:39:04\ndesc: 利用Python写的一个生成博客tag词云脚本，用于hexo博客关于我中博客技术统计使用\nkeywords: Python, hexo, 词云, tag, 脚本, 程序\n---\n\n#### 背景\n{% note primary %}\n博客已经了一些技术文章，在写about页面的时候，想把自己tags分类展示在页面上，但是直接写文字，能不能在low点。。。想到了词云，于是写个脚本自动生产博客的词云图片，<font color='red' size=4.5>完美</font>！！！。\n{% endnote %}\n\n![](/images/blog_tags.jpg)\n\n<!--more-->\n<hr />\n\n#### 环境\n\n| id  |  name  | Version |\n|:---:|:------:|:-------:|\n|  1  | Python |   2.7   |\n\n#### 数据流\n\n<font color='red' size=5>html数据源 -> html解析收集tag -> 词云生成图片</font>\n\n#### 正文\n\n脚本是针对博客建立的，所以数据源取的就是博客文章的tag标签。脚本开发起来很简单，代码也不是很复杂，每个方法有基本的注释，代码如下：\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n    词云生成器\n\nusage:\n    python tag_cloud.py\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2018/11/21\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n------------------------------------------------\n\"\"\"\n\nimport os\nimport re\nimport jieba\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nfrom wordcloud import WordCloud\nfrom bs4 import BeautifulSoup\n\n\nBACKGROUND_NAME = 'public/images/tags_background.png'\nHTML_REL_DIR = 'public/articles'\nTAR_IMG = 'public/images/blog_tags.jpg'\n\n\ndef get_cur_dir():\n    return os.path.abspath(os.path.dirname(__file__))\n\n\nclass TagCloudGenerator(object):\n    def __init__(self):\n        self.background = os.path.join(get_cur_dir(), BACKGROUND_NAME)\n        self.text_source = os.path.join(get_cur_dir(), HTML_REL_DIR)\n        self.tar_img = os.path.join(get_cur_dir(), TAR_IMG)\n\n    def get_index_files(self):\n        \"\"\"\n        get all index.html file\n        :return: list type\n        \"\"\"\n        index_files = list()\n        pattern = re.compile('index\\.html')\n        for root, dirs, files in os.walk(self.text_source):\n            for f in files:\n                f_full = os.path.join(root, f)\n                match = pattern.search(f_full)\n                index_files.append(f_full) if match else None\n        else:\n            return index_files\n\n    def get_index_tags(self, index_html):\n        \"\"\"\n        get tags of index.html\n        :param index_html: index html\n        :return: list type\n        \"\"\"\n        tags = list()\n        if not index_html:\n            return tags\n        if not os.path.exists(index_html):\n            return tags\n\n        def _deal_html_tas():\n            soup = BeautifulSoup(open(index_html), 'html.parser', from_encoding='utf-8')\n            post_a_tags = soup.find_all('a', attrs={\"rel\": \"tag\"})\n            if post_a_tags:\n                for tag in post_a_tags:\n                    tag_text = tag.get_text()\n                    tags.append(tag_text.strip())\n            return tags\n\n        return _deal_html_tas()\n\n    def collect_tags(self):\n        all_tags = list()\n        all_indexs = self.get_index_files()\n        for index_file in all_indexs:\n            if not index_file:\n                continue\n\n            tags = self.get_index_tags(index_file)\n            print index_file\n            all_tags.extend(tags) if tags else None\n        else:\n            return all_tags\n\n    def run(self):\n        all_html_tags = self.collect_tags() * 100\n        wl_space_split = \" \".join(all_html_tags)\n        d = os.path.dirname(__file__)\n        tag_background = np.array(Image.open(self.background))\n        my_wordcloud = WordCloud(background_color=\"#CACFD2\",\n                                 max_words=2000,\n                                 font_path=\"public/publicfiles/fangsong_GB2312.ttf\",\n                                 mask=tag_background,\n                                 stopwords={'企业'},\n                                 max_font_size=150,\n                                 scale=1,\n                                 width=800,\n                                 random_state=1).generate(wl_space_split)\n\n        plt.imshow(my_wordcloud)\n        plt.axis(\"off\")\n        # plt.show()\n        my_wordcloud.to_file(self.tar_img)\n\n\nif __name__ == '__main__':\n    tc = TagCloudGenerator()\n    tc.run()\n```\n代码存在tag_cloud.py文件中，放在blog的根目录，图片生成的位置：blog/public/images/blog_tags.jpg。\n\n#### 执行方法\n```\npython tag_cloud.py\n```\n\n#### 嵌入about\n\n找到about页面的index.md文件，嵌入图片，代码如下：\n```\n<img src=\"/images/blog_tags.jpg\"  alt=\"tags cloud\" width=\"88%\"/>\n```\n","slug":"Python-生成博客tag词云","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2wz006btabjymc5vl6o","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>博客已经了一些技术文章，在写about页面的时候，想把自己tags分类展示在页面上，但是直接写文字，能不能在low点。。。想到了词云，于是写个脚本自动生产博客的词云图片，<font color=\"red\" size=\"4.5\">完美</font>！！！。</p>\n          </div>\n<p><img src=\"/images/blog_tags.jpg\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"数据流\"><a href=\"#数据流\" class=\"headerlink\" title=\"数据流\"></a>数据流</h4><font color=\"red\" size=\"5\">html数据源 -&gt; html解析收集tag -&gt; 词云生成图片</font>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>脚本是针对博客建立的，所以数据源取的就是博客文章的tag标签。脚本开发起来很简单，代码也不是很复杂，每个方法有基本的注释，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    词云生成器</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python tag_cloud.py</span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2018/11/21&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\">import re</span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from PIL import Image</span><br><span class=\"line\">from wordcloud import WordCloud</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">BACKGROUND_NAME = &apos;public/images/tags_background.png&apos;</span><br><span class=\"line\">HTML_REL_DIR = &apos;public/articles&apos;</span><br><span class=\"line\">TAR_IMG = &apos;public/images/blog_tags.jpg&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_cur_dir():</span><br><span class=\"line\">    return os.path.abspath(os.path.dirname(__file__))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class TagCloudGenerator(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.background = os.path.join(get_cur_dir(), BACKGROUND_NAME)</span><br><span class=\"line\">        self.text_source = os.path.join(get_cur_dir(), HTML_REL_DIR)</span><br><span class=\"line\">        self.tar_img = os.path.join(get_cur_dir(), TAR_IMG)</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_index_files(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get all index.html file</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        index_files = list()</span><br><span class=\"line\">        pattern = re.compile(&apos;index\\.html&apos;)</span><br><span class=\"line\">        for root, dirs, files in os.walk(self.text_source):</span><br><span class=\"line\">            for f in files:</span><br><span class=\"line\">                f_full = os.path.join(root, f)</span><br><span class=\"line\">                match = pattern.search(f_full)</span><br><span class=\"line\">                index_files.append(f_full) if match else None</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return index_files</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_index_tags(self, index_html):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get tags of index.html</span><br><span class=\"line\">        :param index_html: index html</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        tags = list()</span><br><span class=\"line\">        if not index_html:</span><br><span class=\"line\">            return tags</span><br><span class=\"line\">        if not os.path.exists(index_html):</span><br><span class=\"line\">            return tags</span><br><span class=\"line\"></span><br><span class=\"line\">        def _deal_html_tas():</span><br><span class=\"line\">            soup = BeautifulSoup(open(index_html), &apos;html.parser&apos;, from_encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">            post_a_tags = soup.find_all(&apos;a&apos;, attrs=&#123;&quot;rel&quot;: &quot;tag&quot;&#125;)</span><br><span class=\"line\">            if post_a_tags:</span><br><span class=\"line\">                for tag in post_a_tags:</span><br><span class=\"line\">                    tag_text = tag.get_text()</span><br><span class=\"line\">                    tags.append(tag_text.strip())</span><br><span class=\"line\">            return tags</span><br><span class=\"line\"></span><br><span class=\"line\">        return _deal_html_tas()</span><br><span class=\"line\"></span><br><span class=\"line\">    def collect_tags(self):</span><br><span class=\"line\">        all_tags = list()</span><br><span class=\"line\">        all_indexs = self.get_index_files()</span><br><span class=\"line\">        for index_file in all_indexs:</span><br><span class=\"line\">            if not index_file:</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            tags = self.get_index_tags(index_file)</span><br><span class=\"line\">            print index_file</span><br><span class=\"line\">            all_tags.extend(tags) if tags else None</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return all_tags</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        all_html_tags = self.collect_tags() * 100</span><br><span class=\"line\">        wl_space_split = &quot; &quot;.join(all_html_tags)</span><br><span class=\"line\">        d = os.path.dirname(__file__)</span><br><span class=\"line\">        tag_background = np.array(Image.open(self.background))</span><br><span class=\"line\">        my_wordcloud = WordCloud(background_color=&quot;#CACFD2&quot;,</span><br><span class=\"line\">                                 max_words=2000,</span><br><span class=\"line\">                                 font_path=&quot;public/publicfiles/fangsong_GB2312.ttf&quot;,</span><br><span class=\"line\">                                 mask=tag_background,</span><br><span class=\"line\">                                 stopwords=&#123;&apos;企业&apos;&#125;,</span><br><span class=\"line\">                                 max_font_size=150,</span><br><span class=\"line\">                                 scale=1,</span><br><span class=\"line\">                                 width=800,</span><br><span class=\"line\">                                 random_state=1).generate(wl_space_split)</span><br><span class=\"line\"></span><br><span class=\"line\">        plt.imshow(my_wordcloud)</span><br><span class=\"line\">        plt.axis(&quot;off&quot;)</span><br><span class=\"line\">        # plt.show()</span><br><span class=\"line\">        my_wordcloud.to_file(self.tar_img)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    tc = TagCloudGenerator()</span><br><span class=\"line\">    tc.run()</span><br></pre></td></tr></table></figure></p>\n<p>代码存在tag_cloud.py文件中，放在blog的根目录，图片生成的位置：blog/public/images/blog_tags.jpg。</p>\n<h4 id=\"执行方法\"><a href=\"#执行方法\" class=\"headerlink\" title=\"执行方法\"></a>执行方法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tag_cloud.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌入about\"><a href=\"#嵌入about\" class=\"headerlink\" title=\"嵌入about\"></a>嵌入about</h4><p>找到about页面的index.md文件，嵌入图片，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;/images/blog_tags.jpg&quot;  alt=&quot;tags cloud&quot; width=&quot;88%&quot;/&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>博客已经了一些技术文章，在写about页面的时候，想把自己tags分类展示在页面上，但是直接写文字，能不能在low点。。。想到了词云，于是写个脚本自动生产博客的词云图片，<font color=\"red\" size=\"4.5\">完美</font>！！！。</p>\n          </div>\n<p><img src=\"/images/blog_tags.jpg\" alt></p>","more":"<hr>\n\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"数据流\"><a href=\"#数据流\" class=\"headerlink\" title=\"数据流\"></a>数据流</h4><font color=\"red\" size=\"5\">html数据源 -&gt; html解析收集tag -&gt; 词云生成图片</font>\n\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>脚本是针对博客建立的，所以数据源取的就是博客文章的tag标签。脚本开发起来很简单，代码也不是很复杂，每个方法有基本的注释，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    词云生成器</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python tag_cloud.py</span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2018/11/21&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import os</span><br><span class=\"line\">import re</span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from PIL import Image</span><br><span class=\"line\">from wordcloud import WordCloud</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">BACKGROUND_NAME = &apos;public/images/tags_background.png&apos;</span><br><span class=\"line\">HTML_REL_DIR = &apos;public/articles&apos;</span><br><span class=\"line\">TAR_IMG = &apos;public/images/blog_tags.jpg&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_cur_dir():</span><br><span class=\"line\">    return os.path.abspath(os.path.dirname(__file__))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class TagCloudGenerator(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.background = os.path.join(get_cur_dir(), BACKGROUND_NAME)</span><br><span class=\"line\">        self.text_source = os.path.join(get_cur_dir(), HTML_REL_DIR)</span><br><span class=\"line\">        self.tar_img = os.path.join(get_cur_dir(), TAR_IMG)</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_index_files(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get all index.html file</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        index_files = list()</span><br><span class=\"line\">        pattern = re.compile(&apos;index\\.html&apos;)</span><br><span class=\"line\">        for root, dirs, files in os.walk(self.text_source):</span><br><span class=\"line\">            for f in files:</span><br><span class=\"line\">                f_full = os.path.join(root, f)</span><br><span class=\"line\">                match = pattern.search(f_full)</span><br><span class=\"line\">                index_files.append(f_full) if match else None</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return index_files</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_index_tags(self, index_html):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get tags of index.html</span><br><span class=\"line\">        :param index_html: index html</span><br><span class=\"line\">        :return: list type</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        tags = list()</span><br><span class=\"line\">        if not index_html:</span><br><span class=\"line\">            return tags</span><br><span class=\"line\">        if not os.path.exists(index_html):</span><br><span class=\"line\">            return tags</span><br><span class=\"line\"></span><br><span class=\"line\">        def _deal_html_tas():</span><br><span class=\"line\">            soup = BeautifulSoup(open(index_html), &apos;html.parser&apos;, from_encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">            post_a_tags = soup.find_all(&apos;a&apos;, attrs=&#123;&quot;rel&quot;: &quot;tag&quot;&#125;)</span><br><span class=\"line\">            if post_a_tags:</span><br><span class=\"line\">                for tag in post_a_tags:</span><br><span class=\"line\">                    tag_text = tag.get_text()</span><br><span class=\"line\">                    tags.append(tag_text.strip())</span><br><span class=\"line\">            return tags</span><br><span class=\"line\"></span><br><span class=\"line\">        return _deal_html_tas()</span><br><span class=\"line\"></span><br><span class=\"line\">    def collect_tags(self):</span><br><span class=\"line\">        all_tags = list()</span><br><span class=\"line\">        all_indexs = self.get_index_files()</span><br><span class=\"line\">        for index_file in all_indexs:</span><br><span class=\"line\">            if not index_file:</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            tags = self.get_index_tags(index_file)</span><br><span class=\"line\">            print index_file</span><br><span class=\"line\">            all_tags.extend(tags) if tags else None</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            return all_tags</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        all_html_tags = self.collect_tags() * 100</span><br><span class=\"line\">        wl_space_split = &quot; &quot;.join(all_html_tags)</span><br><span class=\"line\">        d = os.path.dirname(__file__)</span><br><span class=\"line\">        tag_background = np.array(Image.open(self.background))</span><br><span class=\"line\">        my_wordcloud = WordCloud(background_color=&quot;#CACFD2&quot;,</span><br><span class=\"line\">                                 max_words=2000,</span><br><span class=\"line\">                                 font_path=&quot;public/publicfiles/fangsong_GB2312.ttf&quot;,</span><br><span class=\"line\">                                 mask=tag_background,</span><br><span class=\"line\">                                 stopwords=&#123;&apos;企业&apos;&#125;,</span><br><span class=\"line\">                                 max_font_size=150,</span><br><span class=\"line\">                                 scale=1,</span><br><span class=\"line\">                                 width=800,</span><br><span class=\"line\">                                 random_state=1).generate(wl_space_split)</span><br><span class=\"line\"></span><br><span class=\"line\">        plt.imshow(my_wordcloud)</span><br><span class=\"line\">        plt.axis(&quot;off&quot;)</span><br><span class=\"line\">        # plt.show()</span><br><span class=\"line\">        my_wordcloud.to_file(self.tar_img)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    tc = TagCloudGenerator()</span><br><span class=\"line\">    tc.run()</span><br></pre></td></tr></table></figure></p>\n<p>代码存在tag_cloud.py文件中，放在blog的根目录，图片生成的位置：blog/public/images/blog_tags.jpg。</p>\n<h4 id=\"执行方法\"><a href=\"#执行方法\" class=\"headerlink\" title=\"执行方法\"></a>执行方法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tag_cloud.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌入about\"><a href=\"#嵌入about\" class=\"headerlink\" title=\"嵌入about\"></a>嵌入about</h4><p>找到about页面的index.md文件，嵌入图片，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;/images/blog_tags.jpg&quot;  alt=&quot;tags cloud&quot; width=&quot;88%&quot;/&gt;</span><br></pre></td></tr></table></figure></p>"},{"title":"Python的列表推导式","comments":0,"desc":"Python列表推导式语法糖的基础介绍","keywords":"python, 列表推导式, 语法, 语法糖","abbrlink":56827,"date":"2017-06-22T06:29:04.000Z","updated":"2017-06-22T06:29:04.000Z","_content":"\n#### 定义\n\n{% note primary %}\n列表推导式，是Python的一种独有特性之一，可以从一个列表（python数据结，熟称数组：[1, 2]）构构建出一个新的列表结果，构架过程中可以经过简单的数据处理。在2与3版本都支持。\n\n{% code %}\nalist = range(1, 10)\nodd = [i for i in alist if i % 2 == 1]\nprint odd\n\n[1, 3, 5, 7, 9]\n{% endcode %}\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 格式\n\n[表达式 for 变量 in 列表 if 条件]\n\n- if 用于数据过滤\n- 表达式 用于数据处理\n\n#### 示例\n\n示例列表：alist = ['abcd', 'bcd', 'cd', 'd']\n\n> 列表所有元素转大写\n\n```\n[x.upper() for x in alist]\n\n['ABCD', 'BCD', 'CD', 'D']\n```\n\n> 列表元素长度大于3的转大写\n```\nnew_big_al = [x.upper() for x in alist if len(x) > 3]\n\n['ABCD']\n```\n> for嵌套\n```\n[x + y for x in [1, 2] for y in [1, 2, 3]]\n\n[2, 3, 4, 3, 4, 5]\n```\n\n> for嵌套 + if\n\n```\n[x + y for x in [1, 2] if x % 2 == 0 for y in [1, 2, 3] if y % 2 == 1]\n\n[3, 5]\n```\n","source":"_posts/Python-的列表推导式.md","raw":"---\ntitle: Python的列表推导式\ncomments: false\ndesc: Python列表推导式语法糖的基础介绍\ncategories:\n  - [Python]\ntags: [Python, Python基础篇]\nkeywords: python, 列表推导式, 语法, 语法糖\nabbrlink: 56827\ndate: 2017-06-22 14:29:04\nupdated: 2017-06-22 14:29:04\n---\n\n#### 定义\n\n{% note primary %}\n列表推导式，是Python的一种独有特性之一，可以从一个列表（python数据结，熟称数组：[1, 2]）构构建出一个新的列表结果，构架过程中可以经过简单的数据处理。在2与3版本都支持。\n\n{% code %}\nalist = range(1, 10)\nodd = [i for i in alist if i % 2 == 1]\nprint odd\n\n[1, 3, 5, 7, 9]\n{% endcode %}\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 格式\n\n[表达式 for 变量 in 列表 if 条件]\n\n- if 用于数据过滤\n- 表达式 用于数据处理\n\n#### 示例\n\n示例列表：alist = ['abcd', 'bcd', 'cd', 'd']\n\n> 列表所有元素转大写\n\n```\n[x.upper() for x in alist]\n\n['ABCD', 'BCD', 'CD', 'D']\n```\n\n> 列表元素长度大于3的转大写\n```\nnew_big_al = [x.upper() for x in alist if len(x) > 3]\n\n['ABCD']\n```\n> for嵌套\n```\n[x + y for x in [1, 2] for y in [1, 2, 3]]\n\n[2, 3, 4, 3, 4, 5]\n```\n\n> for嵌套 + if\n\n```\n[x + y for x in [1, 2] if x % 2 == 0 for y in [1, 2, 3] if y % 2 == 1]\n\n[3, 5]\n```\n","slug":"Python-的列表推导式","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2x1006dtabjm90p7akz","content":"<h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><div class=\"note primary\">\n            <p>列表推导式，是Python的一种独有特性之一，可以从一个列表（python数据结，熟称数组：[1, 2]）构构建出一个新的列表结果，构架过程中可以经过简单的数据处理。在2与3版本都支持。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alist = range(1, 10)</span><br><span class=\"line\">odd = [i for i in alist if i % 2 == 1]</span><br><span class=\"line\">print odd</span><br><span class=\"line\"></span><br><span class=\"line\">[1, 3, 5, 7, 9]</span><br></pre></td></tr></table></figure>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><p>[表达式 for 变量 in 列表 if 条件]</p>\n<ul>\n<li>if 用于数据过滤</li>\n<li>表达式 用于数据处理</li>\n</ul>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>示例列表：alist = [‘abcd’, ‘bcd’, ‘cd’, ‘d’]</p>\n<blockquote>\n<p>列表所有元素转大写</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x.upper() for x in alist]</span><br><span class=\"line\"></span><br><span class=\"line\">[&apos;ABCD&apos;, &apos;BCD&apos;, &apos;CD&apos;, &apos;D&apos;]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>列表元素长度大于3的转大写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_big_al = [x.upper() for x in alist if len(x) &gt; 3]</span><br><span class=\"line\"></span><br><span class=\"line\">[&apos;ABCD&apos;]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>for嵌套<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x + y for x in [1, 2] for y in [1, 2, 3]]</span><br><span class=\"line\"></span><br><span class=\"line\">[2, 3, 4, 3, 4, 5]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>for嵌套 + if</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x + y for x in [1, 2] if x % 2 == 0 for y in [1, 2, 3] if y % 2 == 1]</span><br><span class=\"line\"></span><br><span class=\"line\">[3, 5]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><div class=\"note primary\">\n            <p>列表推导式，是Python的一种独有特性之一，可以从一个列表（python数据结，熟称数组：[1, 2]）构构建出一个新的列表结果，构架过程中可以经过简单的数据处理。在2与3版本都支持。</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alist = range(1, 10)</span><br><span class=\"line\">odd = [i for i in alist if i % 2 == 1]</span><br><span class=\"line\">print odd</span><br><span class=\"line\"></span><br><span class=\"line\">[1, 3, 5, 7, 9]</span><br></pre></td></tr></table></figure>\n          </div>","more":"<hr>\n\n<h4 id=\"格式\"><a href=\"#格式\" class=\"headerlink\" title=\"格式\"></a>格式</h4><p>[表达式 for 变量 in 列表 if 条件]</p>\n<ul>\n<li>if 用于数据过滤</li>\n<li>表达式 用于数据处理</li>\n</ul>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><p>示例列表：alist = [‘abcd’, ‘bcd’, ‘cd’, ‘d’]</p>\n<blockquote>\n<p>列表所有元素转大写</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x.upper() for x in alist]</span><br><span class=\"line\"></span><br><span class=\"line\">[&apos;ABCD&apos;, &apos;BCD&apos;, &apos;CD&apos;, &apos;D&apos;]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>列表元素长度大于3的转大写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_big_al = [x.upper() for x in alist if len(x) &gt; 3]</span><br><span class=\"line\"></span><br><span class=\"line\">[&apos;ABCD&apos;]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>for嵌套<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x + y for x in [1, 2] for y in [1, 2, 3]]</span><br><span class=\"line\"></span><br><span class=\"line\">[2, 3, 4, 3, 4, 5]</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>for嵌套 + if</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x + y for x in [1, 2] if x % 2 == 0 for y in [1, 2, 3] if y % 2 == 1]</span><br><span class=\"line\"></span><br><span class=\"line\">[3, 5]</span><br></pre></td></tr></table></figure>"},{"title":"程序猿七夕-心心相印","comments":0,"desc":"利用turtle python包去帮助程序猿过七夕，心心相印程序","keywords":"python, turtle, 七夕, 脚本, 程序, 浪漫, 心心相印, 一箭穿心","abbrlink":31296,"date":"2018-08-13T06:19:57.000Z","updated":"2018-08-13T09:19:57.000Z","_content":"\n{% note primary %}\npython带你过七夕，让程序猿的七夕不再无趣^_^。\n{% endnote %}\n\n\n<img src=\"/images/article_xinxinxiangying.gif\" align=center style=\"border:3px solid red\"/>\n<!-- <img src=\"images/article_xinxinxiangying.png\" style=\"border:3px solid red\"/> -->\n\n<!--more-->\n<hr />\n\n一提到程序猿，大家的映象是***这样***\n\n<img src=\"chengxuyuan2.jpg\" alt=\"chengxuyuan2\" align=center/>\n\n***这样***\n\n<img src=\"chengxuyuan3.gif\" alt=\"chengxuyuan3\" align=center/>\n\n***或者这样***\n\n<img src=\"chengxuyuan4.jpg\" alt=\"chengxuyuan4\" align=center/>\n\n***其实，标配是这样***\n\n<img src=\"chengxuyuan1.png\" width = \"240\" height = \"300\" alt=\"chengxuyuan1\" align=center/>\n\n哈哈，很搞笑是不，我们是程序猿，时代电子技术的领导者，怎么可能那么low呢。言归正传，程序猿也是懂浪漫的，马上七夕了，用一副漫画***<font color=\"#dd0000\" size=\"5\">心心相印</font>***程序猿专有方式来陪你们过七夕，拿走不谢。\n\n> 代码如下：\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n\nusage:\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2018/8/13\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n------------------------------------------------\n\"\"\"\n\nimport time\nimport turtle\nfrom turtle import *\n\n\ndef write_zi(x, y, content, font_type='Comic Sans MS', font_size=30, font_normal='normal'):\n    penup()\n    goto(x, y)\n    pendown()\n    write(content, align=\"left\", font=(font_type, font_size, font_normal))\n\n\ndef pen_config(size=2, color='black', speed='slow'):\n    # 画笔宽度\n    turtle.pensize(size)\n    # 画笔颜色\n    turtle.pencolor(color)\n    # 画笔速度 0-10\n    turtle.speed(speed)\n\n\ndef locinit_config():\n    # 设置框位置\n    turtle.setup(width=1400, height=900, startx=0, starty=200)\n    # turtle.screensize(bg='navajowhite')\n    turtle.screensize(bg='papayawhip')\n\n\n# 第一个心\ndef one_heart():\n    color('deeppink', 'red')\n    penup()\n    goto(120, -20)\n    begin_fill()\n    pendown()\n    left(45)\n    fd(240)\n    circle(100, 225)\n    seth(90)\n    circle(100, 225)\n    fd(240)\n    end_fill()\n\n\n# 第二个心\ndef two_heart():\n    color('orange', 'yellow')\n    penup()\n    goto(-40, -80)\n    pendown()\n    begin_fill()\n    left(90)\n    fd(240)\n    circle(100, 225)\n    seth(90)\n    circle(100, 225)\n    fd(240)\n    end_fill()\n\n\n# 箭\ndef arrow():\n    # bing\n    penup()\n    goto(-410, 0)\n    pendown()\n    goto(-100, 60)\n    penup()\n    goto(255, 110)\n    pendown()\n    goto(540, 160)\n    # tou\n    penup()\n    goto(440, 190)\n    pendown()\n    goto(540, 160)\n    penup()\n    goto(430, 100)\n    pendown()\n    goto(540, 160)\n\n\n# 诗题\ndef shi_title():\n    write_zi(200, -100, \"爱\", font_size=42)\n    write_zi(260, -100, \"你\", font_size=42)\n    write_zi(320, -100, \"一\", font_size=42)\n    write_zi(380, -100, \"生\", font_size=42)\n    write_zi(440, -100, \"十\", font_size=42)\n    write_zi(500, -100, \"世\", font_size=42)\n\n\n# 诗\ndef shi():\n    \"\"\"\n    一半飘零一半安，\n    生逢盛世缘相遇，\n    十年修得同船渡，\n    世世生生武雅楠\n    \"\"\"\n    # 1\n    write_zi(260, -160, \"一\")\n    write_zi(260, -200, \"半\")\n    write_zi(260, -240, \"飘\")\n    write_zi(260, -280, \"零\")\n    write_zi(260, -320, \"一\")\n    write_zi(260, -360, \"半\")\n    write_zi(260, -400, \"安\")\n    # 2\n    write_zi(330, -160, \"生\")\n    write_zi(330, -200, \"逢\")\n    write_zi(330, -240, \"盛\")\n    write_zi(330, -280, \"世\")\n    write_zi(330, -320, \"缘\")\n    write_zi(330, -360, \"相\")\n    write_zi(330, -400, \"遇\")\n    # 3470\n    write_zi(400, -160, \"十\")\n    write_zi(400, -200, \"年\")\n    write_zi(400, -240, \"修\")\n    write_zi(400, -280, \"得\")\n    write_zi(400, -320, \"同\")\n    write_zi(400, -360, \"船\")\n    write_zi(400, -400, \"渡\")\n    # 4\n    write_zi(470, -160, \"世\")\n    write_zi(470, -200, \"世\")\n    write_zi(470, -240, \"生\")\n    write_zi(470, -280, \"生\")\n    write_zi(470, -320, \"武\")\n    write_zi(470, -360, \"雅\")\n    write_zi(470, -400, \"楠\")\n\n\nif __name__ == '__main__':\n    time.sleep(2)\n    locinit_config()\n    pen_config(size=8, speed='fast')\n    one_heart()\n    pen_config(size=8, speed='fast')\n    two_heart()\n    pen_config(size=12, color='black', speed='normal')\n    arrow()\n    pen_config(size=3, color='red', speed='normal')\n    shi_title()\n    pen_config(size=3, color='dodgerblue', speed='fast')\n    shi()\n    time.sleep(5)\n```\n\n> ***备注***\n\n- 绘画顺序：心->心->箭->诗\n- pen_config 画笔设置，在这个方法可以切换绘画过程中的画笔颜色以及绘画的速度\n- shi 为七言绝句，如果想改其他，记得调整位置\n","source":"_posts/Python-程序猿七夕-心心相印.md","raw":"---\ntitle: 程序猿七夕-心心相印\ncomments: false\ndesc: 利用turtle python包去帮助程序猿过七夕，心心相印程序\ncategories:\n  - [Python]\ntags: [Python, Python程序篇]\nkeywords: python, turtle, 七夕, 脚本, 程序, 浪漫, 心心相印, 一箭穿心\nabbrlink: 31296\ndate: 2018-08-13 14:19:57\nupdated: 2018-08-13 17:19:57\n---\n\n{% note primary %}\npython带你过七夕，让程序猿的七夕不再无趣^_^。\n{% endnote %}\n\n\n<img src=\"/images/article_xinxinxiangying.gif\" align=center style=\"border:3px solid red\"/>\n<!-- <img src=\"images/article_xinxinxiangying.png\" style=\"border:3px solid red\"/> -->\n\n<!--more-->\n<hr />\n\n一提到程序猿，大家的映象是***这样***\n\n<img src=\"chengxuyuan2.jpg\" alt=\"chengxuyuan2\" align=center/>\n\n***这样***\n\n<img src=\"chengxuyuan3.gif\" alt=\"chengxuyuan3\" align=center/>\n\n***或者这样***\n\n<img src=\"chengxuyuan4.jpg\" alt=\"chengxuyuan4\" align=center/>\n\n***其实，标配是这样***\n\n<img src=\"chengxuyuan1.png\" width = \"240\" height = \"300\" alt=\"chengxuyuan1\" align=center/>\n\n哈哈，很搞笑是不，我们是程序猿，时代电子技术的领导者，怎么可能那么low呢。言归正传，程序猿也是懂浪漫的，马上七夕了，用一副漫画***<font color=\"#dd0000\" size=\"5\">心心相印</font>***程序猿专有方式来陪你们过七夕，拿走不谢。\n\n> 代码如下：\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n\nusage:\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2018/8/13\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n------------------------------------------------\n\"\"\"\n\nimport time\nimport turtle\nfrom turtle import *\n\n\ndef write_zi(x, y, content, font_type='Comic Sans MS', font_size=30, font_normal='normal'):\n    penup()\n    goto(x, y)\n    pendown()\n    write(content, align=\"left\", font=(font_type, font_size, font_normal))\n\n\ndef pen_config(size=2, color='black', speed='slow'):\n    # 画笔宽度\n    turtle.pensize(size)\n    # 画笔颜色\n    turtle.pencolor(color)\n    # 画笔速度 0-10\n    turtle.speed(speed)\n\n\ndef locinit_config():\n    # 设置框位置\n    turtle.setup(width=1400, height=900, startx=0, starty=200)\n    # turtle.screensize(bg='navajowhite')\n    turtle.screensize(bg='papayawhip')\n\n\n# 第一个心\ndef one_heart():\n    color('deeppink', 'red')\n    penup()\n    goto(120, -20)\n    begin_fill()\n    pendown()\n    left(45)\n    fd(240)\n    circle(100, 225)\n    seth(90)\n    circle(100, 225)\n    fd(240)\n    end_fill()\n\n\n# 第二个心\ndef two_heart():\n    color('orange', 'yellow')\n    penup()\n    goto(-40, -80)\n    pendown()\n    begin_fill()\n    left(90)\n    fd(240)\n    circle(100, 225)\n    seth(90)\n    circle(100, 225)\n    fd(240)\n    end_fill()\n\n\n# 箭\ndef arrow():\n    # bing\n    penup()\n    goto(-410, 0)\n    pendown()\n    goto(-100, 60)\n    penup()\n    goto(255, 110)\n    pendown()\n    goto(540, 160)\n    # tou\n    penup()\n    goto(440, 190)\n    pendown()\n    goto(540, 160)\n    penup()\n    goto(430, 100)\n    pendown()\n    goto(540, 160)\n\n\n# 诗题\ndef shi_title():\n    write_zi(200, -100, \"爱\", font_size=42)\n    write_zi(260, -100, \"你\", font_size=42)\n    write_zi(320, -100, \"一\", font_size=42)\n    write_zi(380, -100, \"生\", font_size=42)\n    write_zi(440, -100, \"十\", font_size=42)\n    write_zi(500, -100, \"世\", font_size=42)\n\n\n# 诗\ndef shi():\n    \"\"\"\n    一半飘零一半安，\n    生逢盛世缘相遇，\n    十年修得同船渡，\n    世世生生武雅楠\n    \"\"\"\n    # 1\n    write_zi(260, -160, \"一\")\n    write_zi(260, -200, \"半\")\n    write_zi(260, -240, \"飘\")\n    write_zi(260, -280, \"零\")\n    write_zi(260, -320, \"一\")\n    write_zi(260, -360, \"半\")\n    write_zi(260, -400, \"安\")\n    # 2\n    write_zi(330, -160, \"生\")\n    write_zi(330, -200, \"逢\")\n    write_zi(330, -240, \"盛\")\n    write_zi(330, -280, \"世\")\n    write_zi(330, -320, \"缘\")\n    write_zi(330, -360, \"相\")\n    write_zi(330, -400, \"遇\")\n    # 3470\n    write_zi(400, -160, \"十\")\n    write_zi(400, -200, \"年\")\n    write_zi(400, -240, \"修\")\n    write_zi(400, -280, \"得\")\n    write_zi(400, -320, \"同\")\n    write_zi(400, -360, \"船\")\n    write_zi(400, -400, \"渡\")\n    # 4\n    write_zi(470, -160, \"世\")\n    write_zi(470, -200, \"世\")\n    write_zi(470, -240, \"生\")\n    write_zi(470, -280, \"生\")\n    write_zi(470, -320, \"武\")\n    write_zi(470, -360, \"雅\")\n    write_zi(470, -400, \"楠\")\n\n\nif __name__ == '__main__':\n    time.sleep(2)\n    locinit_config()\n    pen_config(size=8, speed='fast')\n    one_heart()\n    pen_config(size=8, speed='fast')\n    two_heart()\n    pen_config(size=12, color='black', speed='normal')\n    arrow()\n    pen_config(size=3, color='red', speed='normal')\n    shi_title()\n    pen_config(size=3, color='dodgerblue', speed='fast')\n    shi()\n    time.sleep(5)\n```\n\n> ***备注***\n\n- 绘画顺序：心->心->箭->诗\n- pen_config 画笔设置，在这个方法可以切换绘画过程中的画笔颜色以及绘画的速度\n- shi 为七言绝句，如果想改其他，记得调整位置\n","slug":"Python-程序猿七夕-心心相印","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2x4006itabjpzj4ff1l","content":"<div class=\"note primary\">\n            <p>python带你过七夕，让程序猿的七夕不再无趣^_^。</p>\n          </div>\n<p><img src=\"/images/article_xinxinxiangying.gif\" align=\"center\" style=\"border:3px solid red\"><br><!-- <img src=\"images/article_xinxinxiangying.png\" style=\"border:3px solid red\"/> --></p>\n<a id=\"more\"></a>\n<hr>\n\n<p>一提到程序猿，大家的映象是<strong><em>这样</em></strong></p>\n<p><img src=\"chengxuyuan2.jpg\" alt=\"chengxuyuan2\" align=\"center/\"></p>\n<p><strong><em>这样</em></strong></p>\n<p><img src=\"chengxuyuan3.gif\" alt=\"chengxuyuan3\" align=\"center/\"></p>\n<p><strong><em>或者这样</em></strong></p>\n<p><img src=\"chengxuyuan4.jpg\" alt=\"chengxuyuan4\" align=\"center/\"></p>\n<p><strong><em>其实，标配是这样</em></strong></p>\n<p><img src=\"chengxuyuan1.png\" width=\"240\" height=\"300\" alt=\"chengxuyuan1\" align=\"center/\"></p>\n<p>哈哈，很搞笑是不，我们是程序猿，时代电子技术的领导者，怎么可能那么low呢。言归正传，程序猿也是懂浪漫的，马上七夕了，用一副漫画<strong><em><font color=\"#dd0000\" size=\"5\">心心相印</font></em></strong>程序猿专有方式来陪你们过七夕，拿走不谢。</p>\n<blockquote>\n<p>代码如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2018/8/13&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import time</span><br><span class=\"line\">import turtle</span><br><span class=\"line\">from turtle import *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def write_zi(x, y, content, font_type=&apos;Comic Sans MS&apos;, font_size=30, font_normal=&apos;normal&apos;):</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(x, y)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    write(content, align=&quot;left&quot;, font=(font_type, font_size, font_normal))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def pen_config(size=2, color=&apos;black&apos;, speed=&apos;slow&apos;):</span><br><span class=\"line\">    # 画笔宽度</span><br><span class=\"line\">    turtle.pensize(size)</span><br><span class=\"line\">    # 画笔颜色</span><br><span class=\"line\">    turtle.pencolor(color)</span><br><span class=\"line\">    # 画笔速度 0-10</span><br><span class=\"line\">    turtle.speed(speed)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def locinit_config():</span><br><span class=\"line\">    # 设置框位置</span><br><span class=\"line\">    turtle.setup(width=1400, height=900, startx=0, starty=200)</span><br><span class=\"line\">    # turtle.screensize(bg=&apos;navajowhite&apos;)</span><br><span class=\"line\">    turtle.screensize(bg=&apos;papayawhip&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 第一个心</span><br><span class=\"line\">def one_heart():</span><br><span class=\"line\">    color(&apos;deeppink&apos;, &apos;red&apos;)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(120, -20)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    left(45)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    seth(90)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 第二个心</span><br><span class=\"line\">def two_heart():</span><br><span class=\"line\">    color(&apos;orange&apos;, &apos;yellow&apos;)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(-40, -80)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    left(90)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    seth(90)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 箭</span><br><span class=\"line\">def arrow():</span><br><span class=\"line\">    # bing</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(-410, 0)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(-100, 60)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(255, 110)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\">    # tou</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(440, 190)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(430, 100)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 诗题</span><br><span class=\"line\">def shi_title():</span><br><span class=\"line\">    write_zi(200, -100, &quot;爱&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(260, -100, &quot;你&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(320, -100, &quot;一&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(380, -100, &quot;生&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(440, -100, &quot;十&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(500, -100, &quot;世&quot;, font_size=42)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 诗</span><br><span class=\"line\">def shi():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    一半飘零一半安，</span><br><span class=\"line\">    生逢盛世缘相遇，</span><br><span class=\"line\">    十年修得同船渡，</span><br><span class=\"line\">    世世生生武雅楠</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    # 1</span><br><span class=\"line\">    write_zi(260, -160, &quot;一&quot;)</span><br><span class=\"line\">    write_zi(260, -200, &quot;半&quot;)</span><br><span class=\"line\">    write_zi(260, -240, &quot;飘&quot;)</span><br><span class=\"line\">    write_zi(260, -280, &quot;零&quot;)</span><br><span class=\"line\">    write_zi(260, -320, &quot;一&quot;)</span><br><span class=\"line\">    write_zi(260, -360, &quot;半&quot;)</span><br><span class=\"line\">    write_zi(260, -400, &quot;安&quot;)</span><br><span class=\"line\">    # 2</span><br><span class=\"line\">    write_zi(330, -160, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(330, -200, &quot;逢&quot;)</span><br><span class=\"line\">    write_zi(330, -240, &quot;盛&quot;)</span><br><span class=\"line\">    write_zi(330, -280, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(330, -320, &quot;缘&quot;)</span><br><span class=\"line\">    write_zi(330, -360, &quot;相&quot;)</span><br><span class=\"line\">    write_zi(330, -400, &quot;遇&quot;)</span><br><span class=\"line\">    # 3470</span><br><span class=\"line\">    write_zi(400, -160, &quot;十&quot;)</span><br><span class=\"line\">    write_zi(400, -200, &quot;年&quot;)</span><br><span class=\"line\">    write_zi(400, -240, &quot;修&quot;)</span><br><span class=\"line\">    write_zi(400, -280, &quot;得&quot;)</span><br><span class=\"line\">    write_zi(400, -320, &quot;同&quot;)</span><br><span class=\"line\">    write_zi(400, -360, &quot;船&quot;)</span><br><span class=\"line\">    write_zi(400, -400, &quot;渡&quot;)</span><br><span class=\"line\">    # 4</span><br><span class=\"line\">    write_zi(470, -160, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(470, -200, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(470, -240, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(470, -280, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(470, -320, &quot;武&quot;)</span><br><span class=\"line\">    write_zi(470, -360, &quot;雅&quot;)</span><br><span class=\"line\">    write_zi(470, -400, &quot;楠&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    locinit_config()</span><br><span class=\"line\">    pen_config(size=8, speed=&apos;fast&apos;)</span><br><span class=\"line\">    one_heart()</span><br><span class=\"line\">    pen_config(size=8, speed=&apos;fast&apos;)</span><br><span class=\"line\">    two_heart()</span><br><span class=\"line\">    pen_config(size=12, color=&apos;black&apos;, speed=&apos;normal&apos;)</span><br><span class=\"line\">    arrow()</span><br><span class=\"line\">    pen_config(size=3, color=&apos;red&apos;, speed=&apos;normal&apos;)</span><br><span class=\"line\">    shi_title()</span><br><span class=\"line\">    pen_config(size=3, color=&apos;dodgerblue&apos;, speed=&apos;fast&apos;)</span><br><span class=\"line\">    shi()</span><br><span class=\"line\">    time.sleep(5)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong><em>备注</em></strong></p>\n</blockquote>\n<ul>\n<li>绘画顺序：心-&gt;心-&gt;箭-&gt;诗</li>\n<li>pen_config 画笔设置，在这个方法可以切换绘画过程中的画笔颜色以及绘画的速度</li>\n<li>shi 为七言绝句，如果想改其他，记得调整位置</li>\n</ul>\n","site":{"data":{}},"excerpt":"<div class=\"note primary\">\n            <p>python带你过七夕，让程序猿的七夕不再无趣^_^。</p>\n          </div>\n<p><img src=\"/images/article_xinxinxiangying.gif\" align=\"center\" style=\"border:3px solid red\"><br><!-- <img src=\"images/article_xinxinxiangying.png\" style=\"border:3px solid red\"/> --></p>","more":"<hr>\n\n<p>一提到程序猿，大家的映象是<strong><em>这样</em></strong></p>\n<p><img src=\"chengxuyuan2.jpg\" alt=\"chengxuyuan2\" align=\"center/\"></p>\n<p><strong><em>这样</em></strong></p>\n<p><img src=\"chengxuyuan3.gif\" alt=\"chengxuyuan3\" align=\"center/\"></p>\n<p><strong><em>或者这样</em></strong></p>\n<p><img src=\"chengxuyuan4.jpg\" alt=\"chengxuyuan4\" align=\"center/\"></p>\n<p><strong><em>其实，标配是这样</em></strong></p>\n<p><img src=\"chengxuyuan1.png\" width=\"240\" height=\"300\" alt=\"chengxuyuan1\" align=\"center/\"></p>\n<p>哈哈，很搞笑是不，我们是程序猿，时代电子技术的领导者，怎么可能那么low呢。言归正传，程序猿也是懂浪漫的，马上七夕了，用一副漫画<strong><em><font color=\"#dd0000\" size=\"5\">心心相印</font></em></strong>程序猿专有方式来陪你们过七夕，拿走不谢。</p>\n<blockquote>\n<p>代码如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2018/8/13&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import time</span><br><span class=\"line\">import turtle</span><br><span class=\"line\">from turtle import *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def write_zi(x, y, content, font_type=&apos;Comic Sans MS&apos;, font_size=30, font_normal=&apos;normal&apos;):</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(x, y)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    write(content, align=&quot;left&quot;, font=(font_type, font_size, font_normal))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def pen_config(size=2, color=&apos;black&apos;, speed=&apos;slow&apos;):</span><br><span class=\"line\">    # 画笔宽度</span><br><span class=\"line\">    turtle.pensize(size)</span><br><span class=\"line\">    # 画笔颜色</span><br><span class=\"line\">    turtle.pencolor(color)</span><br><span class=\"line\">    # 画笔速度 0-10</span><br><span class=\"line\">    turtle.speed(speed)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def locinit_config():</span><br><span class=\"line\">    # 设置框位置</span><br><span class=\"line\">    turtle.setup(width=1400, height=900, startx=0, starty=200)</span><br><span class=\"line\">    # turtle.screensize(bg=&apos;navajowhite&apos;)</span><br><span class=\"line\">    turtle.screensize(bg=&apos;papayawhip&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 第一个心</span><br><span class=\"line\">def one_heart():</span><br><span class=\"line\">    color(&apos;deeppink&apos;, &apos;red&apos;)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(120, -20)</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    left(45)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    seth(90)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 第二个心</span><br><span class=\"line\">def two_heart():</span><br><span class=\"line\">    color(&apos;orange&apos;, &apos;yellow&apos;)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(-40, -80)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    begin_fill()</span><br><span class=\"line\">    left(90)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    seth(90)</span><br><span class=\"line\">    circle(100, 225)</span><br><span class=\"line\">    fd(240)</span><br><span class=\"line\">    end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 箭</span><br><span class=\"line\">def arrow():</span><br><span class=\"line\">    # bing</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(-410, 0)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(-100, 60)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(255, 110)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\">    # tou</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(440, 190)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\">    penup()</span><br><span class=\"line\">    goto(430, 100)</span><br><span class=\"line\">    pendown()</span><br><span class=\"line\">    goto(540, 160)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 诗题</span><br><span class=\"line\">def shi_title():</span><br><span class=\"line\">    write_zi(200, -100, &quot;爱&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(260, -100, &quot;你&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(320, -100, &quot;一&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(380, -100, &quot;生&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(440, -100, &quot;十&quot;, font_size=42)</span><br><span class=\"line\">    write_zi(500, -100, &quot;世&quot;, font_size=42)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 诗</span><br><span class=\"line\">def shi():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    一半飘零一半安，</span><br><span class=\"line\">    生逢盛世缘相遇，</span><br><span class=\"line\">    十年修得同船渡，</span><br><span class=\"line\">    世世生生武雅楠</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    # 1</span><br><span class=\"line\">    write_zi(260, -160, &quot;一&quot;)</span><br><span class=\"line\">    write_zi(260, -200, &quot;半&quot;)</span><br><span class=\"line\">    write_zi(260, -240, &quot;飘&quot;)</span><br><span class=\"line\">    write_zi(260, -280, &quot;零&quot;)</span><br><span class=\"line\">    write_zi(260, -320, &quot;一&quot;)</span><br><span class=\"line\">    write_zi(260, -360, &quot;半&quot;)</span><br><span class=\"line\">    write_zi(260, -400, &quot;安&quot;)</span><br><span class=\"line\">    # 2</span><br><span class=\"line\">    write_zi(330, -160, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(330, -200, &quot;逢&quot;)</span><br><span class=\"line\">    write_zi(330, -240, &quot;盛&quot;)</span><br><span class=\"line\">    write_zi(330, -280, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(330, -320, &quot;缘&quot;)</span><br><span class=\"line\">    write_zi(330, -360, &quot;相&quot;)</span><br><span class=\"line\">    write_zi(330, -400, &quot;遇&quot;)</span><br><span class=\"line\">    # 3470</span><br><span class=\"line\">    write_zi(400, -160, &quot;十&quot;)</span><br><span class=\"line\">    write_zi(400, -200, &quot;年&quot;)</span><br><span class=\"line\">    write_zi(400, -240, &quot;修&quot;)</span><br><span class=\"line\">    write_zi(400, -280, &quot;得&quot;)</span><br><span class=\"line\">    write_zi(400, -320, &quot;同&quot;)</span><br><span class=\"line\">    write_zi(400, -360, &quot;船&quot;)</span><br><span class=\"line\">    write_zi(400, -400, &quot;渡&quot;)</span><br><span class=\"line\">    # 4</span><br><span class=\"line\">    write_zi(470, -160, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(470, -200, &quot;世&quot;)</span><br><span class=\"line\">    write_zi(470, -240, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(470, -280, &quot;生&quot;)</span><br><span class=\"line\">    write_zi(470, -320, &quot;武&quot;)</span><br><span class=\"line\">    write_zi(470, -360, &quot;雅&quot;)</span><br><span class=\"line\">    write_zi(470, -400, &quot;楠&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    locinit_config()</span><br><span class=\"line\">    pen_config(size=8, speed=&apos;fast&apos;)</span><br><span class=\"line\">    one_heart()</span><br><span class=\"line\">    pen_config(size=8, speed=&apos;fast&apos;)</span><br><span class=\"line\">    two_heart()</span><br><span class=\"line\">    pen_config(size=12, color=&apos;black&apos;, speed=&apos;normal&apos;)</span><br><span class=\"line\">    arrow()</span><br><span class=\"line\">    pen_config(size=3, color=&apos;red&apos;, speed=&apos;normal&apos;)</span><br><span class=\"line\">    shi_title()</span><br><span class=\"line\">    pen_config(size=3, color=&apos;dodgerblue&apos;, speed=&apos;fast&apos;)</span><br><span class=\"line\">    shi()</span><br><span class=\"line\">    time.sleep(5)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong><em>备注</em></strong></p>\n</blockquote>\n<ul>\n<li>绘画顺序：心-&gt;心-&gt;箭-&gt;诗</li>\n<li>pen_config 画笔设置，在这个方法可以切换绘画过程中的画笔颜色以及绘画的速度</li>\n<li>shi 为七言绝句，如果想改其他，记得调整位置</li>\n</ul>"},{"title":"Qita-抖音BMG","comments":0,"top":false,"abbrlink":16635,"date":"2020-06-30T05:47:57.000Z","updated":"2020-06-30T05:47:57.000Z","desc":null,"keywords":null,"_content":"\n#### 背景\n\n![](/images/article_douyin.jpg)\n\n{% note primary %}\n抖音记录美好生活\n\n记录自己喜欢的BGM，喜欢的请拿去，不用谢\n{% endnote %}\n\n<!--more-->\n<hr />\n\n{% raw %}\n<div class=\"post_cus_note\">Pygo</div>\n{% endraw %}\n\n- batte fort 凤舞九天：https://music.163.com/#/song?id=1379910808&userid=555314631\n- Dan Bălan-Lendo Calendo：https://music.163.com/#/song?id=1435770027&userid=555314631\n- 等什么君-赤伶：https://music.163.com/song?id=1447509197&userid=555314631\n- 杨千嬅-野孩子抖音：https://music.163.com/song?id=1385757429&userid=555314631\n- 猜不透 (咚鼓版)：https://music.163.com/song?id=1361558668&userid=555314631\n- 真的爱你 (咚鼓版)：https://music.163.com/song?id=1396568322&userid=555314631\n- 送给未来的你(DJ弹鼓版)：https://music.163.com/song?id=1425463866&userid=555314631\n- Tony Igy-Astronomia：https://music.163.com/song?id=446154202&userid=555314631\n- 世间美好与你环环相扣：https://music.163.com/song?id=1399664349&userid=555314631\n- Be Your Sun (DJ版)：https://music.163.com/song?id=1386946637&userid=555314631\n","source":"_posts/Qita-抖音BMG.md","raw":"---\ntitle: Qita-抖音BMG\ncomments: false\ncategories:\n  - []\ntags: []\ntop: false\nabbrlink: 16635\ndate: 2020-06-30 13:47:57\nupdated: 2020-06-30 13:47:57\ndesc:\nkeywords:\n---\n\n#### 背景\n\n![](/images/article_douyin.jpg)\n\n{% note primary %}\n抖音记录美好生活\n\n记录自己喜欢的BGM，喜欢的请拿去，不用谢\n{% endnote %}\n\n<!--more-->\n<hr />\n\n{% raw %}\n<div class=\"post_cus_note\">Pygo</div>\n{% endraw %}\n\n- batte fort 凤舞九天：https://music.163.com/#/song?id=1379910808&userid=555314631\n- Dan Bălan-Lendo Calendo：https://music.163.com/#/song?id=1435770027&userid=555314631\n- 等什么君-赤伶：https://music.163.com/song?id=1447509197&userid=555314631\n- 杨千嬅-野孩子抖音：https://music.163.com/song?id=1385757429&userid=555314631\n- 猜不透 (咚鼓版)：https://music.163.com/song?id=1361558668&userid=555314631\n- 真的爱你 (咚鼓版)：https://music.163.com/song?id=1396568322&userid=555314631\n- 送给未来的你(DJ弹鼓版)：https://music.163.com/song?id=1425463866&userid=555314631\n- Tony Igy-Astronomia：https://music.163.com/song?id=446154202&userid=555314631\n- 世间美好与你环环相扣：https://music.163.com/song?id=1399664349&userid=555314631\n- Be Your Sun (DJ版)：https://music.163.com/song?id=1386946637&userid=555314631\n","slug":"Qita-抖音BMG","published":1,"_id":"ckcd0s2x8006ktabjbn23j0qj","layout":"post","photos":[],"link":"","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p><img src=\"/images/article_douyin.jpg\" alt></p>\n<div class=\"note primary\">\n            <p>抖音记录美好生活</p><p>记录自己喜欢的BGM，喜欢的请拿去，不用谢</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n\n<div class=\"post_cus_note\">Pygo</div>\n\n<ul>\n<li>batte fort 凤舞九天：<a href=\"https://music.163.com/#/song?id=1379910808&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/#/song?id=1379910808&amp;userid=555314631</a></li>\n<li>Dan Bălan-Lendo Calendo：<a href=\"https://music.163.com/#/song?id=1435770027&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/#/song?id=1435770027&amp;userid=555314631</a></li>\n<li>等什么君-赤伶：<a href=\"https://music.163.com/song?id=1447509197&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1447509197&amp;userid=555314631</a></li>\n<li>杨千嬅-野孩子抖音：<a href=\"https://music.163.com/song?id=1385757429&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1385757429&amp;userid=555314631</a></li>\n<li>猜不透 (咚鼓版)：<a href=\"https://music.163.com/song?id=1361558668&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1361558668&amp;userid=555314631</a></li>\n<li>真的爱你 (咚鼓版)：<a href=\"https://music.163.com/song?id=1396568322&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1396568322&amp;userid=555314631</a></li>\n<li>送给未来的你(DJ弹鼓版)：<a href=\"https://music.163.com/song?id=1425463866&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1425463866&amp;userid=555314631</a></li>\n<li>Tony Igy-Astronomia：<a href=\"https://music.163.com/song?id=446154202&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=446154202&amp;userid=555314631</a></li>\n<li>世间美好与你环环相扣：<a href=\"https://music.163.com/song?id=1399664349&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1399664349&amp;userid=555314631</a></li>\n<li>Be Your Sun (DJ版)：<a href=\"https://music.163.com/song?id=1386946637&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1386946637&amp;userid=555314631</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p><img src=\"/images/article_douyin.jpg\" alt></p>\n<div class=\"note primary\">\n            <p>抖音记录美好生活</p><p>记录自己喜欢的BGM，喜欢的请拿去，不用谢</p>\n          </div>","more":"<hr>\n\n\n<div class=\"post_cus_note\">Pygo</div>\n\n<ul>\n<li>batte fort 凤舞九天：<a href=\"https://music.163.com/#/song?id=1379910808&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/#/song?id=1379910808&amp;userid=555314631</a></li>\n<li>Dan Bălan-Lendo Calendo：<a href=\"https://music.163.com/#/song?id=1435770027&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/#/song?id=1435770027&amp;userid=555314631</a></li>\n<li>等什么君-赤伶：<a href=\"https://music.163.com/song?id=1447509197&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1447509197&amp;userid=555314631</a></li>\n<li>杨千嬅-野孩子抖音：<a href=\"https://music.163.com/song?id=1385757429&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1385757429&amp;userid=555314631</a></li>\n<li>猜不透 (咚鼓版)：<a href=\"https://music.163.com/song?id=1361558668&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1361558668&amp;userid=555314631</a></li>\n<li>真的爱你 (咚鼓版)：<a href=\"https://music.163.com/song?id=1396568322&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1396568322&amp;userid=555314631</a></li>\n<li>送给未来的你(DJ弹鼓版)：<a href=\"https://music.163.com/song?id=1425463866&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1425463866&amp;userid=555314631</a></li>\n<li>Tony Igy-Astronomia：<a href=\"https://music.163.com/song?id=446154202&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=446154202&amp;userid=555314631</a></li>\n<li>世间美好与你环环相扣：<a href=\"https://music.163.com/song?id=1399664349&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1399664349&amp;userid=555314631</a></li>\n<li>Be Your Sun (DJ版)：<a href=\"https://music.163.com/song?id=1386946637&amp;userid=555314631\" target=\"_blank\" rel=\"noopener\">https://music.163.com/song?id=1386946637&amp;userid=555314631</a></li>\n</ul>"},{"title":"SSH之快捷配置","comments":0,"top":false,"abbrlink":24280,"date":"2019-08-29T11:04:09.000Z","updated":"2019-08-29T11:04:09.000Z","desc":"SSH基础学习之快捷配置，关于config配置文件的介绍","keywords":"SSH, 快捷, 配置, config, 协议类, 服务器, 22","_content":"\n### 背景\n\n{% note warning %}\n\n上篇文章介绍了有关<font color='red' size=4.5>SSH协议</font>的基础知识，正常工作中都是通过下列命令进行ssh连接：\n\n{% code %}\nssh 用户名@服务器IP\n{% endcode %}\n\n工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 结果对比\n\n> 配置前\n\n{% code %}\nssh 用户名@服务器IP\n{% endcode %}\n每次都需要输入密码\n\n> 配置后\n\n```\nssh 别名\n```\n每日只需输入一次密码\n\n### 配置详解\n\n1 进入到***~/.ssh***目录，查看是否有***config***文件，如果没有这个文件，需要通过***touch config***手动进行建立。\n\n![](ssh_config.png)\n\n2 配置文件内容\n```\nHost XXXX\nHostName IP\nUser mingliang.gao\nControlMaster auto\nControlPath ~/.ssh/master-%r@%h:@%p\nControlPersist yes\nPasswordAuthentication no\nIdentityFile ~/.ssh/id_rsa\n```\n- Host：ssh进行连接的别名\n- HostName：服务器的IP或者机器名\n- User：用户名\n- ControlMaster：是否多个会话连接用一个session文件\n- ControlPath：session会话文件\n- ControlPersist：连接是否保持长连接\n- PasswordAuthentication：是否需要密码认证\n- IdentityFile：私钥文件\n\n如果需要了解更多的参数，请<font color='red' size=5>***man ssh_config***</font>进行查看。\n\n### 结果\n\n配置完之后，每次只需要***ssh 别名***就可以连接到指定配置的服务器，而且在会话session结束之前只需要第一次密码即可。\n","source":"_posts/Server-SSH之快捷配置.md","raw":"---\ntitle: SSH之快捷配置\ncomments: false\ncategories:\n    - [服务器]\n    - [协议类]\ntags: [SSH, 协议类]\ntop: false\nabbrlink: 24280\ndate: 2019-08-29 19:04:09\nupdated: 2019-08-29 19:04:09\ndesc: SSH基础学习之快捷配置，关于config配置文件的介绍\nkeywords: SSH, 快捷, 配置, config, 协议类, 服务器, 22\n---\n\n### 背景\n\n{% note warning %}\n\n上篇文章介绍了有关<font color='red' size=4.5>SSH协议</font>的基础知识，正常工作中都是通过下列命令进行ssh连接：\n\n{% code %}\nssh 用户名@服务器IP\n{% endcode %}\n\n工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 结果对比\n\n> 配置前\n\n{% code %}\nssh 用户名@服务器IP\n{% endcode %}\n每次都需要输入密码\n\n> 配置后\n\n```\nssh 别名\n```\n每日只需输入一次密码\n\n### 配置详解\n\n1 进入到***~/.ssh***目录，查看是否有***config***文件，如果没有这个文件，需要通过***touch config***手动进行建立。\n\n![](ssh_config.png)\n\n2 配置文件内容\n```\nHost XXXX\nHostName IP\nUser mingliang.gao\nControlMaster auto\nControlPath ~/.ssh/master-%r@%h:@%p\nControlPersist yes\nPasswordAuthentication no\nIdentityFile ~/.ssh/id_rsa\n```\n- Host：ssh进行连接的别名\n- HostName：服务器的IP或者机器名\n- User：用户名\n- ControlMaster：是否多个会话连接用一个session文件\n- ControlPath：session会话文件\n- ControlPersist：连接是否保持长连接\n- PasswordAuthentication：是否需要密码认证\n- IdentityFile：私钥文件\n\n如果需要了解更多的参数，请<font color='red' size=5>***man ssh_config***</font>进行查看。\n\n### 结果\n\n配置完之后，每次只需要***ssh 别名***就可以连接到指定配置的服务器，而且在会话session结束之前只需要第一次密码即可。\n","slug":"Server-SSH之快捷配置","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xc006ptabjiwj7lzjz","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note warning\">\n            <p>上篇文章介绍了有关<font color=\"red\" size=\"4.5\">SSH协议</font>的基础知识，正常工作中都是通过下列命令进行ssh连接：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure><p>工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"结果对比\"><a href=\"#结果对比\" class=\"headerlink\" title=\"结果对比\"></a>结果对比</h3><blockquote>\n<p>配置前</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure>\n<p>每次都需要输入密码</p>\n<blockquote>\n<p>配置后</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 别名</span><br></pre></td></tr></table></figure>\n<p>每日只需输入一次密码</p>\n<h3 id=\"配置详解\"><a href=\"#配置详解\" class=\"headerlink\" title=\"配置详解\"></a>配置详解</h3><p>1 进入到<strong><em>~/.ssh</em></strong>目录，查看是否有<strong><em>config</em></strong>文件，如果没有这个文件，需要通过<strong><em>touch config</em></strong>手动进行建立。</p>\n<p><img src=\"ssh_config.png\" alt></p>\n<p>2 配置文件内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host XXXX</span><br><span class=\"line\">HostName IP</span><br><span class=\"line\">User mingliang.gao</span><br><span class=\"line\">ControlMaster auto</span><br><span class=\"line\">ControlPath ~/.ssh/master-%r@%h:@%p</span><br><span class=\"line\">ControlPersist yes</span><br><span class=\"line\">PasswordAuthentication no</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Host：ssh进行连接的别名</li>\n<li>HostName：服务器的IP或者机器名</li>\n<li>User：用户名</li>\n<li>ControlMaster：是否多个会话连接用一个session文件</li>\n<li>ControlPath：session会话文件</li>\n<li>ControlPersist：连接是否保持长连接</li>\n<li>PasswordAuthentication：是否需要密码认证</li>\n<li>IdentityFile：私钥文件</li>\n</ul>\n<p>如果需要了解更多的参数，请<font color=\"red\" size=\"5\"><strong><em>man ssh_config</em></strong></font>进行查看。</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>配置完之后，每次只需要<strong><em>ssh 别名</em></strong>就可以连接到指定配置的服务器，而且在会话session结束之前只需要第一次密码即可。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note warning\">\n            <p>上篇文章介绍了有关<font color=\"red\" size=\"4.5\">SSH协议</font>的基础知识，正常工作中都是通过下列命令进行ssh连接：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure><p>工作中，需要ssh连接到服务器，然后每次需要输入服务的IP或者机器名，而且连接到一台服务器后，还可能跳转到另外一台服务器，每次还需要输入密码，个人感觉比较麻烦。通过配置ssh_config的方式简化连接命令，在ssh远程连接上更加高效。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"结果对比\"><a href=\"#结果对比\" class=\"headerlink\" title=\"结果对比\"></a>结果对比</h3><blockquote>\n<p>配置前</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@服务器IP</span><br></pre></td></tr></table></figure>\n<p>每次都需要输入密码</p>\n<blockquote>\n<p>配置后</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 别名</span><br></pre></td></tr></table></figure>\n<p>每日只需输入一次密码</p>\n<h3 id=\"配置详解\"><a href=\"#配置详解\" class=\"headerlink\" title=\"配置详解\"></a>配置详解</h3><p>1 进入到<strong><em>~/.ssh</em></strong>目录，查看是否有<strong><em>config</em></strong>文件，如果没有这个文件，需要通过<strong><em>touch config</em></strong>手动进行建立。</p>\n<p><img src=\"ssh_config.png\" alt></p>\n<p>2 配置文件内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host XXXX</span><br><span class=\"line\">HostName IP</span><br><span class=\"line\">User mingliang.gao</span><br><span class=\"line\">ControlMaster auto</span><br><span class=\"line\">ControlPath ~/.ssh/master-%r@%h:@%p</span><br><span class=\"line\">ControlPersist yes</span><br><span class=\"line\">PasswordAuthentication no</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Host：ssh进行连接的别名</li>\n<li>HostName：服务器的IP或者机器名</li>\n<li>User：用户名</li>\n<li>ControlMaster：是否多个会话连接用一个session文件</li>\n<li>ControlPath：session会话文件</li>\n<li>ControlPersist：连接是否保持长连接</li>\n<li>PasswordAuthentication：是否需要密码认证</li>\n<li>IdentityFile：私钥文件</li>\n</ul>\n<p>如果需要了解更多的参数，请<font color=\"red\" size=\"5\"><strong><em>man ssh_config</em></strong></font>进行查看。</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>配置完之后，每次只需要<strong><em>ssh 别名</em></strong>就可以连接到指定配置的服务器，而且在会话session结束之前只需要第一次密码即可。</p>"},{"title":"新MacOS导致微信截图问题","comments":0,"top":false,"abbrlink":17077,"date":"2019-10-28T02:05:29.000Z","updated":"2019-10-28T02:05:29.000Z","desc":"新MacOS系统更新后导致微信截取不了屏幕的问题","keywords":"MacOS, 微信, 截图","_content":"#### 问题背景\n\n\n{% note primary %}\nMac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不<font color='red' size=6.5>蓝瘦、香菇</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n问题出现的很简单，更新系统前可以使用，更新系统后不能使用了，说明还是系统的问题。直接针对于系统进行排查即可，而且MacOS基于unix开发的，所以跟权限差不多相关。\n\n#### 解决方案\n\n> 系统偏好设置 -> 安全与隐私\n\n![](shezhi.png)\n\n> 隐私 -> 找到屏幕录制 -> 勾选微信\n\n![](anquanyuyinsi.png)\n\n#### 温馨提示\n\n<font color='red' size=6.5>解决问题要有思路，而且要善于思考。</font>\n","source":"_posts/Qita-新MacOS导致微信截图问题.md","raw":"---\ntitle: 新MacOS导致微信截图问题\ncomments: false\ncategories:\n  - [生活]\n  - [不明类别]\ntags: [Mac]\ntop: false\nabbrlink: 17077\ndate: 2019-10-28 10:05:29\nupdated: 2019-10-28 10:05:29\ndesc: 新MacOS系统更新后导致微信截取不了屏幕的问题\nkeywords: MacOS, 微信, 截图\n---\n#### 问题背景\n\n\n{% note primary %}\nMac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不<font color='red' size=6.5>蓝瘦、香菇</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n问题出现的很简单，更新系统前可以使用，更新系统后不能使用了，说明还是系统的问题。直接针对于系统进行排查即可，而且MacOS基于unix开发的，所以跟权限差不多相关。\n\n#### 解决方案\n\n> 系统偏好设置 -> 安全与隐私\n\n![](shezhi.png)\n\n> 隐私 -> 找到屏幕录制 -> 勾选微信\n\n![](anquanyuyinsi.png)\n\n#### 温馨提示\n\n<font color='red' size=6.5>解决问题要有思路，而且要善于思考。</font>\n","slug":"Qita-新MacOS导致微信截图问题","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xe006rtabjsjx2qkk4","content":"<h4 id=\"问题背景\"><a href=\"#问题背景\" class=\"headerlink\" title=\"问题背景\"></a>问题背景</h4><div class=\"note primary\">\n            <p>Mac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不<font color=\"red\" size=\"6.5\">蓝瘦、香菇</font>。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>问题出现的很简单，更新系统前可以使用，更新系统后不能使用了，说明还是系统的问题。直接针对于系统进行排查即可，而且MacOS基于unix开发的，所以跟权限差不多相关。</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><blockquote>\n<p>系统偏好设置 -&gt; 安全与隐私</p>\n</blockquote>\n<p><img src=\"shezhi.png\" alt></p>\n<blockquote>\n<p>隐私 -&gt; 找到屏幕录制 -&gt; 勾选微信</p>\n</blockquote>\n<p><img src=\"anquanyuyinsi.png\" alt></p>\n<h4 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h4><font color=\"red\" size=\"6.5\">解决问题要有思路，而且要善于思考。</font>\n","site":{"data":{}},"excerpt":"<h4 id=\"问题背景\"><a href=\"#问题背景\" class=\"headerlink\" title=\"问题背景\"></a>问题背景</h4><div class=\"note primary\">\n            <p>Mac更新了新版的OS之后，发现微信截图除了能获取到微信界面信息，其他的信息都获取不到了。微信设置了截图的快捷键，平时也用习惯了，不能快捷键去操作常用的操作，岂不<font color=\"red\" size=\"6.5\">蓝瘦、香菇</font>。</p>\n          </div>","more":"<hr>\n\n<p>问题出现的很简单，更新系统前可以使用，更新系统后不能使用了，说明还是系统的问题。直接针对于系统进行排查即可，而且MacOS基于unix开发的，所以跟权限差不多相关。</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><blockquote>\n<p>系统偏好设置 -&gt; 安全与隐私</p>\n</blockquote>\n<p><img src=\"shezhi.png\" alt></p>\n<blockquote>\n<p>隐私 -&gt; 找到屏幕录制 -&gt; 勾选微信</p>\n</blockquote>\n<p><img src=\"anquanyuyinsi.png\" alt></p>\n<h4 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h4><font color=\"red\" size=\"6.5\">解决问题要有思路，而且要善于思考。</font>"},{"title":"SSH协议的基础知识","comments":0,"top":false,"abbrlink":62041,"date":"2019-08-19T02:07:42.000Z","updated":"2019-08-19T02:07:42.000Z","desc":"SSH协议的个人见解，关于基础知识的介绍","keywords":"SSH, 快捷, 配置, config, 协议类, 服务器, 22","_content":"\n### 背景\n{% note warning %}\n\n因为一些原因，把github.io重新在github搭建一下，但是**hexo deploy**去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行***Deploy keys***的配置，导致push失败。\n\n配置好***Deploy keys***的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是<font color='red' size=4.5>SSH协议</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 定义\n\n***The SSH protocol uses encryption to secure the connection between a client and a server. All user authentication, commands, output, and file transfers are encrypted to protect against attacks in the network. For details of how the SSH protocol works, see the protocol page. To understand the SSH File Transfer Protocol, see the SFTP page.***\n\n***The SSH protocol (also referred to as Secure Shell) is a method for secure remote login from one computer to another. It provides several alternative options for strong authentication, and it protects the communications security and integrity with strong encryption. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).***\n\n直接摘录了官网的原话，不多说了直接捞干的，大概意思就是说<font color='red' size=4.5>SSH协议是一种连接服务器的一种简单、安全、可靠的连接方法。</font>\n\n### 验证方式\n\n目前，后端开发、运维等工作中经常需要登录远程服务并操作，常用的连接方式都是ssh，方式如下：\n```\nssh 用户名@IP\nssh 用户名@机器名\n```\n使用ssh登录的时候，验证方式主要有2种：\n> 密码验证\n\n使用用户名和密码进行登录，两者匹配才可以登录，但是密码认证有以下的缺点：\n\n- 密码泄漏。一个帐户多个人进行使用，需要让所有使用人都知道密码，很容易密码泄露。\n- 另外，多账户使用修改密码时必须通知所有人，否则就会造成其他人登录失败。\n\n> 公钥验证\n\n使用公钥、私钥的方式就行验证。保证了多个用户可以通过各自的密钥登录到服务器，互不干扰，而且认证也可以允许使用空密码，省去每次登录都需要输入密码的麻烦。\n\n### 配置\n\n通过<font color='red' size=4.5>ssh-keygen</font>命令进行生成公钥私钥，下面详细说明。\n\n1、执行***ssh-keygen -t rsa***命令。\n通过***ssh-keygen --help***可知，-t是加密的参数，最常用。除了rsa，还有dsa、ecdsa、ed25519，其中rsa是安全的加密方式。\n\n2、输入要生成的文件名，默认回车即可。\n\n3、输入密码，默认回车即可。\n\n4、输入确认密码，，默认回车即可。\n\n5、出现下列图案代表成功。\n```\n+--[ RSA 2048]----+\n|    .+=*..       |\n|  .  += +        |\n|   o oo+         |\n|  E . . o        |\n|      ..S.       |\n|      .o .       |\n|       .o +      |\n|       ...oo     |\n|         +.      |\n+-----------------+\n```\n\n具体的ssh-keygen参数可以通过***ssh-keygen --help***进行查看，这里不作详解。\n\n### 原理讲解\n\n1. #### 定义\n\n    这里主要针对于公钥私钥的验证方式进行讲解，通过执行ssh-kengen命令可以得到**公钥、私钥**，都是经过加密后的文件。\n    公钥：能被其他人知道的加密文件，id_rsa.pub。\n    私钥：只能自己知道的加密文件，id_rsa。\n\n    只要私钥不被泄漏，就不会出现任何指定用户登录的问题。\n\n    ![](ssh_keys.png)\n\n2. #### 流程图\n\n    ![](ssh_yuanli.png)\n\n3. #### 验证流程\n\n    1、Client通过***ssh-keygen***命令生成公钥和私钥。\n\n    2、Client将自己的公钥***id_rsa.pub***存放到Server服务器上的认证文件。\n\n    3、Client通过***ssh***命令将用户、IP发送请求连接指定的服务器。\n\n    4、Server收到到请求之后，先去authorized_keys中进行查找是否有指定的用户，如果有将进行下一步，无此用户拒绝验证连接。\n\n    5、验证文件中包含指定用户，Server将生成一个随机字符串通过***公钥**进行加密，发送给Client。\n\n    6、Client接收到Server加密的字符串，利用***私钥***进行解密，解密后在将这个随机字符串再发送给Server。\n\n    7、Server接收到Client发送的解密字符串与生成的原始随机字符串进行比对，如果正确就让客户端登录，否则拒绝。\n\n### 学习参考\n\nSSH官网：https://www.ssh.com/ssh/\n","source":"_posts/Server-SSH的见解.md","raw":"---\ntitle: SSH协议的基础知识\ncomments: false\ncategories:\n  - [服务器]\n  - [协议类]\ntags: [SSH, 协议类]\ntop: false\nabbrlink: 62041\ndate: 2019-08-19 10:07:42\nupdated: 2019-08-19 10:07:42\ndesc: SSH协议的个人见解，关于基础知识的介绍\nkeywords: SSH, 快捷, 配置, config, 协议类, 服务器, 22\n---\n\n### 背景\n{% note warning %}\n\n因为一些原因，把github.io重新在github搭建一下，但是**hexo deploy**去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行***Deploy keys***的配置，导致push失败。\n\n配置好***Deploy keys***的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是<font color='red' size=4.5>SSH协议</font>。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 定义\n\n***The SSH protocol uses encryption to secure the connection between a client and a server. All user authentication, commands, output, and file transfers are encrypted to protect against attacks in the network. For details of how the SSH protocol works, see the protocol page. To understand the SSH File Transfer Protocol, see the SFTP page.***\n\n***The SSH protocol (also referred to as Secure Shell) is a method for secure remote login from one computer to another. It provides several alternative options for strong authentication, and it protects the communications security and integrity with strong encryption. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).***\n\n直接摘录了官网的原话，不多说了直接捞干的，大概意思就是说<font color='red' size=4.5>SSH协议是一种连接服务器的一种简单、安全、可靠的连接方法。</font>\n\n### 验证方式\n\n目前，后端开发、运维等工作中经常需要登录远程服务并操作，常用的连接方式都是ssh，方式如下：\n```\nssh 用户名@IP\nssh 用户名@机器名\n```\n使用ssh登录的时候，验证方式主要有2种：\n> 密码验证\n\n使用用户名和密码进行登录，两者匹配才可以登录，但是密码认证有以下的缺点：\n\n- 密码泄漏。一个帐户多个人进行使用，需要让所有使用人都知道密码，很容易密码泄露。\n- 另外，多账户使用修改密码时必须通知所有人，否则就会造成其他人登录失败。\n\n> 公钥验证\n\n使用公钥、私钥的方式就行验证。保证了多个用户可以通过各自的密钥登录到服务器，互不干扰，而且认证也可以允许使用空密码，省去每次登录都需要输入密码的麻烦。\n\n### 配置\n\n通过<font color='red' size=4.5>ssh-keygen</font>命令进行生成公钥私钥，下面详细说明。\n\n1、执行***ssh-keygen -t rsa***命令。\n通过***ssh-keygen --help***可知，-t是加密的参数，最常用。除了rsa，还有dsa、ecdsa、ed25519，其中rsa是安全的加密方式。\n\n2、输入要生成的文件名，默认回车即可。\n\n3、输入密码，默认回车即可。\n\n4、输入确认密码，，默认回车即可。\n\n5、出现下列图案代表成功。\n```\n+--[ RSA 2048]----+\n|    .+=*..       |\n|  .  += +        |\n|   o oo+         |\n|  E . . o        |\n|      ..S.       |\n|      .o .       |\n|       .o +      |\n|       ...oo     |\n|         +.      |\n+-----------------+\n```\n\n具体的ssh-keygen参数可以通过***ssh-keygen --help***进行查看，这里不作详解。\n\n### 原理讲解\n\n1. #### 定义\n\n    这里主要针对于公钥私钥的验证方式进行讲解，通过执行ssh-kengen命令可以得到**公钥、私钥**，都是经过加密后的文件。\n    公钥：能被其他人知道的加密文件，id_rsa.pub。\n    私钥：只能自己知道的加密文件，id_rsa。\n\n    只要私钥不被泄漏，就不会出现任何指定用户登录的问题。\n\n    ![](ssh_keys.png)\n\n2. #### 流程图\n\n    ![](ssh_yuanli.png)\n\n3. #### 验证流程\n\n    1、Client通过***ssh-keygen***命令生成公钥和私钥。\n\n    2、Client将自己的公钥***id_rsa.pub***存放到Server服务器上的认证文件。\n\n    3、Client通过***ssh***命令将用户、IP发送请求连接指定的服务器。\n\n    4、Server收到到请求之后，先去authorized_keys中进行查找是否有指定的用户，如果有将进行下一步，无此用户拒绝验证连接。\n\n    5、验证文件中包含指定用户，Server将生成一个随机字符串通过***公钥**进行加密，发送给Client。\n\n    6、Client接收到Server加密的字符串，利用***私钥***进行解密，解密后在将这个随机字符串再发送给Server。\n\n    7、Server接收到Client发送的解密字符串与生成的原始随机字符串进行比对，如果正确就让客户端登录，否则拒绝。\n\n### 学习参考\n\nSSH官网：https://www.ssh.com/ssh/\n","slug":"Server-SSH的见解","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xi006wtabjhr3188ru","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note warning\">\n            <p>因为一些原因，把github.io重新在github搭建一下，但是<strong>hexo deploy</strong>去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行<strong><em>Deploy keys</em></strong>的配置，导致push失败。</p><p>配置好<strong><em>Deploy keys</em></strong>的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是<font color=\"red\" size=\"4.5\">SSH协议</font>。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p><strong><em>The SSH protocol uses encryption to secure the connection between a client and a server. All user authentication, commands, output, and file transfers are encrypted to protect against attacks in the network. For details of how the SSH protocol works, see the protocol page. To understand the SSH File Transfer Protocol, see the SFTP page.</em></strong></p>\n<p><strong><em>The SSH protocol (also referred to as Secure Shell) is a method for secure remote login from one computer to another. It provides several alternative options for strong authentication, and it protects the communications security and integrity with strong encryption. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).</em></strong></p>\n<p>直接摘录了官网的原话，不多说了直接捞干的，大概意思就是说<font color=\"red\" size=\"4.5\">SSH协议是一种连接服务器的一种简单、安全、可靠的连接方法。</font></p>\n<h3 id=\"验证方式\"><a href=\"#验证方式\" class=\"headerlink\" title=\"验证方式\"></a>验证方式</h3><p>目前，后端开发、运维等工作中经常需要登录远程服务并操作，常用的连接方式都是ssh，方式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@IP</span><br><span class=\"line\">ssh 用户名@机器名</span><br></pre></td></tr></table></figure></p>\n<p>使用ssh登录的时候，验证方式主要有2种：</p>\n<blockquote>\n<p>密码验证</p>\n</blockquote>\n<p>使用用户名和密码进行登录，两者匹配才可以登录，但是密码认证有以下的缺点：</p>\n<ul>\n<li>密码泄漏。一个帐户多个人进行使用，需要让所有使用人都知道密码，很容易密码泄露。</li>\n<li>另外，多账户使用修改密码时必须通知所有人，否则就会造成其他人登录失败。</li>\n</ul>\n<blockquote>\n<p>公钥验证</p>\n</blockquote>\n<p>使用公钥、私钥的方式就行验证。保证了多个用户可以通过各自的密钥登录到服务器，互不干扰，而且认证也可以允许使用空密码，省去每次登录都需要输入密码的麻烦。</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>通过<font color=\"red\" size=\"4.5\">ssh-keygen</font>命令进行生成公钥私钥，下面详细说明。</p>\n<p>1、执行<strong><em>ssh-keygen -t rsa</em></strong>命令。<br>通过<strong><em>ssh-keygen –help</em></strong>可知，-t是加密的参数，最常用。除了rsa，还有dsa、ecdsa、ed25519，其中rsa是安全的加密方式。</p>\n<p>2、输入要生成的文件名，默认回车即可。</p>\n<p>3、输入密码，默认回车即可。</p>\n<p>4、输入确认密码，，默认回车即可。</p>\n<p>5、出现下列图案代表成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+--[ RSA 2048]----+</span><br><span class=\"line\">|    .+=*..       |</span><br><span class=\"line\">|  .  += +        |</span><br><span class=\"line\">|   o oo+         |</span><br><span class=\"line\">|  E . . o        |</span><br><span class=\"line\">|      ..S.       |</span><br><span class=\"line\">|      .o .       |</span><br><span class=\"line\">|       .o +      |</span><br><span class=\"line\">|       ...oo     |</span><br><span class=\"line\">|         +.      |</span><br><span class=\"line\">+-----------------+</span><br></pre></td></tr></table></figure></p>\n<p>具体的ssh-keygen参数可以通过<strong><em>ssh-keygen –help</em></strong>进行查看，这里不作详解。</p>\n<h3 id=\"原理讲解\"><a href=\"#原理讲解\" class=\"headerlink\" title=\"原理讲解\"></a>原理讲解</h3><ol>\n<li><h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p> 这里主要针对于公钥私钥的验证方式进行讲解，通过执行ssh-kengen命令可以得到<strong>公钥、私钥</strong>，都是经过加密后的文件。<br> 公钥：能被其他人知道的加密文件，id_rsa.pub。<br> 私钥：只能自己知道的加密文件，id_rsa。</p>\n<p> 只要私钥不被泄漏，就不会出现任何指定用户登录的问题。</p>\n<p> <img src=\"ssh_keys.png\" alt></p>\n</li>\n<li><h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><p> <img src=\"ssh_yuanli.png\" alt></p>\n</li>\n<li><h4 id=\"验证流程\"><a href=\"#验证流程\" class=\"headerlink\" title=\"验证流程\"></a>验证流程</h4><p> 1、Client通过<strong><em>ssh-keygen</em></strong>命令生成公钥和私钥。</p>\n<p> 2、Client将自己的公钥<strong><em>id_rsa.pub</em></strong>存放到Server服务器上的认证文件。</p>\n<p> 3、Client通过<strong><em>ssh</em></strong>命令将用户、IP发送请求连接指定的服务器。</p>\n<p> 4、Server收到到请求之后，先去authorized_keys中进行查找是否有指定的用户，如果有将进行下一步，无此用户拒绝验证连接。</p>\n<p> 5、验证文件中包含指定用户，Server将生成一个随机字符串通过<strong>*公钥</strong>进行加密，发送给Client。</p>\n<p> 6、Client接收到Server加密的字符串，利用<strong><em>私钥</em></strong>进行解密，解密后在将这个随机字符串再发送给Server。</p>\n<p> 7、Server接收到Client发送的解密字符串与生成的原始随机字符串进行比对，如果正确就让客户端登录，否则拒绝。</p>\n</li>\n</ol>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>SSH官网：<a href=\"https://www.ssh.com/ssh/\" target=\"_blank\" rel=\"noopener\">https://www.ssh.com/ssh/</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note warning\">\n            <p>因为一些原因，把github.io重新在github搭建一下，但是<strong>hexo deploy</strong>去提交代码的时候，发生代码提交失败的情况。原来在GIS90.github.io Repository上没有进行<strong><em>Deploy keys</em></strong>的配置，导致push失败。</p><p>配置好<strong><em>Deploy keys</em></strong>的配置，代码成功提交，但是为何配置完key就可以成功提交呢？原理是<font color=\"red\" size=\"4.5\">SSH协议</font>。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p><strong><em>The SSH protocol uses encryption to secure the connection between a client and a server. All user authentication, commands, output, and file transfers are encrypted to protect against attacks in the network. For details of how the SSH protocol works, see the protocol page. To understand the SSH File Transfer Protocol, see the SFTP page.</em></strong></p>\n<p><strong><em>The SSH protocol (also referred to as Secure Shell) is a method for secure remote login from one computer to another. It provides several alternative options for strong authentication, and it protects the communications security and integrity with strong encryption. It is a secure alternative to the non-protected login protocols (such as telnet, rlogin) and insecure file transfer methods (such as FTP).</em></strong></p>\n<p>直接摘录了官网的原话，不多说了直接捞干的，大概意思就是说<font color=\"red\" size=\"4.5\">SSH协议是一种连接服务器的一种简单、安全、可靠的连接方法。</font></p>\n<h3 id=\"验证方式\"><a href=\"#验证方式\" class=\"headerlink\" title=\"验证方式\"></a>验证方式</h3><p>目前，后端开发、运维等工作中经常需要登录远程服务并操作，常用的连接方式都是ssh，方式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 用户名@IP</span><br><span class=\"line\">ssh 用户名@机器名</span><br></pre></td></tr></table></figure></p>\n<p>使用ssh登录的时候，验证方式主要有2种：</p>\n<blockquote>\n<p>密码验证</p>\n</blockquote>\n<p>使用用户名和密码进行登录，两者匹配才可以登录，但是密码认证有以下的缺点：</p>\n<ul>\n<li>密码泄漏。一个帐户多个人进行使用，需要让所有使用人都知道密码，很容易密码泄露。</li>\n<li>另外，多账户使用修改密码时必须通知所有人，否则就会造成其他人登录失败。</li>\n</ul>\n<blockquote>\n<p>公钥验证</p>\n</blockquote>\n<p>使用公钥、私钥的方式就行验证。保证了多个用户可以通过各自的密钥登录到服务器，互不干扰，而且认证也可以允许使用空密码，省去每次登录都需要输入密码的麻烦。</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>通过<font color=\"red\" size=\"4.5\">ssh-keygen</font>命令进行生成公钥私钥，下面详细说明。</p>\n<p>1、执行<strong><em>ssh-keygen -t rsa</em></strong>命令。<br>通过<strong><em>ssh-keygen –help</em></strong>可知，-t是加密的参数，最常用。除了rsa，还有dsa、ecdsa、ed25519，其中rsa是安全的加密方式。</p>\n<p>2、输入要生成的文件名，默认回车即可。</p>\n<p>3、输入密码，默认回车即可。</p>\n<p>4、输入确认密码，，默认回车即可。</p>\n<p>5、出现下列图案代表成功。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+--[ RSA 2048]----+</span><br><span class=\"line\">|    .+=*..       |</span><br><span class=\"line\">|  .  += +        |</span><br><span class=\"line\">|   o oo+         |</span><br><span class=\"line\">|  E . . o        |</span><br><span class=\"line\">|      ..S.       |</span><br><span class=\"line\">|      .o .       |</span><br><span class=\"line\">|       .o +      |</span><br><span class=\"line\">|       ...oo     |</span><br><span class=\"line\">|         +.      |</span><br><span class=\"line\">+-----------------+</span><br></pre></td></tr></table></figure></p>\n<p>具体的ssh-keygen参数可以通过<strong><em>ssh-keygen –help</em></strong>进行查看，这里不作详解。</p>\n<h3 id=\"原理讲解\"><a href=\"#原理讲解\" class=\"headerlink\" title=\"原理讲解\"></a>原理讲解</h3><ol>\n<li><h4 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h4><p> 这里主要针对于公钥私钥的验证方式进行讲解，通过执行ssh-kengen命令可以得到<strong>公钥、私钥</strong>，都是经过加密后的文件。<br> 公钥：能被其他人知道的加密文件，id_rsa.pub。<br> 私钥：只能自己知道的加密文件，id_rsa。</p>\n<p> 只要私钥不被泄漏，就不会出现任何指定用户登录的问题。</p>\n<p> <img src=\"ssh_keys.png\" alt></p>\n</li>\n<li><h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><p> <img src=\"ssh_yuanli.png\" alt></p>\n</li>\n<li><h4 id=\"验证流程\"><a href=\"#验证流程\" class=\"headerlink\" title=\"验证流程\"></a>验证流程</h4><p> 1、Client通过<strong><em>ssh-keygen</em></strong>命令生成公钥和私钥。</p>\n<p> 2、Client将自己的公钥<strong><em>id_rsa.pub</em></strong>存放到Server服务器上的认证文件。</p>\n<p> 3、Client通过<strong><em>ssh</em></strong>命令将用户、IP发送请求连接指定的服务器。</p>\n<p> 4、Server收到到请求之后，先去authorized_keys中进行查找是否有指定的用户，如果有将进行下一步，无此用户拒绝验证连接。</p>\n<p> 5、验证文件中包含指定用户，Server将生成一个随机字符串通过<strong>*公钥</strong>进行加密，发送给Client。</p>\n<p> 6、Client接收到Server加密的字符串，利用<strong><em>私钥</em></strong>进行解密，解密后在将这个随机字符串再发送给Server。</p>\n<p> 7、Server接收到Client发送的解密字符串与生成的原始随机字符串进行比对，如果正确就让客户端登录，否则拒绝。</p>\n</li>\n</ol>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>SSH官网：<a href=\"https://www.ssh.com/ssh/\" target=\"_blank\" rel=\"noopener\">https://www.ssh.com/ssh/</a></p>"},{"title":"WIKI Confluence授权的延期","comments":0,"top":false,"desc":"关于试用的confluence wiki进行延期授权","keywords":"wiki, Confluence, 授权, 延期, 工具, 授权码","abbrlink":39160,"date":"2020-04-16T01:14:11.000Z","updated":"2020-04-16T01:14:11.000Z","_content":"\n\n#### 简述\n\n{% raw %}\n<div class=\"post_cus_note\">关于WIKI Confluence的延期授权</div>\n{% endraw %}\n\n<!--more-->\n<hr />\n\n#### 解决方案\n\n\n> 点击My Altassian，进入到https://my.atlassian.com/官网。\n\n![](1.png)\n\n> 点击New Trial License，创建新的Trial License。\n\n![](2.png)\n\n> 选择相关对应的产品：confluence。\n\n![](3.png)\n\n> 使用admin登录confluence服务器。\n\n![](4.png)\n\n> 查看confluence的服务器ID，在<font color='red' size=6.0>设置->一般配置->管理→授权细节</font>，复制服务ID信息。\n\n![](5.png)\n\n> 在填写New Trial License页面的相关信息，选择confluence产品，输入服务器ID，在create license，会自动生成授权码（复制）。\n\n![](6.png)\n\n> 回到confluence授权细节页面，把复制的授权码粘贴在授权细节中的授权码，点击保存，完成延期使用。\n\n![](7.png)\n","source":"_posts/Tools-Confluence之延期.md","raw":"---\ntitle: WIKI Confluence授权的延期\ncomments: false\ncategories:\n  - [工具集]\ntags:\n  [WIKI, 运维工具]\ntop: false\ndesc: 关于试用的confluence wiki进行延期授权\nkeywords: 'wiki, Confluence, 授权, 延期, 工具, 授权码'\nabbrlink: 39160\ndate: 2020-04-16 09:14:11\nupdated: 2020-04-16 09:14:11\n---\n\n\n#### 简述\n\n{% raw %}\n<div class=\"post_cus_note\">关于WIKI Confluence的延期授权</div>\n{% endraw %}\n\n<!--more-->\n<hr />\n\n#### 解决方案\n\n\n> 点击My Altassian，进入到https://my.atlassian.com/官网。\n\n![](1.png)\n\n> 点击New Trial License，创建新的Trial License。\n\n![](2.png)\n\n> 选择相关对应的产品：confluence。\n\n![](3.png)\n\n> 使用admin登录confluence服务器。\n\n![](4.png)\n\n> 查看confluence的服务器ID，在<font color='red' size=6.0>设置->一般配置->管理→授权细节</font>，复制服务ID信息。\n\n![](5.png)\n\n> 在填写New Trial License页面的相关信息，选择confluence产品，输入服务器ID，在create license，会自动生成授权码（复制）。\n\n![](6.png)\n\n> 回到confluence授权细节页面，把复制的授权码粘贴在授权细节中的授权码，点击保存，完成延期使用。\n\n![](7.png)\n","slug":"Tools-Confluence之延期","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xl006ytabjs23dsds2","content":"<h4 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h4>\n<div class=\"post_cus_note\">关于WIKI Confluence的延期授权</div>\n\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><blockquote>\n<p>点击My Altassian，进入到<a href=\"https://my.atlassian.com/官网。\" target=\"_blank\" rel=\"noopener\">https://my.atlassian.com/官网。</a></p>\n</blockquote>\n<p><img src=\"1.png\" alt></p>\n<blockquote>\n<p>点击New Trial License，创建新的Trial License。</p>\n</blockquote>\n<p><img src=\"2.png\" alt></p>\n<blockquote>\n<p>选择相关对应的产品：confluence。</p>\n</blockquote>\n<p><img src=\"3.png\" alt></p>\n<blockquote>\n<p>使用admin登录confluence服务器。</p>\n</blockquote>\n<p><img src=\"4.png\" alt></p>\n<blockquote>\n<p>查看confluence的服务器ID，在<font color=\"red\" size=\"6.0\">设置-&gt;一般配置-&gt;管理→授权细节</font>，复制服务ID信息。</p>\n</blockquote>\n<p><img src=\"5.png\" alt></p>\n<blockquote>\n<p>在填写New Trial License页面的相关信息，选择confluence产品，输入服务器ID，在create license，会自动生成授权码（复制）。</p>\n</blockquote>\n<p><img src=\"6.png\" alt></p>\n<blockquote>\n<p>回到confluence授权细节页面，把复制的授权码粘贴在授权细节中的授权码，点击保存，完成延期使用。</p>\n</blockquote>\n<p><img src=\"7.png\" alt></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h4>\n<div class=\"post_cus_note\">关于WIKI Confluence的延期授权</div>","more":"<hr>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><blockquote>\n<p>点击My Altassian，进入到<a href=\"https://my.atlassian.com/官网。\" target=\"_blank\" rel=\"noopener\">https://my.atlassian.com/官网。</a></p>\n</blockquote>\n<p><img src=\"1.png\" alt></p>\n<blockquote>\n<p>点击New Trial License，创建新的Trial License。</p>\n</blockquote>\n<p><img src=\"2.png\" alt></p>\n<blockquote>\n<p>选择相关对应的产品：confluence。</p>\n</blockquote>\n<p><img src=\"3.png\" alt></p>\n<blockquote>\n<p>使用admin登录confluence服务器。</p>\n</blockquote>\n<p><img src=\"4.png\" alt></p>\n<blockquote>\n<p>查看confluence的服务器ID，在<font color=\"red\" size=\"6.0\">设置-&gt;一般配置-&gt;管理→授权细节</font>，复制服务ID信息。</p>\n</blockquote>\n<p><img src=\"5.png\" alt></p>\n<blockquote>\n<p>在填写New Trial License页面的相关信息，选择confluence产品，输入服务器ID，在create license，会自动生成授权码（复制）。</p>\n</blockquote>\n<p><img src=\"6.png\" alt></p>\n<blockquote>\n<p>回到confluence授权细节页面，把复制的授权码粘贴在授权细节中的授权码，点击保存，完成延期使用。</p>\n</blockquote>\n<p><img src=\"7.png\" alt></p>"},{"title":"Confluence之隐藏人员菜单栏","comments":0,"top":false,"abbrlink":13168,"date":"2019-12-10T06:15:33.000Z","updated":"2019-12-10T06:15:33.000Z","desc":"WIKI之Confluence隐藏菜单栏人员的设置","keywords":"wiki, Confluence, 隐藏, 人员, 菜单栏, 工具","_content":"\n#### 问题背景\n\n{% note primary %}\n\n在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：\n\n![](/images/article_confluence_qian.png)\n\n<font color='red' size=6.0>解决后如下图：</font>\n\n![](/images/article_confluence_hou.png)\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 解决方案\n\n在网上查了很多，都没有实际的解决方案。于是，官网走起，在官网的<font color='red' size=6.0>Search</font>下，搜索关键字：<font color='red' size=6.0>hide tools menu users</font>，结果如下：\n\n![](confluence_search.png)\n\n点进去查看之后，发现给了我一个解决的灵感，具体如下：\n\n> 登录管理员账户\n\n> 打开设置 -> 一般配置\n\n![](confluence_config.png)\n\n> 找到自定义HTML\n\n![](confluence_html.png)\n\n> 在HEAD尾部加入一下代码\n\n![](confluence_set.png)\n\n> 保存后进行刷新测试\n\n#### 具体代码\n\n```\n<script>\njQuery().ready(function() {\n  jQuery(\"#people-directory-link\").hide();\n});\n</script>\n```\n\n#### 官方说明\n\nConfluence官方：https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html\n","source":"_posts/Tools-Confluence之隐藏人员菜单栏.md","raw":"---\ntitle: Confluence之隐藏人员菜单栏\ncomments: false\ncategories:\n  - [工具集]\ntags: [WIKI, 运维工具]\ntop: false\nabbrlink: 13168\ndate: 2019-12-10 14:15:33\nupdated: 2019-12-10 14:15:33\ndesc: WIKI之Confluence隐藏菜单栏人员的设置\nkeywords: wiki, Confluence, 隐藏, 人员, 菜单栏, 工具\n---\n\n#### 问题背景\n\n{% note primary %}\n\n在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：\n\n![](/images/article_confluence_qian.png)\n\n<font color='red' size=6.0>解决后如下图：</font>\n\n![](/images/article_confluence_hou.png)\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 解决方案\n\n在网上查了很多，都没有实际的解决方案。于是，官网走起，在官网的<font color='red' size=6.0>Search</font>下，搜索关键字：<font color='red' size=6.0>hide tools menu users</font>，结果如下：\n\n![](confluence_search.png)\n\n点进去查看之后，发现给了我一个解决的灵感，具体如下：\n\n> 登录管理员账户\n\n> 打开设置 -> 一般配置\n\n![](confluence_config.png)\n\n> 找到自定义HTML\n\n![](confluence_html.png)\n\n> 在HEAD尾部加入一下代码\n\n![](confluence_set.png)\n\n> 保存后进行刷新测试\n\n#### 具体代码\n\n```\n<script>\njQuery().ready(function() {\n  jQuery(\"#people-directory-link\").hide();\n});\n</script>\n```\n\n#### 官方说明\n\nConfluence官方：https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html\n","slug":"Tools-Confluence之隐藏人员菜单栏","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xo0073tabjuva6bfzq","content":"<h4 id=\"问题背景\"><a href=\"#问题背景\" class=\"headerlink\" title=\"问题背景\"></a>问题背景</h4><div class=\"note primary\">\n            <p>在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：</p><p><img src=\"/images/article_confluence_qian.png\" alt></p><font color=\"red\" size=\"6.0\">解决后如下图：</font><p><img src=\"/images/article_confluence_hou.png\" alt></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>在网上查了很多，都没有实际的解决方案。于是，官网走起，在官网的<font color=\"red\" size=\"6.0\">Search</font>下，搜索关键字：<font color=\"red\" size=\"6.0\">hide tools menu users</font>，结果如下：</p>\n<p><img src=\"confluence_search.png\" alt></p>\n<p>点进去查看之后，发现给了我一个解决的灵感，具体如下：</p>\n<blockquote>\n<p>登录管理员账户</p>\n</blockquote>\n<blockquote>\n<p>打开设置 -&gt; 一般配置</p>\n</blockquote>\n<p><img src=\"confluence_config.png\" alt></p>\n<blockquote>\n<p>找到自定义HTML</p>\n</blockquote>\n<p><img src=\"confluence_html.png\" alt></p>\n<blockquote>\n<p>在HEAD尾部加入一下代码</p>\n</blockquote>\n<p><img src=\"confluence_set.png\" alt></p>\n<blockquote>\n<p>保存后进行刷新测试</p>\n</blockquote>\n<h4 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">jQuery().ready(function() &#123;</span><br><span class=\"line\">  jQuery(&quot;#people-directory-link&quot;).hide();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"官方说明\"><a href=\"#官方说明\" class=\"headerlink\" title=\"官方说明\"></a>官方说明</h4><p>Confluence官方：<a href=\"https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html\" target=\"_blank\" rel=\"noopener\">https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html</a></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"问题背景\"><a href=\"#问题背景\" class=\"headerlink\" title=\"问题背景\"></a>问题背景</h4><div class=\"note primary\">\n            <p>在公司搭建了一个Wiki，用的是Confluence + MariaDB + Linux架构，搭建之后不管在任何用户的菜单栏都会有用户这个选项，导致不管任何用户都可以邀请、注册等操作，正常来说用户管理只有管理员才有的权限，解决前如下图：</p><p><img src=\"/images/article_confluence_qian.png\" alt></p><font color=\"red\" size=\"6.0\">解决后如下图：</font><p><img src=\"/images/article_confluence_hou.png\" alt></p>\n          </div>","more":"<hr>\n\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>在网上查了很多，都没有实际的解决方案。于是，官网走起，在官网的<font color=\"red\" size=\"6.0\">Search</font>下，搜索关键字：<font color=\"red\" size=\"6.0\">hide tools menu users</font>，结果如下：</p>\n<p><img src=\"confluence_search.png\" alt></p>\n<p>点进去查看之后，发现给了我一个解决的灵感，具体如下：</p>\n<blockquote>\n<p>登录管理员账户</p>\n</blockquote>\n<blockquote>\n<p>打开设置 -&gt; 一般配置</p>\n</blockquote>\n<p><img src=\"confluence_config.png\" alt></p>\n<blockquote>\n<p>找到自定义HTML</p>\n</blockquote>\n<p><img src=\"confluence_html.png\" alt></p>\n<blockquote>\n<p>在HEAD尾部加入一下代码</p>\n</blockquote>\n<p><img src=\"confluence_set.png\" alt></p>\n<blockquote>\n<p>保存后进行刷新测试</p>\n</blockquote>\n<h4 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">jQuery().ready(function() &#123;</span><br><span class=\"line\">  jQuery(&quot;#people-directory-link&quot;).hide();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"官方说明\"><a href=\"#官方说明\" class=\"headerlink\" title=\"官方说明\"></a>官方说明</h4><p>Confluence官方：<a href=\"https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html\" target=\"_blank\" rel=\"noopener\">https://confluence.atlassian.com/confkb/how-to-hide-the-space-tools-menu-for-certain-users-or-groups-in-confluence-816877024.html</a></p>"},{"title":"2019-06北京美食计划","comments":0,"desc":"在2019-06日之后，带上媳妇向北京美食进军，做好离开北京的准备","keywords":"旅行, 美食, 北京, 护国寺, 南锣鼓巷, 烤鸭, 小吃","abbrlink":13876,"date":"2019-04-04T02:16:22.000Z","updated":"2019-04-04T02:16:22.000Z","_content":"\n{% gp 2-2 %}\n<img src=\"/images/article_beijing_beijing.jpg\" width=\"750\" alt=\"地点\"/>\n<img src=\"/images/article_beijing_eat_month.png\" width=\"750\" alt=\"时间\"/>\n{% endgp %}\n\n{% cq %}\n带上媳妇向北京美食进军\n**PyGo²**\n{% endcq %}\n\n\n<!--more-->\n<hr />\n\n2014年到北京，不知不觉已经度过5个夏天了，6、7月是我在北京奋斗的最后2个月，带上我媳妇向北京美食进军->\n\n> 必吃\n\n|     日期      | 城市 |    主题    |   名称   |      位置       |  推荐指数  | 备注                                   |\n|:-------------:|:----:|:----------:|:--------:|:---------------:|:----------:| -------------------------------------- |\n| 2019-06-15~16 | 北京 |   自助餐   |  第六季  |  海淀区-紫竹桥  | 🌟🌟🌟🌟🌟 | 美团推荐，帝都第一性价比最高的自助餐厅 |\n| 2019-06-22~23 | 天津 |    海鲜    | 三个渔夫 |  天津市-小白楼  |  🌟🌟🌟🌟  | 海鲜美味                               |\n| 2019-06-29~30 | 北京 | 特色：烤鸭 |  全聚德  | 朝阳区-朝阳北路 | 🌟🌟🌟🌟🌟 | 北京传统特色                           |\n\n> 参考\n\n|     主题     |            名称            |               位置                | 推荐指数 | 备注                                             |\n|:------------:|:--------------------------:|:---------------------------------:|:--------:|:------------------------------------------------ |\n| 中关村食宝街 |            小吃            | 北京-海淀区-中关村-新中关购物大厦 | 🌟🌟🌟🌟 | 食宝街各种特色小吃与各种主题餐厅                 |\n|    牛羊肉    |            牛街            |         北京-广安门内大街         | 🌟🌟🌟🌟 | 清真牛羊肉美食、小吃绝对正宗，特别推荐一下麻豆腐 |\n|    小龙虾    |          麻辣诱惑          |        北京-西单-君太百货         | 🌟🌟🌟🌟 | 小龙虾做的确实棒                                 |\n|     日料     |         大渔铁板烧         |        北京-海淀区-中关村         |  🌟🌟🌟  | 美团推荐人气第一(自助245)、6店通用                       |\n|     日料     | 德川家日本料理（中关村店） |        北京-海淀区-中关村         |  🌟🌟🌟  |                              美团推荐人气第二(自助196)、11店通用                    |\n\n> 个人观点\n\n网上很多人推荐护国寺、南锣鼓巷、王府井等，本人去吃过味道没那么好吃，纯属到北京旅游慕名而去，不推荐，但是护国寺、南锣鼓巷小吃价格方面还是很适合大众的。但是想见识一下北京老的胡同、四合院可以去南锣鼓巷看下，确实很不错。\n","source":"_posts/Travel-2019-06北京美食计划.md","raw":"---\ntitle: 2019-06北京美食计划\ncomments: false\ndesc: 在2019-06日之后，带上媳妇向北京美食进军，做好离开北京的准备\ncategories:\n  - [旅行记]\ntags: [旅行记, 美食]\n# top: true\nkeywords: 旅行, 美食, 北京, 护国寺, 南锣鼓巷, 烤鸭, 小吃\nabbrlink: 13876\ndate: 2019-04-04 10:16:22\nupdated: 2019-04-04 10:16:22\n---\n\n{% gp 2-2 %}\n<img src=\"/images/article_beijing_beijing.jpg\" width=\"750\" alt=\"地点\"/>\n<img src=\"/images/article_beijing_eat_month.png\" width=\"750\" alt=\"时间\"/>\n{% endgp %}\n\n{% cq %}\n带上媳妇向北京美食进军\n**PyGo²**\n{% endcq %}\n\n\n<!--more-->\n<hr />\n\n2014年到北京，不知不觉已经度过5个夏天了，6、7月是我在北京奋斗的最后2个月，带上我媳妇向北京美食进军->\n\n> 必吃\n\n|     日期      | 城市 |    主题    |   名称   |      位置       |  推荐指数  | 备注                                   |\n|:-------------:|:----:|:----------:|:--------:|:---------------:|:----------:| -------------------------------------- |\n| 2019-06-15~16 | 北京 |   自助餐   |  第六季  |  海淀区-紫竹桥  | 🌟🌟🌟🌟🌟 | 美团推荐，帝都第一性价比最高的自助餐厅 |\n| 2019-06-22~23 | 天津 |    海鲜    | 三个渔夫 |  天津市-小白楼  |  🌟🌟🌟🌟  | 海鲜美味                               |\n| 2019-06-29~30 | 北京 | 特色：烤鸭 |  全聚德  | 朝阳区-朝阳北路 | 🌟🌟🌟🌟🌟 | 北京传统特色                           |\n\n> 参考\n\n|     主题     |            名称            |               位置                | 推荐指数 | 备注                                             |\n|:------------:|:--------------------------:|:---------------------------------:|:--------:|:------------------------------------------------ |\n| 中关村食宝街 |            小吃            | 北京-海淀区-中关村-新中关购物大厦 | 🌟🌟🌟🌟 | 食宝街各种特色小吃与各种主题餐厅                 |\n|    牛羊肉    |            牛街            |         北京-广安门内大街         | 🌟🌟🌟🌟 | 清真牛羊肉美食、小吃绝对正宗，特别推荐一下麻豆腐 |\n|    小龙虾    |          麻辣诱惑          |        北京-西单-君太百货         | 🌟🌟🌟🌟 | 小龙虾做的确实棒                                 |\n|     日料     |         大渔铁板烧         |        北京-海淀区-中关村         |  🌟🌟🌟  | 美团推荐人气第一(自助245)、6店通用                       |\n|     日料     | 德川家日本料理（中关村店） |        北京-海淀区-中关村         |  🌟🌟🌟  |                              美团推荐人气第二(自助196)、11店通用                    |\n\n> 个人观点\n\n网上很多人推荐护国寺、南锣鼓巷、王府井等，本人去吃过味道没那么好吃，纯属到北京旅游慕名而去，不推荐，但是护国寺、南锣鼓巷小吃价格方面还是很适合大众的。但是想见识一下北京老的胡同、四合院可以去南锣鼓巷看下，确实很不错。\n","slug":"Travel-2019-06北京美食计划","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xr0075tabj3v9yvvca","content":"<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_beijing_beijing.jpg\" width=\"750\" alt=\"地点\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_beijing_eat_month.png\" width=\"750\" alt=\"时间\"></div></div></div></div>\n<blockquote class=\"blockquote-center\"><p>带上媳妇向北京美食进军<br><strong>PyGo²</strong></p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<p>2014年到北京，不知不觉已经度过5个夏天了，6、7月是我在北京奋斗的最后2个月，带上我媳妇向北京美食进军-&gt;</p>\n<blockquote>\n<p>必吃</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:center\">城市</th>\n<th style=\"text-align:center\">主题</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">推荐指数</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-15~16</td>\n<td style=\"text-align:center\">北京</td>\n<td style=\"text-align:center\">自助餐</td>\n<td style=\"text-align:center\">第六季</td>\n<td style=\"text-align:center\">海淀区-紫竹桥</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n<td>美团推荐，帝都第一性价比最高的自助餐厅</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2019-06-22~23</td>\n<td style=\"text-align:center\">天津</td>\n<td style=\"text-align:center\">海鲜</td>\n<td style=\"text-align:center\">三个渔夫</td>\n<td style=\"text-align:center\">天津市-小白楼</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td>海鲜美味</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2019-06-29~30</td>\n<td style=\"text-align:center\">北京</td>\n<td style=\"text-align:center\">特色：烤鸭</td>\n<td style=\"text-align:center\">全聚德</td>\n<td style=\"text-align:center\">朝阳区-朝阳北路</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n<td>北京传统特色</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">主题</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">推荐指数</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">中关村食宝街</td>\n<td style=\"text-align:center\">小吃</td>\n<td style=\"text-align:center\">北京-海淀区-中关村-新中关购物大厦</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">食宝街各种特色小吃与各种主题餐厅</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">牛羊肉</td>\n<td style=\"text-align:center\">牛街</td>\n<td style=\"text-align:center\">北京-广安门内大街</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">清真牛羊肉美食、小吃绝对正宗，特别推荐一下麻豆腐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小龙虾</td>\n<td style=\"text-align:center\">麻辣诱惑</td>\n<td style=\"text-align:center\">北京-西单-君太百货</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">小龙虾做的确实棒</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日料</td>\n<td style=\"text-align:center\">大渔铁板烧</td>\n<td style=\"text-align:center\">北京-海淀区-中关村</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n<td style=\"text-align:left\">美团推荐人气第一(自助245)、6店通用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日料</td>\n<td style=\"text-align:center\">德川家日本料理（中关村店）</td>\n<td style=\"text-align:center\">北京-海淀区-中关村</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n<td style=\"text-align:left\">美团推荐人气第二(自助196)、11店通用</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>个人观点</p>\n</blockquote>\n<p>网上很多人推荐护国寺、南锣鼓巷、王府井等，本人去吃过味道没那么好吃，纯属到北京旅游慕名而去，不推荐，但是护国寺、南锣鼓巷小吃价格方面还是很适合大众的。但是想见识一下北京老的胡同、四合院可以去南锣鼓巷看下，确实很不错。</p>\n","site":{"data":{}},"excerpt":"<div class=\"group-picture\"><div class=\"group-picture-container\"><div class=\"group-picture-row\"><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_beijing_beijing.jpg\" width=\"750\" alt=\"地点\"></div><div class=\"group-picture-column\" style=\"width: 50%;\"><img src=\"/images/article_beijing_eat_month.png\" width=\"750\" alt=\"时间\"></div></div></div></div>\n<blockquote class=\"blockquote-center\"><p>带上媳妇向北京美食进军<br><strong>PyGo²</strong></p>\n</blockquote>","more":"<hr>\n\n<p>2014年到北京，不知不觉已经度过5个夏天了，6、7月是我在北京奋斗的最后2个月，带上我媳妇向北京美食进军-&gt;</p>\n<blockquote>\n<p>必吃</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:center\">城市</th>\n<th style=\"text-align:center\">主题</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">推荐指数</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-06-15~16</td>\n<td style=\"text-align:center\">北京</td>\n<td style=\"text-align:center\">自助餐</td>\n<td style=\"text-align:center\">第六季</td>\n<td style=\"text-align:center\">海淀区-紫竹桥</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n<td>美团推荐，帝都第一性价比最高的自助餐厅</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2019-06-22~23</td>\n<td style=\"text-align:center\">天津</td>\n<td style=\"text-align:center\">海鲜</td>\n<td style=\"text-align:center\">三个渔夫</td>\n<td style=\"text-align:center\">天津市-小白楼</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td>海鲜美味</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2019-06-29~30</td>\n<td style=\"text-align:center\">北京</td>\n<td style=\"text-align:center\">特色：烤鸭</td>\n<td style=\"text-align:center\">全聚德</td>\n<td style=\"text-align:center\">朝阳区-朝阳北路</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n<td>北京传统特色</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>参考</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">主题</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">推荐指数</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">中关村食宝街</td>\n<td style=\"text-align:center\">小吃</td>\n<td style=\"text-align:center\">北京-海淀区-中关村-新中关购物大厦</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">食宝街各种特色小吃与各种主题餐厅</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">牛羊肉</td>\n<td style=\"text-align:center\">牛街</td>\n<td style=\"text-align:center\">北京-广安门内大街</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">清真牛羊肉美食、小吃绝对正宗，特别推荐一下麻豆腐</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小龙虾</td>\n<td style=\"text-align:center\">麻辣诱惑</td>\n<td style=\"text-align:center\">北京-西单-君太百货</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟</td>\n<td style=\"text-align:left\">小龙虾做的确实棒</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日料</td>\n<td style=\"text-align:center\">大渔铁板烧</td>\n<td style=\"text-align:center\">北京-海淀区-中关村</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n<td style=\"text-align:left\">美团推荐人气第一(自助245)、6店通用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">日料</td>\n<td style=\"text-align:center\">德川家日本料理（中关村店）</td>\n<td style=\"text-align:center\">北京-海淀区-中关村</td>\n<td style=\"text-align:center\">🌟🌟🌟</td>\n<td style=\"text-align:left\">美团推荐人气第二(自助196)、11店通用</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>个人观点</p>\n</blockquote>\n<p>网上很多人推荐护国寺、南锣鼓巷、王府井等，本人去吃过味道没那么好吃，纯属到北京旅游慕名而去，不推荐，但是护国寺、南锣鼓巷小吃价格方面还是很适合大众的。但是想见识一下北京老的胡同、四合院可以去南锣鼓巷看下，确实很不错。</p>"},{"title":"浪漫二人行之天津二日游","comments":0,"top":false,"abbrlink":28340,"date":"2019-07-29T02:56:48.000Z","updated":"2019-07-29T02:56:48.000Z","desc":"周六日来个天津二日游浪漫二人行","keywords":"天津, 游玩, 美食, 狗不理, 解放桥, 世纪钟, 意大利风情街, 古文化街, 天津之眼, 南市食品街","_content":"![](/images/article_tianjinzhiyan.jpg)\n\n{% cq %}\n<font color='red'>**天津之眼**</font>\n{% endcq %}\n\n<!--more-->\n\n<hr />\n\n#### 背景\n{% note info %}\n来了北京6年了，一直都没去天津嗨皮过，快离开北京了，觉得去天津转转。本来心里打算有2个嗨皮的地方：北京欢乐谷或者天津之旅，二者进行比较，已经去过上海的迪士尼乐园了，选择天津之旅，了却心里的一件憾事。\n北京到天津的便利也不用多说，30分钟的城际快轨，超快。曾经的天津市是各国的租界，经历并见证了历史的变迁，重要的是天津还有很多小吃，这很吸引人啊。\n{% endnote %}\n\n#### 交通方式\n交通方式选择了城际快轨，仅30min就可以直达。至于天津市内游玩的话，我选择**步行 + 滴滴**混合式。\n\n![车次](checi.png)\n\n#### 日程安排\n\n{% tabs tianjinzhilv_richeng %}\n<!-- tab Day1 -->\n\n> 日期\n\n2019-08-02\n\n> 景点\n\n解放桥 + 世纪钟 → 意大利风情街(2小时) → 古文化街(2小时) → 天津之眼(1小时) → 津湾广场(2小时-建议夜景) + 海河\n\n> 建议\n\n- 天津之眼建议提前去排队，比较火。\n- 微信天津之眼摩天轮上购票，可以购提前3天的票。\n\n<!-- endtab -->\n<!-- tab Day2 -->\n\n> 日期\n\n2019-08-03\n\n> 景点\n\n五大道(2小时) → 天主教天津教区西开主教座堂天主堂(0.5小时) → 瓷房子(0.5小时) → 劝业场商场(和平路店)(2小时) → 南市食品街(2小时)\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 必游景点\n\n> 五大道\n\n历史文化名街，天津明信片的背景图。\n\n![](wudadao.jpeg)\n\n著名景点：\n\n- 疙瘩楼\n- 天津市民园体育场\n- 庆王府\n- 五大道博物馆\n\n\n> 天津之眼\n\n世界上唯一建在桥上的摩天轮 ，可看到方圆40公里以内的景致。\n\n![](tianjinzhiyan.jpeg)\n\n> 意大利风情街\n\n近代意大利在国外保留最为完整的历史街区。\n\n![](yidalifengqingjie.jpeg)\n\n著名景点：\n\n- 马可波罗广场\n- 梁启超旧居\n- 新意街步行街\n- 曹禺故居\n- 意大利兵营旧址\n\n> 古文化街\n\n中国味，天津味，文化味，古味。\n\n![](guwenhuajie.jpeg)\n\n著名景点：\n- 泥人张\n- 天津天后宫\n- 桂发祥十八街麻花\n\n#### 美食推荐\n\n天津是一个美食、小吃的聚集地，在游玩过程中享受。\n主要推荐：\n\n- 意大利风情街\n- 古文化街\n\n#### 酒店住宿\n\n|    日期    |       名称       | 价格 |                      位置                      |\n|:----------:|:----------------:|:----:|:----------------------------------------------:|\n| 2019-08-02 | 天津津塔河畔公馆 | 243  | 天津和平区天津和平区张自忠路162号津塔公寓2单元 |\n\n![](location.png)\n\n#### 个人建议\n{% note danger %}\n* 天津之眼摩天轮的<font color='red' size=4.5>票在网上进行购买</font>，成人70一张小孩35，搜索公众号：“天津之眼摩天轮”，在公众号上进行网购预约，可以提前购买3天的，建议选择晚上8点之后的观看时间，夜景很美。\n* 建议酒店选择在天津站、津湾广场、意大利风情街附近，离海河很近，而且夜景很美，推荐。\n* 天津吃得很多，暂时没有什么推荐必吃的，所以选择了边玩边吃，走一路吃一路。\n{% endnote %}\n","source":"_posts/Travel-浪漫二人行之天津二日游.md","raw":"---\ntitle: 浪漫二人行之天津二日游\ncomments: false\ncategories:\n  - [旅行记]\ntags: [旅行记, 美食]\ntop: false\nabbrlink: 28340\ndate: 2019-07-29 10:56:48\nupdated: 2019-07-29 10:56:48\ndesc: 周六日来个天津二日游浪漫二人行\nkeywords: 天津, 游玩, 美食, 狗不理, 解放桥, 世纪钟, 意大利风情街, 古文化街, 天津之眼, 南市食品街\n---\n![](/images/article_tianjinzhiyan.jpg)\n\n{% cq %}\n<font color='red'>**天津之眼**</font>\n{% endcq %}\n\n<!--more-->\n\n<hr />\n\n#### 背景\n{% note info %}\n来了北京6年了，一直都没去天津嗨皮过，快离开北京了，觉得去天津转转。本来心里打算有2个嗨皮的地方：北京欢乐谷或者天津之旅，二者进行比较，已经去过上海的迪士尼乐园了，选择天津之旅，了却心里的一件憾事。\n北京到天津的便利也不用多说，30分钟的城际快轨，超快。曾经的天津市是各国的租界，经历并见证了历史的变迁，重要的是天津还有很多小吃，这很吸引人啊。\n{% endnote %}\n\n#### 交通方式\n交通方式选择了城际快轨，仅30min就可以直达。至于天津市内游玩的话，我选择**步行 + 滴滴**混合式。\n\n![车次](checi.png)\n\n#### 日程安排\n\n{% tabs tianjinzhilv_richeng %}\n<!-- tab Day1 -->\n\n> 日期\n\n2019-08-02\n\n> 景点\n\n解放桥 + 世纪钟 → 意大利风情街(2小时) → 古文化街(2小时) → 天津之眼(1小时) → 津湾广场(2小时-建议夜景) + 海河\n\n> 建议\n\n- 天津之眼建议提前去排队，比较火。\n- 微信天津之眼摩天轮上购票，可以购提前3天的票。\n\n<!-- endtab -->\n<!-- tab Day2 -->\n\n> 日期\n\n2019-08-03\n\n> 景点\n\n五大道(2小时) → 天主教天津教区西开主教座堂天主堂(0.5小时) → 瓷房子(0.5小时) → 劝业场商场(和平路店)(2小时) → 南市食品街(2小时)\n\n<!-- endtab -->\n{% endtabs %}\n\n#### 必游景点\n\n> 五大道\n\n历史文化名街，天津明信片的背景图。\n\n![](wudadao.jpeg)\n\n著名景点：\n\n- 疙瘩楼\n- 天津市民园体育场\n- 庆王府\n- 五大道博物馆\n\n\n> 天津之眼\n\n世界上唯一建在桥上的摩天轮 ，可看到方圆40公里以内的景致。\n\n![](tianjinzhiyan.jpeg)\n\n> 意大利风情街\n\n近代意大利在国外保留最为完整的历史街区。\n\n![](yidalifengqingjie.jpeg)\n\n著名景点：\n\n- 马可波罗广场\n- 梁启超旧居\n- 新意街步行街\n- 曹禺故居\n- 意大利兵营旧址\n\n> 古文化街\n\n中国味，天津味，文化味，古味。\n\n![](guwenhuajie.jpeg)\n\n著名景点：\n- 泥人张\n- 天津天后宫\n- 桂发祥十八街麻花\n\n#### 美食推荐\n\n天津是一个美食、小吃的聚集地，在游玩过程中享受。\n主要推荐：\n\n- 意大利风情街\n- 古文化街\n\n#### 酒店住宿\n\n|    日期    |       名称       | 价格 |                      位置                      |\n|:----------:|:----------------:|:----:|:----------------------------------------------:|\n| 2019-08-02 | 天津津塔河畔公馆 | 243  | 天津和平区天津和平区张自忠路162号津塔公寓2单元 |\n\n![](location.png)\n\n#### 个人建议\n{% note danger %}\n* 天津之眼摩天轮的<font color='red' size=4.5>票在网上进行购买</font>，成人70一张小孩35，搜索公众号：“天津之眼摩天轮”，在公众号上进行网购预约，可以提前购买3天的，建议选择晚上8点之后的观看时间，夜景很美。\n* 建议酒店选择在天津站、津湾广场、意大利风情街附近，离海河很近，而且夜景很美，推荐。\n* 天津吃得很多，暂时没有什么推荐必吃的，所以选择了边玩边吃，走一路吃一路。\n{% endnote %}\n","slug":"Travel-浪漫二人行之天津二日游","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s2xt007atabjwt6xldeb","content":"<p><img src=\"/images/article_tianjinzhiyan.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font color=\"red\"><strong>天津之眼</strong></font></blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note info\">\n            <p>来了北京6年了，一直都没去天津嗨皮过，快离开北京了，觉得去天津转转。本来心里打算有2个嗨皮的地方：北京欢乐谷或者天津之旅，二者进行比较，已经去过上海的迪士尼乐园了，选择天津之旅，了却心里的一件憾事。<br>北京到天津的便利也不用多说，30分钟的城际快轨，超快。曾经的天津市是各国的租界，经历并见证了历史的变迁，重要的是天津还有很多小吃，这很吸引人啊。</p>\n          </div>\n<h4 id=\"交通方式\"><a href=\"#交通方式\" class=\"headerlink\" title=\"交通方式\"></a>交通方式</h4><p>交通方式选择了城际快轨，仅30min就可以直达。至于天津市内游玩的话，我选择<strong>步行 + 滴滴</strong>混合式。</p>\n<p><img src=\"checi.png\" alt=\"车次\"></p>\n<h4 id=\"日程安排\"><a href=\"#日程安排\" class=\"headerlink\" title=\"日程安排\"></a>日程安排</h4><div class=\"tabs\" id=\"tianjinzhilv_richeng\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tianjinzhilv_richeng-1\">Day1</a></li><li class=\"tab\"><a href=\"#tianjinzhilv_richeng-2\">Day2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tianjinzhilv_richeng-1\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-08-02</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>解放桥 + 世纪钟 → 意大利风情街(2小时) → 古文化街(2小时) → 天津之眼(1小时) → 津湾广场(2小时-建议夜景) + 海河</p>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<ul>\n<li>天津之眼建议提前去排队，比较火。</li>\n<li>微信天津之眼摩天轮上购票，可以购提前3天的票。</li>\n</ul></div><div class=\"tab-pane\" id=\"tianjinzhilv_richeng-2\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-08-03</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>五大道(2小时) → 天主教天津教区西开主教座堂天主堂(0.5小时) → 瓷房子(0.5小时) → 劝业场商场(和平路店)(2小时) → 南市食品街(2小时)</p></div></div></div>\n<h4 id=\"必游景点\"><a href=\"#必游景点\" class=\"headerlink\" title=\"必游景点\"></a>必游景点</h4><blockquote>\n<p>五大道</p>\n</blockquote>\n<p>历史文化名街，天津明信片的背景图。</p>\n<p><img src=\"wudadao.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>疙瘩楼</li>\n<li>天津市民园体育场</li>\n<li>庆王府</li>\n<li>五大道博物馆</li>\n</ul>\n<blockquote>\n<p>天津之眼</p>\n</blockquote>\n<p>世界上唯一建在桥上的摩天轮 ，可看到方圆40公里以内的景致。</p>\n<p><img src=\"tianjinzhiyan.jpeg\" alt></p>\n<blockquote>\n<p>意大利风情街</p>\n</blockquote>\n<p>近代意大利在国外保留最为完整的历史街区。</p>\n<p><img src=\"yidalifengqingjie.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>马可波罗广场</li>\n<li>梁启超旧居</li>\n<li>新意街步行街</li>\n<li>曹禺故居</li>\n<li>意大利兵营旧址</li>\n</ul>\n<blockquote>\n<p>古文化街</p>\n</blockquote>\n<p>中国味，天津味，文化味，古味。</p>\n<p><img src=\"guwenhuajie.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>泥人张</li>\n<li>天津天后宫</li>\n<li>桂发祥十八街麻花</li>\n</ul>\n<h4 id=\"美食推荐\"><a href=\"#美食推荐\" class=\"headerlink\" title=\"美食推荐\"></a>美食推荐</h4><p>天津是一个美食、小吃的聚集地，在游玩过程中享受。<br>主要推荐：</p>\n<ul>\n<li>意大利风情街</li>\n<li>古文化街</li>\n</ul>\n<h4 id=\"酒店住宿\"><a href=\"#酒店住宿\" class=\"headerlink\" title=\"酒店住宿\"></a>酒店住宿</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">价格</th>\n<th style=\"text-align:center\">位置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-08-02</td>\n<td style=\"text-align:center\">天津津塔河畔公馆</td>\n<td style=\"text-align:center\">243</td>\n<td style=\"text-align:center\">天津和平区天津和平区张自忠路162号津塔公寓2单元</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"location.png\" alt></p>\n<h4 id=\"个人建议\"><a href=\"#个人建议\" class=\"headerlink\" title=\"个人建议\"></a>个人建议</h4><div class=\"note danger\">\n            <ul><li>天津之眼摩天轮的<font color=\"red\" size=\"4.5\">票在网上进行购买</font>，成人70一张小孩35，搜索公众号：“天津之眼摩天轮”，在公众号上进行网购预约，可以提前购买3天的，建议选择晚上8点之后的观看时间，夜景很美。</li><li>建议酒店选择在天津站、津湾广场、意大利风情街附近，离海河很近，而且夜景很美，推荐。</li><li>天津吃得很多，暂时没有什么推荐必吃的，所以选择了边玩边吃，走一路吃一路。</li></ul>\n          </div>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_tianjinzhiyan.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><font color=\"red\"><strong>天津之眼</strong></font></blockquote>","more":"<hr>\n\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note info\">\n            <p>来了北京6年了，一直都没去天津嗨皮过，快离开北京了，觉得去天津转转。本来心里打算有2个嗨皮的地方：北京欢乐谷或者天津之旅，二者进行比较，已经去过上海的迪士尼乐园了，选择天津之旅，了却心里的一件憾事。<br>北京到天津的便利也不用多说，30分钟的城际快轨，超快。曾经的天津市是各国的租界，经历并见证了历史的变迁，重要的是天津还有很多小吃，这很吸引人啊。</p>\n          </div>\n<h4 id=\"交通方式\"><a href=\"#交通方式\" class=\"headerlink\" title=\"交通方式\"></a>交通方式</h4><p>交通方式选择了城际快轨，仅30min就可以直达。至于天津市内游玩的话，我选择<strong>步行 + 滴滴</strong>混合式。</p>\n<p><img src=\"checi.png\" alt=\"车次\"></p>\n<h4 id=\"日程安排\"><a href=\"#日程安排\" class=\"headerlink\" title=\"日程安排\"></a>日程安排</h4><div class=\"tabs\" id=\"tianjinzhilv_richeng\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tianjinzhilv_richeng-1\">Day1</a></li><li class=\"tab\"><a href=\"#tianjinzhilv_richeng-2\">Day2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tianjinzhilv_richeng-1\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-08-02</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>解放桥 + 世纪钟 → 意大利风情街(2小时) → 古文化街(2小时) → 天津之眼(1小时) → 津湾广场(2小时-建议夜景) + 海河</p>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<ul>\n<li>天津之眼建议提前去排队，比较火。</li>\n<li>微信天津之眼摩天轮上购票，可以购提前3天的票。</li>\n</ul></div><div class=\"tab-pane\" id=\"tianjinzhilv_richeng-2\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-08-03</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>五大道(2小时) → 天主教天津教区西开主教座堂天主堂(0.5小时) → 瓷房子(0.5小时) → 劝业场商场(和平路店)(2小时) → 南市食品街(2小时)</p></div></div></div>\n<h4 id=\"必游景点\"><a href=\"#必游景点\" class=\"headerlink\" title=\"必游景点\"></a>必游景点</h4><blockquote>\n<p>五大道</p>\n</blockquote>\n<p>历史文化名街，天津明信片的背景图。</p>\n<p><img src=\"wudadao.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>疙瘩楼</li>\n<li>天津市民园体育场</li>\n<li>庆王府</li>\n<li>五大道博物馆</li>\n</ul>\n<blockquote>\n<p>天津之眼</p>\n</blockquote>\n<p>世界上唯一建在桥上的摩天轮 ，可看到方圆40公里以内的景致。</p>\n<p><img src=\"tianjinzhiyan.jpeg\" alt></p>\n<blockquote>\n<p>意大利风情街</p>\n</blockquote>\n<p>近代意大利在国外保留最为完整的历史街区。</p>\n<p><img src=\"yidalifengqingjie.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>马可波罗广场</li>\n<li>梁启超旧居</li>\n<li>新意街步行街</li>\n<li>曹禺故居</li>\n<li>意大利兵营旧址</li>\n</ul>\n<blockquote>\n<p>古文化街</p>\n</blockquote>\n<p>中国味，天津味，文化味，古味。</p>\n<p><img src=\"guwenhuajie.jpeg\" alt></p>\n<p>著名景点：</p>\n<ul>\n<li>泥人张</li>\n<li>天津天后宫</li>\n<li>桂发祥十八街麻花</li>\n</ul>\n<h4 id=\"美食推荐\"><a href=\"#美食推荐\" class=\"headerlink\" title=\"美食推荐\"></a>美食推荐</h4><p>天津是一个美食、小吃的聚集地，在游玩过程中享受。<br>主要推荐：</p>\n<ul>\n<li>意大利风情街</li>\n<li>古文化街</li>\n</ul>\n<h4 id=\"酒店住宿\"><a href=\"#酒店住宿\" class=\"headerlink\" title=\"酒店住宿\"></a>酒店住宿</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">价格</th>\n<th style=\"text-align:center\">位置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-08-02</td>\n<td style=\"text-align:center\">天津津塔河畔公馆</td>\n<td style=\"text-align:center\">243</td>\n<td style=\"text-align:center\">天津和平区天津和平区张自忠路162号津塔公寓2单元</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"location.png\" alt></p>\n<h4 id=\"个人建议\"><a href=\"#个人建议\" class=\"headerlink\" title=\"个人建议\"></a>个人建议</h4><div class=\"note danger\">\n            <ul><li>天津之眼摩天轮的<font color=\"red\" size=\"4.5\">票在网上进行购买</font>，成人70一张小孩35，搜索公众号：“天津之眼摩天轮”，在公众号上进行网购预约，可以提前购买3天的，建议选择晚上8点之后的观看时间，夜景很美。</li><li>建议酒店选择在天津站、津湾广场、意大利风情街附近，离海河很近，而且夜景很美，推荐。</li><li>天津吃得很多，暂时没有什么推荐必吃的，所以选择了边玩边吃，走一路吃一路。</li></ul>\n          </div>"},{"title":"Postgresql的备份与恢复","comments":0,"top":false,"abbrlink":17366,"date":"2018-09-02T03:01:08.000Z","updated":"2018-09-02T03:01:08.000Z","desc":"关于Postgresql数据库的备份与恢复","keywords":"Postgresql, pg_dump, 备份, 恢复, 数据库, 迁移, 数据","_content":"\n![](/images/postgresql.jpg)\n\n\n### 背景\n\n{% note primary %}\n身为一枚主要做后端的程序员，跟数据库打交道是必不可少的，虽然数据库由专门的dba进行负责，<font color='red' size=4.5>技多不压身</font>。于是，把日常对postgresql数据库的日常操作比较频繁的进行记录下来，一是自己找的时候方便，另外也与大家做个分享交流。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 命令介绍\n\n除去写相关的sql工作，工作上用到比较多的就是数据库的备份与恢复、导表，今天先介绍一下数据库的<font color='blue' size=4.2>备份与恢复</font>。\npg_dump是一个用于备份的命令工具，即使当前数据库正在使用，也能够生成一致性的备份文件，生成sql文件或其他格式文件，且不会阻塞其他用户访问数据库(包括读、写)，下面就详细介绍一下pg_dump。\n\n1. #### pg_dump详解\n执行pg_dump --help，英文内容如下：\n```\n$ pg_dump --help\n\npg_dump dumps a database as a text file or to other formats.\n\nUsage:\n  pg_dump [OPTION]... [DBNAME]\n\nGeneral options:\n  -f, --file=FILENAME          output file or directory name\n  -F, --format=c|d|t|p         output file format (custom, directory, tar,\n                               plain text (default))\n  -j, --jobs=NUM               use this many parallel jobs to dump\n  -v, --verbose                verbose mode\n  -V, --version                output version information, then exit\n  -Z, --compress=0-9           compression level for compressed formats\n  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock\n  --no-sync                    do not wait for changes to be written safely to disk\n  -?, --help                   show this help, then exit\n\nOptions controlling the output content:\n  -a, --data-only              dump only the data, not the schema\n  -b, --blobs                  include large objects in dump\n  -B, --no-blobs               exclude large objects in dump\n  -c, --clean                  clean (drop) database objects before recreating\n  -C, --create                 include commands to create database in dump\n  -E, --encoding=ENCODING      dump the data in encoding ENCODING\n  -n, --schema=SCHEMA          dump the named schema(s) only\n  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)\n  -o, --oids                   include OIDs in dump\n  -O, --no-owner               skip restoration of object ownership in\n                               plain-text format\n  -s, --schema-only            dump only the schema, no data\n  -S, --superuser=NAME         superuser user name to use in plain-text format\n  -t, --table=TABLE            dump the named table(s) only\n  -T, --exclude-table=TABLE    do NOT dump the named table(s)\n  -x, --no-privileges          do not dump privileges (grant/revoke)\n  --binary-upgrade             for use by upgrade utilities only\n  --column-inserts             dump data as INSERT commands with column names\n  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting\n  --disable-triggers           disable triggers during data-only restore\n  --enable-row-security        enable row security (dump only content user has\n                               access to)\n  --exclude-table-data=TABLE   do NOT dump data for the named table(s)\n  --if-exists                  use IF EXISTS when dropping objects\n  --inserts                    dump data as INSERT commands, rather than COPY\n  --load-via-partition-root    load partitions via the root table\n  --no-comments                do not dump comments\n  --no-publications            do not dump publications\n  --no-security-labels         do not dump security label assignments\n  --no-subscriptions           do not dump subscriptions\n  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs\n  --no-tablespaces             do not dump tablespace assignments\n  --no-unlogged-table-data     do not dump unlogged table data\n  --quote-all-identifiers      quote all identifiers, even if not key words\n  --section=SECTION            dump named section (pre-data, data, or post-data)\n  --serializable-deferrable    wait until the dump can run without anomalies\n  --snapshot=SNAPSHOT          use given snapshot for the dump\n  --strict-names               require table and/or schema include patterns to\n                               match at least one entity each\n  --use-set-session-authorization\n                               use SET SESSION AUTHORIZATION commands instead of\n                               ALTER OWNER commands to set ownership\n\nConnection options:\n  -d, --dbname=DBNAME      database to dump\n  -h, --host=HOSTNAME      database server host or socket directory\n  -p, --port=PORT          database server port number\n  -U, --username=NAME      connect as specified database user\n  -w, --no-password        never prompt for password\n  -W, --password           force password prompt (should happen automatically)\n  --role=ROLENAME          do SET ROLE before dump\n\nIf no database name is supplied, then the PGDATABASE environment\nvariable value is used.\n\nReport bugs to <pgsql-bugs@postgresql.org>.\n```\n2. #### 参数解析\n\n    这里介绍一下高频&&常用的参数说明，如果想深挖，建议查看官网进行查看，文章最后会给出官网链接。\n\n    > -f\n\n    输出文件或目录名\n\n    > -F && --format=c|d|t|p\n\n    输出文件格式 (定制、目录、tar)、明文 (默认值))\n\n    > -j, --jobs=NUM\n\n    多任务并行\n\n    > -Z, --compress=0-9\n\n    被压缩格式的压缩级别\n\n    > -a, --data-only\n\n    只转储数据,不包括模式\n\n    > -c, --clean\n\n    在重新创建之前，先删除数据库对象，默认这个参数是False，如果不进行删除，可以使用drop进行手动删除已存在的数据库\n\n    > -C, --create\n\n    备份文件中有create database数据库的sql语句，默认是进行create\n\n    > -E, --encoding=ENCODING\n\n    转储以ENCODING形式编码的数据，默认是数据库编码，不常用\n\n    > -s, --schema-only\n\n    只备份数据库策略, 不包括数据\n\n    > -t, --table=TABLE\n\n    只备份指定数据库指定名称的表\n\n    > --inserts\n\n    以inserts命令，而不是copy命令的形式转储数据，pg_dump默认是copy模式\n\n    > --column-inserts\n\n    以带有列名的INSERT命令形式转储数据\n\n    > -T, --exclude-table=TABLE\n\n    备份的数据中将排除指定名称的表\n\n    > --exclude-table-data=TABLE\n\n    不转储指定名称的表中的数据\n\n    > --if-exists\n\n    当删除对象时使用IF EXISTS，这个会安全一点，但是时间会延长，不建议使用\n\n\n3. #### 联接选项\n\n    数据库连接参数是必填参数，参数与psql一致。\n\n    > -d, --dbname=DBNAME\n\n    数据库\n    > -h, --host=主机名\n\n    数据库服务器的主机名或IP\n    > -p, --port=端口号\n\n    数据库的端口号，默认5432\n    > -U, --username=名字\n\n    用户名\n    > -w, --no-password\n\n    永远不提示输入口令\n    > -W, --password\n\n    强制口令提示 (自动)\n\n### 备份\n\n登陆数据库服务器／远程连接的服务器，使用命令pg_dump，具体参数请查看上面相关详细介绍，下面列出几种常见的情景：\n\n> data + schema\n\n导出整个指定的数据库。\n\npg_dump -h XXXX -p XXXX -U XXXX 数据库名称 > ~/数据库.sql\n\npg_dump -h XXXX -p XXXX -U XXXX -d XXXX -F t > /home/q/XXXX.tar\n\n> schema\n\n导出整个指定数据库的策略。\n\npg_dump -h XXXX -p XXXX -U XXXX -s 数据库名称 > ~/数据库.sql\n\n> data\n\n导出整个指定数据库的表数据。\n\npg_dump -h XXXX -p XXXX -U XXXX -a 数据库名称 > ~/数据库.sql\n\n> table\n\n导出整个指定数据库的指定表。\n\npg_dump -h XXXX -p XXXX -U XXXX -t 表名 数据库名称 > ~/表.sql\n\n> exclude table\n\n导出整个指定数据库的指定表，并排除掉指定的表。\n\npg_dump -h XXXX -p XXXX -U XXXX -T 数据库名称 > ~/数据库.sql\n\npg_dump -h XXXX -p XXXX -U XXXX --exclude-table-data 表名 数据库名称 > ~/数据库.sql\n\n\n### 迁移数据\n\n在这里介绍3种传输方式：\n\n- python -m SimpleHTTPServer 8888\n\n- scp\n\n- nc\n\n命令的具体不做详细介绍。\n\n### 恢复\n\n1. #### 切换用户\n登陆到需要进行恢复的数据库服务器，切换postgres用户：\n```\nsudo -i\nsu postgres\n```\n2. #### psql\n执行psql，进行客户端。\n新建数据库专属用户\ncreate user 用户名 with password '密码';\n新建数据库\ncreate database 数据库名 owner 用户名;\n分配权限\ngrant all privileges on database 数据库 to 用户;\n退出psql，执行：psql 数据库名 <数据库.sql\n加访问权限，执行vim pg_hba.conf 加入：host    数据库           用户           all                     md5\n2. #### 恢复\npsql -U XXXX -d XXXX -f XXXX.sql\n\n### 问题集\n{% note danger %}\n1 数据库无hstore数据类型\n解决：\ncreate extension hstore;\nSelect pg_terminate_backend(pid) from pg_stat_activity where datname = '数据库名称'\n\n\n2 aborting because of server version mismatch\n\n服务端 & 客户端 版本不一致导致。\n解决：\n> 方案一\n\n降级服务端pg版本 <= 客户端\n卸载old版本，更新新版本 >= 服务端版本\n\n> 方案二\n\n版本共存\n1.sudo yumdownloader postgresql\n2.yum install perl-ExtUtils-Embed\n3.sudo yum install uuid\n4.sudo yum install libxslt\n5.rpm -ivh postgresql rpm包\n6.在 /export 软连接/home/q/export下建一个目录 pg100_data ，用户和组都给 postgres\n7./opt/pg10/bin/pg_ctl -D /export/pg100_data initdb\n8.postgresql.conf 复制到 /export/pg100_data 目录中\n9./opt/pg10/bin/pg_ctl -D /export/pg100_data start\n\n{% endnote %}\n\n### 学习参考\n\npg_dump官网：https://www.postgresql.org/docs/9.2/app-pgdump.html\n","source":"_posts/DB-postgresql的备份与恢复.md","raw":"---\ntitle: Postgresql的备份与恢复\ncomments: false\ncategories:\n  - [数据库]\ntags: [Postgresql]\ntop: false\nabbrlink: 17366\ndate: 2018-09-02 11:01:08\nupdated: 2018-09-02 11:01:08\ndesc: 关于Postgresql数据库的备份与恢复\nkeywords: Postgresql, pg_dump, 备份, 恢复, 数据库, 迁移, 数据\n---\n\n![](/images/postgresql.jpg)\n\n\n### 背景\n\n{% note primary %}\n身为一枚主要做后端的程序员，跟数据库打交道是必不可少的，虽然数据库由专门的dba进行负责，<font color='red' size=4.5>技多不压身</font>。于是，把日常对postgresql数据库的日常操作比较频繁的进行记录下来，一是自己找的时候方便，另外也与大家做个分享交流。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 命令介绍\n\n除去写相关的sql工作，工作上用到比较多的就是数据库的备份与恢复、导表，今天先介绍一下数据库的<font color='blue' size=4.2>备份与恢复</font>。\npg_dump是一个用于备份的命令工具，即使当前数据库正在使用，也能够生成一致性的备份文件，生成sql文件或其他格式文件，且不会阻塞其他用户访问数据库(包括读、写)，下面就详细介绍一下pg_dump。\n\n1. #### pg_dump详解\n执行pg_dump --help，英文内容如下：\n```\n$ pg_dump --help\n\npg_dump dumps a database as a text file or to other formats.\n\nUsage:\n  pg_dump [OPTION]... [DBNAME]\n\nGeneral options:\n  -f, --file=FILENAME          output file or directory name\n  -F, --format=c|d|t|p         output file format (custom, directory, tar,\n                               plain text (default))\n  -j, --jobs=NUM               use this many parallel jobs to dump\n  -v, --verbose                verbose mode\n  -V, --version                output version information, then exit\n  -Z, --compress=0-9           compression level for compressed formats\n  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock\n  --no-sync                    do not wait for changes to be written safely to disk\n  -?, --help                   show this help, then exit\n\nOptions controlling the output content:\n  -a, --data-only              dump only the data, not the schema\n  -b, --blobs                  include large objects in dump\n  -B, --no-blobs               exclude large objects in dump\n  -c, --clean                  clean (drop) database objects before recreating\n  -C, --create                 include commands to create database in dump\n  -E, --encoding=ENCODING      dump the data in encoding ENCODING\n  -n, --schema=SCHEMA          dump the named schema(s) only\n  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)\n  -o, --oids                   include OIDs in dump\n  -O, --no-owner               skip restoration of object ownership in\n                               plain-text format\n  -s, --schema-only            dump only the schema, no data\n  -S, --superuser=NAME         superuser user name to use in plain-text format\n  -t, --table=TABLE            dump the named table(s) only\n  -T, --exclude-table=TABLE    do NOT dump the named table(s)\n  -x, --no-privileges          do not dump privileges (grant/revoke)\n  --binary-upgrade             for use by upgrade utilities only\n  --column-inserts             dump data as INSERT commands with column names\n  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting\n  --disable-triggers           disable triggers during data-only restore\n  --enable-row-security        enable row security (dump only content user has\n                               access to)\n  --exclude-table-data=TABLE   do NOT dump data for the named table(s)\n  --if-exists                  use IF EXISTS when dropping objects\n  --inserts                    dump data as INSERT commands, rather than COPY\n  --load-via-partition-root    load partitions via the root table\n  --no-comments                do not dump comments\n  --no-publications            do not dump publications\n  --no-security-labels         do not dump security label assignments\n  --no-subscriptions           do not dump subscriptions\n  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs\n  --no-tablespaces             do not dump tablespace assignments\n  --no-unlogged-table-data     do not dump unlogged table data\n  --quote-all-identifiers      quote all identifiers, even if not key words\n  --section=SECTION            dump named section (pre-data, data, or post-data)\n  --serializable-deferrable    wait until the dump can run without anomalies\n  --snapshot=SNAPSHOT          use given snapshot for the dump\n  --strict-names               require table and/or schema include patterns to\n                               match at least one entity each\n  --use-set-session-authorization\n                               use SET SESSION AUTHORIZATION commands instead of\n                               ALTER OWNER commands to set ownership\n\nConnection options:\n  -d, --dbname=DBNAME      database to dump\n  -h, --host=HOSTNAME      database server host or socket directory\n  -p, --port=PORT          database server port number\n  -U, --username=NAME      connect as specified database user\n  -w, --no-password        never prompt for password\n  -W, --password           force password prompt (should happen automatically)\n  --role=ROLENAME          do SET ROLE before dump\n\nIf no database name is supplied, then the PGDATABASE environment\nvariable value is used.\n\nReport bugs to <pgsql-bugs@postgresql.org>.\n```\n2. #### 参数解析\n\n    这里介绍一下高频&&常用的参数说明，如果想深挖，建议查看官网进行查看，文章最后会给出官网链接。\n\n    > -f\n\n    输出文件或目录名\n\n    > -F && --format=c|d|t|p\n\n    输出文件格式 (定制、目录、tar)、明文 (默认值))\n\n    > -j, --jobs=NUM\n\n    多任务并行\n\n    > -Z, --compress=0-9\n\n    被压缩格式的压缩级别\n\n    > -a, --data-only\n\n    只转储数据,不包括模式\n\n    > -c, --clean\n\n    在重新创建之前，先删除数据库对象，默认这个参数是False，如果不进行删除，可以使用drop进行手动删除已存在的数据库\n\n    > -C, --create\n\n    备份文件中有create database数据库的sql语句，默认是进行create\n\n    > -E, --encoding=ENCODING\n\n    转储以ENCODING形式编码的数据，默认是数据库编码，不常用\n\n    > -s, --schema-only\n\n    只备份数据库策略, 不包括数据\n\n    > -t, --table=TABLE\n\n    只备份指定数据库指定名称的表\n\n    > --inserts\n\n    以inserts命令，而不是copy命令的形式转储数据，pg_dump默认是copy模式\n\n    > --column-inserts\n\n    以带有列名的INSERT命令形式转储数据\n\n    > -T, --exclude-table=TABLE\n\n    备份的数据中将排除指定名称的表\n\n    > --exclude-table-data=TABLE\n\n    不转储指定名称的表中的数据\n\n    > --if-exists\n\n    当删除对象时使用IF EXISTS，这个会安全一点，但是时间会延长，不建议使用\n\n\n3. #### 联接选项\n\n    数据库连接参数是必填参数，参数与psql一致。\n\n    > -d, --dbname=DBNAME\n\n    数据库\n    > -h, --host=主机名\n\n    数据库服务器的主机名或IP\n    > -p, --port=端口号\n\n    数据库的端口号，默认5432\n    > -U, --username=名字\n\n    用户名\n    > -w, --no-password\n\n    永远不提示输入口令\n    > -W, --password\n\n    强制口令提示 (自动)\n\n### 备份\n\n登陆数据库服务器／远程连接的服务器，使用命令pg_dump，具体参数请查看上面相关详细介绍，下面列出几种常见的情景：\n\n> data + schema\n\n导出整个指定的数据库。\n\npg_dump -h XXXX -p XXXX -U XXXX 数据库名称 > ~/数据库.sql\n\npg_dump -h XXXX -p XXXX -U XXXX -d XXXX -F t > /home/q/XXXX.tar\n\n> schema\n\n导出整个指定数据库的策略。\n\npg_dump -h XXXX -p XXXX -U XXXX -s 数据库名称 > ~/数据库.sql\n\n> data\n\n导出整个指定数据库的表数据。\n\npg_dump -h XXXX -p XXXX -U XXXX -a 数据库名称 > ~/数据库.sql\n\n> table\n\n导出整个指定数据库的指定表。\n\npg_dump -h XXXX -p XXXX -U XXXX -t 表名 数据库名称 > ~/表.sql\n\n> exclude table\n\n导出整个指定数据库的指定表，并排除掉指定的表。\n\npg_dump -h XXXX -p XXXX -U XXXX -T 数据库名称 > ~/数据库.sql\n\npg_dump -h XXXX -p XXXX -U XXXX --exclude-table-data 表名 数据库名称 > ~/数据库.sql\n\n\n### 迁移数据\n\n在这里介绍3种传输方式：\n\n- python -m SimpleHTTPServer 8888\n\n- scp\n\n- nc\n\n命令的具体不做详细介绍。\n\n### 恢复\n\n1. #### 切换用户\n登陆到需要进行恢复的数据库服务器，切换postgres用户：\n```\nsudo -i\nsu postgres\n```\n2. #### psql\n执行psql，进行客户端。\n新建数据库专属用户\ncreate user 用户名 with password '密码';\n新建数据库\ncreate database 数据库名 owner 用户名;\n分配权限\ngrant all privileges on database 数据库 to 用户;\n退出psql，执行：psql 数据库名 <数据库.sql\n加访问权限，执行vim pg_hba.conf 加入：host    数据库           用户           all                     md5\n2. #### 恢复\npsql -U XXXX -d XXXX -f XXXX.sql\n\n### 问题集\n{% note danger %}\n1 数据库无hstore数据类型\n解决：\ncreate extension hstore;\nSelect pg_terminate_backend(pid) from pg_stat_activity where datname = '数据库名称'\n\n\n2 aborting because of server version mismatch\n\n服务端 & 客户端 版本不一致导致。\n解决：\n> 方案一\n\n降级服务端pg版本 <= 客户端\n卸载old版本，更新新版本 >= 服务端版本\n\n> 方案二\n\n版本共存\n1.sudo yumdownloader postgresql\n2.yum install perl-ExtUtils-Embed\n3.sudo yum install uuid\n4.sudo yum install libxslt\n5.rpm -ivh postgresql rpm包\n6.在 /export 软连接/home/q/export下建一个目录 pg100_data ，用户和组都给 postgres\n7./opt/pg10/bin/pg_ctl -D /export/pg100_data initdb\n8.postgresql.conf 复制到 /export/pg100_data 目录中\n9./opt/pg10/bin/pg_ctl -D /export/pg100_data start\n\n{% endnote %}\n\n### 学习参考\n\npg_dump官网：https://www.postgresql.org/docs/9.2/app-pgdump.html\n","slug":"DB-postgresql的备份与恢复","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38000g4tabjrt17gsdt","content":"<p><img src=\"/images/postgresql.jpg\" alt></p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>身为一枚主要做后端的程序员，跟数据库打交道是必不可少的，虽然数据库由专门的dba进行负责，<font color=\"red\" size=\"4.5\">技多不压身</font>。于是，把日常对postgresql数据库的日常操作比较频繁的进行记录下来，一是自己找的时候方便，另外也与大家做个分享交流。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"命令介绍\"><a href=\"#命令介绍\" class=\"headerlink\" title=\"命令介绍\"></a>命令介绍</h3><p>除去写相关的sql工作，工作上用到比较多的就是数据库的备份与恢复、导表，今天先介绍一下数据库的<font color=\"blue\" size=\"4.2\">备份与恢复</font>。<br>pg_dump是一个用于备份的命令工具，即使当前数据库正在使用，也能够生成一致性的备份文件，生成sql文件或其他格式文件，且不会阻塞其他用户访问数据库(包括读、写)，下面就详细介绍一下pg_dump。</p>\n<ol>\n<li><h4 id=\"pg-dump详解\"><a href=\"#pg-dump详解\" class=\"headerlink\" title=\"pg_dump详解\"></a>pg_dump详解</h4><p>执行pg_dump –help，英文内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pg_dump --help</span><br><span class=\"line\"></span><br><span class=\"line\">pg_dump dumps a database as a text file or to other formats.</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  pg_dump [OPTION]... [DBNAME]</span><br><span class=\"line\"></span><br><span class=\"line\">General options:</span><br><span class=\"line\">  -f, --file=FILENAME          output file or directory name</span><br><span class=\"line\">  -F, --format=c|d|t|p         output file format (custom, directory, tar,</span><br><span class=\"line\">                               plain text (default))</span><br><span class=\"line\">  -j, --jobs=NUM               use this many parallel jobs to dump</span><br><span class=\"line\">  -v, --verbose                verbose mode</span><br><span class=\"line\">  -V, --version                output version information, then exit</span><br><span class=\"line\">  -Z, --compress=0-9           compression level for compressed formats</span><br><span class=\"line\">  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock</span><br><span class=\"line\">  --no-sync                    do not wait for changes to be written safely to disk</span><br><span class=\"line\">  -?, --help                   show this help, then exit</span><br><span class=\"line\"></span><br><span class=\"line\">Options controlling the output content:</span><br><span class=\"line\">  -a, --data-only              dump only the data, not the schema</span><br><span class=\"line\">  -b, --blobs                  include large objects in dump</span><br><span class=\"line\">  -B, --no-blobs               exclude large objects in dump</span><br><span class=\"line\">  -c, --clean                  clean (drop) database objects before recreating</span><br><span class=\"line\">  -C, --create                 include commands to create database in dump</span><br><span class=\"line\">  -E, --encoding=ENCODING      dump the data in encoding ENCODING</span><br><span class=\"line\">  -n, --schema=SCHEMA          dump the named schema(s) only</span><br><span class=\"line\">  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)</span><br><span class=\"line\">  -o, --oids                   include OIDs in dump</span><br><span class=\"line\">  -O, --no-owner               skip restoration of object ownership in</span><br><span class=\"line\">                               plain-text format</span><br><span class=\"line\">  -s, --schema-only            dump only the schema, no data</span><br><span class=\"line\">  -S, --superuser=NAME         superuser user name to use in plain-text format</span><br><span class=\"line\">  -t, --table=TABLE            dump the named table(s) only</span><br><span class=\"line\">  -T, --exclude-table=TABLE    do NOT dump the named table(s)</span><br><span class=\"line\">  -x, --no-privileges          do not dump privileges (grant/revoke)</span><br><span class=\"line\">  --binary-upgrade             for use by upgrade utilities only</span><br><span class=\"line\">  --column-inserts             dump data as INSERT commands with column names</span><br><span class=\"line\">  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting</span><br><span class=\"line\">  --disable-triggers           disable triggers during data-only restore</span><br><span class=\"line\">  --enable-row-security        enable row security (dump only content user has</span><br><span class=\"line\">                               access to)</span><br><span class=\"line\">  --exclude-table-data=TABLE   do NOT dump data for the named table(s)</span><br><span class=\"line\">  --if-exists                  use IF EXISTS when dropping objects</span><br><span class=\"line\">  --inserts                    dump data as INSERT commands, rather than COPY</span><br><span class=\"line\">  --load-via-partition-root    load partitions via the root table</span><br><span class=\"line\">  --no-comments                do not dump comments</span><br><span class=\"line\">  --no-publications            do not dump publications</span><br><span class=\"line\">  --no-security-labels         do not dump security label assignments</span><br><span class=\"line\">  --no-subscriptions           do not dump subscriptions</span><br><span class=\"line\">  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs</span><br><span class=\"line\">  --no-tablespaces             do not dump tablespace assignments</span><br><span class=\"line\">  --no-unlogged-table-data     do not dump unlogged table data</span><br><span class=\"line\">  --quote-all-identifiers      quote all identifiers, even if not key words</span><br><span class=\"line\">  --section=SECTION            dump named section (pre-data, data, or post-data)</span><br><span class=\"line\">  --serializable-deferrable    wait until the dump can run without anomalies</span><br><span class=\"line\">  --snapshot=SNAPSHOT          use given snapshot for the dump</span><br><span class=\"line\">  --strict-names               require table and/or schema include patterns to</span><br><span class=\"line\">                               match at least one entity each</span><br><span class=\"line\">  --use-set-session-authorization</span><br><span class=\"line\">                               use SET SESSION AUTHORIZATION commands instead of</span><br><span class=\"line\">                               ALTER OWNER commands to set ownership</span><br><span class=\"line\"></span><br><span class=\"line\">Connection options:</span><br><span class=\"line\">  -d, --dbname=DBNAME      database to dump</span><br><span class=\"line\">  -h, --host=HOSTNAME      database server host or socket directory</span><br><span class=\"line\">  -p, --port=PORT          database server port number</span><br><span class=\"line\">  -U, --username=NAME      connect as specified database user</span><br><span class=\"line\">  -w, --no-password        never prompt for password</span><br><span class=\"line\">  -W, --password           force password prompt (should happen automatically)</span><br><span class=\"line\">  --role=ROLENAME          do SET ROLE before dump</span><br><span class=\"line\"></span><br><span class=\"line\">If no database name is supplied, then the PGDATABASE environment</span><br><span class=\"line\">variable value is used.</span><br><span class=\"line\"></span><br><span class=\"line\">Report bugs to &lt;pgsql-bugs@postgresql.org&gt;.</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"参数解析\"><a href=\"#参数解析\" class=\"headerlink\" title=\"参数解析\"></a>参数解析</h4><p> 这里介绍一下高频&amp;&amp;常用的参数说明，如果想深挖，建议查看官网进行查看，文章最后会给出官网链接。</p>\n<blockquote>\n<p>-f</p>\n</blockquote>\n<p> 输出文件或目录名</p>\n<blockquote>\n<p>-F &amp;&amp; –format=c|d|t|p</p>\n</blockquote>\n<p> 输出文件格式 (定制、目录、tar)、明文 (默认值))</p>\n<blockquote>\n<p>-j, –jobs=NUM</p>\n</blockquote>\n<p> 多任务并行</p>\n<blockquote>\n<p>-Z, –compress=0-9</p>\n</blockquote>\n<p> 被压缩格式的压缩级别</p>\n<blockquote>\n<p>-a, –data-only</p>\n</blockquote>\n<p> 只转储数据,不包括模式</p>\n<blockquote>\n<p>-c, –clean</p>\n</blockquote>\n<p> 在重新创建之前，先删除数据库对象，默认这个参数是False，如果不进行删除，可以使用drop进行手动删除已存在的数据库</p>\n<blockquote>\n<p>-C, –create</p>\n</blockquote>\n<p> 备份文件中有create database数据库的sql语句，默认是进行create</p>\n<blockquote>\n<p>-E, –encoding=ENCODING</p>\n</blockquote>\n<p> 转储以ENCODING形式编码的数据，默认是数据库编码，不常用</p>\n<blockquote>\n<p>-s, –schema-only</p>\n</blockquote>\n<p> 只备份数据库策略, 不包括数据</p>\n<blockquote>\n<p>-t, –table=TABLE</p>\n</blockquote>\n<p> 只备份指定数据库指定名称的表</p>\n<blockquote>\n<p>–inserts</p>\n</blockquote>\n<p> 以inserts命令，而不是copy命令的形式转储数据，pg_dump默认是copy模式</p>\n<blockquote>\n<p>–column-inserts</p>\n</blockquote>\n<p> 以带有列名的INSERT命令形式转储数据</p>\n<blockquote>\n<p>-T, –exclude-table=TABLE</p>\n</blockquote>\n<p> 备份的数据中将排除指定名称的表</p>\n<blockquote>\n<p>–exclude-table-data=TABLE</p>\n</blockquote>\n<p> 不转储指定名称的表中的数据</p>\n<blockquote>\n<p>–if-exists</p>\n</blockquote>\n<p> 当删除对象时使用IF EXISTS，这个会安全一点，但是时间会延长，不建议使用</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><h4 id=\"联接选项\"><a href=\"#联接选项\" class=\"headerlink\" title=\"联接选项\"></a>联接选项</h4><p> 数据库连接参数是必填参数，参数与psql一致。</p>\n<blockquote>\n<p>-d, –dbname=DBNAME</p>\n</blockquote>\n<p> 数据库</p>\n<blockquote>\n<p>-h, –host=主机名</p>\n</blockquote>\n<p> 数据库服务器的主机名或IP</p>\n<blockquote>\n<p>-p, –port=端口号</p>\n</blockquote>\n<p> 数据库的端口号，默认5432</p>\n<blockquote>\n<p>-U, –username=名字</p>\n</blockquote>\n<p> 用户名</p>\n<blockquote>\n<p>-w, –no-password</p>\n</blockquote>\n<p> 永远不提示输入口令</p>\n<blockquote>\n<p>-W, –password</p>\n</blockquote>\n<p> 强制口令提示 (自动)</p>\n</li>\n</ol>\n<h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><p>登陆数据库服务器／远程连接的服务器，使用命令pg_dump，具体参数请查看上面相关详细介绍，下面列出几种常见的情景：</p>\n<blockquote>\n<p>data + schema</p>\n</blockquote>\n<p>导出整个指定的数据库。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX 数据库名称 &gt; ~/数据库.sql</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -d XXXX -F t &gt; /home/q/XXXX.tar</p>\n<blockquote>\n<p>schema</p>\n</blockquote>\n<p>导出整个指定数据库的策略。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -s 数据库名称 &gt; ~/数据库.sql</p>\n<blockquote>\n<p>data</p>\n</blockquote>\n<p>导出整个指定数据库的表数据。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -a 数据库名称 &gt; ~/数据库.sql</p>\n<blockquote>\n<p>table</p>\n</blockquote>\n<p>导出整个指定数据库的指定表。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -t 表名 数据库名称 &gt; ~/表.sql</p>\n<blockquote>\n<p>exclude table</p>\n</blockquote>\n<p>导出整个指定数据库的指定表，并排除掉指定的表。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -T 数据库名称 &gt; ~/数据库.sql</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX –exclude-table-data 表名 数据库名称 &gt; ~/数据库.sql</p>\n<h3 id=\"迁移数据\"><a href=\"#迁移数据\" class=\"headerlink\" title=\"迁移数据\"></a>迁移数据</h3><p>在这里介绍3种传输方式：</p>\n<ul>\n<li><p>python -m SimpleHTTPServer 8888</p>\n</li>\n<li><p>scp</p>\n</li>\n<li><p>nc</p>\n</li>\n</ul>\n<p>命令的具体不做详细介绍。</p>\n<h3 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><ol>\n<li><h4 id=\"切换用户\"><a href=\"#切换用户\" class=\"headerlink\" title=\"切换用户\"></a>切换用户</h4><p>登陆到需要进行恢复的数据库服务器，切换postgres用户：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br><span class=\"line\">su postgres</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"psql\"><a href=\"#psql\" class=\"headerlink\" title=\"psql\"></a>psql</h4><p>执行psql，进行客户端。<br>新建数据库专属用户<br>create user 用户名 with password ‘密码’;<br>新建数据库<br>create database 数据库名 owner 用户名;<br>分配权限<br>grant all privileges on database 数据库 to 用户;<br>退出psql，执行：psql 数据库名 &lt;数据库.sql<br>加访问权限，执行vim pg_hba.conf 加入：host    数据库           用户           all                     md5</p>\n</li>\n<li><h4 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4>psql -U XXXX -d XXXX -f XXXX.sql</li>\n</ol>\n<h3 id=\"问题集\"><a href=\"#问题集\" class=\"headerlink\" title=\"问题集\"></a>问题集</h3><div class=\"note danger\">\n            <p>1 数据库无hstore数据类型<br>解决：<br>create extension hstore;<br>Select pg_terminate_backend(pid) from pg_stat_activity where datname = ‘数据库名称’</p><p>2 aborting because of server version mismatch</p><p>服务端 &amp; 客户端 版本不一致导致。<br>解决：</p><blockquote><p>方案一</p></blockquote><p>降级服务端pg版本 &lt;= 客户端<br>卸载old版本，更新新版本 &gt;= 服务端版本</p><blockquote><p>方案二</p></blockquote><p>版本共存<br>1.sudo yumdownloader postgresql<br>2.yum install perl-ExtUtils-Embed<br>3.sudo yum install uuid<br>4.sudo yum install libxslt<br>5.rpm -ivh postgresql rpm包<br>6.在 /export 软连接/home/q/export下建一个目录 pg100_data ，用户和组都给 postgres<br>7./opt/pg10/bin/pg_ctl -D /export/pg100_data initdb<br>8.postgresql.conf 复制到 /export/pg100_data 目录中<br>9./opt/pg10/bin/pg_ctl -D /export/pg100_data start</p>\n          </div>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>pg_dump官网：<a href=\"https://www.postgresql.org/docs/9.2/app-pgdump.html\" target=\"_blank\" rel=\"noopener\">https://www.postgresql.org/docs/9.2/app-pgdump.html</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/postgresql.jpg\" alt></p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>身为一枚主要做后端的程序员，跟数据库打交道是必不可少的，虽然数据库由专门的dba进行负责，<font color=\"red\" size=\"4.5\">技多不压身</font>。于是，把日常对postgresql数据库的日常操作比较频繁的进行记录下来，一是自己找的时候方便，另外也与大家做个分享交流。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"命令介绍\"><a href=\"#命令介绍\" class=\"headerlink\" title=\"命令介绍\"></a>命令介绍</h3><p>除去写相关的sql工作，工作上用到比较多的就是数据库的备份与恢复、导表，今天先介绍一下数据库的<font color=\"blue\" size=\"4.2\">备份与恢复</font>。<br>pg_dump是一个用于备份的命令工具，即使当前数据库正在使用，也能够生成一致性的备份文件，生成sql文件或其他格式文件，且不会阻塞其他用户访问数据库(包括读、写)，下面就详细介绍一下pg_dump。</p>\n<ol>\n<li><h4 id=\"pg-dump详解\"><a href=\"#pg-dump详解\" class=\"headerlink\" title=\"pg_dump详解\"></a>pg_dump详解</h4><p>执行pg_dump –help，英文内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pg_dump --help</span><br><span class=\"line\"></span><br><span class=\"line\">pg_dump dumps a database as a text file or to other formats.</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  pg_dump [OPTION]... [DBNAME]</span><br><span class=\"line\"></span><br><span class=\"line\">General options:</span><br><span class=\"line\">  -f, --file=FILENAME          output file or directory name</span><br><span class=\"line\">  -F, --format=c|d|t|p         output file format (custom, directory, tar,</span><br><span class=\"line\">                               plain text (default))</span><br><span class=\"line\">  -j, --jobs=NUM               use this many parallel jobs to dump</span><br><span class=\"line\">  -v, --verbose                verbose mode</span><br><span class=\"line\">  -V, --version                output version information, then exit</span><br><span class=\"line\">  -Z, --compress=0-9           compression level for compressed formats</span><br><span class=\"line\">  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock</span><br><span class=\"line\">  --no-sync                    do not wait for changes to be written safely to disk</span><br><span class=\"line\">  -?, --help                   show this help, then exit</span><br><span class=\"line\"></span><br><span class=\"line\">Options controlling the output content:</span><br><span class=\"line\">  -a, --data-only              dump only the data, not the schema</span><br><span class=\"line\">  -b, --blobs                  include large objects in dump</span><br><span class=\"line\">  -B, --no-blobs               exclude large objects in dump</span><br><span class=\"line\">  -c, --clean                  clean (drop) database objects before recreating</span><br><span class=\"line\">  -C, --create                 include commands to create database in dump</span><br><span class=\"line\">  -E, --encoding=ENCODING      dump the data in encoding ENCODING</span><br><span class=\"line\">  -n, --schema=SCHEMA          dump the named schema(s) only</span><br><span class=\"line\">  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)</span><br><span class=\"line\">  -o, --oids                   include OIDs in dump</span><br><span class=\"line\">  -O, --no-owner               skip restoration of object ownership in</span><br><span class=\"line\">                               plain-text format</span><br><span class=\"line\">  -s, --schema-only            dump only the schema, no data</span><br><span class=\"line\">  -S, --superuser=NAME         superuser user name to use in plain-text format</span><br><span class=\"line\">  -t, --table=TABLE            dump the named table(s) only</span><br><span class=\"line\">  -T, --exclude-table=TABLE    do NOT dump the named table(s)</span><br><span class=\"line\">  -x, --no-privileges          do not dump privileges (grant/revoke)</span><br><span class=\"line\">  --binary-upgrade             for use by upgrade utilities only</span><br><span class=\"line\">  --column-inserts             dump data as INSERT commands with column names</span><br><span class=\"line\">  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting</span><br><span class=\"line\">  --disable-triggers           disable triggers during data-only restore</span><br><span class=\"line\">  --enable-row-security        enable row security (dump only content user has</span><br><span class=\"line\">                               access to)</span><br><span class=\"line\">  --exclude-table-data=TABLE   do NOT dump data for the named table(s)</span><br><span class=\"line\">  --if-exists                  use IF EXISTS when dropping objects</span><br><span class=\"line\">  --inserts                    dump data as INSERT commands, rather than COPY</span><br><span class=\"line\">  --load-via-partition-root    load partitions via the root table</span><br><span class=\"line\">  --no-comments                do not dump comments</span><br><span class=\"line\">  --no-publications            do not dump publications</span><br><span class=\"line\">  --no-security-labels         do not dump security label assignments</span><br><span class=\"line\">  --no-subscriptions           do not dump subscriptions</span><br><span class=\"line\">  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs</span><br><span class=\"line\">  --no-tablespaces             do not dump tablespace assignments</span><br><span class=\"line\">  --no-unlogged-table-data     do not dump unlogged table data</span><br><span class=\"line\">  --quote-all-identifiers      quote all identifiers, even if not key words</span><br><span class=\"line\">  --section=SECTION            dump named section (pre-data, data, or post-data)</span><br><span class=\"line\">  --serializable-deferrable    wait until the dump can run without anomalies</span><br><span class=\"line\">  --snapshot=SNAPSHOT          use given snapshot for the dump</span><br><span class=\"line\">  --strict-names               require table and/or schema include patterns to</span><br><span class=\"line\">                               match at least one entity each</span><br><span class=\"line\">  --use-set-session-authorization</span><br><span class=\"line\">                               use SET SESSION AUTHORIZATION commands instead of</span><br><span class=\"line\">                               ALTER OWNER commands to set ownership</span><br><span class=\"line\"></span><br><span class=\"line\">Connection options:</span><br><span class=\"line\">  -d, --dbname=DBNAME      database to dump</span><br><span class=\"line\">  -h, --host=HOSTNAME      database server host or socket directory</span><br><span class=\"line\">  -p, --port=PORT          database server port number</span><br><span class=\"line\">  -U, --username=NAME      connect as specified database user</span><br><span class=\"line\">  -w, --no-password        never prompt for password</span><br><span class=\"line\">  -W, --password           force password prompt (should happen automatically)</span><br><span class=\"line\">  --role=ROLENAME          do SET ROLE before dump</span><br><span class=\"line\"></span><br><span class=\"line\">If no database name is supplied, then the PGDATABASE environment</span><br><span class=\"line\">variable value is used.</span><br><span class=\"line\"></span><br><span class=\"line\">Report bugs to &lt;pgsql-bugs@postgresql.org&gt;.</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"参数解析\"><a href=\"#参数解析\" class=\"headerlink\" title=\"参数解析\"></a>参数解析</h4><p> 这里介绍一下高频&amp;&amp;常用的参数说明，如果想深挖，建议查看官网进行查看，文章最后会给出官网链接。</p>\n<blockquote>\n<p>-f</p>\n</blockquote>\n<p> 输出文件或目录名</p>\n<blockquote>\n<p>-F &amp;&amp; –format=c|d|t|p</p>\n</blockquote>\n<p> 输出文件格式 (定制、目录、tar)、明文 (默认值))</p>\n<blockquote>\n<p>-j, –jobs=NUM</p>\n</blockquote>\n<p> 多任务并行</p>\n<blockquote>\n<p>-Z, –compress=0-9</p>\n</blockquote>\n<p> 被压缩格式的压缩级别</p>\n<blockquote>\n<p>-a, –data-only</p>\n</blockquote>\n<p> 只转储数据,不包括模式</p>\n<blockquote>\n<p>-c, –clean</p>\n</blockquote>\n<p> 在重新创建之前，先删除数据库对象，默认这个参数是False，如果不进行删除，可以使用drop进行手动删除已存在的数据库</p>\n<blockquote>\n<p>-C, –create</p>\n</blockquote>\n<p> 备份文件中有create database数据库的sql语句，默认是进行create</p>\n<blockquote>\n<p>-E, –encoding=ENCODING</p>\n</blockquote>\n<p> 转储以ENCODING形式编码的数据，默认是数据库编码，不常用</p>\n<blockquote>\n<p>-s, –schema-only</p>\n</blockquote>\n<p> 只备份数据库策略, 不包括数据</p>\n<blockquote>\n<p>-t, –table=TABLE</p>\n</blockquote>\n<p> 只备份指定数据库指定名称的表</p>\n<blockquote>\n<p>–inserts</p>\n</blockquote>\n<p> 以inserts命令，而不是copy命令的形式转储数据，pg_dump默认是copy模式</p>\n<blockquote>\n<p>–column-inserts</p>\n</blockquote>\n<p> 以带有列名的INSERT命令形式转储数据</p>\n<blockquote>\n<p>-T, –exclude-table=TABLE</p>\n</blockquote>\n<p> 备份的数据中将排除指定名称的表</p>\n<blockquote>\n<p>–exclude-table-data=TABLE</p>\n</blockquote>\n<p> 不转储指定名称的表中的数据</p>\n<blockquote>\n<p>–if-exists</p>\n</blockquote>\n<p> 当删除对象时使用IF EXISTS，这个会安全一点，但是时间会延长，不建议使用</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><h4 id=\"联接选项\"><a href=\"#联接选项\" class=\"headerlink\" title=\"联接选项\"></a>联接选项</h4><p> 数据库连接参数是必填参数，参数与psql一致。</p>\n<blockquote>\n<p>-d, –dbname=DBNAME</p>\n</blockquote>\n<p> 数据库</p>\n<blockquote>\n<p>-h, –host=主机名</p>\n</blockquote>\n<p> 数据库服务器的主机名或IP</p>\n<blockquote>\n<p>-p, –port=端口号</p>\n</blockquote>\n<p> 数据库的端口号，默认5432</p>\n<blockquote>\n<p>-U, –username=名字</p>\n</blockquote>\n<p> 用户名</p>\n<blockquote>\n<p>-w, –no-password</p>\n</blockquote>\n<p> 永远不提示输入口令</p>\n<blockquote>\n<p>-W, –password</p>\n</blockquote>\n<p> 强制口令提示 (自动)</p>\n</li>\n</ol>\n<h3 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h3><p>登陆数据库服务器／远程连接的服务器，使用命令pg_dump，具体参数请查看上面相关详细介绍，下面列出几种常见的情景：</p>\n<blockquote>\n<p>data + schema</p>\n</blockquote>\n<p>导出整个指定的数据库。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX 数据库名称 &gt; ~/数据库.sql</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -d XXXX -F t &gt; /home/q/XXXX.tar</p>\n<blockquote>\n<p>schema</p>\n</blockquote>\n<p>导出整个指定数据库的策略。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -s 数据库名称 &gt; ~/数据库.sql</p>\n<blockquote>\n<p>data</p>\n</blockquote>\n<p>导出整个指定数据库的表数据。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -a 数据库名称 &gt; ~/数据库.sql</p>\n<blockquote>\n<p>table</p>\n</blockquote>\n<p>导出整个指定数据库的指定表。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -t 表名 数据库名称 &gt; ~/表.sql</p>\n<blockquote>\n<p>exclude table</p>\n</blockquote>\n<p>导出整个指定数据库的指定表，并排除掉指定的表。</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX -T 数据库名称 &gt; ~/数据库.sql</p>\n<p>pg_dump -h XXXX -p XXXX -U XXXX –exclude-table-data 表名 数据库名称 &gt; ~/数据库.sql</p>\n<h3 id=\"迁移数据\"><a href=\"#迁移数据\" class=\"headerlink\" title=\"迁移数据\"></a>迁移数据</h3><p>在这里介绍3种传输方式：</p>\n<ul>\n<li><p>python -m SimpleHTTPServer 8888</p>\n</li>\n<li><p>scp</p>\n</li>\n<li><p>nc</p>\n</li>\n</ul>\n<p>命令的具体不做详细介绍。</p>\n<h3 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><ol>\n<li><h4 id=\"切换用户\"><a href=\"#切换用户\" class=\"headerlink\" title=\"切换用户\"></a>切换用户</h4><p>登陆到需要进行恢复的数据库服务器，切换postgres用户：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br><span class=\"line\">su postgres</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"psql\"><a href=\"#psql\" class=\"headerlink\" title=\"psql\"></a>psql</h4><p>执行psql，进行客户端。<br>新建数据库专属用户<br>create user 用户名 with password ‘密码’;<br>新建数据库<br>create database 数据库名 owner 用户名;<br>分配权限<br>grant all privileges on database 数据库 to 用户;<br>退出psql，执行：psql 数据库名 &lt;数据库.sql<br>加访问权限，执行vim pg_hba.conf 加入：host    数据库           用户           all                     md5</p>\n</li>\n<li><h4 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h4>psql -U XXXX -d XXXX -f XXXX.sql</li>\n</ol>\n<h3 id=\"问题集\"><a href=\"#问题集\" class=\"headerlink\" title=\"问题集\"></a>问题集</h3><div class=\"note danger\">\n            <p>1 数据库无hstore数据类型<br>解决：<br>create extension hstore;<br>Select pg_terminate_backend(pid) from pg_stat_activity where datname = ‘数据库名称’</p><p>2 aborting because of server version mismatch</p><p>服务端 &amp; 客户端 版本不一致导致。<br>解决：</p><blockquote><p>方案一</p></blockquote><p>降级服务端pg版本 &lt;= 客户端<br>卸载old版本，更新新版本 &gt;= 服务端版本</p><blockquote><p>方案二</p></blockquote><p>版本共存<br>1.sudo yumdownloader postgresql<br>2.yum install perl-ExtUtils-Embed<br>3.sudo yum install uuid<br>4.sudo yum install libxslt<br>5.rpm -ivh postgresql rpm包<br>6.在 /export 软连接/home/q/export下建一个目录 pg100_data ，用户和组都给 postgres<br>7./opt/pg10/bin/pg_ctl -D /export/pg100_data initdb<br>8.postgresql.conf 复制到 /export/pg100_data 目录中<br>9./opt/pg10/bin/pg_ctl -D /export/pg100_data start</p>\n          </div>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>pg_dump官网：<a href=\"https://www.postgresql.org/docs/9.2/app-pgdump.html\" target=\"_blank\" rel=\"noopener\">https://www.postgresql.org/docs/9.2/app-pgdump.html</a></p>"},{"title":"Next主题优化-内置tags篇","comments":0,"desc":"Next主题自带tags-博文美化篇（note、tabs、cq、button、label、exturl、fullimage、grouppicture、include_raw、pdf、mermaid）","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, note, tabs, cq, button, label, exturl, fullimage, grouppicture, include_raw, pdf, mermaid","abbrlink":25933,"date":"2018-12-26T14:15:34.000Z","updated":"2018-12-26T14:15:34.000Z","_content":"\n<font color=\"#dd0000\" size=\"4\">目标：</font><font color=\"blue\" size=\"6\">美化博文</font>\n\n### 背景\n{% note success %}\n发布博客有段时间了，而且陆陆续续写了一些文章，但页面样式都比较简单，只是单一的MarkDown语法，难道是***Hexo + Next + MarkDown***只能写出简单样式的文章？有点不相信，于是去[Next官方](http://theme-next.iissnan.com/)。看了一些使用文档，查看了***<font color=\"#dd0000\" size=\"4\">内建标签</font>***，原来Next可以让简单样式的文章可以变得那么好看，总结了一下分享出来。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n### 前言\nNext主题使用的***<font color=\"#dd0000\" size=\"5\">内置tag</font>***，官方都已经写好js，直接使用对应的语法糖加入到文章中，就可以实现多样式、多功能的效果。下面分别说明了一下本人博客Hexo+Next的版本，如果有加入对应tag没有效果的，可以留言给我，一起交流一起学习。\n\n<font color=\"#dd0000\" size=\"4\">Next主题内置tag样式都是本人经过实践得出，原创之作，欢迎大家进行转载。</font>\n\n### 版本介绍\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n\n***<font color=\"#dd0000\" size=\"4\">内置tag文件位置：blog/themes/next/scripts/tags。</font>***\n\n### Tags\n内置tags的js文件一共有12个，在这里我只讲解本人实践的tag。\n\n1. #### tabs\n> 功能\n\n    提供了一个tabs页样式标签，可以进行切换。\n\n    > 代码\n\n    ```\n    {% tabs t_code_1 %}\n    <!-- tab 标题一 -->\n    tab1\n    <!-- endtab -->\n    <!-- tab 标题二 -->\n    tab2\n    <!-- endtab -->\n    <!-- tab 标题三 -->\n    tab3\n    <!-- endtab -->\n    {% endtabs %}\n    ```\n    > 配置\n\n    打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***tabs***</font>，更改代码如下：\n    ```\n    # tabs相关配置\n    tabs:\n      enable: true\n      transition:\n        tabs: false\n        labels: true\n      border_radius: 5  # tab圆角设置\n    ```\n\n    > 示例\n\n    {% tabs t1 %}\n    <!-- tab 标题一 -->\n    tab1\n    <!-- endtab -->\n    <!-- tab 标题二 -->\n    tab2\n    <!-- endtab -->\n    <!-- tab 标题三 -->\n    tab3\n    <!-- endtab -->\n    {% endtabs %}\n\n    > 语法糖\n\n    - tabs-endtabs 是***tab tag***语法糖。\n    - tab-endtab 是tabs里一个完整的tab，多个tab只需要更换标题、内容即可。\n\n2. #### cq && centerquote\n> 功能\n\n    文本居中、引用样式。\n\n    > 代码\n\n    ```\n    {% cq %}\n    一个爱老婆的Python程序猿。。。。。。\n    **PyGo²**\n    {% endcq %}\n    ```\n\n    > 示例\n\n    {% cq %}\n    一个爱老婆的Python程序猿。。。。。。\n    **PyGo²**\n    {% endcq %}\n\n    > 语法糖\n\n    - cq-endcq 是***cq tag***语法糖。\n    - cq与centerquote等价。\n\n3. #### note\n> 功能\n\n    **内置note**标签。\n\n    > 代码\n\n    ```\n    {% note default %}\n    default 提示块标签\n    {% endnote %}\n\n    {% note primary %}\n    primary 提示块标签\n    {% endnote %}\n\n    {% note success %}\n    success 提示块标签\n    {% endnote %}\n\n    {% note info %}\n    info 提示块标签\n    {% endnote %}\n\n    {% note warning %}\n    warning 提示块标签\n    {% endnote %}\n\n    {% note danger %}\n    danger 提示块标签\n    {% endnote %}\n    ```\n    > 配置\n\n    打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***Note tag***</font>，更改代码如下：\n    ```\n    # note tag 相关配置\n    note:\n      style: flat\n      icons: true   # 是否启用图标\n      border_radius: 3  #圆角设置\n      light_bg_offset: 0     设置0为里面内容为note样式包含\n    ```\n\n    > 示例\n\n    {% note default %}\n    default\n    提示块标签\n    {% endnote %}\n\n    {% note primary %}\n    primary\n    提示块标签\n    {% endnote %}\n\n    > 语法糖\n\n    - note-endnote 是***cq tag***语法糖。\n    - 样式：default、primary、success、info、warning、danger，示例中我只展示了2种。\n\n4. #### label\n> 功能\n\n    **内置label**标签。\n\n    > 代码\n\n    ```\n    {% label default@default %}\n    {% label primary@primary %}\n    {% label success@success %}\n    {% label info@info %}\n    {% label warning@warning %}\n    {% label danger@danger %}\n    ```\n\n    > 示例\n\n    {% label default@default %}\n    {% label primary@primary %}\n    {% label success@success %}\n    {% label info@info %}\n    {% label warning@warning %}\n    {% label danger@danger %}\n\n    > 语法糖\n\n    - label 是***label tag***语法糖，不需要加endlabel标识结束。\n    - @符号前面是label样式。\n    - @符号后面是label内容。\n    - 说明label需要2个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/label.js\n    ```\n    args = args.join(' ').split('@');\n    var classes = args[0] || 'default';\n    var text    = args[1] || '';\n    ```\n\n5. #### button && btn\n> 功能\n\n    **内置button**标签。\n\n    > 代码\n\n    ```\n    {% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw %}\n    ```\n\n    > 示例\n\n    {% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw, 百度首页标题 %}\n\n    > 语法糖\n\n    - btn 是***btn tag***语法糖，不需要加endbtn标识结束。\n    - 这个标签需要4个参数: url地址、button文本内容、button icon、button title。\n    - 第四个参数我试了，没什么效果，有了解的小伙伴欢迎留言。\n    - 这个按钮的样式跟Next主题样式一致，因为按钮样式本人优化过，所以在示例中的button与Next默认样式不一致。\n    - 说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/button.js\n    ```\n    args = args.join(' ').split(',');\n    var url   = args[0];\n    var text  = args[1] || '';\n    var icon  = args[2] || '';\n    var title = args[3] || '';\n    ```\n    - btn与button等价。\n\n6. #### ~~exturl && extlink(过时，不建议使用)~~\n> 功能\n\n    外链街功能。\n\n    > 代码\n\n    ```\n    {% exturl https://www.baidu.com 百度首页 %}\n    ```\n\n    > 示例\n\n    {% exturl https://www.baidu.com 百度首页 %}\n\n    > 语法糖\n\n    - exturl 是***exturl tag***语法糖，不需要加endexturl标识结束。\n    - 看js文件，这个标签需要5个参数: url地址、url文本内容、urltitle、url item、0、结束位置，其中url文本内容是个列表。\n    - 说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/exturl.js\n    ```\n    var exturl = 'exturl';\n    var url    = '';\n    var text   = [];\n    var title  = '';\n    var item   = '';\n    var i      = 0;\n    var len    = args.length;\n    ```\n    - exturl与extlink等价。\n\n    {% note info %}\n    特殊说明\n    {% endnote %}\n    在md文档中写完此标签，怎么重启，刷新，发现外链都不管用，研究了好一会儿，我在这里就不买官司了，直接看解决方法：\n    - 打开Next主题的配置文件，搜索***exturl***\n    - 更改代码如下\n    ```\n    exturl: true\n    ```\n    - 重新启动服务 && 刷新。\n\n7. #### fi && fullimage\n> 功能\n\n    全像显示图片。\n\n    > 代码\n\n    ```\n    {% fi /images/article_wdyxxy.jpg %}\n    <img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"/>\n    ```\n\n    > 示例\n\n    {% fi /images/article_wdyxxy.jpg %}\n\n    > 语法糖\n\n    - fi 是***fullimage tag***语法糖，无对应的end结束。\n    - fi与fullimagee等价。\n    - 我试了几个发现这个***fi tag***与正常***imag**标签没什么区别，上面示例代码中给出了，效果图是一样的。\n\n8. #### gp && grouppicture\n> 功能\n\n    多格局显示图片。\n\n    {% note info %}\n    这里不做简述，请查看博文：hexo博文展示并排等多样式图片\n    {% endnote %}\n\n9. #### include_raw\n> 功能\n\n    引用html文件，是把部分html代码单独写在一个html文件里面，通过**tag**标签把文件引入的语法，需要可以看最下面的官方说明。\n\n10. #### pdf\n> 功能\n\n    通过**pdf tag**标签把pdf文件引入页面中。\n\n    > 代码\n\n    ```\n    {% pdf /images/PythonStudy.pdf %}\n    ```\n\n    > 配置\n\n    - 安装theme-next-pdf\n    ```\n    cd blog/themes/next\n    git clone https://github.com/theme-next/theme-next-pdf source/lib/pdf\n    ```\n    - 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***pdf***</font>，更改代码如下：\n    ```\n    # pdf相关配置\n    # See: https://github.com/theme-next/theme-next-pdf\n    pdf:\n      enable: true\n      height: 500px  # 设置默认高度\n      pdfobject:\n        cdn: //cdn.jsdelivr.net/npm/pdfobject@2/pdfobject.min.js\n    ```\n    - 新建目录，如果想要把文件单独存放一个目录，那么需要在blog/public目录下新建目录；如果不想新建，可以把文件放在blog/public/images目录下，这个目录是单独用来存放站点图片之用的目录。\n    - 在***pdf tag***，参数的路径写上上面新建的。\n\n    > 示例\n\n    {% pdf /publicfiles/PythonStudy.pdf %}\n\n    > 语法糖\n\n    - pdf 是***pdftag***语法糖，无对应的end结束。\n\n    {% note info %}\n    建议：\n        建议少用此标签，因为页面如果加载大文件会很慢。\n    {% endnote %}\n\n11. #### mermaid\n> 功能\n\n    用了好几个翻译都解释“美人鱼”，但是实现的效果类似于word、excel、ppt里面的架构图，通过**mermaid tag**标签把架构图引入页面中。\n\n    > 代码\n\n    ```\n    {% mermaid graph TD %}\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[Car]\n    {% endmermaid %}\n    ```\n\n    > 配置\n\n    - 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***mermaid***</font>，更改代码如下：\n    ```\n    # Mermaid tag\n    mermaid:\n      enable: true\n      # Available themes: default | dark | forest | neutral\n      theme: forest   # 主题\n      cdn: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js\n    ```\n    关于架构图的样式取决于theme参数，每个样式我都试了一下，还是forest最漂亮。\n\n    > 示例\n\n    {% mermaid graph TD %}\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[Car]\n    {% endmermaid %}\n\n    > 语法糖\n\n    - mermaid-endmermaid 是***mermaid tag***语法糖。\n    - 例子我就采用官方的例子了，没自己去写，官方有好几种写法、样式，需要的请查阅官方资料。\n\n12. #### video\n> 功能\n\n    html对视频的引用。\n\n    > 代码\n\n    ```\n    {% video url %}\n    {% video /publicfiles/xiao6.mp4 %}\n    ```\n\n    > 配置\n\n    - 我在blog/public目录下新建了publicfiles一个目录用来存放上面**pdf&&video**用到的文件。\n\n    > 示例\n\n    {% video /publicfiles/xiao6.mp4 %}\n\n    > 语法糖\n\n    - video 是***video tag***语法糖，无endvideo结束。\n    - 如果是引用视频，找到视频资源，直接写上url地址即可。\n\n{% note success %}\n已解决问题\n{% endnote %}\n\n开启服务运用的是debug模式，方便进行调试，在启用的时候，发现服务报了好多***WARNING***，总结下来方便大家解决问题。\n\n> `exturl` and `extlink` tag will not longer be supported.\n\n翻译出来就是将不再支持`exturl`和'extlink`的标记，在我的blog很少用到，用到的会用***button tag***进行代替。\n\n> Tabs block must have unique name!\n\n找到tabs-endtabs内置标签，在tabs后面加上tab一个名字，而且要***unique***。\n\n{% note warning %}\n未解决问题\n{% endnote %}\n\n在文章编写过程中遇到了一些问题，先记录下来，以后解决在来修改。\n- 在tab里面放\\`\\`\\`代码块\\`\\`\\`，不生效。\n- button与exturl共存在同一页面，并启动exturl配置，发现button样式没了，可能是我自己瞎改button造成的原因，问题解决中。\n\n### 学习\n\nNext中文官方：http://theme-next.iissnan.com/tag-plugins.html\nNext Tag官方：https://hexo.io/docs/tag-plugins.html\nbotton：https://theme-next.org/docs/tag-plugins/button/\nnote：https://theme-next.org/docs/tag-plugins/note/\ntabs：https://theme-next.org/docs/tag-plugins/tabs/\ncq：https://theme-next.org/docs/tag-plugins/\nlabel：https://theme-next.org/docs/tag-plugins/label/\nexturl：https://theme-next.org/docs/tag-plugins/exturl/\nfullimage：https://theme-next.org/docs/tag-plugins/full-image\ngroup-pictures：https://theme-next.org/docs/tag-plugins/group-pictures\npdf tag：https://theme-next.org/docs/tag-plugins/pdf\ntheme-next-pdf：https://github.com/theme-next/theme-next-pdf\nmermaid：https://theme-next.org/docs/tag-plugins/mermaid/\nvideo：https://theme-next.org/docs/tag-plugins/video\n\n### 结束语\n\n到这里，Next内置的tag都实践完毕，根据需要使用上述tags，给博文带来了不一样的视觉效果以及便利，欢迎大家转载，一起交流使用。\n\n***<font color=\"blue\" size=\"5\">最好的开始就是从现在开始！！！</font>***\n","source":"_posts/Hexo-Next主题优化-内置tags篇.md","raw":"---\ntitle: Next主题优化-内置tags篇\ncomments: false\ndesc: Next主题自带tags-博文美化篇（note、tabs、cq、button、label、exturl、fullimage、grouppicture、include_raw、pdf、mermaid）\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, note, tabs, cq, button, label, exturl, fullimage, grouppicture, include_raw, pdf, mermaid\nabbrlink: 25933\ndate: 2018-12-26 22:15:34\nupdated: 2018-12-26 22:15:34\n---\n\n<font color=\"#dd0000\" size=\"4\">目标：</font><font color=\"blue\" size=\"6\">美化博文</font>\n\n### 背景\n{% note success %}\n发布博客有段时间了，而且陆陆续续写了一些文章，但页面样式都比较简单，只是单一的MarkDown语法，难道是***Hexo + Next + MarkDown***只能写出简单样式的文章？有点不相信，于是去[Next官方](http://theme-next.iissnan.com/)。看了一些使用文档，查看了***<font color=\"#dd0000\" size=\"4\">内建标签</font>***，原来Next可以让简单样式的文章可以变得那么好看，总结了一下分享出来。\n{% endnote %}\n\n<!--more-->\n\n<hr />\n\n### 前言\nNext主题使用的***<font color=\"#dd0000\" size=\"5\">内置tag</font>***，官方都已经写好js，直接使用对应的语法糖加入到文章中，就可以实现多样式、多功能的效果。下面分别说明了一下本人博客Hexo+Next的版本，如果有加入对应tag没有效果的，可以留言给我，一起交流一起学习。\n\n<font color=\"#dd0000\" size=\"4\">Next主题内置tag样式都是本人经过实践得出，原创之作，欢迎大家进行转载。</font>\n\n### 版本介绍\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n\n***<font color=\"#dd0000\" size=\"4\">内置tag文件位置：blog/themes/next/scripts/tags。</font>***\n\n### Tags\n内置tags的js文件一共有12个，在这里我只讲解本人实践的tag。\n\n1. #### tabs\n> 功能\n\n    提供了一个tabs页样式标签，可以进行切换。\n\n    > 代码\n\n    ```\n    {% tabs t_code_1 %}\n    <!-- tab 标题一 -->\n    tab1\n    <!-- endtab -->\n    <!-- tab 标题二 -->\n    tab2\n    <!-- endtab -->\n    <!-- tab 标题三 -->\n    tab3\n    <!-- endtab -->\n    {% endtabs %}\n    ```\n    > 配置\n\n    打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***tabs***</font>，更改代码如下：\n    ```\n    # tabs相关配置\n    tabs:\n      enable: true\n      transition:\n        tabs: false\n        labels: true\n      border_radius: 5  # tab圆角设置\n    ```\n\n    > 示例\n\n    {% tabs t1 %}\n    <!-- tab 标题一 -->\n    tab1\n    <!-- endtab -->\n    <!-- tab 标题二 -->\n    tab2\n    <!-- endtab -->\n    <!-- tab 标题三 -->\n    tab3\n    <!-- endtab -->\n    {% endtabs %}\n\n    > 语法糖\n\n    - tabs-endtabs 是***tab tag***语法糖。\n    - tab-endtab 是tabs里一个完整的tab，多个tab只需要更换标题、内容即可。\n\n2. #### cq && centerquote\n> 功能\n\n    文本居中、引用样式。\n\n    > 代码\n\n    ```\n    {% cq %}\n    一个爱老婆的Python程序猿。。。。。。\n    **PyGo²**\n    {% endcq %}\n    ```\n\n    > 示例\n\n    {% cq %}\n    一个爱老婆的Python程序猿。。。。。。\n    **PyGo²**\n    {% endcq %}\n\n    > 语法糖\n\n    - cq-endcq 是***cq tag***语法糖。\n    - cq与centerquote等价。\n\n3. #### note\n> 功能\n\n    **内置note**标签。\n\n    > 代码\n\n    ```\n    {% note default %}\n    default 提示块标签\n    {% endnote %}\n\n    {% note primary %}\n    primary 提示块标签\n    {% endnote %}\n\n    {% note success %}\n    success 提示块标签\n    {% endnote %}\n\n    {% note info %}\n    info 提示块标签\n    {% endnote %}\n\n    {% note warning %}\n    warning 提示块标签\n    {% endnote %}\n\n    {% note danger %}\n    danger 提示块标签\n    {% endnote %}\n    ```\n    > 配置\n\n    打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***Note tag***</font>，更改代码如下：\n    ```\n    # note tag 相关配置\n    note:\n      style: flat\n      icons: true   # 是否启用图标\n      border_radius: 3  #圆角设置\n      light_bg_offset: 0     设置0为里面内容为note样式包含\n    ```\n\n    > 示例\n\n    {% note default %}\n    default\n    提示块标签\n    {% endnote %}\n\n    {% note primary %}\n    primary\n    提示块标签\n    {% endnote %}\n\n    > 语法糖\n\n    - note-endnote 是***cq tag***语法糖。\n    - 样式：default、primary、success、info、warning、danger，示例中我只展示了2种。\n\n4. #### label\n> 功能\n\n    **内置label**标签。\n\n    > 代码\n\n    ```\n    {% label default@default %}\n    {% label primary@primary %}\n    {% label success@success %}\n    {% label info@info %}\n    {% label warning@warning %}\n    {% label danger@danger %}\n    ```\n\n    > 示例\n\n    {% label default@default %}\n    {% label primary@primary %}\n    {% label success@success %}\n    {% label info@info %}\n    {% label warning@warning %}\n    {% label danger@danger %}\n\n    > 语法糖\n\n    - label 是***label tag***语法糖，不需要加endlabel标识结束。\n    - @符号前面是label样式。\n    - @符号后面是label内容。\n    - 说明label需要2个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/label.js\n    ```\n    args = args.join(' ').split('@');\n    var classes = args[0] || 'default';\n    var text    = args[1] || '';\n    ```\n\n5. #### button && btn\n> 功能\n\n    **内置button**标签。\n\n    > 代码\n\n    ```\n    {% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw %}\n    ```\n\n    > 示例\n\n    {% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw, 百度首页标题 %}\n\n    > 语法糖\n\n    - btn 是***btn tag***语法糖，不需要加endbtn标识结束。\n    - 这个标签需要4个参数: url地址、button文本内容、button icon、button title。\n    - 第四个参数我试了，没什么效果，有了解的小伙伴欢迎留言。\n    - 这个按钮的样式跟Next主题样式一致，因为按钮样式本人优化过，所以在示例中的button与Next默认样式不一致。\n    - 说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/button.js\n    ```\n    args = args.join(' ').split(',');\n    var url   = args[0];\n    var text  = args[1] || '';\n    var icon  = args[2] || '';\n    var title = args[3] || '';\n    ```\n    - btn与button等价。\n\n6. #### ~~exturl && extlink(过时，不建议使用)~~\n> 功能\n\n    外链街功能。\n\n    > 代码\n\n    ```\n    {% exturl https://www.baidu.com 百度首页 %}\n    ```\n\n    > 示例\n\n    {% exturl https://www.baidu.com 百度首页 %}\n\n    > 语法糖\n\n    - exturl 是***exturl tag***语法糖，不需要加endexturl标识结束。\n    - 看js文件，这个标签需要5个参数: url地址、url文本内容、urltitle、url item、0、结束位置，其中url文本内容是个列表。\n    - 说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/exturl.js\n    ```\n    var exturl = 'exturl';\n    var url    = '';\n    var text   = [];\n    var title  = '';\n    var item   = '';\n    var i      = 0;\n    var len    = args.length;\n    ```\n    - exturl与extlink等价。\n\n    {% note info %}\n    特殊说明\n    {% endnote %}\n    在md文档中写完此标签，怎么重启，刷新，发现外链都不管用，研究了好一会儿，我在这里就不买官司了，直接看解决方法：\n    - 打开Next主题的配置文件，搜索***exturl***\n    - 更改代码如下\n    ```\n    exturl: true\n    ```\n    - 重新启动服务 && 刷新。\n\n7. #### fi && fullimage\n> 功能\n\n    全像显示图片。\n\n    > 代码\n\n    ```\n    {% fi /images/article_wdyxxy.jpg %}\n    <img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"/>\n    ```\n\n    > 示例\n\n    {% fi /images/article_wdyxxy.jpg %}\n\n    > 语法糖\n\n    - fi 是***fullimage tag***语法糖，无对应的end结束。\n    - fi与fullimagee等价。\n    - 我试了几个发现这个***fi tag***与正常***imag**标签没什么区别，上面示例代码中给出了，效果图是一样的。\n\n8. #### gp && grouppicture\n> 功能\n\n    多格局显示图片。\n\n    {% note info %}\n    这里不做简述，请查看博文：hexo博文展示并排等多样式图片\n    {% endnote %}\n\n9. #### include_raw\n> 功能\n\n    引用html文件，是把部分html代码单独写在一个html文件里面，通过**tag**标签把文件引入的语法，需要可以看最下面的官方说明。\n\n10. #### pdf\n> 功能\n\n    通过**pdf tag**标签把pdf文件引入页面中。\n\n    > 代码\n\n    ```\n    {% pdf /images/PythonStudy.pdf %}\n    ```\n\n    > 配置\n\n    - 安装theme-next-pdf\n    ```\n    cd blog/themes/next\n    git clone https://github.com/theme-next/theme-next-pdf source/lib/pdf\n    ```\n    - 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***pdf***</font>，更改代码如下：\n    ```\n    # pdf相关配置\n    # See: https://github.com/theme-next/theme-next-pdf\n    pdf:\n      enable: true\n      height: 500px  # 设置默认高度\n      pdfobject:\n        cdn: //cdn.jsdelivr.net/npm/pdfobject@2/pdfobject.min.js\n    ```\n    - 新建目录，如果想要把文件单独存放一个目录，那么需要在blog/public目录下新建目录；如果不想新建，可以把文件放在blog/public/images目录下，这个目录是单独用来存放站点图片之用的目录。\n    - 在***pdf tag***，参数的路径写上上面新建的。\n\n    > 示例\n\n    {% pdf /publicfiles/PythonStudy.pdf %}\n\n    > 语法糖\n\n    - pdf 是***pdftag***语法糖，无对应的end结束。\n\n    {% note info %}\n    建议：\n        建议少用此标签，因为页面如果加载大文件会很慢。\n    {% endnote %}\n\n11. #### mermaid\n> 功能\n\n    用了好几个翻译都解释“美人鱼”，但是实现的效果类似于word、excel、ppt里面的架构图，通过**mermaid tag**标签把架构图引入页面中。\n\n    > 代码\n\n    ```\n    {% mermaid graph TD %}\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[Car]\n    {% endmermaid %}\n    ```\n\n    > 配置\n\n    - 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***mermaid***</font>，更改代码如下：\n    ```\n    # Mermaid tag\n    mermaid:\n      enable: true\n      # Available themes: default | dark | forest | neutral\n      theme: forest   # 主题\n      cdn: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js\n    ```\n    关于架构图的样式取决于theme参数，每个样式我都试了一下，还是forest最漂亮。\n\n    > 示例\n\n    {% mermaid graph TD %}\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me thinksssss<br/>ssssssssssssssssssssss}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[Car]\n    {% endmermaid %}\n\n    > 语法糖\n\n    - mermaid-endmermaid 是***mermaid tag***语法糖。\n    - 例子我就采用官方的例子了，没自己去写，官方有好几种写法、样式，需要的请查阅官方资料。\n\n12. #### video\n> 功能\n\n    html对视频的引用。\n\n    > 代码\n\n    ```\n    {% video url %}\n    {% video /publicfiles/xiao6.mp4 %}\n    ```\n\n    > 配置\n\n    - 我在blog/public目录下新建了publicfiles一个目录用来存放上面**pdf&&video**用到的文件。\n\n    > 示例\n\n    {% video /publicfiles/xiao6.mp4 %}\n\n    > 语法糖\n\n    - video 是***video tag***语法糖，无endvideo结束。\n    - 如果是引用视频，找到视频资源，直接写上url地址即可。\n\n{% note success %}\n已解决问题\n{% endnote %}\n\n开启服务运用的是debug模式，方便进行调试，在启用的时候，发现服务报了好多***WARNING***，总结下来方便大家解决问题。\n\n> `exturl` and `extlink` tag will not longer be supported.\n\n翻译出来就是将不再支持`exturl`和'extlink`的标记，在我的blog很少用到，用到的会用***button tag***进行代替。\n\n> Tabs block must have unique name!\n\n找到tabs-endtabs内置标签，在tabs后面加上tab一个名字，而且要***unique***。\n\n{% note warning %}\n未解决问题\n{% endnote %}\n\n在文章编写过程中遇到了一些问题，先记录下来，以后解决在来修改。\n- 在tab里面放\\`\\`\\`代码块\\`\\`\\`，不生效。\n- button与exturl共存在同一页面，并启动exturl配置，发现button样式没了，可能是我自己瞎改button造成的原因，问题解决中。\n\n### 学习\n\nNext中文官方：http://theme-next.iissnan.com/tag-plugins.html\nNext Tag官方：https://hexo.io/docs/tag-plugins.html\nbotton：https://theme-next.org/docs/tag-plugins/button/\nnote：https://theme-next.org/docs/tag-plugins/note/\ntabs：https://theme-next.org/docs/tag-plugins/tabs/\ncq：https://theme-next.org/docs/tag-plugins/\nlabel：https://theme-next.org/docs/tag-plugins/label/\nexturl：https://theme-next.org/docs/tag-plugins/exturl/\nfullimage：https://theme-next.org/docs/tag-plugins/full-image\ngroup-pictures：https://theme-next.org/docs/tag-plugins/group-pictures\npdf tag：https://theme-next.org/docs/tag-plugins/pdf\ntheme-next-pdf：https://github.com/theme-next/theme-next-pdf\nmermaid：https://theme-next.org/docs/tag-plugins/mermaid/\nvideo：https://theme-next.org/docs/tag-plugins/video\n\n### 结束语\n\n到这里，Next内置的tag都实践完毕，根据需要使用上述tags，给博文带来了不一样的视觉效果以及便利，欢迎大家转载，一起交流使用。\n\n***<font color=\"blue\" size=\"5\">最好的开始就是从现在开始！！！</font>***\n","slug":"Hexo-Next主题优化-内置tags篇","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38200g6tabjf8jfm0wm","content":"<font color=\"#dd0000\" size=\"4\">目标：</font><font color=\"blue\" size=\"6\">美化博文</font>\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>发布博客有段时间了，而且陆陆续续写了一些文章，但页面样式都比较简单，只是单一的MarkDown语法，难道是<strong><em>Hexo + Next + MarkDown</em></strong>只能写出简单样式的文章？有点不相信，于是去<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next官方</a>。看了一些使用文档，查看了<strong><em><font color=\"#dd0000\" size=\"4\">内建标签</font></em></strong>，原来Next可以让简单样式的文章可以变得那么好看，总结了一下分享出来。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Next主题使用的<strong><em><font color=\"#dd0000\" size=\"5\">内置tag</font></em></strong>，官方都已经写好js，直接使用对应的语法糖加入到文章中，就可以实现多样式、多功能的效果。下面分别说明了一下本人博客Hexo+Next的版本，如果有加入对应tag没有效果的，可以留言给我，一起交流一起学习。</p>\n<font color=\"#dd0000\" size=\"4\">Next主题内置tag样式都是本人经过实践得出，原创之作，欢迎大家进行转载。</font>\n\n<h3 id=\"版本介绍\"><a href=\"#版本介绍\" class=\"headerlink\" title=\"版本介绍\"></a>版本介绍</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em><font color=\"#dd0000\" size=\"4\">内置tag文件位置：blog/themes/next/scripts/tags。</font></em></strong></p>\n<h3 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h3><p>内置tags的js文件一共有12个，在这里我只讲解本人实践的tag。</p>\n<ol>\n<li><h4 id=\"tabs\"><a href=\"#tabs\" class=\"headerlink\" title=\"tabs\"></a>tabs</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 提供了一个tabs页样式标签，可以进行切换。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs t_code_1 %&#125;</span><br><span class=\"line\">&lt;!-- tab 标题一 --&gt;</span><br><span class=\"line\">tab1</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 标题二 --&gt;</span><br><span class=\"line\">tab2</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 标题三 --&gt;</span><br><span class=\"line\">tab3</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p> 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>tabs</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># tabs相关配置</span><br><span class=\"line\">tabs:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  transition:</span><br><span class=\"line\">    tabs: false</span><br><span class=\"line\">    labels: true</span><br><span class=\"line\">  border_radius: 5  # tab圆角设置</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <div class=\"tabs\" id=\"t1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#t1-1\">标题一</a></li><li class=\"tab\"><a href=\"#t1-2\">标题二</a></li><li class=\"tab\"><a href=\"#t1-3\">标题三</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"t1-1\"><p>tab1</p></div><div class=\"tab-pane\" id=\"t1-2\"><p>tab2</p></div><div class=\"tab-pane\" id=\"t1-3\"><p>tab3</p></div></div></div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>tabs-endtabs 是<strong><em>tab tag</em></strong>语法糖。</li>\n<li>tab-endtab 是tabs里一个完整的tab，多个tab只需要更换标题、内容即可。</li>\n</ul>\n</li>\n<li><h4 id=\"cq-amp-amp-centerquote\"><a href=\"#cq-amp-amp-centerquote\" class=\"headerlink\" title=\"cq &amp;&amp; centerquote\"></a>cq &amp;&amp; centerquote</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 文本居中、引用样式。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% cq %&#125;</span><br><span class=\"line\">一个爱老婆的Python程序猿。。。。。。</span><br><span class=\"line\">**PyGo²**</span><br><span class=\"line\">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <blockquote class=\"blockquote-center\"><p>一个爱老婆的Python程序猿。。。。。。<br><strong>PyGo²</strong></p>\n</blockquote>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>cq-endcq 是<strong><em>cq tag</em></strong>语法糖。</li>\n<li>cq与centerquote等价。</li>\n</ul>\n</li>\n<li><h4 id=\"note\"><a href=\"#note\" class=\"headerlink\" title=\"note\"></a>note</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置note</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default %&#125;</span><br><span class=\"line\">default 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note primary %&#125;</span><br><span class=\"line\">primary 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note success %&#125;</span><br><span class=\"line\">success 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note info %&#125;</span><br><span class=\"line\">info 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note warning %&#125;</span><br><span class=\"line\">warning 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note danger %&#125;</span><br><span class=\"line\">danger 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p> 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>Note tag</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># note tag 相关配置</span><br><span class=\"line\">note:</span><br><span class=\"line\">  style: flat</span><br><span class=\"line\">  icons: true   # 是否启用图标</span><br><span class=\"line\">  border_radius: 3  #圆角设置</span><br><span class=\"line\">  light_bg_offset: 0     设置0为里面内容为note样式包含</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <div class=\"note default\">\n            <p>default<br>提示块标签</p>\n          </div>\n <div class=\"note primary\">\n            <p>primary<br>提示块标签</p>\n          </div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>note-endnote 是<strong><em>cq tag</em></strong>语法糖。</li>\n<li>样式：default、primary、success、info、warning、danger，示例中我只展示了2种。</li>\n</ul>\n</li>\n<li><h4 id=\"label\"><a href=\"#label\" class=\"headerlink\" title=\"label\"></a>label</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置label</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% label default@default %&#125;</span><br><span class=\"line\">&#123;% label primary@primary %&#125;</span><br><span class=\"line\">&#123;% label success@success %&#125;</span><br><span class=\"line\">&#123;% label info@info %&#125;</span><br><span class=\"line\">&#123;% label warning@warning %&#125;</span><br><span class=\"line\">&#123;% label danger@danger %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span class=\"label default\">default</span>\n <span class=\"label primary\">primary</span>\n <span class=\"label success\">success</span>\n <span class=\"label info\">info</span>\n <span class=\"label warning\">warning</span>\n <span class=\"label danger\">danger</span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>label 是<strong><em>label tag</em></strong>语法糖，不需要加endlabel标识结束。</li>\n<li>@符号前面是label样式。</li>\n<li>@符号后面是label内容。</li>\n<li>说明label需要2个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/label.js<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">args = args.join(&apos; &apos;).split(&apos;@&apos;);</span><br><span class=\"line\">var classes = args[0] || &apos;default&apos;;</span><br><span class=\"line\">var text    = args[1] || &apos;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"button-amp-amp-btn\"><a href=\"#button-amp-amp-btn\" class=\"headerlink\" title=\"button &amp;&amp; btn\"></a>button &amp;&amp; btn</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置button</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <a class=\"btn\" href=\"https://www.baidu.com\" title=\"百度首页标题\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-download fa-lg fa-fw\"></i>百度首页</a>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>btn 是<strong><em>btn tag</em></strong>语法糖，不需要加endbtn标识结束。</li>\n<li>这个标签需要4个参数: url地址、button文本内容、button icon、button title。</li>\n<li>第四个参数我试了，没什么效果，有了解的小伙伴欢迎留言。</li>\n<li>这个按钮的样式跟Next主题样式一致，因为按钮样式本人优化过，所以在示例中的button与Next默认样式不一致。</li>\n<li><p>说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/button.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">args = args.join(&apos; &apos;).split(&apos;,&apos;);</span><br><span class=\"line\">var url   = args[0];</span><br><span class=\"line\">var text  = args[1] || &apos;&apos;;</span><br><span class=\"line\">var icon  = args[2] || &apos;&apos;;</span><br><span class=\"line\">var title = args[3] || &apos;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>btn与button等价。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"exturl-amp-amp-extlink-过时，不建议使用\"><a href=\"#exturl-amp-amp-extlink-过时，不建议使用\" class=\"headerlink\" title=\"exturl &amp;&amp; extlink(过时，不建议使用)\"></a><del>exturl &amp;&amp; extlink(过时，不建议使用)</del></h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 外链街功能。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% exturl https://www.baidu.com 百度首页 %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29t\" title=\"百度首页\"><i class=\"fa fa-external-link\"></i></span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>exturl 是<strong><em>exturl tag</em></strong>语法糖，不需要加endexturl标识结束。</li>\n<li>看js文件，这个标签需要5个参数: url地址、url文本内容、urltitle、url item、0、结束位置，其中url文本内容是个列表。</li>\n<li><p>说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/exturl.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var exturl = &apos;exturl&apos;;</span><br><span class=\"line\">var url    = &apos;&apos;;</span><br><span class=\"line\">var text   = [];</span><br><span class=\"line\">var title  = &apos;&apos;;</span><br><span class=\"line\">var item   = &apos;&apos;;</span><br><span class=\"line\">var i      = 0;</span><br><span class=\"line\">var len    = args.length;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>exturl与extlink等价。</p>\n<div class=\"note info\">\n            <p>特殊说明</p>\n          </div>\n<p>在md文档中写完此标签，怎么重启，刷新，发现外链都不管用，研究了好一会儿，我在这里就不买官司了，直接看解决方法：</p>\n</li>\n<li>打开Next主题的配置文件，搜索<strong><em>exturl</em></strong></li>\n<li><p>更改代码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exturl: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新启动服务 &amp;&amp; 刷新。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"fi-amp-amp-fullimage\"><a href=\"#fi-amp-amp-fullimage\" class=\"headerlink\" title=\"fi &amp;&amp; fullimage\"></a>fi &amp;&amp; fullimage</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 全像显示图片。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% fi /images/article_wdyxxy.jpg %&#125;</span><br><span class=\"line\">&lt;img src=&quot;next_youhua_avatar.gif&quot; style=&quot;border:1.5px solid blue&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span itemprop=\"image\" itemscope itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/images/article_wdyxxy.jpg\" class=\"full-image\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>fi 是<strong><em>fullimage tag</em></strong>语法糖，无对应的end结束。</li>\n<li>fi与fullimagee等价。</li>\n<li>我试了几个发现这个<strong><em>fi tag</em></strong>与正常<strong>*imag</strong>标签没什么区别，上面示例代码中给出了，效果图是一样的。</li>\n</ul>\n</li>\n<li><h4 id=\"gp-amp-amp-grouppicture\"><a href=\"#gp-amp-amp-grouppicture\" class=\"headerlink\" title=\"gp &amp;&amp; grouppicture\"></a>gp &amp;&amp; grouppicture</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 多格局显示图片。</p>\n <div class=\"note info\">\n            <p>这里不做简述，请查看博文：hexo博文展示并排等多样式图片</p>\n          </div>\n</li>\n<li><h4 id=\"include-raw\"><a href=\"#include-raw\" class=\"headerlink\" title=\"include_raw\"></a>include_raw</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 引用html文件，是把部分html代码单独写在一个html文件里面，通过<strong>tag</strong>标签把文件引入的语法，需要可以看最下面的官方说明。</p>\n</li>\n<li><h4 id=\"pdf\"><a href=\"#pdf\" class=\"headerlink\" title=\"pdf\"></a>pdf</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>通过<strong>pdf tag</strong>标签把pdf文件引入页面中。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% pdf /images/PythonStudy.pdf %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li><p>安装theme-next-pdf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd blog/themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-pdf source/lib/pdf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>pdf</em></strong></font>，更改代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># pdf相关配置</span><br><span class=\"line\"># See: https://github.com/theme-next/theme-next-pdf</span><br><span class=\"line\">pdf:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  height: 500px  # 设置默认高度</span><br><span class=\"line\">  pdfobject:</span><br><span class=\"line\">    cdn: //cdn.jsdelivr.net/npm/pdfobject@2/pdfobject.min.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建目录，如果想要把文件单独存放一个目录，那么需要在blog/public目录下新建目录；如果不想新建，可以把文件放在blog/public/images目录下，这个目录是单独用来存放站点图片之用的目录。</p>\n</li>\n<li>在<strong><em>pdf tag</em></strong>，参数的路径写上上面新建的。</li>\n</ul>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<div class=\"pdf\" target=\"/publicfiles/PythonStudy.pdf\" height></div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>pdf 是<strong><em>pdftag</em></strong>语法糖，无对应的end结束。</li>\n</ul>\n<div class=\"note info\">\n            <p>建议：<br>    建议少用此标签，因为页面如果加载大文件会很慢。</p>\n          </div>\n</li>\n<li><h4 id=\"mermaid\"><a href=\"#mermaid\" class=\"headerlink\" title=\"mermaid\"></a>mermaid</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>用了好几个翻译都解释“美人鱼”，但是实现的效果类似于word、excel、ppt里面的架构图，通过<strong>mermaid tag</strong>标签把架构图引入页面中。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid graph TD %&#125;</span><br><span class=\"line\">A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class=\"line\">B --&gt; C&#123;Let me thinksssss&lt;br/&gt;ssssssssssssssssssssss&#125;</span><br><span class=\"line\">C --&gt;|One| D[Laptop]</span><br><span class=\"line\">C --&gt;|Two| E[iPhone]</span><br><span class=\"line\">C --&gt;|Three| F[Car]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>mermaid</em></strong></font>，更改代码如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mermaid tag</span><br><span class=\"line\">mermaid:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Available themes: default | dark | forest | neutral</span><br><span class=\"line\">  theme: forest   # 主题</span><br><span class=\"line\">  cdn: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>关于架构图的样式取决于theme参数，每个样式我都试了一下，还是forest最漂亮。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph TD\n            A[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n          </pre>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>mermaid-endmermaid 是<strong><em>mermaid tag</em></strong>语法糖。</li>\n<li>例子我就采用官方的例子了，没自己去写，官方有好几种写法、样式，需要的请查阅官方资料。</li>\n</ul>\n</li>\n<li><h4 id=\"video\"><a href=\"#video\" class=\"headerlink\" title=\"video\"></a>video</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>html对视频的引用。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% video url %&#125;</span><br><span class=\"line\">&#123;% video /publicfiles/xiao6.mp4 %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>我在blog/public目录下新建了publicfiles一个目录用来存放上面<strong>pdf&amp;&amp;video</strong>用到的文件。</li>\n</ul>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<video src=\"/publicfiles/xiao6.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>video 是<strong><em>video tag</em></strong>语法糖，无endvideo结束。</li>\n<li>如果是引用视频，找到视频资源，直接写上url地址即可。</li>\n</ul>\n</li>\n</ol>\n<div class=\"note success\">\n            <p>已解决问题</p>\n          </div>\n<p>开启服务运用的是debug模式，方便进行调试，在启用的时候，发现服务报了好多<strong><em>WARNING</em></strong>，总结下来方便大家解决问题。</p>\n<blockquote>\n<p><code>exturl</code> and <code>extlink</code> tag will not longer be supported.</p>\n</blockquote>\n<p>翻译出来就是将不再支持<code>exturl</code>和’extlink`的标记，在我的blog很少用到，用到的会用<strong><em>button tag</em></strong>进行代替。</p>\n<blockquote>\n<p>Tabs block must have unique name!</p>\n</blockquote>\n<p>找到tabs-endtabs内置标签，在tabs后面加上tab一个名字，而且要<strong><em>unique</em></strong>。</p>\n<div class=\"note warning\">\n            <p>未解决问题</p>\n          </div>\n<p>在文章编写过程中遇到了一些问题，先记录下来，以后解决在来修改。</p>\n<ul>\n<li>在tab里面放```代码块```，不生效。</li>\n<li>button与exturl共存在同一页面，并启动exturl配置，发现button样式没了，可能是我自己瞎改button造成的原因，问题解决中。</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>Next中文官方：<a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/tag-plugins.html</a><br>Next Tag官方：<a href=\"https://hexo.io/docs/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/tag-plugins.html</a><br>botton：<a href=\"https://theme-next.org/docs/tag-plugins/button/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/button/</a><br>note：<a href=\"https://theme-next.org/docs/tag-plugins/note/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/note/</a><br>tabs：<a href=\"https://theme-next.org/docs/tag-plugins/tabs/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/tabs/</a><br>cq：<a href=\"https://theme-next.org/docs/tag-plugins/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/</a><br>label：<a href=\"https://theme-next.org/docs/tag-plugins/label/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/label/</a><br>exturl：<a href=\"https://theme-next.org/docs/tag-plugins/exturl/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/exturl/</a><br>fullimage：<a href=\"https://theme-next.org/docs/tag-plugins/full-image\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/full-image</a><br>group-pictures：<a href=\"https://theme-next.org/docs/tag-plugins/group-pictures\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/group-pictures</a><br>pdf tag：<a href=\"https://theme-next.org/docs/tag-plugins/pdf\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/pdf</a><br>theme-next-pdf：<a href=\"https://github.com/theme-next/theme-next-pdf\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-pdf</a><br>mermaid：<a href=\"https://theme-next.org/docs/tag-plugins/mermaid/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/mermaid/</a><br>video：<a href=\"https://theme-next.org/docs/tag-plugins/video\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/video</a></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>到这里，Next内置的tag都实践完毕，根据需要使用上述tags，给博文带来了不一样的视觉效果以及便利，欢迎大家转载，一起交流使用。</p>\n<p><strong><em><font color=\"blue\" size=\"5\">最好的开始就是从现在开始！！！</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<font color=\"#dd0000\" size=\"4\">目标：</font><font color=\"blue\" size=\"6\">美化博文</font>\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note success\">\n            <p>发布博客有段时间了，而且陆陆续续写了一些文章，但页面样式都比较简单，只是单一的MarkDown语法，难道是<strong><em>Hexo + Next + MarkDown</em></strong>只能写出简单样式的文章？有点不相信，于是去<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next官方</a>。看了一些使用文档，查看了<strong><em><font color=\"#dd0000\" size=\"4\">内建标签</font></em></strong>，原来Next可以让简单样式的文章可以变得那么好看，总结了一下分享出来。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Next主题使用的<strong><em><font color=\"#dd0000\" size=\"5\">内置tag</font></em></strong>，官方都已经写好js，直接使用对应的语法糖加入到文章中，就可以实现多样式、多功能的效果。下面分别说明了一下本人博客Hexo+Next的版本，如果有加入对应tag没有效果的，可以留言给我，一起交流一起学习。</p>\n<font color=\"#dd0000\" size=\"4\">Next主题内置tag样式都是本人经过实践得出，原创之作，欢迎大家进行转载。</font>\n\n<h3 id=\"版本介绍\"><a href=\"#版本介绍\" class=\"headerlink\" title=\"版本介绍\"></a>版本介绍</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em><font color=\"#dd0000\" size=\"4\">内置tag文件位置：blog/themes/next/scripts/tags。</font></em></strong></p>\n<h3 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h3><p>内置tags的js文件一共有12个，在这里我只讲解本人实践的tag。</p>\n<ol>\n<li><h4 id=\"tabs\"><a href=\"#tabs\" class=\"headerlink\" title=\"tabs\"></a>tabs</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 提供了一个tabs页样式标签，可以进行切换。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs t_code_1 %&#125;</span><br><span class=\"line\">&lt;!-- tab 标题一 --&gt;</span><br><span class=\"line\">tab1</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 标题二 --&gt;</span><br><span class=\"line\">tab2</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 标题三 --&gt;</span><br><span class=\"line\">tab3</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p> 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>tabs</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># tabs相关配置</span><br><span class=\"line\">tabs:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  transition:</span><br><span class=\"line\">    tabs: false</span><br><span class=\"line\">    labels: true</span><br><span class=\"line\">  border_radius: 5  # tab圆角设置</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <div class=\"tabs\" id=\"t1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#t1-1\">标题一</a></li><li class=\"tab\"><a href=\"#t1-2\">标题二</a></li><li class=\"tab\"><a href=\"#t1-3\">标题三</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"t1-1\"><p>tab1</p></div><div class=\"tab-pane\" id=\"t1-2\"><p>tab2</p></div><div class=\"tab-pane\" id=\"t1-3\"><p>tab3</p></div></div></div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>tabs-endtabs 是<strong><em>tab tag</em></strong>语法糖。</li>\n<li>tab-endtab 是tabs里一个完整的tab，多个tab只需要更换标题、内容即可。</li>\n</ul>\n</li>\n<li><h4 id=\"cq-amp-amp-centerquote\"><a href=\"#cq-amp-amp-centerquote\" class=\"headerlink\" title=\"cq &amp;&amp; centerquote\"></a>cq &amp;&amp; centerquote</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 文本居中、引用样式。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% cq %&#125;</span><br><span class=\"line\">一个爱老婆的Python程序猿。。。。。。</span><br><span class=\"line\">**PyGo²**</span><br><span class=\"line\">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <blockquote class=\"blockquote-center\"><p>一个爱老婆的Python程序猿。。。。。。<br><strong>PyGo²</strong></p>\n</blockquote>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>cq-endcq 是<strong><em>cq tag</em></strong>语法糖。</li>\n<li>cq与centerquote等价。</li>\n</ul>\n</li>\n<li><h4 id=\"note\"><a href=\"#note\" class=\"headerlink\" title=\"note\"></a>note</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置note</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note default %&#125;</span><br><span class=\"line\">default 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note primary %&#125;</span><br><span class=\"line\">primary 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note success %&#125;</span><br><span class=\"line\">success 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note info %&#125;</span><br><span class=\"line\">info 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note warning %&#125;</span><br><span class=\"line\">warning 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% note danger %&#125;</span><br><span class=\"line\">danger 提示块标签</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p> 打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>Note tag</em></strong></font>，更改代码如下：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># note tag 相关配置</span><br><span class=\"line\">note:</span><br><span class=\"line\">  style: flat</span><br><span class=\"line\">  icons: true   # 是否启用图标</span><br><span class=\"line\">  border_radius: 3  #圆角设置</span><br><span class=\"line\">  light_bg_offset: 0     设置0为里面内容为note样式包含</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <div class=\"note default\">\n            <p>default<br>提示块标签</p>\n          </div>\n <div class=\"note primary\">\n            <p>primary<br>提示块标签</p>\n          </div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>note-endnote 是<strong><em>cq tag</em></strong>语法糖。</li>\n<li>样式：default、primary、success、info、warning、danger，示例中我只展示了2种。</li>\n</ul>\n</li>\n<li><h4 id=\"label\"><a href=\"#label\" class=\"headerlink\" title=\"label\"></a>label</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置label</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% label default@default %&#125;</span><br><span class=\"line\">&#123;% label primary@primary %&#125;</span><br><span class=\"line\">&#123;% label success@success %&#125;</span><br><span class=\"line\">&#123;% label info@info %&#125;</span><br><span class=\"line\">&#123;% label warning@warning %&#125;</span><br><span class=\"line\">&#123;% label danger@danger %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span class=\"label default\">default</span>\n <span class=\"label primary\">primary</span>\n <span class=\"label success\">success</span>\n <span class=\"label info\">info</span>\n <span class=\"label warning\">warning</span>\n <span class=\"label danger\">danger</span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>label 是<strong><em>label tag</em></strong>语法糖，不需要加endlabel标识结束。</li>\n<li>@符号前面是label样式。</li>\n<li>@符号后面是label内容。</li>\n<li>说明label需要2个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/label.js<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">args = args.join(&apos; &apos;).split(&apos;@&apos;);</span><br><span class=\"line\">var classes = args[0] || &apos;default&apos;;</span><br><span class=\"line\">var text    = args[1] || &apos;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h4 id=\"button-amp-amp-btn\"><a href=\"#button-amp-amp-btn\" class=\"headerlink\" title=\"button &amp;&amp; btn\"></a>button &amp;&amp; btn</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> <strong>内置button</strong>标签。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% btn https://www.baidu.com, 百度首页, download fa-lg fa-fw %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <a class=\"btn\" href=\"https://www.baidu.com\" title=\"百度首页标题\" target=\"_blank\" rel=\"noopener\"><i class=\"fa fa-download fa-lg fa-fw\"></i>百度首页</a>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>btn 是<strong><em>btn tag</em></strong>语法糖，不需要加endbtn标识结束。</li>\n<li>这个标签需要4个参数: url地址、button文本内容、button icon、button title。</li>\n<li>第四个参数我试了，没什么效果，有了解的小伙伴欢迎留言。</li>\n<li>这个按钮的样式跟Next主题样式一致，因为按钮样式本人优化过，所以在示例中的button与Next默认样式不一致。</li>\n<li><p>说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/button.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">args = args.join(&apos; &apos;).split(&apos;,&apos;);</span><br><span class=\"line\">var url   = args[0];</span><br><span class=\"line\">var text  = args[1] || &apos;&apos;;</span><br><span class=\"line\">var icon  = args[2] || &apos;&apos;;</span><br><span class=\"line\">var title = args[3] || &apos;&apos;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>btn与button等价。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"exturl-amp-amp-extlink-过时，不建议使用\"><a href=\"#exturl-amp-amp-extlink-过时，不建议使用\" class=\"headerlink\" title=\"exturl &amp;&amp; extlink(过时，不建议使用)\"></a><del>exturl &amp;&amp; extlink(过时，不建议使用)</del></h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 外链街功能。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% exturl https://www.baidu.com 百度首页 %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmFpZHUuY29t\" title=\"百度首页\"><i class=\"fa fa-external-link\"></i></span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>exturl 是<strong><em>exturl tag</em></strong>语法糖，不需要加endexturl标识结束。</li>\n<li>看js文件，这个标签需要5个参数: url地址、url文本内容、urltitle、url item、0、结束位置，其中url文本内容是个列表。</li>\n<li><p>说明button需要4个参数，有兴趣的可以查看：blog/themes/next/scripts/tags/exturl.js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var exturl = &apos;exturl&apos;;</span><br><span class=\"line\">var url    = &apos;&apos;;</span><br><span class=\"line\">var text   = [];</span><br><span class=\"line\">var title  = &apos;&apos;;</span><br><span class=\"line\">var item   = &apos;&apos;;</span><br><span class=\"line\">var i      = 0;</span><br><span class=\"line\">var len    = args.length;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>exturl与extlink等价。</p>\n<div class=\"note info\">\n            <p>特殊说明</p>\n          </div>\n<p>在md文档中写完此标签，怎么重启，刷新，发现外链都不管用，研究了好一会儿，我在这里就不买官司了，直接看解决方法：</p>\n</li>\n<li>打开Next主题的配置文件，搜索<strong><em>exturl</em></strong></li>\n<li><p>更改代码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exturl: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新启动服务 &amp;&amp; 刷新。</p>\n</li>\n</ul>\n</li>\n<li><h4 id=\"fi-amp-amp-fullimage\"><a href=\"#fi-amp-amp-fullimage\" class=\"headerlink\" title=\"fi &amp;&amp; fullimage\"></a>fi &amp;&amp; fullimage</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 全像显示图片。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% fi /images/article_wdyxxy.jpg %&#125;</span><br><span class=\"line\">&lt;img src=&quot;next_youhua_avatar.gif&quot; style=&quot;border:1.5px solid blue&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>示例</p>\n</blockquote>\n <span itemprop=\"image\" itemscope itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/images/article_wdyxxy.jpg\" class=\"full-image\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>fi 是<strong><em>fullimage tag</em></strong>语法糖，无对应的end结束。</li>\n<li>fi与fullimagee等价。</li>\n<li>我试了几个发现这个<strong><em>fi tag</em></strong>与正常<strong>*imag</strong>标签没什么区别，上面示例代码中给出了，效果图是一样的。</li>\n</ul>\n</li>\n<li><h4 id=\"gp-amp-amp-grouppicture\"><a href=\"#gp-amp-amp-grouppicture\" class=\"headerlink\" title=\"gp &amp;&amp; grouppicture\"></a>gp &amp;&amp; grouppicture</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 多格局显示图片。</p>\n <div class=\"note info\">\n            <p>这里不做简述，请查看博文：hexo博文展示并排等多样式图片</p>\n          </div>\n</li>\n<li><h4 id=\"include-raw\"><a href=\"#include-raw\" class=\"headerlink\" title=\"include_raw\"></a>include_raw</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p> 引用html文件，是把部分html代码单独写在一个html文件里面，通过<strong>tag</strong>标签把文件引入的语法，需要可以看最下面的官方说明。</p>\n</li>\n<li><h4 id=\"pdf\"><a href=\"#pdf\" class=\"headerlink\" title=\"pdf\"></a>pdf</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>通过<strong>pdf tag</strong>标签把pdf文件引入页面中。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% pdf /images/PythonStudy.pdf %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li><p>安装theme-next-pdf</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd blog/themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-pdf source/lib/pdf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>pdf</em></strong></font>，更改代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># pdf相关配置</span><br><span class=\"line\"># See: https://github.com/theme-next/theme-next-pdf</span><br><span class=\"line\">pdf:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  height: 500px  # 设置默认高度</span><br><span class=\"line\">  pdfobject:</span><br><span class=\"line\">    cdn: //cdn.jsdelivr.net/npm/pdfobject@2/pdfobject.min.js</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建目录，如果想要把文件单独存放一个目录，那么需要在blog/public目录下新建目录；如果不想新建，可以把文件放在blog/public/images目录下，这个目录是单独用来存放站点图片之用的目录。</p>\n</li>\n<li>在<strong><em>pdf tag</em></strong>，参数的路径写上上面新建的。</li>\n</ul>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<div class=\"pdf\" target=\"/publicfiles/PythonStudy.pdf\" height></div>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>pdf 是<strong><em>pdftag</em></strong>语法糖，无对应的end结束。</li>\n</ul>\n<div class=\"note info\">\n            <p>建议：<br>    建议少用此标签，因为页面如果加载大文件会很慢。</p>\n          </div>\n</li>\n<li><h4 id=\"mermaid\"><a href=\"#mermaid\" class=\"headerlink\" title=\"mermaid\"></a>mermaid</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>用了好几个翻译都解释“美人鱼”，但是实现的效果类似于word、excel、ppt里面的架构图，通过<strong>mermaid tag</strong>标签把架构图引入页面中。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid graph TD %&#125;</span><br><span class=\"line\">A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class=\"line\">B --&gt; C&#123;Let me thinksssss&lt;br/&gt;ssssssssssssssssssssss&#125;</span><br><span class=\"line\">C --&gt;|One| D[Laptop]</span><br><span class=\"line\">C --&gt;|Two| E[iPhone]</span><br><span class=\"line\">C --&gt;|Three| F[Car]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>打开Next配置文件：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>mermaid</em></strong></font>，更改代码如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Mermaid tag</span><br><span class=\"line\">mermaid:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Available themes: default | dark | forest | neutral</span><br><span class=\"line\">  theme: forest   # 主题</span><br><span class=\"line\">  cdn: //cdn.jsdelivr.net/npm/mermaid@8/dist/mermaid.min.js</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>关于架构图的样式取决于theme参数，每个样式我都试了一下，还是forest最漂亮。</p>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<pre class=\"mermaid\" style=\"text-align: center;\">\n            graph TD\n            A[Christmas] -->|Get money| B(Go shopping)\nB --> C{Let me thinksssss<br>ssssssssssssssssssssss}\nC -->|One| D[Laptop]\nC -->|Two| E[iPhone]\nC -->|Three| F[Car]\n          </pre>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>mermaid-endmermaid 是<strong><em>mermaid tag</em></strong>语法糖。</li>\n<li>例子我就采用官方的例子了，没自己去写，官方有好几种写法、样式，需要的请查阅官方资料。</li>\n</ul>\n</li>\n<li><h4 id=\"video\"><a href=\"#video\" class=\"headerlink\" title=\"video\"></a>video</h4><blockquote>\n<p>功能</p>\n</blockquote>\n<p>html对视频的引用。</p>\n<blockquote>\n<p>代码</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% video url %&#125;</span><br><span class=\"line\">&#123;% video /publicfiles/xiao6.mp4 %&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<ul>\n<li>我在blog/public目录下新建了publicfiles一个目录用来存放上面<strong>pdf&amp;&amp;video</strong>用到的文件。</li>\n</ul>\n<blockquote>\n<p>示例</p>\n</blockquote>\n<video src=\"/publicfiles/xiao6.mp4\" preload=\"metadata\" controls playsinline poster>Sorry, your browser does not support the video tag.</video>\n<blockquote>\n<p>语法糖</p>\n</blockquote>\n<ul>\n<li>video 是<strong><em>video tag</em></strong>语法糖，无endvideo结束。</li>\n<li>如果是引用视频，找到视频资源，直接写上url地址即可。</li>\n</ul>\n</li>\n</ol>\n<div class=\"note success\">\n            <p>已解决问题</p>\n          </div>\n<p>开启服务运用的是debug模式，方便进行调试，在启用的时候，发现服务报了好多<strong><em>WARNING</em></strong>，总结下来方便大家解决问题。</p>\n<blockquote>\n<p><code>exturl</code> and <code>extlink</code> tag will not longer be supported.</p>\n</blockquote>\n<p>翻译出来就是将不再支持<code>exturl</code>和’extlink`的标记，在我的blog很少用到，用到的会用<strong><em>button tag</em></strong>进行代替。</p>\n<blockquote>\n<p>Tabs block must have unique name!</p>\n</blockquote>\n<p>找到tabs-endtabs内置标签，在tabs后面加上tab一个名字，而且要<strong><em>unique</em></strong>。</p>\n<div class=\"note warning\">\n            <p>未解决问题</p>\n          </div>\n<p>在文章编写过程中遇到了一些问题，先记录下来，以后解决在来修改。</p>\n<ul>\n<li>在tab里面放```代码块```，不生效。</li>\n<li>button与exturl共存在同一页面，并启动exturl配置，发现button样式没了，可能是我自己瞎改button造成的原因，问题解决中。</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>Next中文官方：<a href=\"http://theme-next.iissnan.com/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/tag-plugins.html</a><br>Next Tag官方：<a href=\"https://hexo.io/docs/tag-plugins.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/tag-plugins.html</a><br>botton：<a href=\"https://theme-next.org/docs/tag-plugins/button/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/button/</a><br>note：<a href=\"https://theme-next.org/docs/tag-plugins/note/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/note/</a><br>tabs：<a href=\"https://theme-next.org/docs/tag-plugins/tabs/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/tabs/</a><br>cq：<a href=\"https://theme-next.org/docs/tag-plugins/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/</a><br>label：<a href=\"https://theme-next.org/docs/tag-plugins/label/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/label/</a><br>exturl：<a href=\"https://theme-next.org/docs/tag-plugins/exturl/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/exturl/</a><br>fullimage：<a href=\"https://theme-next.org/docs/tag-plugins/full-image\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/full-image</a><br>group-pictures：<a href=\"https://theme-next.org/docs/tag-plugins/group-pictures\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/group-pictures</a><br>pdf tag：<a href=\"https://theme-next.org/docs/tag-plugins/pdf\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/pdf</a><br>theme-next-pdf：<a href=\"https://github.com/theme-next/theme-next-pdf\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-pdf</a><br>mermaid：<a href=\"https://theme-next.org/docs/tag-plugins/mermaid/\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/mermaid/</a><br>video：<a href=\"https://theme-next.org/docs/tag-plugins/video\" target=\"_blank\" rel=\"noopener\">https://theme-next.org/docs/tag-plugins/video</a></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>到这里，Next内置的tag都实践完毕，根据需要使用上述tags，给博文带来了不一样的视觉效果以及便利，欢迎大家转载，一起交流使用。</p>\n<p><strong><em><font color=\"blue\" size=\"5\">最好的开始就是从现在开始！！！</font></em></strong></p>"},{"title":"Hexo+Next搜索优化（二）博客优化","comments":0,"top":false,"desc":"关于博客SEO优化系列的教程，本篇关于blog内在的优化","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, seo, google, 搜索, baidu","abbrlink":62177,"date":"2019-03-17T11:44:22.000Z","updated":"2019-08-17T11:44:22.000Z","_content":"\n### 背景\n{% note primary %}\n前几天写了一篇关于博客在google搜索引擎上的优化，发现通过***gis90 + 标题***，还是可以搜出来的，但是直接通过标题去🔍搜索，还是搜不到什么东西，还得继续优化啊。\n{%  endnote %}\n\n![](/images/article_seo_blog.jpg)\n\n<!--more-->\n<hr />\n\n上网继续查资料，整理到一起。\n\n### 正文\n\n本文总结了主要从文章的关键字、url、配置等方面进行优化，提高搜索度。\n\n> #### 关键字\n\n打开每一篇博客，增加***keywords、desc***，增加文章的搜索匹配，代码如下：\n```\n---\ntitle: Hexo+Next搜索优化（二）博客优化\ncomments: false\ncategories:\n  - [seo优化]\n  - [Hexo]\ntags: [Hexo, seo优化]\ntop: false\ndate: 2019-04-27 19:44:22\nupdated: 2019-04-27 19:44:22\ndesc: Hexo+Next搜索优化（二）博客优化\nkeywords: hexo, seo, google, 搜索\n---\n```\n{% note info %}\n<font size=\"4\">**附加**</font>\n- 可以打开**blog/scaffolds/post.md**文件，修改代码如下，一劳永逸。\n\n{% code %}\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncomments: false\ncategories:\n  - []\ntags: []\nkeywords:\ntop: false\n---\n{% endcode %}\n- 不要用***description***，会报错，可能是版本问题，我用的是***Hexo（v3.8.0）+ Next（v7.0.1）***。\n{% endnote%}\n\n> #### URL\n\n打开Hexo的配置文件：**blog/_config.yml**，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改代码如下：\n```\n# permalink: :year/:month/:day/:title/\npermalink: :category/:title/\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n不更新配置之前，文章的默认链接一个四级url，形式是**:year/:month/:day/:title/**，而且title会导致url过长，用**:category/:title/**代替原配置，url的资源只有2级，对于搜索引擎会更加有好一些。\n{% endnote%}\n\n> #### Hexo配置\n\n打开Hexo的配置文件：**blog/_config.yml**，搜索<font size=\"4\" color=\"red\">***subtitle***</font>，补全站点的基本信息配置。\n```\ntitle:  #标题\nsubtitle:  #子标题\ndescription: #描述\nurl: #url\n```\n> #### Next配置\n\n打开Next的配置文件：**blog/themes/next/_config.yml**，搜索<font size=\"4\" color=\"red\">***SEO Settings***</font>，更改配置如下：\n```\ncanonical: true\nseo: true\nindex_with_subtitle: false\nbaidu_push: true\n```\n具体的对应什么含义，自行查看配置文件解释。\n{% note info %}\n特别说明：index_with_subtitle\n在站点index所有页，是否显示Hexo站点设置的副标题，我觉得没什么作用，还影响样式，这个在我的配置中设置了false\n{% endnote %}\n\n> #### 首页标题优化Title\n\n打开Next的指定文件：**blog/themes/next/layout/index.swig**，更改如下：\n```\n{% block title %} {{ config.title }} {% endblock %}\n```\n改成\n```\n{% block title %} {{ config.title }} - {{ config.keywords }} - {{ config.description }} {% endblock %}\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n首页将文章的关键字、以及描述，增大搜索字的匹配率，这个只针对于首页，记住是首页、首页、首页。\n{% endnote%}\n\n> #### 每篇博文title、keywords、desc\n\n打开Next的指定文件：**blog/themes/next/layout/_partials/head/head.swig**，添加一下如下：\n```\n<!-- title、keywords、desc关键字 -->\n{% if page.title %}\n  <title>{{ page.title }}</title>\n  <meta name=\"title\" content=\"{{ page.title }}\" />\n{% endif %}\n{% if page.keywords %}\n  <meta name=\"keywords\" content=\"{{ page.keywords }}\" />\n{% elif page.tags and page.tags.length %}\n  <meta name=\"keywords\" content=\"{% for tag in page.tags %}{{ tag.name }},{% endfor %}\" />\n{% elif theme.keywords %}\n  <meta name=\"keywords\" content=\"{{ theme.keywords }}\" />\n{% endif %}\n{% if page.desc %}\n  <meta name=\"description\" content=\"{{ page.desc }}\" />\n{% endif %}\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n将增加每篇博文设置的title、keywords、desc，SEO优化重点之一，增大搜索字的匹配率。\n{% endnote%}\n\n> #### 添加robot.txt\n\n在blog/public目录新建一个文件robot.txt，进行配置一下内容：\n```\nUser-agent: *\nAllow: /\nAllow: /articles/\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /messagepad/\nAllow: /resources/\nAllow: /about/\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://gis90.github.io/sitemap.xml\nSitemap: https://gis90.github.io/baidusitemap.xml\n```\n\n写上你常用的遍历url、以及sitemap地址。\n\n> #### 图片压缩\n\n在博客中关于使用的图片，几乎都进行压缩处理，我使用的是在线压缩：https://www.yasuotu.com/。\n\n> #### 文件压缩\n\n使用***gulp***进行文件压缩，本人是搞后端的，参考别人seo优化的时候，也是看了一下***glup***的用法，记住：<font size=5.5 color='blue'>glup用来处理静态资源的一个工具。</font>\n\n下面介绍一下具体的实现方法：\n- 安装glue\n```\nnpm install gulp@3.9.1 -g\nnpm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save\nnpm install gulp-concat\nnpm install gulp-imagemin\n```\n- 在blog文件夹下创建gulpfile.js，加入一下代码：\n```\nvar gulp = require('gulp');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n\n// 压缩html\ngulp.task('minify-html', function() {\n    return gulp.src('./public/article/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public'))\n});\n// 压缩css\ngulp.task('minify-css', function() {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss({\n            compatibility: 'ie8'\n        }))\n        .pipe(gulp.dest('./public'));\n});\n// 压缩js\ngulp.task('minify-js', function() {\n    return gulp.src(['./public/js/**/.js','!./public/js/**/*min.js'])\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n});\n// 压缩图片\ngulp.task('minify-images', function() {\n    return gulp.src('./public/images/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}),\n        imagemin.jpegtran({'progressive': true}),\n        imagemin.optipng({'optimizationLevel': 7}),\n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public/images'))\n});\n// 默认任务\ngulp.task('default', [\n    'minify-html','minify-css','minify-js','minify-images'\n]);\n```\n- 运行命令\n```\nglue\n```\n在控制台会看见压缩的过程，整个压缩过程在图片压缩处理起来有点慢，耐心等待。\n\n### 学习\n\n在优化过程中，参考了一些人的博客以及官方文档，感谢各位大神。\n\n参考一：https://github.com/theme-next/hexo-theme-next/issues/866\n参考二：https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/\n参考三：https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html\n参考四：http://www.ehcoo.com/seo.html\nglup：https://www.jianshu.com/p/87a773a81dbd\n\n{% note info %}\n<font size=\"4\">**疑问**</font>\n- 针对于Next主题的配置文件选项：**index_with_subtitle**，配置文件的解释： If true, will add site-subtitle to index page, added in main hexo config。\n如果文章没有subtitle，那么这个配置是不是就无用了。\n{% endnote%}\n\n### 拓展\n\n看了几个人的博客发现在改Title方面参数不一致，也搞不懂应该参考哪个，于是自己把参数每个试了一次，参数如下：\n```\n{{ title }}\n{{ keywords }}\n{{ desc }}\n{{ description }}\n\n{{ theme.keywords }}    # 可用\n{{ config.title }}  # 可用\n{{ theme.description }} # 可用\n```\n很简单，其实就是把这些参数写在一个博文md文件里面，在生成的html页面有哪些是有值的，这是我的测试方法，结果可想而知，如有不对，欢迎留言进行交流。\n","source":"_posts/Hexo-Next搜索优化（二）博客优化.md","raw":"---\ntitle: Hexo+Next搜索优化（二）博客优化\ncomments: false\ncategories:\n  - [seo优化]\n  - [Hexo]\ntags: [Hexo, seo优化]\ntop: false\ndesc: 关于博客SEO优化系列的教程，本篇关于blog内在的优化\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, seo, google, 搜索, baidu\nabbrlink: 62177\ndate: 2019-03-17 19:44:22\nupdated: 2019-08-17 19:44:22\n---\n\n### 背景\n{% note primary %}\n前几天写了一篇关于博客在google搜索引擎上的优化，发现通过***gis90 + 标题***，还是可以搜出来的，但是直接通过标题去🔍搜索，还是搜不到什么东西，还得继续优化啊。\n{%  endnote %}\n\n![](/images/article_seo_blog.jpg)\n\n<!--more-->\n<hr />\n\n上网继续查资料，整理到一起。\n\n### 正文\n\n本文总结了主要从文章的关键字、url、配置等方面进行优化，提高搜索度。\n\n> #### 关键字\n\n打开每一篇博客，增加***keywords、desc***，增加文章的搜索匹配，代码如下：\n```\n---\ntitle: Hexo+Next搜索优化（二）博客优化\ncomments: false\ncategories:\n  - [seo优化]\n  - [Hexo]\ntags: [Hexo, seo优化]\ntop: false\ndate: 2019-04-27 19:44:22\nupdated: 2019-04-27 19:44:22\ndesc: Hexo+Next搜索优化（二）博客优化\nkeywords: hexo, seo, google, 搜索\n---\n```\n{% note info %}\n<font size=\"4\">**附加**</font>\n- 可以打开**blog/scaffolds/post.md**文件，修改代码如下，一劳永逸。\n\n{% code %}\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncomments: false\ncategories:\n  - []\ntags: []\nkeywords:\ntop: false\n---\n{% endcode %}\n- 不要用***description***，会报错，可能是版本问题，我用的是***Hexo（v3.8.0）+ Next（v7.0.1）***。\n{% endnote%}\n\n> #### URL\n\n打开Hexo的配置文件：**blog/_config.yml**，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改代码如下：\n```\n# permalink: :year/:month/:day/:title/\npermalink: :category/:title/\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n不更新配置之前，文章的默认链接一个四级url，形式是**:year/:month/:day/:title/**，而且title会导致url过长，用**:category/:title/**代替原配置，url的资源只有2级，对于搜索引擎会更加有好一些。\n{% endnote%}\n\n> #### Hexo配置\n\n打开Hexo的配置文件：**blog/_config.yml**，搜索<font size=\"4\" color=\"red\">***subtitle***</font>，补全站点的基本信息配置。\n```\ntitle:  #标题\nsubtitle:  #子标题\ndescription: #描述\nurl: #url\n```\n> #### Next配置\n\n打开Next的配置文件：**blog/themes/next/_config.yml**，搜索<font size=\"4\" color=\"red\">***SEO Settings***</font>，更改配置如下：\n```\ncanonical: true\nseo: true\nindex_with_subtitle: false\nbaidu_push: true\n```\n具体的对应什么含义，自行查看配置文件解释。\n{% note info %}\n特别说明：index_with_subtitle\n在站点index所有页，是否显示Hexo站点设置的副标题，我觉得没什么作用，还影响样式，这个在我的配置中设置了false\n{% endnote %}\n\n> #### 首页标题优化Title\n\n打开Next的指定文件：**blog/themes/next/layout/index.swig**，更改如下：\n```\n{% block title %} {{ config.title }} {% endblock %}\n```\n改成\n```\n{% block title %} {{ config.title }} - {{ config.keywords }} - {{ config.description }} {% endblock %}\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n首页将文章的关键字、以及描述，增大搜索字的匹配率，这个只针对于首页，记住是首页、首页、首页。\n{% endnote%}\n\n> #### 每篇博文title、keywords、desc\n\n打开Next的指定文件：**blog/themes/next/layout/_partials/head/head.swig**，添加一下如下：\n```\n<!-- title、keywords、desc关键字 -->\n{% if page.title %}\n  <title>{{ page.title }}</title>\n  <meta name=\"title\" content=\"{{ page.title }}\" />\n{% endif %}\n{% if page.keywords %}\n  <meta name=\"keywords\" content=\"{{ page.keywords }}\" />\n{% elif page.tags and page.tags.length %}\n  <meta name=\"keywords\" content=\"{% for tag in page.tags %}{{ tag.name }},{% endfor %}\" />\n{% elif theme.keywords %}\n  <meta name=\"keywords\" content=\"{{ theme.keywords }}\" />\n{% endif %}\n{% if page.desc %}\n  <meta name=\"description\" content=\"{{ page.desc }}\" />\n{% endif %}\n```\n{% note info %}\n<font size=\"4\">**解释**</font>\n将增加每篇博文设置的title、keywords、desc，SEO优化重点之一，增大搜索字的匹配率。\n{% endnote%}\n\n> #### 添加robot.txt\n\n在blog/public目录新建一个文件robot.txt，进行配置一下内容：\n```\nUser-agent: *\nAllow: /\nAllow: /articles/\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/\nAllow: /messagepad/\nAllow: /resources/\nAllow: /about/\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://gis90.github.io/sitemap.xml\nSitemap: https://gis90.github.io/baidusitemap.xml\n```\n\n写上你常用的遍历url、以及sitemap地址。\n\n> #### 图片压缩\n\n在博客中关于使用的图片，几乎都进行压缩处理，我使用的是在线压缩：https://www.yasuotu.com/。\n\n> #### 文件压缩\n\n使用***gulp***进行文件压缩，本人是搞后端的，参考别人seo优化的时候，也是看了一下***glup***的用法，记住：<font size=5.5 color='blue'>glup用来处理静态资源的一个工具。</font>\n\n下面介绍一下具体的实现方法：\n- 安装glue\n```\nnpm install gulp@3.9.1 -g\nnpm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save\nnpm install gulp-concat\nnpm install gulp-imagemin\n```\n- 在blog文件夹下创建gulpfile.js，加入一下代码：\n```\nvar gulp = require('gulp');\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n\n// 压缩html\ngulp.task('minify-html', function() {\n    return gulp.src('./public/article/**/*.html')\n        .pipe(htmlclean())\n        .pipe(htmlmin({\n            removeComments: true,\n            minifyJS: true,\n            minifyCSS: true,\n            minifyURLs: true,\n        }))\n        .pipe(gulp.dest('./public'))\n});\n// 压缩css\ngulp.task('minify-css', function() {\n    return gulp.src('./public/**/*.css')\n        .pipe(minifycss({\n            compatibility: 'ie8'\n        }))\n        .pipe(gulp.dest('./public'));\n});\n// 压缩js\ngulp.task('minify-js', function() {\n    return gulp.src(['./public/js/**/.js','!./public/js/**/*min.js'])\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n});\n// 压缩图片\ngulp.task('minify-images', function() {\n    return gulp.src('./public/images/*.*')\n        .pipe(imagemin(\n        [imagemin.gifsicle({'optimizationLevel': 3}),\n        imagemin.jpegtran({'progressive': true}),\n        imagemin.optipng({'optimizationLevel': 7}),\n        imagemin.svgo()],\n        {'verbose': true}))\n        .pipe(gulp.dest('./public/images'))\n});\n// 默认任务\ngulp.task('default', [\n    'minify-html','minify-css','minify-js','minify-images'\n]);\n```\n- 运行命令\n```\nglue\n```\n在控制台会看见压缩的过程，整个压缩过程在图片压缩处理起来有点慢，耐心等待。\n\n### 学习\n\n在优化过程中，参考了一些人的博客以及官方文档，感谢各位大神。\n\n参考一：https://github.com/theme-next/hexo-theme-next/issues/866\n参考二：https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/\n参考三：https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html\n参考四：http://www.ehcoo.com/seo.html\nglup：https://www.jianshu.com/p/87a773a81dbd\n\n{% note info %}\n<font size=\"4\">**疑问**</font>\n- 针对于Next主题的配置文件选项：**index_with_subtitle**，配置文件的解释： If true, will add site-subtitle to index page, added in main hexo config。\n如果文章没有subtitle，那么这个配置是不是就无用了。\n{% endnote%}\n\n### 拓展\n\n看了几个人的博客发现在改Title方面参数不一致，也搞不懂应该参考哪个，于是自己把参数每个试了一次，参数如下：\n```\n{{ title }}\n{{ keywords }}\n{{ desc }}\n{{ description }}\n\n{{ theme.keywords }}    # 可用\n{{ config.title }}  # 可用\n{{ theme.description }} # 可用\n```\n很简单，其实就是把这些参数写在一个博文md文件里面，在生成的html页面有哪些是有值的，这是我的测试方法，结果可想而知，如有不对，欢迎留言进行交流。\n","slug":"Hexo-Next搜索优化（二）博客优化","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38400g8tabj303raoe5","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>前几天写了一篇关于博客在google搜索引擎上的优化，发现通过<strong><em>gis90 + 标题</em></strong>，还是可以搜出来的，但是直接通过标题去🔍搜索，还是搜不到什么东西，还得继续优化啊。</p>\n          </div>\n<p><img src=\"/images/article_seo_blog.jpg\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<p>上网继续查资料，整理到一起。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文总结了主要从文章的关键字、url、配置等方面进行优化，提高搜索度。</p>\n<blockquote>\n<h4 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h4></blockquote>\n<p>打开每一篇博客，增加<strong><em>keywords、desc</em></strong>，增加文章的搜索匹配，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [seo优化]</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo, seo优化]</span><br><span class=\"line\">top: false</span><br><span class=\"line\">date: 2019-04-27 19:44:22</span><br><span class=\"line\">updated: 2019-04-27 19:44:22</span><br><span class=\"line\">desc: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">keywords: hexo, seo, google, 搜索</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>附加</strong></font></p><ul><li>可以打开<strong>blog/scaffolds/post.md</strong>文件，修改代码如下，一劳永逸。</li></ul><p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">—</span><br><span class=\"line\">title: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: 1552823062000</span><br><span class=\"line\">updated: 1552823062000</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - []</span><br><span class=\"line\">tags: []</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">top: false</span><br><span class=\"line\">—</span><br></pre></td></tr></table></figure></p><ul><li>不要用<strong><em>description</em></strong>，会报错，可能是版本问题，我用的是<strong><em>Hexo（v3.8.0）+ Next（v7.0.1）</em></strong>。</li></ul>\n          </div>\n<blockquote>\n<h4 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h4></blockquote>\n<p>打开Hexo的配置文件：<strong>blog/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink: :category/:title/</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>不更新配置之前，文章的默认链接一个四级url，形式是<strong>:year/:month/:day/:title/</strong>，而且title会导致url过长，用<strong>:category/:title/</strong>代替原配置，url的资源只有2级，对于搜索引擎会更加有好一些。</p>\n          </div>\n<blockquote>\n<h4 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h4></blockquote>\n<p>打开Hexo的配置文件：<strong>blog/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>subtitle</em></strong></font>，补全站点的基本信息配置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title:  #标题</span><br><span class=\"line\">subtitle:  #子标题</span><br><span class=\"line\">description: #描述</span><br><span class=\"line\">url: #url</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<h4 id=\"Next配置\"><a href=\"#Next配置\" class=\"headerlink\" title=\"Next配置\"></a>Next配置</h4></blockquote>\n<p>打开Next的配置文件：<strong>blog/themes/next/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>SEO Settings</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canonical: true</span><br><span class=\"line\">seo: true</span><br><span class=\"line\">index_with_subtitle: false</span><br><span class=\"line\">baidu_push: true</span><br></pre></td></tr></table></figure></p>\n<p>具体的对应什么含义，自行查看配置文件解释。<br><div class=\"note info\">\n            <p>特别说明：index_with_subtitle<br>在站点index所有页，是否显示Hexo站点设置的副标题，我觉得没什么作用，还影响样式，这个在我的配置中设置了false</p>\n          </div></p>\n<blockquote>\n<h4 id=\"首页标题优化Title\"><a href=\"#首页标题优化Title\" class=\"headerlink\" title=\"首页标题优化Title\"></a>首页标题优化Title</h4></blockquote>\n<p>打开Next的指定文件：<strong>blog/themes/next/layout/index.swig</strong>，更改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>改成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; config.keywords &#125;&#125; - &#123;&#123; config.description &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>首页将文章的关键字、以及描述，增大搜索字的匹配率，这个只针对于首页，记住是首页、首页、首页。</p>\n          </div>\n<blockquote>\n<h4 id=\"每篇博文title、keywords、desc\"><a href=\"#每篇博文title、keywords、desc\" class=\"headerlink\" title=\"每篇博文title、keywords、desc\"></a>每篇博文title、keywords、desc</h4></blockquote>\n<p>打开Next的指定文件：<strong>blog/themes/next/layout/_partials/head/head.swig</strong>，添加一下如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- title、keywords、desc关键字 --&gt;</span><br><span class=\"line\">&#123;% if page.title %&#125;</span><br><span class=\"line\">  &lt;title&gt;&#123;&#123; page.title &#125;&#125;&lt;/title&gt;</span><br><span class=\"line\">  &lt;meta name=&quot;title&quot; content=&quot;&#123;&#123; page.title &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% if page.keywords %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; page.keywords &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% elif page.tags and page.tags.length %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;% for tag in page.tags %&#125;&#123;&#123; tag.name &#125;&#125;,&#123;% endfor %&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% elif theme.keywords %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; theme.keywords &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% if page.desc %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;description&quot; content=&quot;&#123;&#123; page.desc &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>将增加每篇博文设置的title、keywords、desc，SEO优化重点之一，增大搜索字的匹配率。</p>\n          </div>\n<blockquote>\n<h4 id=\"添加robot-txt\"><a href=\"#添加robot-txt\" class=\"headerlink\" title=\"添加robot.txt\"></a>添加robot.txt</h4></blockquote>\n<p>在blog/public目录新建一个文件robot.txt，进行配置一下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /articles/</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: https://gis90.github.io/sitemap.xml</span><br><span class=\"line\">Sitemap: https://gis90.github.io/baidusitemap.xml</span><br></pre></td></tr></table></figure></p>\n<p>写上你常用的遍历url、以及sitemap地址。</p>\n<blockquote>\n<h4 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h4></blockquote>\n<p>在博客中关于使用的图片，几乎都进行压缩处理，我使用的是在线压缩：<a href=\"https://www.yasuotu.com/。\" target=\"_blank\" rel=\"noopener\">https://www.yasuotu.com/。</a></p>\n<blockquote>\n<h4 id=\"文件压缩\"><a href=\"#文件压缩\" class=\"headerlink\" title=\"文件压缩\"></a>文件压缩</h4></blockquote>\n<p>使用<strong><em>gulp</em></strong>进行文件压缩，本人是搞后端的，参考别人seo优化的时候，也是看了一下<strong><em>glup</em></strong>的用法，记住：<font size=\"5.5\" color=\"blue\">glup用来处理静态资源的一个工具。</font></p>\n<p>下面介绍一下具体的实现方法：</p>\n<ul>\n<li><p>安装glue</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp@3.9.1 -g</span><br><span class=\"line\">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br><span class=\"line\">npm install gulp-concat</span><br><span class=\"line\">npm install gulp-imagemin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在blog文件夹下创建gulpfile.js，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var gulp = require(&apos;gulp&apos;);</span><br><span class=\"line\">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class=\"line\">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class=\"line\">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class=\"line\">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class=\"line\">var imagemin = require(&apos;gulp-imagemin&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 压缩html</span><br><span class=\"line\">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/article/**/*.html&apos;)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: true,</span><br><span class=\"line\">            minifyJS: true,</span><br><span class=\"line\">            minifyCSS: true,</span><br><span class=\"line\">            minifyURLs: true,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩css</span><br><span class=\"line\">gulp.task(&apos;minify-css&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class=\"line\">        .pipe(minifycss(&#123;</span><br><span class=\"line\">            compatibility: &apos;ie8&apos;</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩js</span><br><span class=\"line\">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src([&apos;./public/js/**/.js&apos;,&apos;!./public/js/**/*min.js&apos;])</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩图片</span><br><span class=\"line\">gulp.task(&apos;minify-images&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/images/*.*&apos;)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;&apos;optimizationLevel&apos;: 3&#125;),</span><br><span class=\"line\">        imagemin.jpegtran(&#123;&apos;progressive&apos;: true&#125;),</span><br><span class=\"line\">        imagemin.optipng(&#123;&apos;optimizationLevel&apos;: 7&#125;),</span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;&apos;verbose&apos;: true&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public/images&apos;))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 默认任务</span><br><span class=\"line\">gulp.task(&apos;default&apos;, [</span><br><span class=\"line\">    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;,&apos;minify-images&apos;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glue</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在控制台会看见压缩的过程，整个压缩过程在图片压缩处理起来有点慢，耐心等待。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>在优化过程中，参考了一些人的博客以及官方文档，感谢各位大神。</p>\n<p>参考一：<a href=\"https://github.com/theme-next/hexo-theme-next/issues/866\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-theme-next/issues/866</a><br>参考二：<a href=\"https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/\" target=\"_blank\" rel=\"noopener\">https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/</a><br>参考三：<a href=\"https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html</a><br>参考四：<a href=\"http://www.ehcoo.com/seo.html\" target=\"_blank\" rel=\"noopener\">http://www.ehcoo.com/seo.html</a><br>glup：<a href=\"https://www.jianshu.com/p/87a773a81dbd\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/87a773a81dbd</a></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>疑问</strong></font></p><ul><li>针对于Next主题的配置文件选项：<strong>index_with_subtitle</strong>，配置文件的解释： If true, will add site-subtitle to index page, added in main hexo config。<br>如果文章没有subtitle，那么这个配置是不是就无用了。</li></ul>\n          </div>\n<h3 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h3><p>看了几个人的博客发现在改Title方面参数不一致，也搞不懂应该参考哪个，于是自己把参数每个试了一次，参数如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; title &#125;&#125;</span><br><span class=\"line\">&#123;&#123; keywords &#125;&#125;</span><br><span class=\"line\">&#123;&#123; desc &#125;&#125;</span><br><span class=\"line\">&#123;&#123; description &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123; theme.keywords &#125;&#125;    # 可用</span><br><span class=\"line\">&#123;&#123; config.title &#125;&#125;  # 可用</span><br><span class=\"line\">&#123;&#123; theme.description &#125;&#125; # 可用</span><br></pre></td></tr></table></figure></p>\n<p>很简单，其实就是把这些参数写在一个博文md文件里面，在生成的html页面有哪些是有值的，这是我的测试方法，结果可想而知，如有不对，欢迎留言进行交流。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>前几天写了一篇关于博客在google搜索引擎上的优化，发现通过<strong><em>gis90 + 标题</em></strong>，还是可以搜出来的，但是直接通过标题去🔍搜索，还是搜不到什么东西，还得继续优化啊。</p>\n          </div>\n<p><img src=\"/images/article_seo_blog.jpg\" alt></p>","more":"<hr>\n\n<p>上网继续查资料，整理到一起。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>本文总结了主要从文章的关键字、url、配置等方面进行优化，提高搜索度。</p>\n<blockquote>\n<h4 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h4></blockquote>\n<p>打开每一篇博客，增加<strong><em>keywords、desc</em></strong>，增加文章的搜索匹配，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [seo优化]</span><br><span class=\"line\">  - [Hexo]</span><br><span class=\"line\">tags: [Hexo, seo优化]</span><br><span class=\"line\">top: false</span><br><span class=\"line\">date: 2019-04-27 19:44:22</span><br><span class=\"line\">updated: 2019-04-27 19:44:22</span><br><span class=\"line\">desc: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">keywords: hexo, seo, google, 搜索</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>附加</strong></font></p><ul><li>可以打开<strong>blog/scaffolds/post.md</strong>文件，修改代码如下，一劳永逸。</li></ul><p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">—</span><br><span class=\"line\">title: Hexo+Next搜索优化（二）博客优化</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: 1552823062000</span><br><span class=\"line\">updated: 1552823062000</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - []</span><br><span class=\"line\">tags: []</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">top: false</span><br><span class=\"line\">—</span><br></pre></td></tr></table></figure></p><ul><li>不要用<strong><em>description</em></strong>，会报错，可能是版本问题，我用的是<strong><em>Hexo（v3.8.0）+ Next（v7.0.1）</em></strong>。</li></ul>\n          </div>\n<blockquote>\n<h4 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h4></blockquote>\n<p>打开Hexo的配置文件：<strong>blog/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink: :category/:title/</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>不更新配置之前，文章的默认链接一个四级url，形式是<strong>:year/:month/:day/:title/</strong>，而且title会导致url过长，用<strong>:category/:title/</strong>代替原配置，url的资源只有2级，对于搜索引擎会更加有好一些。</p>\n          </div>\n<blockquote>\n<h4 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h4></blockquote>\n<p>打开Hexo的配置文件：<strong>blog/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>subtitle</em></strong></font>，补全站点的基本信息配置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title:  #标题</span><br><span class=\"line\">subtitle:  #子标题</span><br><span class=\"line\">description: #描述</span><br><span class=\"line\">url: #url</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<h4 id=\"Next配置\"><a href=\"#Next配置\" class=\"headerlink\" title=\"Next配置\"></a>Next配置</h4></blockquote>\n<p>打开Next的配置文件：<strong>blog/themes/next/_config.yml</strong>，搜索<font size=\"4\" color=\"red\"><strong><em>SEO Settings</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canonical: true</span><br><span class=\"line\">seo: true</span><br><span class=\"line\">index_with_subtitle: false</span><br><span class=\"line\">baidu_push: true</span><br></pre></td></tr></table></figure></p>\n<p>具体的对应什么含义，自行查看配置文件解释。<br><div class=\"note info\">\n            <p>特别说明：index_with_subtitle<br>在站点index所有页，是否显示Hexo站点设置的副标题，我觉得没什么作用，还影响样式，这个在我的配置中设置了false</p>\n          </div></p>\n<blockquote>\n<h4 id=\"首页标题优化Title\"><a href=\"#首页标题优化Title\" class=\"headerlink\" title=\"首页标题优化Title\"></a>首页标题优化Title</h4></blockquote>\n<p>打开Next的指定文件：<strong>blog/themes/next/layout/index.swig</strong>，更改如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>改成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; config.keywords &#125;&#125; - &#123;&#123; config.description &#125;&#125; &#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>首页将文章的关键字、以及描述，增大搜索字的匹配率，这个只针对于首页，记住是首页、首页、首页。</p>\n          </div>\n<blockquote>\n<h4 id=\"每篇博文title、keywords、desc\"><a href=\"#每篇博文title、keywords、desc\" class=\"headerlink\" title=\"每篇博文title、keywords、desc\"></a>每篇博文title、keywords、desc</h4></blockquote>\n<p>打开Next的指定文件：<strong>blog/themes/next/layout/_partials/head/head.swig</strong>，添加一下如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- title、keywords、desc关键字 --&gt;</span><br><span class=\"line\">&#123;% if page.title %&#125;</span><br><span class=\"line\">  &lt;title&gt;&#123;&#123; page.title &#125;&#125;&lt;/title&gt;</span><br><span class=\"line\">  &lt;meta name=&quot;title&quot; content=&quot;&#123;&#123; page.title &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% if page.keywords %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; page.keywords &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% elif page.tags and page.tags.length %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;% for tag in page.tags %&#125;&#123;&#123; tag.name &#125;&#125;,&#123;% endfor %&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% elif theme.keywords %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; theme.keywords &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\">&#123;% if page.desc %&#125;</span><br><span class=\"line\">  &lt;meta name=&quot;description&quot; content=&quot;&#123;&#123; page.desc &#125;&#125;&quot; /&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>解释</strong></font><br>将增加每篇博文设置的title、keywords、desc，SEO优化重点之一，增大搜索字的匹配率。</p>\n          </div>\n<blockquote>\n<h4 id=\"添加robot-txt\"><a href=\"#添加robot-txt\" class=\"headerlink\" title=\"添加robot.txt\"></a>添加robot.txt</h4></blockquote>\n<p>在blog/public目录新建一个文件robot.txt，进行配置一下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Allow: /</span><br><span class=\"line\">Allow: /articles/</span><br><span class=\"line\">Allow: /archives/</span><br><span class=\"line\">Allow: /categories/</span><br><span class=\"line\">Allow: /tags/</span><br><span class=\"line\">Allow: /messagepad/</span><br><span class=\"line\">Allow: /resources/</span><br><span class=\"line\">Allow: /about/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /js/</span><br><span class=\"line\">Disallow: /css/</span><br><span class=\"line\">Disallow: /fonts/</span><br><span class=\"line\">Disallow: /vendors/</span><br><span class=\"line\">Disallow: /fancybox/</span><br><span class=\"line\"></span><br><span class=\"line\">Sitemap: https://gis90.github.io/sitemap.xml</span><br><span class=\"line\">Sitemap: https://gis90.github.io/baidusitemap.xml</span><br></pre></td></tr></table></figure></p>\n<p>写上你常用的遍历url、以及sitemap地址。</p>\n<blockquote>\n<h4 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h4></blockquote>\n<p>在博客中关于使用的图片，几乎都进行压缩处理，我使用的是在线压缩：<a href=\"https://www.yasuotu.com/。\" target=\"_blank\" rel=\"noopener\">https://www.yasuotu.com/。</a></p>\n<blockquote>\n<h4 id=\"文件压缩\"><a href=\"#文件压缩\" class=\"headerlink\" title=\"文件压缩\"></a>文件压缩</h4></blockquote>\n<p>使用<strong><em>gulp</em></strong>进行文件压缩，本人是搞后端的，参考别人seo优化的时候，也是看了一下<strong><em>glup</em></strong>的用法，记住：<font size=\"5.5\" color=\"blue\">glup用来处理静态资源的一个工具。</font></p>\n<p>下面介绍一下具体的实现方法：</p>\n<ul>\n<li><p>安装glue</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp@3.9.1 -g</span><br><span class=\"line\">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br><span class=\"line\">npm install gulp-concat</span><br><span class=\"line\">npm install gulp-imagemin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在blog文件夹下创建gulpfile.js，加入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var gulp = require(&apos;gulp&apos;);</span><br><span class=\"line\">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class=\"line\">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class=\"line\">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class=\"line\">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class=\"line\">var imagemin = require(&apos;gulp-imagemin&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 压缩html</span><br><span class=\"line\">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/article/**/*.html&apos;)</span><br><span class=\"line\">        .pipe(htmlclean())</span><br><span class=\"line\">        .pipe(htmlmin(&#123;</span><br><span class=\"line\">            removeComments: true,</span><br><span class=\"line\">            minifyJS: true,</span><br><span class=\"line\">            minifyCSS: true,</span><br><span class=\"line\">            minifyURLs: true,</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩css</span><br><span class=\"line\">gulp.task(&apos;minify-css&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class=\"line\">        .pipe(minifycss(&#123;</span><br><span class=\"line\">            compatibility: &apos;ie8&apos;</span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩js</span><br><span class=\"line\">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src([&apos;./public/js/**/.js&apos;,&apos;!./public/js/**/*min.js&apos;])</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 压缩图片</span><br><span class=\"line\">gulp.task(&apos;minify-images&apos;, function() &#123;</span><br><span class=\"line\">    return gulp.src(&apos;./public/images/*.*&apos;)</span><br><span class=\"line\">        .pipe(imagemin(</span><br><span class=\"line\">        [imagemin.gifsicle(&#123;&apos;optimizationLevel&apos;: 3&#125;),</span><br><span class=\"line\">        imagemin.jpegtran(&#123;&apos;progressive&apos;: true&#125;),</span><br><span class=\"line\">        imagemin.optipng(&#123;&apos;optimizationLevel&apos;: 7&#125;),</span><br><span class=\"line\">        imagemin.svgo()],</span><br><span class=\"line\">        &#123;&apos;verbose&apos;: true&#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(&apos;./public/images&apos;))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 默认任务</span><br><span class=\"line\">gulp.task(&apos;default&apos;, [</span><br><span class=\"line\">    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;,&apos;minify-images&apos;</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glue</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在控制台会看见压缩的过程，整个压缩过程在图片压缩处理起来有点慢，耐心等待。</p>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>在优化过程中，参考了一些人的博客以及官方文档，感谢各位大神。</p>\n<p>参考一：<a href=\"https://github.com/theme-next/hexo-theme-next/issues/866\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-theme-next/issues/866</a><br>参考二：<a href=\"https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/\" target=\"_blank\" rel=\"noopener\">https://hjptriplebee.github.io/hexo%E7%9A%84SEO%E6%96%B9%E6%B3%95.html/</a><br>参考三：<a href=\"https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">https://www.greateman.top/Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96.html</a><br>参考四：<a href=\"http://www.ehcoo.com/seo.html\" target=\"_blank\" rel=\"noopener\">http://www.ehcoo.com/seo.html</a><br>glup：<a href=\"https://www.jianshu.com/p/87a773a81dbd\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/87a773a81dbd</a></p>\n<div class=\"note info\">\n            <p><font size=\"4\"><strong>疑问</strong></font></p><ul><li>针对于Next主题的配置文件选项：<strong>index_with_subtitle</strong>，配置文件的解释： If true, will add site-subtitle to index page, added in main hexo config。<br>如果文章没有subtitle，那么这个配置是不是就无用了。</li></ul>\n          </div>\n<h3 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h3><p>看了几个人的博客发现在改Title方面参数不一致，也搞不懂应该参考哪个，于是自己把参数每个试了一次，参数如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; title &#125;&#125;</span><br><span class=\"line\">&#123;&#123; keywords &#125;&#125;</span><br><span class=\"line\">&#123;&#123; desc &#125;&#125;</span><br><span class=\"line\">&#123;&#123; description &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123; theme.keywords &#125;&#125;    # 可用</span><br><span class=\"line\">&#123;&#123; config.title &#125;&#125;  # 可用</span><br><span class=\"line\">&#123;&#123; theme.description &#125;&#125; # 可用</span><br></pre></td></tr></table></figure></p>\n<p>很简单，其实就是把这些参数写在一个博文md文件里面，在生成的html页面有哪些是有值的，这是我的测试方法，结果可想而知，如有不对，欢迎留言进行交流。</p>"},{"title":"Linux学习之增强篇-lsof","comments":0,"top":false,"abbrlink":35042,"date":"2019-12-06T01:53:46.000Z","updated":"2019-12-09T01:53:46.000Z","desc":"记录Linux命令学习基础篇之lsof","keywords":"linux, lsof, 服务器, 命令, 端口, 文件, 进程, shell, bash","_content":"\n#### 简介\n{% note danger %}\nLinux万能命令之lsof，<font size=6.5 color='red'>只有你想不到的，没有踏做不到</font>。\n![](/images/article_lsof.jpg)\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n#### 基本介绍\n\nlsof = list opened files，大致的意思就是列举系统中被打开的文件。玩linux的人都知道：“linux万物皆文件”，目录、sockets文件、字符设备、块设备、管道符等等。所以在linux系统之内，不管干什么都会跟文件挂上边，lsof是打开这些被使用文件列表的一个工具。不过，在平常，我用的最多就是查端口以及文件被哪个进程使用，命令非常强大。\n\n#### 文件类型\n\n在关于lsof能进行查看的文件类型，做了一下分类统计，结果如下：\n\n- 普通文件（.txt、.log等等）\n- 目录\n- 网络文件系统的文件\n- 字符或设备文件\n- (函数)共享库（lib文件目录下的，.so等）\n- 管道、命名管道（.pip等）\n- 符号链接（软链）\n- 网络文件（socket相关文件，.sock）\n\n应该还有其他的文件，本人刚入linux系统，不足的地方请各路神山补充，欢迎留言👏👏👏。\n\n#### 安装\n\nlsof命令是linux系统非自带的一个命令。\n\n> 检查是否已安装\n\n{% code %}\n方式一：\nlsof\n\n方式二：\nwhich lsof\n{% endcode %}\n\n出现***-bash: lsof: command not found ***，说明命令还没被安装，如果命令已存在，忽略安装步骤。\n\n> 安装\n\n{% code %}\n[root@localhost ~]# yum install lsof\nLoaded plugins: fastestmirror\nbase                                                                                | 3.6 kB  00:00:00\nextras                                                                              | 3.4 kB  00:00:00\nupdates                                                                             | 3.4 kB  00:00:00\nextras/7/x86_64/primary_db                                                          | 200 kB  00:00:00\nLoading mirror speeds from cached hostfile\n * base: mirrors.tuna.tsinghua.edu.cn\n * extras: mirrors.tuna.tsinghua.edu.cn\n * updates: mirrors.tuna.tsinghua.edu.cn\nResolving Dependencies\n--> Running transaction check\n---> Package lsof.x86_64 0:4.87-6.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n===========================================================================================================\n Package                Arch                     Version                      Repository              Size\n===========================================================================================================\nInstalling:\n lsof                   x86_64                   4.87-6.el7                   base                   331 k\n\nTransaction Summary\n===========================================================================================================\nInstall  1 Package\n\nTotal download size: 331 k\nInstalled size: 927 k\nIs this ok [y/d/N]: y\nDownloading packages:\nlsof-4.87-6.el7.x86_64.rpm                                                          | 331 kB  00:00:00\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : lsof-4.87-6.el7.x86_64                                                                  1/1\n  Verifying  : lsof-4.87-6.el7.x86_64                                                                  1/1\n\nInstalled:\n  lsof.x86_64 0:4.87-6.el7\n\nComplete!\n\n{% endcode %}\n\n整个安装过程问题不大，大大小小的lsof安装已经也装过10几次了，重没发生过意外，有问题的话可以邮件、微信联系我，一起来进行解决。\n\n#### 输出内容\n\n这个先简单介绍一下lsof输出信息的内容，具体格式如图：\n\n![](lsof_fields.png)\n\n> COMMAND\n\ncommand，进程的名称\n\n> PID\n\nprocess id，进程标识符id\n\n> TID\n\nthread id，线程标识符id\n\n> USER\n\nuser，进程所属用户\n\n> FD\n\nfile description，文件描述符，应用程序可以通过文件描述符识别该文件，一般有以下取值：\n- cwd：current work dirctory，应用程序启动的目录\n- txt：program text (code and data)，该类型的文件是程序代码，如应用程序二进制文件本身或共享库\n- lnn：library references (AIX)\n- er：FD information error (see NAME column)\n- jld：jail directory (FreeBSD)\n- ltx：shared library text (code and data)\n- mxx：hex memory-mapped type number xx\n- m86：DOS Merge mapped file\n- mem：memory-mapped file\n- mmap：memory-mapped device\n- pd：parent directory\n- rtd：root directory\n- tr：kernel trace file (OpenBSD)\n- v86：VP/ix mapped file\n- 0：表示标准输出\n- 1：表示标准输入\n- 2：表示标准错误\n\n> TYPE\n\ntype，文件类型，常见的文件类型有以下几种：\n- DIR：表示目录\n- CHR：表示字符类型\n- BLK：块设备类型\n- UNIX：UNIX域套接字\n- FIFO：先进先出(FIFO)队列\n- IPv4：网际协议(IP)套接字\n\n> DEVICE\n\ndevice，指定磁盘的名称\n\n> SIZE/OFF\n\nsize，文件的大小\n\n> NODE\n\nnode，索引节点，在这里啰嗦几句，磁盘存储机制，来个比喻吧：每个磁盘是一个大房子，大房子里面有多个小房子用来存储东西，但是呢每个小房子都有自己的房间号1、2、3、4、5、6......就这样一直排，我们把需要存储的数据放在小房子里面，一个不够就两个、两个不够就三个、以此类推，但是有个记录表需要记录刚存储的数据所对应的房间号，这样物流存储与房间号就对应起来了，所谓的房间号就是现在看的NODE节点，NODE节点就是文件在磁盘上的标识。\n\n> NAME\n\nname，打开文件的确切名称\n\n#### 参数详解\n\nlsof参数有太多太多，这里不一一列举，只讲解一下常用的参数，如果有想深入了解的，请<font size=5.5 color='red'>man lsof</font>。\n\n> -a\n\n列出打开文件存在的进程\n\n> -c <进程名>\n\n列出指定名称进程所使用到的文件\n\n> -d <文件>\n\n列出打开指定文件描述的进程\n\n> +d <目录>\n\n列出目录下被打开的文件\n\n> +D <目录>\n\n递归列出目录下被打开的文件\n\n> -n <目录>\n\n列出使用NFS的文件\n\n> -u <用户名>\n\n列出指定用户打开的文件\n\n> -p <进程id>\n\n列出指定进程号所打开的文件\n\n> -i <条件>\n\n列出打开的套接字，过滤条件：tcp、udp、4、6、协议、:端口、 @ip\n\n#### 常用命令\n\n> 查看端口\n\n```\nlsof -i :80\n```\n\n![](lsof_port.png)\n\n列出80端口目前打开的文件列表。\n\n> 查看连接\n\n```\n# 所有网络连接信息\nlsof -i\n\n# TCP网络连接信息\nlsof -i tcp\n\n# UDP网络连接信息\nlsof -i udp\n\n# TCP连接方式、端口为8080的连接信息\nlsof -i tcp:8080\n\n# UDP连接方式、端口为8080的连接信息\nlsof -i udp:8080\n```\n\n![](lsof_i.png)\n\n> 指定进程名称\n\n```\nlsof -c ngin\n```\n\n![](lsof_c.png)\n\n列出以ngin开头的进程打开的文件列表。\n\n> 指定进程id\n\n```\nlsof -p 3215\n```\n\n![](lsof_c_id.png)\n\n列出指定进程打开的文件列表。\n\n> 指定用户\n\n```\nlsof -u root\n```\n\n![](lsof_user.png)\n\n列出指定用户打开的文件列表。\n\n> 查看指定目录被打开的文件（目录非遍历）\n\n```\nlsof +d /usr/local/\n```\n\n![](lsof_dd.png)\n\n列出目录下被进程打开的文件列表。\n\n> 查看指定目录被打开的文件（目录遍历）\n\n```\nlsof +D /usr/local/\n```\n\n![](lsof_D.png)\n\n遍历搜索的方式列出目录下被进程打开的文件列表。\n\n#### 结束语\n\n本篇先写到这里吧，以上是我常用的命令以及参数说明，各种参数可以一起使用，如果不能满足大家的需求请见谅，毕竟本人是linux小白一枚，<font size=6.5 color='blue'>在不断尝试中去学习、去进步、去成长、去积累吧</font>，敬自己。\n\n#### 学习参考\n\nlsof简书：https://www.jianshu.com/p/be0c534c6a41\n每日一命令lsof：https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html\n\n感谢上面的2篇文章。\n","source":"_posts/Linux-学习之增强篇-lsof.md","raw":"---\ntitle: Linux学习之增强篇-lsof\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux增强篇]\ntop: false\nabbrlink: 35042\ndate: 2019-12-06 09:53:46\nupdated: 2019-12-09 09:53:46\ndesc: 记录Linux命令学习基础篇之lsof\nkeywords: linux, lsof, 服务器, 命令, 端口, 文件, 进程, shell, bash\n---\n\n#### 简介\n{% note danger %}\nLinux万能命令之lsof，<font size=6.5 color='red'>只有你想不到的，没有踏做不到</font>。\n![](/images/article_lsof.jpg)\n{% endnote %}\n\n<!--more-->\n<hr />\n\n#### 推荐指数\n```\n🌟🌟🌟🌟🌟\n```\n\n#### 基本介绍\n\nlsof = list opened files，大致的意思就是列举系统中被打开的文件。玩linux的人都知道：“linux万物皆文件”，目录、sockets文件、字符设备、块设备、管道符等等。所以在linux系统之内，不管干什么都会跟文件挂上边，lsof是打开这些被使用文件列表的一个工具。不过，在平常，我用的最多就是查端口以及文件被哪个进程使用，命令非常强大。\n\n#### 文件类型\n\n在关于lsof能进行查看的文件类型，做了一下分类统计，结果如下：\n\n- 普通文件（.txt、.log等等）\n- 目录\n- 网络文件系统的文件\n- 字符或设备文件\n- (函数)共享库（lib文件目录下的，.so等）\n- 管道、命名管道（.pip等）\n- 符号链接（软链）\n- 网络文件（socket相关文件，.sock）\n\n应该还有其他的文件，本人刚入linux系统，不足的地方请各路神山补充，欢迎留言👏👏👏。\n\n#### 安装\n\nlsof命令是linux系统非自带的一个命令。\n\n> 检查是否已安装\n\n{% code %}\n方式一：\nlsof\n\n方式二：\nwhich lsof\n{% endcode %}\n\n出现***-bash: lsof: command not found ***，说明命令还没被安装，如果命令已存在，忽略安装步骤。\n\n> 安装\n\n{% code %}\n[root@localhost ~]# yum install lsof\nLoaded plugins: fastestmirror\nbase                                                                                | 3.6 kB  00:00:00\nextras                                                                              | 3.4 kB  00:00:00\nupdates                                                                             | 3.4 kB  00:00:00\nextras/7/x86_64/primary_db                                                          | 200 kB  00:00:00\nLoading mirror speeds from cached hostfile\n * base: mirrors.tuna.tsinghua.edu.cn\n * extras: mirrors.tuna.tsinghua.edu.cn\n * updates: mirrors.tuna.tsinghua.edu.cn\nResolving Dependencies\n--> Running transaction check\n---> Package lsof.x86_64 0:4.87-6.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n===========================================================================================================\n Package                Arch                     Version                      Repository              Size\n===========================================================================================================\nInstalling:\n lsof                   x86_64                   4.87-6.el7                   base                   331 k\n\nTransaction Summary\n===========================================================================================================\nInstall  1 Package\n\nTotal download size: 331 k\nInstalled size: 927 k\nIs this ok [y/d/N]: y\nDownloading packages:\nlsof-4.87-6.el7.x86_64.rpm                                                          | 331 kB  00:00:00\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : lsof-4.87-6.el7.x86_64                                                                  1/1\n  Verifying  : lsof-4.87-6.el7.x86_64                                                                  1/1\n\nInstalled:\n  lsof.x86_64 0:4.87-6.el7\n\nComplete!\n\n{% endcode %}\n\n整个安装过程问题不大，大大小小的lsof安装已经也装过10几次了，重没发生过意外，有问题的话可以邮件、微信联系我，一起来进行解决。\n\n#### 输出内容\n\n这个先简单介绍一下lsof输出信息的内容，具体格式如图：\n\n![](lsof_fields.png)\n\n> COMMAND\n\ncommand，进程的名称\n\n> PID\n\nprocess id，进程标识符id\n\n> TID\n\nthread id，线程标识符id\n\n> USER\n\nuser，进程所属用户\n\n> FD\n\nfile description，文件描述符，应用程序可以通过文件描述符识别该文件，一般有以下取值：\n- cwd：current work dirctory，应用程序启动的目录\n- txt：program text (code and data)，该类型的文件是程序代码，如应用程序二进制文件本身或共享库\n- lnn：library references (AIX)\n- er：FD information error (see NAME column)\n- jld：jail directory (FreeBSD)\n- ltx：shared library text (code and data)\n- mxx：hex memory-mapped type number xx\n- m86：DOS Merge mapped file\n- mem：memory-mapped file\n- mmap：memory-mapped device\n- pd：parent directory\n- rtd：root directory\n- tr：kernel trace file (OpenBSD)\n- v86：VP/ix mapped file\n- 0：表示标准输出\n- 1：表示标准输入\n- 2：表示标准错误\n\n> TYPE\n\ntype，文件类型，常见的文件类型有以下几种：\n- DIR：表示目录\n- CHR：表示字符类型\n- BLK：块设备类型\n- UNIX：UNIX域套接字\n- FIFO：先进先出(FIFO)队列\n- IPv4：网际协议(IP)套接字\n\n> DEVICE\n\ndevice，指定磁盘的名称\n\n> SIZE/OFF\n\nsize，文件的大小\n\n> NODE\n\nnode，索引节点，在这里啰嗦几句，磁盘存储机制，来个比喻吧：每个磁盘是一个大房子，大房子里面有多个小房子用来存储东西，但是呢每个小房子都有自己的房间号1、2、3、4、5、6......就这样一直排，我们把需要存储的数据放在小房子里面，一个不够就两个、两个不够就三个、以此类推，但是有个记录表需要记录刚存储的数据所对应的房间号，这样物流存储与房间号就对应起来了，所谓的房间号就是现在看的NODE节点，NODE节点就是文件在磁盘上的标识。\n\n> NAME\n\nname，打开文件的确切名称\n\n#### 参数详解\n\nlsof参数有太多太多，这里不一一列举，只讲解一下常用的参数，如果有想深入了解的，请<font size=5.5 color='red'>man lsof</font>。\n\n> -a\n\n列出打开文件存在的进程\n\n> -c <进程名>\n\n列出指定名称进程所使用到的文件\n\n> -d <文件>\n\n列出打开指定文件描述的进程\n\n> +d <目录>\n\n列出目录下被打开的文件\n\n> +D <目录>\n\n递归列出目录下被打开的文件\n\n> -n <目录>\n\n列出使用NFS的文件\n\n> -u <用户名>\n\n列出指定用户打开的文件\n\n> -p <进程id>\n\n列出指定进程号所打开的文件\n\n> -i <条件>\n\n列出打开的套接字，过滤条件：tcp、udp、4、6、协议、:端口、 @ip\n\n#### 常用命令\n\n> 查看端口\n\n```\nlsof -i :80\n```\n\n![](lsof_port.png)\n\n列出80端口目前打开的文件列表。\n\n> 查看连接\n\n```\n# 所有网络连接信息\nlsof -i\n\n# TCP网络连接信息\nlsof -i tcp\n\n# UDP网络连接信息\nlsof -i udp\n\n# TCP连接方式、端口为8080的连接信息\nlsof -i tcp:8080\n\n# UDP连接方式、端口为8080的连接信息\nlsof -i udp:8080\n```\n\n![](lsof_i.png)\n\n> 指定进程名称\n\n```\nlsof -c ngin\n```\n\n![](lsof_c.png)\n\n列出以ngin开头的进程打开的文件列表。\n\n> 指定进程id\n\n```\nlsof -p 3215\n```\n\n![](lsof_c_id.png)\n\n列出指定进程打开的文件列表。\n\n> 指定用户\n\n```\nlsof -u root\n```\n\n![](lsof_user.png)\n\n列出指定用户打开的文件列表。\n\n> 查看指定目录被打开的文件（目录非遍历）\n\n```\nlsof +d /usr/local/\n```\n\n![](lsof_dd.png)\n\n列出目录下被进程打开的文件列表。\n\n> 查看指定目录被打开的文件（目录遍历）\n\n```\nlsof +D /usr/local/\n```\n\n![](lsof_D.png)\n\n遍历搜索的方式列出目录下被进程打开的文件列表。\n\n#### 结束语\n\n本篇先写到这里吧，以上是我常用的命令以及参数说明，各种参数可以一起使用，如果不能满足大家的需求请见谅，毕竟本人是linux小白一枚，<font size=6.5 color='blue'>在不断尝试中去学习、去进步、去成长、去积累吧</font>，敬自己。\n\n#### 学习参考\n\nlsof简书：https://www.jianshu.com/p/be0c534c6a41\n每日一命令lsof：https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html\n\n感谢上面的2篇文章。\n","slug":"Linux-学习之增强篇-lsof","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38900gatabjugcyuape","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>Linux万能命令之lsof，<font size=\"6.5\" color=\"red\">只有你想不到的，没有踏做不到</font>。<br><img src=\"/images/article_lsof.jpg\" alt></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h4 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h4><p>lsof = list opened files，大致的意思就是列举系统中被打开的文件。玩linux的人都知道：“linux万物皆文件”，目录、sockets文件、字符设备、块设备、管道符等等。所以在linux系统之内，不管干什么都会跟文件挂上边，lsof是打开这些被使用文件列表的一个工具。不过，在平常，我用的最多就是查端口以及文件被哪个进程使用，命令非常强大。</p>\n<h4 id=\"文件类型\"><a href=\"#文件类型\" class=\"headerlink\" title=\"文件类型\"></a>文件类型</h4><p>在关于lsof能进行查看的文件类型，做了一下分类统计，结果如下：</p>\n<ul>\n<li>普通文件（.txt、.log等等）</li>\n<li>目录</li>\n<li>网络文件系统的文件</li>\n<li>字符或设备文件</li>\n<li>(函数)共享库（lib文件目录下的，.so等）</li>\n<li>管道、命名管道（.pip等）</li>\n<li>符号链接（软链）</li>\n<li>网络文件（socket相关文件，.sock）</li>\n</ul>\n<p>应该还有其他的文件，本人刚入linux系统，不足的地方请各路神山补充，欢迎留言👏👏👏。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>lsof命令是linux系统非自带的一个命令。</p>\n<blockquote>\n<p>检查是否已安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式一：</span><br><span class=\"line\">lsof</span><br><span class=\"line\"></span><br><span class=\"line\">方式二：</span><br><span class=\"line\">which lsof</span><br></pre></td></tr></table></figure>\n<p>出现<strong><em>-bash: lsof: command not found </em></strong>，说明命令还没被安装，如果命令已存在，忽略安装步骤。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# yum install lsof</span><br><span class=\"line\">Loaded plugins: fastestmirror</span><br><span class=\"line\">base                                                                                | 3.6 kB  00:00:00</span><br><span class=\"line\">extras                                                                              | 3.4 kB  00:00:00</span><br><span class=\"line\">updates                                                                             | 3.4 kB  00:00:00</span><br><span class=\"line\">extras/7/x86_64/primary_db                                                          | 200 kB  00:00:00</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\"> * extras: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\">Resolving Dependencies</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package lsof.x86_64 0:4.87-6.el7 will be installed</span><br><span class=\"line\">--&gt; Finished Dependency Resolution</span><br><span class=\"line\"></span><br><span class=\"line\">Dependencies Resolved</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\"> Package                Arch                     Version                      Repository              Size</span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\">Installing:</span><br><span class=\"line\"> lsof                   x86_64                   4.87-6.el7                   base                   331 k</span><br><span class=\"line\"></span><br><span class=\"line\">Transaction Summary</span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\">Install  1 Package</span><br><span class=\"line\"></span><br><span class=\"line\">Total download size: 331 k</span><br><span class=\"line\">Installed size: 927 k</span><br><span class=\"line\">Is this ok [y/d/N]: y</span><br><span class=\"line\">Downloading packages:</span><br><span class=\"line\">lsof-4.87-6.el7.x86_64.rpm                                                          | 331 kB  00:00:00</span><br><span class=\"line\">Running transaction check</span><br><span class=\"line\">Running transaction test</span><br><span class=\"line\">Transaction test succeeded</span><br><span class=\"line\">Running transaction</span><br><span class=\"line\">  Installing : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class=\"line\">  Verifying  : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class=\"line\"></span><br><span class=\"line\">Installed:</span><br><span class=\"line\">  lsof.x86_64 0:4.87-6.el7</span><br><span class=\"line\"></span><br><span class=\"line\">Complete!</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>整个安装过程问题不大，大大小小的lsof安装已经也装过10几次了，重没发生过意外，有问题的话可以邮件、微信联系我，一起来进行解决。</p>\n<h4 id=\"输出内容\"><a href=\"#输出内容\" class=\"headerlink\" title=\"输出内容\"></a>输出内容</h4><p>这个先简单介绍一下lsof输出信息的内容，具体格式如图：</p>\n<p><img src=\"lsof_fields.png\" alt></p>\n<blockquote>\n<p>COMMAND</p>\n</blockquote>\n<p>command，进程的名称</p>\n<blockquote>\n<p>PID</p>\n</blockquote>\n<p>process id，进程标识符id</p>\n<blockquote>\n<p>TID</p>\n</blockquote>\n<p>thread id，线程标识符id</p>\n<blockquote>\n<p>USER</p>\n</blockquote>\n<p>user，进程所属用户</p>\n<blockquote>\n<p>FD</p>\n</blockquote>\n<p>file description，文件描述符，应用程序可以通过文件描述符识别该文件，一般有以下取值：</p>\n<ul>\n<li>cwd：current work dirctory，应用程序启动的目录</li>\n<li>txt：program text (code and data)，该类型的文件是程序代码，如应用程序二进制文件本身或共享库</li>\n<li>lnn：library references (AIX)</li>\n<li>er：FD information error (see NAME column)</li>\n<li>jld：jail directory (FreeBSD)</li>\n<li>ltx：shared library text (code and data)</li>\n<li>mxx：hex memory-mapped type number xx</li>\n<li>m86：DOS Merge mapped file</li>\n<li>mem：memory-mapped file</li>\n<li>mmap：memory-mapped device</li>\n<li>pd：parent directory</li>\n<li>rtd：root directory</li>\n<li>tr：kernel trace file (OpenBSD)</li>\n<li>v86：VP/ix mapped file</li>\n<li>0：表示标准输出</li>\n<li>1：表示标准输入</li>\n<li>2：表示标准错误</li>\n</ul>\n<blockquote>\n<p>TYPE</p>\n</blockquote>\n<p>type，文件类型，常见的文件类型有以下几种：</p>\n<ul>\n<li>DIR：表示目录</li>\n<li>CHR：表示字符类型</li>\n<li>BLK：块设备类型</li>\n<li>UNIX：UNIX域套接字</li>\n<li>FIFO：先进先出(FIFO)队列</li>\n<li>IPv4：网际协议(IP)套接字</li>\n</ul>\n<blockquote>\n<p>DEVICE</p>\n</blockquote>\n<p>device，指定磁盘的名称</p>\n<blockquote>\n<p>SIZE/OFF</p>\n</blockquote>\n<p>size，文件的大小</p>\n<blockquote>\n<p>NODE</p>\n</blockquote>\n<p>node，索引节点，在这里啰嗦几句，磁盘存储机制，来个比喻吧：每个磁盘是一个大房子，大房子里面有多个小房子用来存储东西，但是呢每个小房子都有自己的房间号1、2、3、4、5、6……就这样一直排，我们把需要存储的数据放在小房子里面，一个不够就两个、两个不够就三个、以此类推，但是有个记录表需要记录刚存储的数据所对应的房间号，这样物流存储与房间号就对应起来了，所谓的房间号就是现在看的NODE节点，NODE节点就是文件在磁盘上的标识。</p>\n<blockquote>\n<p>NAME</p>\n</blockquote>\n<p>name，打开文件的确切名称</p>\n<h4 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h4><p>lsof参数有太多太多，这里不一一列举，只讲解一下常用的参数，如果有想深入了解的，请<font size=\"5.5\" color=\"red\">man lsof</font>。</p>\n<blockquote>\n<p>-a</p>\n</blockquote>\n<p>列出打开文件存在的进程</p>\n<blockquote>\n<p>-c &lt;进程名&gt;</p>\n</blockquote>\n<p>列出指定名称进程所使用到的文件</p>\n<blockquote>\n<p>-d &lt;文件&gt;</p>\n</blockquote>\n<p>列出打开指定文件描述的进程</p>\n<blockquote>\n<p>+d &lt;目录&gt;</p>\n</blockquote>\n<p>列出目录下被打开的文件</p>\n<blockquote>\n<p>+D &lt;目录&gt;</p>\n</blockquote>\n<p>递归列出目录下被打开的文件</p>\n<blockquote>\n<p>-n &lt;目录&gt;</p>\n</blockquote>\n<p>列出使用NFS的文件</p>\n<blockquote>\n<p>-u &lt;用户名&gt;</p>\n</blockquote>\n<p>列出指定用户打开的文件</p>\n<blockquote>\n<p>-p &lt;进程id&gt;</p>\n</blockquote>\n<p>列出指定进程号所打开的文件</p>\n<blockquote>\n<p>-i &lt;条件&gt;</p>\n</blockquote>\n<p>列出打开的套接字，过滤条件：tcp、udp、4、6、协议、:端口、 @ip</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>查看端口</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -i :80</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_port.png\" alt></p>\n<p>列出80端口目前打开的文件列表。</p>\n<blockquote>\n<p>查看连接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 所有网络连接信息</span><br><span class=\"line\">lsof -i</span><br><span class=\"line\"></span><br><span class=\"line\"># TCP网络连接信息</span><br><span class=\"line\">lsof -i tcp</span><br><span class=\"line\"></span><br><span class=\"line\"># UDP网络连接信息</span><br><span class=\"line\">lsof -i udp</span><br><span class=\"line\"></span><br><span class=\"line\"># TCP连接方式、端口为8080的连接信息</span><br><span class=\"line\">lsof -i tcp:8080</span><br><span class=\"line\"></span><br><span class=\"line\"># UDP连接方式、端口为8080的连接信息</span><br><span class=\"line\">lsof -i udp:8080</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_i.png\" alt></p>\n<blockquote>\n<p>指定进程名称</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -c ngin</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_c.png\" alt></p>\n<p>列出以ngin开头的进程打开的文件列表。</p>\n<blockquote>\n<p>指定进程id</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -p 3215</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_c_id.png\" alt></p>\n<p>列出指定进程打开的文件列表。</p>\n<blockquote>\n<p>指定用户</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -u root</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_user.png\" alt></p>\n<p>列出指定用户打开的文件列表。</p>\n<blockquote>\n<p>查看指定目录被打开的文件（目录非遍历）</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof +d /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_dd.png\" alt></p>\n<p>列出目录下被进程打开的文件列表。</p>\n<blockquote>\n<p>查看指定目录被打开的文件（目录遍历）</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof +D /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_D.png\" alt></p>\n<p>遍历搜索的方式列出目录下被进程打开的文件列表。</p>\n<h4 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h4><p>本篇先写到这里吧，以上是我常用的命令以及参数说明，各种参数可以一起使用，如果不能满足大家的需求请见谅，毕竟本人是linux小白一枚，<font size=\"6.5\" color=\"blue\">在不断尝试中去学习、去进步、去成长、去积累吧</font>，敬自己。</p>\n<h4 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h4><p>lsof简书：<a href=\"https://www.jianshu.com/p/be0c534c6a41\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/be0c534c6a41</a><br>每日一命令lsof：<a href=\"https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html</a></p>\n<p>感谢上面的2篇文章。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p>Linux万能命令之lsof，<font size=\"6.5\" color=\"red\">只有你想不到的，没有踏做不到</font>。<br><img src=\"/images/article_lsof.jpg\" alt></p>\n          </div>","more":"<hr>\n\n<h4 id=\"推荐指数\"><a href=\"#推荐指数\" class=\"headerlink\" title=\"推荐指数\"></a>推荐指数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">🌟🌟🌟🌟🌟</span><br></pre></td></tr></table></figure>\n<h4 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h4><p>lsof = list opened files，大致的意思就是列举系统中被打开的文件。玩linux的人都知道：“linux万物皆文件”，目录、sockets文件、字符设备、块设备、管道符等等。所以在linux系统之内，不管干什么都会跟文件挂上边，lsof是打开这些被使用文件列表的一个工具。不过，在平常，我用的最多就是查端口以及文件被哪个进程使用，命令非常强大。</p>\n<h4 id=\"文件类型\"><a href=\"#文件类型\" class=\"headerlink\" title=\"文件类型\"></a>文件类型</h4><p>在关于lsof能进行查看的文件类型，做了一下分类统计，结果如下：</p>\n<ul>\n<li>普通文件（.txt、.log等等）</li>\n<li>目录</li>\n<li>网络文件系统的文件</li>\n<li>字符或设备文件</li>\n<li>(函数)共享库（lib文件目录下的，.so等）</li>\n<li>管道、命名管道（.pip等）</li>\n<li>符号链接（软链）</li>\n<li>网络文件（socket相关文件，.sock）</li>\n</ul>\n<p>应该还有其他的文件，本人刚入linux系统，不足的地方请各路神山补充，欢迎留言👏👏👏。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>lsof命令是linux系统非自带的一个命令。</p>\n<blockquote>\n<p>检查是否已安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式一：</span><br><span class=\"line\">lsof</span><br><span class=\"line\"></span><br><span class=\"line\">方式二：</span><br><span class=\"line\">which lsof</span><br></pre></td></tr></table></figure>\n<p>出现<strong><em>-bash: lsof: command not found </em></strong>，说明命令还没被安装，如果命令已存在，忽略安装步骤。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# yum install lsof</span><br><span class=\"line\">Loaded plugins: fastestmirror</span><br><span class=\"line\">base                                                                                | 3.6 kB  00:00:00</span><br><span class=\"line\">extras                                                                              | 3.4 kB  00:00:00</span><br><span class=\"line\">updates                                                                             | 3.4 kB  00:00:00</span><br><span class=\"line\">extras/7/x86_64/primary_db                                                          | 200 kB  00:00:00</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\"> * extras: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class=\"line\">Resolving Dependencies</span><br><span class=\"line\">--&gt; Running transaction check</span><br><span class=\"line\">---&gt; Package lsof.x86_64 0:4.87-6.el7 will be installed</span><br><span class=\"line\">--&gt; Finished Dependency Resolution</span><br><span class=\"line\"></span><br><span class=\"line\">Dependencies Resolved</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\"> Package                Arch                     Version                      Repository              Size</span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\">Installing:</span><br><span class=\"line\"> lsof                   x86_64                   4.87-6.el7                   base                   331 k</span><br><span class=\"line\"></span><br><span class=\"line\">Transaction Summary</span><br><span class=\"line\">===========================================================================================================</span><br><span class=\"line\">Install  1 Package</span><br><span class=\"line\"></span><br><span class=\"line\">Total download size: 331 k</span><br><span class=\"line\">Installed size: 927 k</span><br><span class=\"line\">Is this ok [y/d/N]: y</span><br><span class=\"line\">Downloading packages:</span><br><span class=\"line\">lsof-4.87-6.el7.x86_64.rpm                                                          | 331 kB  00:00:00</span><br><span class=\"line\">Running transaction check</span><br><span class=\"line\">Running transaction test</span><br><span class=\"line\">Transaction test succeeded</span><br><span class=\"line\">Running transaction</span><br><span class=\"line\">  Installing : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class=\"line\">  Verifying  : lsof-4.87-6.el7.x86_64                                                                  1/1</span><br><span class=\"line\"></span><br><span class=\"line\">Installed:</span><br><span class=\"line\">  lsof.x86_64 0:4.87-6.el7</span><br><span class=\"line\"></span><br><span class=\"line\">Complete!</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>整个安装过程问题不大，大大小小的lsof安装已经也装过10几次了，重没发生过意外，有问题的话可以邮件、微信联系我，一起来进行解决。</p>\n<h4 id=\"输出内容\"><a href=\"#输出内容\" class=\"headerlink\" title=\"输出内容\"></a>输出内容</h4><p>这个先简单介绍一下lsof输出信息的内容，具体格式如图：</p>\n<p><img src=\"lsof_fields.png\" alt></p>\n<blockquote>\n<p>COMMAND</p>\n</blockquote>\n<p>command，进程的名称</p>\n<blockquote>\n<p>PID</p>\n</blockquote>\n<p>process id，进程标识符id</p>\n<blockquote>\n<p>TID</p>\n</blockquote>\n<p>thread id，线程标识符id</p>\n<blockquote>\n<p>USER</p>\n</blockquote>\n<p>user，进程所属用户</p>\n<blockquote>\n<p>FD</p>\n</blockquote>\n<p>file description，文件描述符，应用程序可以通过文件描述符识别该文件，一般有以下取值：</p>\n<ul>\n<li>cwd：current work dirctory，应用程序启动的目录</li>\n<li>txt：program text (code and data)，该类型的文件是程序代码，如应用程序二进制文件本身或共享库</li>\n<li>lnn：library references (AIX)</li>\n<li>er：FD information error (see NAME column)</li>\n<li>jld：jail directory (FreeBSD)</li>\n<li>ltx：shared library text (code and data)</li>\n<li>mxx：hex memory-mapped type number xx</li>\n<li>m86：DOS Merge mapped file</li>\n<li>mem：memory-mapped file</li>\n<li>mmap：memory-mapped device</li>\n<li>pd：parent directory</li>\n<li>rtd：root directory</li>\n<li>tr：kernel trace file (OpenBSD)</li>\n<li>v86：VP/ix mapped file</li>\n<li>0：表示标准输出</li>\n<li>1：表示标准输入</li>\n<li>2：表示标准错误</li>\n</ul>\n<blockquote>\n<p>TYPE</p>\n</blockquote>\n<p>type，文件类型，常见的文件类型有以下几种：</p>\n<ul>\n<li>DIR：表示目录</li>\n<li>CHR：表示字符类型</li>\n<li>BLK：块设备类型</li>\n<li>UNIX：UNIX域套接字</li>\n<li>FIFO：先进先出(FIFO)队列</li>\n<li>IPv4：网际协议(IP)套接字</li>\n</ul>\n<blockquote>\n<p>DEVICE</p>\n</blockquote>\n<p>device，指定磁盘的名称</p>\n<blockquote>\n<p>SIZE/OFF</p>\n</blockquote>\n<p>size，文件的大小</p>\n<blockquote>\n<p>NODE</p>\n</blockquote>\n<p>node，索引节点，在这里啰嗦几句，磁盘存储机制，来个比喻吧：每个磁盘是一个大房子，大房子里面有多个小房子用来存储东西，但是呢每个小房子都有自己的房间号1、2、3、4、5、6……就这样一直排，我们把需要存储的数据放在小房子里面，一个不够就两个、两个不够就三个、以此类推，但是有个记录表需要记录刚存储的数据所对应的房间号，这样物流存储与房间号就对应起来了，所谓的房间号就是现在看的NODE节点，NODE节点就是文件在磁盘上的标识。</p>\n<blockquote>\n<p>NAME</p>\n</blockquote>\n<p>name，打开文件的确切名称</p>\n<h4 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h4><p>lsof参数有太多太多，这里不一一列举，只讲解一下常用的参数，如果有想深入了解的，请<font size=\"5.5\" color=\"red\">man lsof</font>。</p>\n<blockquote>\n<p>-a</p>\n</blockquote>\n<p>列出打开文件存在的进程</p>\n<blockquote>\n<p>-c &lt;进程名&gt;</p>\n</blockquote>\n<p>列出指定名称进程所使用到的文件</p>\n<blockquote>\n<p>-d &lt;文件&gt;</p>\n</blockquote>\n<p>列出打开指定文件描述的进程</p>\n<blockquote>\n<p>+d &lt;目录&gt;</p>\n</blockquote>\n<p>列出目录下被打开的文件</p>\n<blockquote>\n<p>+D &lt;目录&gt;</p>\n</blockquote>\n<p>递归列出目录下被打开的文件</p>\n<blockquote>\n<p>-n &lt;目录&gt;</p>\n</blockquote>\n<p>列出使用NFS的文件</p>\n<blockquote>\n<p>-u &lt;用户名&gt;</p>\n</blockquote>\n<p>列出指定用户打开的文件</p>\n<blockquote>\n<p>-p &lt;进程id&gt;</p>\n</blockquote>\n<p>列出指定进程号所打开的文件</p>\n<blockquote>\n<p>-i &lt;条件&gt;</p>\n</blockquote>\n<p>列出打开的套接字，过滤条件：tcp、udp、4、6、协议、:端口、 @ip</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><blockquote>\n<p>查看端口</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -i :80</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_port.png\" alt></p>\n<p>列出80端口目前打开的文件列表。</p>\n<blockquote>\n<p>查看连接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 所有网络连接信息</span><br><span class=\"line\">lsof -i</span><br><span class=\"line\"></span><br><span class=\"line\"># TCP网络连接信息</span><br><span class=\"line\">lsof -i tcp</span><br><span class=\"line\"></span><br><span class=\"line\"># UDP网络连接信息</span><br><span class=\"line\">lsof -i udp</span><br><span class=\"line\"></span><br><span class=\"line\"># TCP连接方式、端口为8080的连接信息</span><br><span class=\"line\">lsof -i tcp:8080</span><br><span class=\"line\"></span><br><span class=\"line\"># UDP连接方式、端口为8080的连接信息</span><br><span class=\"line\">lsof -i udp:8080</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_i.png\" alt></p>\n<blockquote>\n<p>指定进程名称</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -c ngin</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_c.png\" alt></p>\n<p>列出以ngin开头的进程打开的文件列表。</p>\n<blockquote>\n<p>指定进程id</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -p 3215</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_c_id.png\" alt></p>\n<p>列出指定进程打开的文件列表。</p>\n<blockquote>\n<p>指定用户</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -u root</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_user.png\" alt></p>\n<p>列出指定用户打开的文件列表。</p>\n<blockquote>\n<p>查看指定目录被打开的文件（目录非遍历）</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof +d /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_dd.png\" alt></p>\n<p>列出目录下被进程打开的文件列表。</p>\n<blockquote>\n<p>查看指定目录被打开的文件（目录遍历）</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof +D /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"lsof_D.png\" alt></p>\n<p>遍历搜索的方式列出目录下被进程打开的文件列表。</p>\n<h4 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h4><p>本篇先写到这里吧，以上是我常用的命令以及参数说明，各种参数可以一起使用，如果不能满足大家的需求请见谅，毕竟本人是linux小白一枚，<font size=\"6.5\" color=\"blue\">在不断尝试中去学习、去进步、去成长、去积累吧</font>，敬自己。</p>\n<h4 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h4><p>lsof简书：<a href=\"https://www.jianshu.com/p/be0c534c6a41\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/be0c534c6a41</a><br>每日一命令lsof：<a href=\"https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/peida/archive/2013/02/26/2932972.html</a></p>\n<p>感谢上面的2篇文章。</p>"},{"title":"Qunar项目之总结篇","comments":0,"abbrlink":30296,"date":"2019-08-10T12:10:44.000Z","updated":"2019-08-19T12:10:44.000Z","desc":"记录在Qunar所做过的项目，主要是python web相关的项目","keywords":"web, python, qunar, 项目, 项目Outage, 项目Wwwhr, 项目Isapi, 项目Backyard, 项目New_hrtools, 项目Officedb, 项目Opsapp, 项目Opsbi, 项目Smsd, 项目Newoa_api, 项目Psapproval","top":true,"_content":"\n{% note primary %}\nQunar负责的项目汇总。\n\n<font color=#1E90FF size=6 face=\"黑体\">*** 感谢Qunar让我成长 ！！！***</font>\n{% endnote %}\n\n<!-- more -->\n<hr />\n\n\n### 背景\n统计一下负责项目的说明。\n\n### 统计\n\n| ID  |   项目名称    |      中文名称       | 重要程度 | 技术架构                         |\n|:---:|:-------------:|:-------------------:|:--------:|:-------------------------------- |\n|  1  |   backyard    |       骆驼帮        |   ★★★    | 前后端分离项目【Python + React】 |\n|  2  |     isapi     |     员工信息API     |   ★★★    | rest api，Python编写             |\n|  3  |  new_hrtools  |   AD账号管理系统    |    ★★    | 任务脚本较多，Python编写         |\n|  4  |   officedb    |  办公大厦管理系统   |    ★     | 后台【Flask】+ 模板              |\n|  5  |    opsapp     |     Qtalk Apis      |    ★★    | rest api                         |\n|  6  |    outage     |      故障系统       |   ★★★    | 后台【Flask】+ 前端【angularjs】 |\n|  7  |  psapproval   |    qtalk审批申请    |    ★★    | rest api，Python编写             |\n|  8  |     wwwhr     |  员工信息采集系统   |    ★★    | 后台【Flask】+ 模板              |\n|  9  |   newoa_api   |    newoa审批Api     |    ★★    | rest api，Python编写             |\n| 10  |     opsbi     | Ops故障可视化bi系统 |    ★     | 后台【Flask】+ 前端【angularjs】 |\n| 11  |     smsdb     |       短信狗        |    ★★    | 软件 + 硬件                      |\n| 12  | opstools-cron |      定时任务       |    ★★    | Node                             |\n\n### 项目说明\n\n1. #### Isapi\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Isapi是一个提供qunar员工信息数据的api项目，主要针对的用户群体是内部员工。数据来源于ehr系统（peoplesoft，简称：ps），ps使用的是Oracle数据库，基于ps提供的view试图，把员工数据同步到一个新的数据库，Isapi选择使用了postgresql，把员工信息数据封装json，通过http api接口的方式开放给用户，不仅解决了其他系统使用员工信息数据的问题，还有让ps数据隔离，提高了安全性、可用性。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/7285/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Isapi-员工信息apis</a> -->\n\n2. #### backyard\n\n    > <font size=4.5 color='red'>简述</font>\n\n    用于Qunar员工内部使用的一个web内网系统，主要用于员工信息查询、考勤、公司相关的制度、条例等信息，是一个员工访问量相对较大的一个web系统。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/39002/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Backyard-骆驼帮</a> -->\n\n3. #### new_hrtools\n\n    > <font size=4.5 color='red'>简述</font>\n\n    项目主要用于员工ad账号相关的处理，主要有API接口和定时任务2大部分组成，其中定时任务是重点，与ldap、数据库均有交互，是一样日常运维工作较多的一个项目。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/61124/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之New-hrtools【AD账号管理系统】</a> -->\n\n4. #### officedb\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Officedb系统是Qunar行政管理员工办公大厦的一个内部系统，主要针对于Qunar行政、QunarIT对办公大厦进行费用、员工信息等管理，实现Qunar办公大厦的自动化。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/47129/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Officedb-办公大厦管理系统</a> -->\n\n5. #### opsapp\n\n    > <font size=4.5 color='red'>简述</font>\n\n    opsapp跟Isapi实现的功能大致一样，这个项目是专门用来提供给qtalk移动端在外网情况下进行使用的一个api接口，这个接口实现了访问内网需要的api接口，实现了在非内网情况使用qtalk功能。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/9363/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsapp-QtalkApis</a> -->\n\n6. #### outage\n\n    > <font size=4.5 color='red'>简述</font>\n\n    主要用于用户进行报故障所用，主要有故障通报、故障review、故障产品线、对外API4大部分。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/26073/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Outage-故障系统</a> -->\n\n7. #### psapproval\n\n    > <font size=4.5 color='red'>简述</font>\n\n    主要用于ehr系统部分流程审批、申请在qtalk移动端进行操作。ehr系统主要用于管理员工、员工使用的一个人事系统，只能通过pc端进行操作，为了能在qtalk移动端也同样进行操作，psapproval接入ehr的员工使用流程。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/204/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Psapproval-Qtalk审批申请</a> -->\n\n8. #### wwwhr\n\n    > <font size=4.5 color='red'>简述</font>\n\n    用于采集入职Qunar员工基本个人信息的一个外部系统，信息主要用于ehr系统使用，是一个正常入职Qunar员工必须走的一步。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/3146/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Wwwhr-信息采集系统</a> -->\n\n9. #### newoa_api\n\n    > <font size=4.5 color='red'>简述</font>\n\n    newoa_api是专门针对于PC端Newoa表单在移动端详情展示，主要用于数据格式化。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/34271/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Newoa-api【Newoa审批Api】</a> -->\n\n10. #### opsbi\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Opsbi是针对于Ops组造成故障的数据做的一个可视化web系统，数据源来源于Outage故障系统，是一个前端【angularjs + echart】+ 后台【python】一体的项目。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/63144/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsbi-Ops故障可视化bi系统</a> -->\n\n11. #### smsdb\n\n    > <font size=4.5 color='red'>简述</font>\n\n    smsd是一个针对于机票事业部短信收发做的一个项目，实现了机票部门短信接收、发送、代收等功能。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/22299/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Smsdb-短信狗</a> -->\n\n12. #### opstools-cron\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Opstools-cron项目主要针对于其他项目有定时任务写的一个请求request crontab，由pm2进行管理。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/9777/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opstools-cron【定时任务】</a> -->\n\n\n### 发布\n1. #### 提交代码\n```\n1 git add .\n\n2 git commit -m \"XXXX\"\n\n3 git tag q-xxxxxxxx-xx\n\n4 git push origin master --tags\n```\n\n2. #### 自动化发布\n\n    1 打开自动化发布url。\n\n    2 左侧查看通过tag触发构建的项目，等待构建完成。如果构建过程中出现问题，请联系相关负责人进行处理。\n\n    3 点击Qunar Build，选择QA【beta环境】，先进行beta环境发布，参数详解如下：\n\n    - server_list_group：A\n\n    - tag_name：q-xxxxxxxx-xx\n\n    - server_list_group代表发布机器组，发哪个组写哪个组名即可，全部写ALL。\n\n    - tag_name为构建的tag名称。\n\n  4 QA发布完成环境之后。\n\n  5 在选择OPS【线上环境】进行发布，建议发布一台检查一台的方式去进行发现线上环境。\n\n### 项目启动\n1. #### 常规\n```\n(sudo) python tools/install_venv.py\n\n(sudo)  tools/with_venv.sh python setup.py develop                  # develop 软链\n\n(sudo)  tools/with_venv.sh main --config-file 配置文件 -v\n```\n2. #### 调试\n```\n(sudo) virtualenv .venv\n\n(sudo) source .venv/bin/activate\n\n(sudo) sudo pip install -r requirements.txt -i 源地址 --trusted-host 源地址域名\n\n(sudo) tools/with_venv.sh python setup.py install                  # install 复制\n\n(sudo) tools/with_venv.sh main --config-file 配置文件 -v\n```\n\n### supervisorctl管理\n登录服务器上切换到sudo用户，执行supervisorctl：\n\n![](qunar_supervisorctl.png)\n\n常用命令说明：\n- status 查看项目运行状态\n- restart outage-www 重启outage-www 项目\n- start outage-www 启动outage-www 项目\n- stop outage-www 停止outage-www项目\n- start all 启动所有项目\n- stop all停止所有项目\n- tail -f outage-www 动态的查看outage-www项目日志\n","source":"_posts/Project-summary-qunar项目总结.md","raw":"---\ntitle: Qunar项目之总结篇\ncomments: false\ncategories:\n  - [Qunar项目]\ntags: [Python, 项目]\n# tags: [Python, 项目, 项目Outage, 项目Wwwhr, 项目Isapi, 项目Backyard, 项目New_hrtools, 项目Officedb, 项目Opsapp, 项目Opsbi, 项目Smsd, 项目Newoa_api, 项目Psapproval]\nabbrlink: 30296\ndate: 2019-08-10 20:10:44\nupdated: 2019-08-19 20:10:44\ndesc: 记录在Qunar所做过的项目，主要是python web相关的项目\nkeywords: web, python, qunar, 项目, 项目Outage, 项目Wwwhr, 项目Isapi, 项目Backyard, 项目New_hrtools, 项目Officedb, 项目Opsapp, 项目Opsbi, 项目Smsd, 项目Newoa_api, 项目Psapproval\ntop: true\n---\n\n{% note primary %}\nQunar负责的项目汇总。\n\n<font color=#1E90FF size=6 face=\"黑体\">*** 感谢Qunar让我成长 ！！！***</font>\n{% endnote %}\n\n<!-- more -->\n<hr />\n\n\n### 背景\n统计一下负责项目的说明。\n\n### 统计\n\n| ID  |   项目名称    |      中文名称       | 重要程度 | 技术架构                         |\n|:---:|:-------------:|:-------------------:|:--------:|:-------------------------------- |\n|  1  |   backyard    |       骆驼帮        |   ★★★    | 前后端分离项目【Python + React】 |\n|  2  |     isapi     |     员工信息API     |   ★★★    | rest api，Python编写             |\n|  3  |  new_hrtools  |   AD账号管理系统    |    ★★    | 任务脚本较多，Python编写         |\n|  4  |   officedb    |  办公大厦管理系统   |    ★     | 后台【Flask】+ 模板              |\n|  5  |    opsapp     |     Qtalk Apis      |    ★★    | rest api                         |\n|  6  |    outage     |      故障系统       |   ★★★    | 后台【Flask】+ 前端【angularjs】 |\n|  7  |  psapproval   |    qtalk审批申请    |    ★★    | rest api，Python编写             |\n|  8  |     wwwhr     |  员工信息采集系统   |    ★★    | 后台【Flask】+ 模板              |\n|  9  |   newoa_api   |    newoa审批Api     |    ★★    | rest api，Python编写             |\n| 10  |     opsbi     | Ops故障可视化bi系统 |    ★     | 后台【Flask】+ 前端【angularjs】 |\n| 11  |     smsdb     |       短信狗        |    ★★    | 软件 + 硬件                      |\n| 12  | opstools-cron |      定时任务       |    ★★    | Node                             |\n\n### 项目说明\n\n1. #### Isapi\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Isapi是一个提供qunar员工信息数据的api项目，主要针对的用户群体是内部员工。数据来源于ehr系统（peoplesoft，简称：ps），ps使用的是Oracle数据库，基于ps提供的view试图，把员工数据同步到一个新的数据库，Isapi选择使用了postgresql，把员工信息数据封装json，通过http api接口的方式开放给用户，不仅解决了其他系统使用员工信息数据的问题，还有让ps数据隔离，提高了安全性、可用性。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/7285/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Isapi-员工信息apis</a> -->\n\n2. #### backyard\n\n    > <font size=4.5 color='red'>简述</font>\n\n    用于Qunar员工内部使用的一个web内网系统，主要用于员工信息查询、考勤、公司相关的制度、条例等信息，是一个员工访问量相对较大的一个web系统。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/39002/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Backyard-骆驼帮</a> -->\n\n3. #### new_hrtools\n\n    > <font size=4.5 color='red'>简述</font>\n\n    项目主要用于员工ad账号相关的处理，主要有API接口和定时任务2大部分组成，其中定时任务是重点，与ldap、数据库均有交互，是一样日常运维工作较多的一个项目。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/61124/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之New-hrtools【AD账号管理系统】</a> -->\n\n4. #### officedb\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Officedb系统是Qunar行政管理员工办公大厦的一个内部系统，主要针对于Qunar行政、QunarIT对办公大厦进行费用、员工信息等管理，实现Qunar办公大厦的自动化。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/47129/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Officedb-办公大厦管理系统</a> -->\n\n5. #### opsapp\n\n    > <font size=4.5 color='red'>简述</font>\n\n    opsapp跟Isapi实现的功能大致一样，这个项目是专门用来提供给qtalk移动端在外网情况下进行使用的一个api接口，这个接口实现了访问内网需要的api接口，实现了在非内网情况使用qtalk功能。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/9363/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsapp-QtalkApis</a> -->\n\n6. #### outage\n\n    > <font size=4.5 color='red'>简述</font>\n\n    主要用于用户进行报故障所用，主要有故障通报、故障review、故障产品线、对外API4大部分。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/26073/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Outage-故障系统</a> -->\n\n7. #### psapproval\n\n    > <font size=4.5 color='red'>简述</font>\n\n    主要用于ehr系统部分流程审批、申请在qtalk移动端进行操作。ehr系统主要用于管理员工、员工使用的一个人事系统，只能通过pc端进行操作，为了能在qtalk移动端也同样进行操作，psapproval接入ehr的员工使用流程。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/204/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Psapproval-Qtalk审批申请</a> -->\n\n8. #### wwwhr\n\n    > <font size=4.5 color='red'>简述</font>\n\n    用于采集入职Qunar员工基本个人信息的一个外部系统，信息主要用于ehr系统使用，是一个正常入职Qunar员工必须走的一步。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/3146/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Wwwhr-信息采集系统</a> -->\n\n9. #### newoa_api\n\n    > <font size=4.5 color='red'>简述</font>\n\n    newoa_api是专门针对于PC端Newoa表单在移动端详情展示，主要用于数据格式化。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/34271/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Newoa-api【Newoa审批Api】</a> -->\n\n10. #### opsbi\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Opsbi是针对于Ops组造成故障的数据做的一个可视化web系统，数据源来源于Outage故障系统，是一个前端【angularjs + echart】+ 后台【python】一体的项目。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/63144/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsbi-Ops故障可视化bi系统</a> -->\n\n11. #### smsdb\n\n    > <font size=4.5 color='red'>简述</font>\n\n    smsd是一个针对于机票事业部短信收发做的一个项目，实现了机票部门短信接收、发送、代收等功能。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/22299/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Smsdb-短信狗</a> -->\n\n12. #### opstools-cron\n\n    > <font size=4.5 color='red'>简述</font>\n\n    Opstools-cron项目主要针对于其他项目有定时任务写的一个请求request crontab，由pm2进行管理。\n\n    <!-- > <font size=4.5 color='red'>详情</font>\n\n    <a href=\"/articles/9777/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opstools-cron【定时任务】</a> -->\n\n\n### 发布\n1. #### 提交代码\n```\n1 git add .\n\n2 git commit -m \"XXXX\"\n\n3 git tag q-xxxxxxxx-xx\n\n4 git push origin master --tags\n```\n\n2. #### 自动化发布\n\n    1 打开自动化发布url。\n\n    2 左侧查看通过tag触发构建的项目，等待构建完成。如果构建过程中出现问题，请联系相关负责人进行处理。\n\n    3 点击Qunar Build，选择QA【beta环境】，先进行beta环境发布，参数详解如下：\n\n    - server_list_group：A\n\n    - tag_name：q-xxxxxxxx-xx\n\n    - server_list_group代表发布机器组，发哪个组写哪个组名即可，全部写ALL。\n\n    - tag_name为构建的tag名称。\n\n  4 QA发布完成环境之后。\n\n  5 在选择OPS【线上环境】进行发布，建议发布一台检查一台的方式去进行发现线上环境。\n\n### 项目启动\n1. #### 常规\n```\n(sudo) python tools/install_venv.py\n\n(sudo)  tools/with_venv.sh python setup.py develop                  # develop 软链\n\n(sudo)  tools/with_venv.sh main --config-file 配置文件 -v\n```\n2. #### 调试\n```\n(sudo) virtualenv .venv\n\n(sudo) source .venv/bin/activate\n\n(sudo) sudo pip install -r requirements.txt -i 源地址 --trusted-host 源地址域名\n\n(sudo) tools/with_venv.sh python setup.py install                  # install 复制\n\n(sudo) tools/with_venv.sh main --config-file 配置文件 -v\n```\n\n### supervisorctl管理\n登录服务器上切换到sudo用户，执行supervisorctl：\n\n![](qunar_supervisorctl.png)\n\n常用命令说明：\n- status 查看项目运行状态\n- restart outage-www 重启outage-www 项目\n- start outage-www 启动outage-www 项目\n- stop outage-www 停止outage-www项目\n- start all 启动所有项目\n- stop all停止所有项目\n- tail -f outage-www 动态的查看outage-www项目日志\n","slug":"Project-summary-qunar项目总结","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38b00gctabjsh6b76u0","content":"<div class=\"note primary\">\n            <p>Qunar负责的项目汇总。</p><font color=\"#1E90FF\" size=\"6\" face=\"黑体\"><strong><em> 感谢Qunar让我成长 ！！！</em></strong></font>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>统计一下负责项目的说明。</p>\n<h3 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ID</th>\n<th style=\"text-align:center\">项目名称</th>\n<th style=\"text-align:center\">中文名称</th>\n<th style=\"text-align:center\">重要程度</th>\n<th style=\"text-align:left\">技术架构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">backyard</td>\n<td style=\"text-align:center\">骆驼帮</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">前后端分离项目【Python + React】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">isapi</td>\n<td style=\"text-align:center\">员工信息API</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">new_hrtools</td>\n<td style=\"text-align:center\">AD账号管理系统</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">任务脚本较多，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">officedb</td>\n<td style=\"text-align:center\">办公大厦管理系统</td>\n<td style=\"text-align:center\">★</td>\n<td style=\"text-align:left\">后台【Flask】+ 模板</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">opsapp</td>\n<td style=\"text-align:center\">Qtalk Apis</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">outage</td>\n<td style=\"text-align:center\">故障系统</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">后台【Flask】+ 前端【angularjs】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">psapproval</td>\n<td style=\"text-align:center\">qtalk审批申请</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">wwwhr</td>\n<td style=\"text-align:center\">员工信息采集系统</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">后台【Flask】+ 模板</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">newoa_api</td>\n<td style=\"text-align:center\">newoa审批Api</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">opsbi</td>\n<td style=\"text-align:center\">Ops故障可视化bi系统</td>\n<td style=\"text-align:center\">★</td>\n<td style=\"text-align:left\">后台【Flask】+ 前端【angularjs】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">smsdb</td>\n<td style=\"text-align:center\">短信狗</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">软件 + 硬件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">opstools-cron</td>\n<td style=\"text-align:center\">定时任务</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">Node</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"项目说明\"><a href=\"#项目说明\" class=\"headerlink\" title=\"项目说明\"></a>项目说明</h3><ol>\n<li><h4 id=\"Isapi\"><a href=\"#Isapi\" class=\"headerlink\" title=\"Isapi\"></a>Isapi</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> Isapi是一个提供qunar员工信息数据的api项目，主要针对的用户群体是内部员工。数据来源于ehr系统（peoplesoft，简称：ps），ps使用的是Oracle数据库，基于ps提供的view试图，把员工数据同步到一个新的数据库，Isapi选择使用了postgresql，把员工信息数据封装json，通过http api接口的方式开放给用户，不仅解决了其他系统使用员工信息数据的问题，还有让ps数据隔离，提高了安全性、可用性。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/7285/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Isapi-员工信息apis</a> -->\n</li>\n<li><h4 id=\"backyard\"><a href=\"#backyard\" class=\"headerlink\" title=\"backyard\"></a>backyard</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 用于Qunar员工内部使用的一个web内网系统，主要用于员工信息查询、考勤、公司相关的制度、条例等信息，是一个员工访问量相对较大的一个web系统。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/39002/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Backyard-骆驼帮</a> -->\n</li>\n<li><h4 id=\"new-hrtools\"><a href=\"#new-hrtools\" class=\"headerlink\" title=\"new_hrtools\"></a>new_hrtools</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 项目主要用于员工ad账号相关的处理，主要有API接口和定时任务2大部分组成，其中定时任务是重点，与ldap、数据库均有交互，是一样日常运维工作较多的一个项目。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/61124/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之New-hrtools【AD账号管理系统】</a> -->\n</li>\n<li><h4 id=\"officedb\"><a href=\"#officedb\" class=\"headerlink\" title=\"officedb\"></a>officedb</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> Officedb系统是Qunar行政管理员工办公大厦的一个内部系统，主要针对于Qunar行政、QunarIT对办公大厦进行费用、员工信息等管理，实现Qunar办公大厦的自动化。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/47129/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Officedb-办公大厦管理系统</a> -->\n</li>\n<li><h4 id=\"opsapp\"><a href=\"#opsapp\" class=\"headerlink\" title=\"opsapp\"></a>opsapp</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> opsapp跟Isapi实现的功能大致一样，这个项目是专门用来提供给qtalk移动端在外网情况下进行使用的一个api接口，这个接口实现了访问内网需要的api接口，实现了在非内网情况使用qtalk功能。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/9363/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsapp-QtalkApis</a> -->\n</li>\n<li><h4 id=\"outage\"><a href=\"#outage\" class=\"headerlink\" title=\"outage\"></a>outage</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 主要用于用户进行报故障所用，主要有故障通报、故障review、故障产品线、对外API4大部分。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/26073/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Outage-故障系统</a> -->\n</li>\n<li><h4 id=\"psapproval\"><a href=\"#psapproval\" class=\"headerlink\" title=\"psapproval\"></a>psapproval</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 主要用于ehr系统部分流程审批、申请在qtalk移动端进行操作。ehr系统主要用于管理员工、员工使用的一个人事系统，只能通过pc端进行操作，为了能在qtalk移动端也同样进行操作，psapproval接入ehr的员工使用流程。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/204/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Psapproval-Qtalk审批申请</a> -->\n</li>\n<li><h4 id=\"wwwhr\"><a href=\"#wwwhr\" class=\"headerlink\" title=\"wwwhr\"></a>wwwhr</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 用于采集入职Qunar员工基本个人信息的一个外部系统，信息主要用于ehr系统使用，是一个正常入职Qunar员工必须走的一步。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/3146/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Wwwhr-信息采集系统</a> -->\n</li>\n<li><h4 id=\"newoa-api\"><a href=\"#newoa-api\" class=\"headerlink\" title=\"newoa_api\"></a>newoa_api</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> newoa_api是专门针对于PC端Newoa表单在移动端详情展示，主要用于数据格式化。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/34271/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Newoa-api【Newoa审批Api】</a> -->\n</li>\n<li><h4 id=\"opsbi\"><a href=\"#opsbi\" class=\"headerlink\" title=\"opsbi\"></a>opsbi</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>Opsbi是针对于Ops组造成故障的数据做的一个可视化web系统，数据源来源于Outage故障系统，是一个前端【angularjs + echart】+ 后台【python】一体的项目。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/63144/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsbi-Ops故障可视化bi系统</a> -->\n</li>\n<li><h4 id=\"smsdb\"><a href=\"#smsdb\" class=\"headerlink\" title=\"smsdb\"></a>smsdb</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>smsd是一个针对于机票事业部短信收发做的一个项目，实现了机票部门短信接收、发送、代收等功能。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/22299/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Smsdb-短信狗</a> -->\n</li>\n<li><h4 id=\"opstools-cron\"><a href=\"#opstools-cron\" class=\"headerlink\" title=\"opstools-cron\"></a>opstools-cron</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>Opstools-cron项目主要针对于其他项目有定时任务写的一个请求request crontab，由pm2进行管理。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/9777/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opstools-cron【定时任务】</a> -->\n</li>\n</ol>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><ol>\n<li><h4 id=\"提交代码\"><a href=\"#提交代码\" class=\"headerlink\" title=\"提交代码\"></a>提交代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 git add .</span><br><span class=\"line\"></span><br><span class=\"line\">2 git commit -m &quot;XXXX&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3 git tag q-xxxxxxxx-xx</span><br><span class=\"line\"></span><br><span class=\"line\">4 git push origin master --tags</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"自动化发布\"><a href=\"#自动化发布\" class=\"headerlink\" title=\"自动化发布\"></a>自动化发布</h4><p> 1 打开自动化发布url。</p>\n<p> 2 左侧查看通过tag触发构建的项目，等待构建完成。如果构建过程中出现问题，请联系相关负责人进行处理。</p>\n<p> 3 点击Qunar Build，选择QA【beta环境】，先进行beta环境发布，参数详解如下：</p>\n<ul>\n<li><p>server_list_group：A</p>\n</li>\n<li><p>tag_name：q-xxxxxxxx-xx</p>\n</li>\n<li><p>server_list_group代表发布机器组，发哪个组写哪个组名即可，全部写ALL。</p>\n</li>\n<li><p>tag_name为构建的tag名称。</p>\n</li>\n</ul>\n<p>4 QA发布完成环境之后。</p>\n<p>5 在选择OPS【线上环境】进行发布，建议发布一台检查一台的方式去进行发现线上环境。</p>\n</li>\n</ol>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><ol>\n<li><h4 id=\"常规\"><a href=\"#常规\" class=\"headerlink\" title=\"常规\"></a>常规</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(sudo) python tools/install_venv.py</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo)  tools/with_venv.sh python setup.py develop                  # develop 软链</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo)  tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(sudo) virtualenv .venv</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) source .venv/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) sudo pip install -r requirements.txt -i 源地址 --trusted-host 源地址域名</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) tools/with_venv.sh python setup.py install                  # install 复制</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"supervisorctl管理\"><a href=\"#supervisorctl管理\" class=\"headerlink\" title=\"supervisorctl管理\"></a>supervisorctl管理</h3><p>登录服务器上切换到sudo用户，执行supervisorctl：</p>\n<p><img src=\"qunar_supervisorctl.png\" alt></p>\n<p>常用命令说明：</p>\n<ul>\n<li>status 查看项目运行状态</li>\n<li>restart outage-www 重启outage-www 项目</li>\n<li>start outage-www 启动outage-www 项目</li>\n<li>stop outage-www 停止outage-www项目</li>\n<li>start all 启动所有项目</li>\n<li>stop all停止所有项目</li>\n<li>tail -f outage-www 动态的查看outage-www项目日志</li>\n</ul>\n","site":{"data":{}},"excerpt":"<div class=\"note primary\">\n            <p>Qunar负责的项目汇总。</p><font color=\"#1E90FF\" size=\"6\" face=\"黑体\"><strong><em> 感谢Qunar让我成长 ！！！</em></strong></font>\n          </div>","more":"<hr>\n\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>统计一下负责项目的说明。</p>\n<h3 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ID</th>\n<th style=\"text-align:center\">项目名称</th>\n<th style=\"text-align:center\">中文名称</th>\n<th style=\"text-align:center\">重要程度</th>\n<th style=\"text-align:left\">技术架构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">backyard</td>\n<td style=\"text-align:center\">骆驼帮</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">前后端分离项目【Python + React】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">isapi</td>\n<td style=\"text-align:center\">员工信息API</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">new_hrtools</td>\n<td style=\"text-align:center\">AD账号管理系统</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">任务脚本较多，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">officedb</td>\n<td style=\"text-align:center\">办公大厦管理系统</td>\n<td style=\"text-align:center\">★</td>\n<td style=\"text-align:left\">后台【Flask】+ 模板</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">opsapp</td>\n<td style=\"text-align:center\">Qtalk Apis</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">outage</td>\n<td style=\"text-align:center\">故障系统</td>\n<td style=\"text-align:center\">★★★</td>\n<td style=\"text-align:left\">后台【Flask】+ 前端【angularjs】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">psapproval</td>\n<td style=\"text-align:center\">qtalk审批申请</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">wwwhr</td>\n<td style=\"text-align:center\">员工信息采集系统</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">后台【Flask】+ 模板</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">newoa_api</td>\n<td style=\"text-align:center\">newoa审批Api</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">rest api，Python编写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">opsbi</td>\n<td style=\"text-align:center\">Ops故障可视化bi系统</td>\n<td style=\"text-align:center\">★</td>\n<td style=\"text-align:left\">后台【Flask】+ 前端【angularjs】</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">smsdb</td>\n<td style=\"text-align:center\">短信狗</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">软件 + 硬件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">opstools-cron</td>\n<td style=\"text-align:center\">定时任务</td>\n<td style=\"text-align:center\">★★</td>\n<td style=\"text-align:left\">Node</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"项目说明\"><a href=\"#项目说明\" class=\"headerlink\" title=\"项目说明\"></a>项目说明</h3><ol>\n<li><h4 id=\"Isapi\"><a href=\"#Isapi\" class=\"headerlink\" title=\"Isapi\"></a>Isapi</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> Isapi是一个提供qunar员工信息数据的api项目，主要针对的用户群体是内部员工。数据来源于ehr系统（peoplesoft，简称：ps），ps使用的是Oracle数据库，基于ps提供的view试图，把员工数据同步到一个新的数据库，Isapi选择使用了postgresql，把员工信息数据封装json，通过http api接口的方式开放给用户，不仅解决了其他系统使用员工信息数据的问题，还有让ps数据隔离，提高了安全性、可用性。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/7285/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Isapi-员工信息apis</a> -->\n</li>\n<li><h4 id=\"backyard\"><a href=\"#backyard\" class=\"headerlink\" title=\"backyard\"></a>backyard</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 用于Qunar员工内部使用的一个web内网系统，主要用于员工信息查询、考勤、公司相关的制度、条例等信息，是一个员工访问量相对较大的一个web系统。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/39002/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Backyard-骆驼帮</a> -->\n</li>\n<li><h4 id=\"new-hrtools\"><a href=\"#new-hrtools\" class=\"headerlink\" title=\"new_hrtools\"></a>new_hrtools</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 项目主要用于员工ad账号相关的处理，主要有API接口和定时任务2大部分组成，其中定时任务是重点，与ldap、数据库均有交互，是一样日常运维工作较多的一个项目。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/61124/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之New-hrtools【AD账号管理系统】</a> -->\n</li>\n<li><h4 id=\"officedb\"><a href=\"#officedb\" class=\"headerlink\" title=\"officedb\"></a>officedb</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> Officedb系统是Qunar行政管理员工办公大厦的一个内部系统，主要针对于Qunar行政、QunarIT对办公大厦进行费用、员工信息等管理，实现Qunar办公大厦的自动化。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/47129/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Officedb-办公大厦管理系统</a> -->\n</li>\n<li><h4 id=\"opsapp\"><a href=\"#opsapp\" class=\"headerlink\" title=\"opsapp\"></a>opsapp</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> opsapp跟Isapi实现的功能大致一样，这个项目是专门用来提供给qtalk移动端在外网情况下进行使用的一个api接口，这个接口实现了访问内网需要的api接口，实现了在非内网情况使用qtalk功能。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/9363/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsapp-QtalkApis</a> -->\n</li>\n<li><h4 id=\"outage\"><a href=\"#outage\" class=\"headerlink\" title=\"outage\"></a>outage</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 主要用于用户进行报故障所用，主要有故障通报、故障review、故障产品线、对外API4大部分。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/26073/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Outage-故障系统</a> -->\n</li>\n<li><h4 id=\"psapproval\"><a href=\"#psapproval\" class=\"headerlink\" title=\"psapproval\"></a>psapproval</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 主要用于ehr系统部分流程审批、申请在qtalk移动端进行操作。ehr系统主要用于管理员工、员工使用的一个人事系统，只能通过pc端进行操作，为了能在qtalk移动端也同样进行操作，psapproval接入ehr的员工使用流程。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/204/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Psapproval-Qtalk审批申请</a> -->\n</li>\n<li><h4 id=\"wwwhr\"><a href=\"#wwwhr\" class=\"headerlink\" title=\"wwwhr\"></a>wwwhr</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> 用于采集入职Qunar员工基本个人信息的一个外部系统，信息主要用于ehr系统使用，是一个正常入职Qunar员工必须走的一步。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/3146/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Wwwhr-信息采集系统</a> -->\n</li>\n<li><h4 id=\"newoa-api\"><a href=\"#newoa-api\" class=\"headerlink\" title=\"newoa_api\"></a>newoa_api</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p> newoa_api是专门针对于PC端Newoa表单在移动端详情展示，主要用于数据格式化。</p>\n <!-- > <font size=4.5 color='red'>详情</font>\n\n <a href=\"/articles/34271/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Newoa-api【Newoa审批Api】</a> -->\n</li>\n<li><h4 id=\"opsbi\"><a href=\"#opsbi\" class=\"headerlink\" title=\"opsbi\"></a>opsbi</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>Opsbi是针对于Ops组造成故障的数据做的一个可视化web系统，数据源来源于Outage故障系统，是一个前端【angularjs + echart】+ 后台【python】一体的项目。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/63144/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opsbi-Ops故障可视化bi系统</a> -->\n</li>\n<li><h4 id=\"smsdb\"><a href=\"#smsdb\" class=\"headerlink\" title=\"smsdb\"></a>smsdb</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>smsd是一个针对于机票事业部短信收发做的一个项目，实现了机票部门短信接收、发送、代收等功能。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/22299/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Smsdb-短信狗</a> -->\n</li>\n<li><h4 id=\"opstools-cron\"><a href=\"#opstools-cron\" class=\"headerlink\" title=\"opstools-cron\"></a>opstools-cron</h4><blockquote>\n<font size=\"4.5\" color=\"red\">简述</font>\n</blockquote>\n<p>Opstools-cron项目主要针对于其他项目有定时任务写的一个请求request crontab，由pm2进行管理。</p>\n<!-- > <font size=4.5 color='red'>详情</font>\n\n<a href=\"/articles/9777/\" target=\"_blank\" class=\"block_project_a\">Qunar项目之Opstools-cron【定时任务】</a> -->\n</li>\n</ol>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><ol>\n<li><h4 id=\"提交代码\"><a href=\"#提交代码\" class=\"headerlink\" title=\"提交代码\"></a>提交代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 git add .</span><br><span class=\"line\"></span><br><span class=\"line\">2 git commit -m &quot;XXXX&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">3 git tag q-xxxxxxxx-xx</span><br><span class=\"line\"></span><br><span class=\"line\">4 git push origin master --tags</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"自动化发布\"><a href=\"#自动化发布\" class=\"headerlink\" title=\"自动化发布\"></a>自动化发布</h4><p> 1 打开自动化发布url。</p>\n<p> 2 左侧查看通过tag触发构建的项目，等待构建完成。如果构建过程中出现问题，请联系相关负责人进行处理。</p>\n<p> 3 点击Qunar Build，选择QA【beta环境】，先进行beta环境发布，参数详解如下：</p>\n<ul>\n<li><p>server_list_group：A</p>\n</li>\n<li><p>tag_name：q-xxxxxxxx-xx</p>\n</li>\n<li><p>server_list_group代表发布机器组，发哪个组写哪个组名即可，全部写ALL。</p>\n</li>\n<li><p>tag_name为构建的tag名称。</p>\n</li>\n</ul>\n<p>4 QA发布完成环境之后。</p>\n<p>5 在选择OPS【线上环境】进行发布，建议发布一台检查一台的方式去进行发现线上环境。</p>\n</li>\n</ol>\n<h3 id=\"项目启动\"><a href=\"#项目启动\" class=\"headerlink\" title=\"项目启动\"></a>项目启动</h3><ol>\n<li><h4 id=\"常规\"><a href=\"#常规\" class=\"headerlink\" title=\"常规\"></a>常规</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(sudo) python tools/install_venv.py</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo)  tools/with_venv.sh python setup.py develop                  # develop 软链</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo)  tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(sudo) virtualenv .venv</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) source .venv/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) sudo pip install -r requirements.txt -i 源地址 --trusted-host 源地址域名</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) tools/with_venv.sh python setup.py install                  # install 复制</span><br><span class=\"line\"></span><br><span class=\"line\">(sudo) tools/with_venv.sh main --config-file 配置文件 -v</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"supervisorctl管理\"><a href=\"#supervisorctl管理\" class=\"headerlink\" title=\"supervisorctl管理\"></a>supervisorctl管理</h3><p>登录服务器上切换到sudo用户，执行supervisorctl：</p>\n<p><img src=\"qunar_supervisorctl.png\" alt></p>\n<p>常用命令说明：</p>\n<ul>\n<li>status 查看项目运行状态</li>\n<li>restart outage-www 重启outage-www 项目</li>\n<li>start outage-www 启动outage-www 项目</li>\n<li>stop outage-www 停止outage-www项目</li>\n<li>start all 启动所有项目</li>\n<li>stop all停止所有项目</li>\n<li>tail -f outage-www 动态的查看outage-www项目日志</li>\n</ul>"},{"title":"Python爬虫利器之requests(上篇)","comments":0,"top":false,"abbrlink":34296,"date":"2019-04-04T11:01:28.000Z","updated":"2019-04-04T11:01:28.000Z","desc":"Python爬虫利器之requests介绍","keywords":"Python, Packages, 爬虫, BeautifulSoup, requests","_content":"\n### 背景\n{% note primary %}\n身为一位程序员，没事的时候爬爬糗百笑话、淘宝女郎、小片片。。。。。。有点邪恶了。反正关于<font color='red' size=6.5>爬虫</font>，相信很多人都不陌生，本人没事的时候也写写爬虫的小项目，写过***天气报警、糗百笑话、美女图片。。。。。。***，后续会在博客中挑选个例子写出来。\n\n关于数据采集，用Python去写爬虫程序，主要涉及2个主要的Package：***Requests && BeautifulSoup***。\n\n|     包名      | 功能说明             |\n|:-------------:|:--------------------: |\n|   Requests    | HTTP获取源数据       |\n| BeautifulSoup | 解析 && 获取目标数据 |\n\n关于这2个爬虫利器分为上下篇进行讲解，本篇先介绍***Requests***，主要功能是进行数据的获取。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n官方原话：\n```\nThe requests library is the de facto standard for making HTTP requests in Python.\nIt abstracts the complexities of making requests behind a beautiful,\nsimple API so that you can focus on interacting with services and\nconsuming data in your application.\n```\n简要内容：**Requests**是一个很实用的***Python HTTP***客户端库，主要用于**API**请求。\n\n### 安装\n\n```\npip install requests\n```\n如果不指定版本，会自动安装最新的版本，有不熟悉***pip***的请自行进行恶补。\n### 源码说明\n\n{% code %}\ndef request(method, url, **kwargs):\n    \"\"\"Constructs and sends a :class:`Request <Request>`.\n\n    :param method: method for the new :class:`Request` object.\n    :param url: URL for the new :class:`Request` object.\n    :param params: (optional) Dictionary or bytes to be sent in the query string for the :class:`Request`.\n    :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n    :param json: (optional) json data to send in the body of the :class:`Request`.\n    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.\n    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.\n    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': ('filename', fileobj)}``) for multipart encoding upload.\n    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n    :param timeout: (optional) How long to wait for the server to send data\n        before giving up, as a float, or a (`connect timeout, read timeout\n        <user/advanced.html#timeouts>`_) tuple.\n    :type timeout: float or tuple\n    :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n    :type allow_redirects: bool\n    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.\n    :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n    :param stream: (optional) if ``False``, the response content will be immediately downloaded.\n    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n\n    Usage::\n\n      >>> import requests\n      >>> req = requests.request('GET', 'http://httpbin.org/get')\n      <Response [200]>\n    \"\"\"\n{% endcode %}\n\n以上代码是Requests包中运用方法的核心，写代码多看看<font color='red' size=6.5>源码</font>，提高代码的质量，很重要。\n上面的方法是关于HTTP请求的核心方法，挑重点说，方法的参数很多。其中***method***代表HTTP请求的方式，GET、POST等等；***url***代表请求的地址；***kwargs***代表不限参数，但是在注释中罗列了一些重要的参数，查看以你发现，其中这些参数都是关于***HTTP协议***用到的数据。参数的具体请自动查看源码，下面也会针对于常用的参数进行demo举例。\n\n### 使用教程\n\nHTTP协议请求方式主要有：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、TRACE和CONNECT方法。虽然方法很多，但是工作中常用的只有<font size=5 color='red'>GET</font>与<font size=5 color='blue'>POST</font>。\n本人主要对***Requests***进行介绍，关于HTTP协议的相关知识这个不做过多讲解。\n\n1. #### 无参\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n\n    # GET\n    response = requests.get(url)\n\n    # POST\n    response = requests.post(url)\n    ```\n    最简单的HTTP请求。\n\n2. #### 有参\n\n    ```\n    import json\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    payload = {\"key\": \"value\"}\n\n    # GET\n    response = requests.get(url=url, params=payload)\n\n    # POST\n    response = requests.post(url=url, data=payload)\n    ```\n\n    GET方法的params参数实际就是url中的参数，使用GET方法可以把参数直接封装在url中，也可以把参数封装起来传递到request方法中。\n    POST方式的参数就是form表单提交的参数。\n\n3. #### json数据\n\n    ```\n    import json\n    import requests\n\n    # headers中添加上content-type这个参数，指定为json格式\n    headers = {'Content-Type': 'application/json'}\n    # post的时候，将data字典形式的参数用json包转换成json格式。\n    payload = {\"key\": \"value\"}\n    payload = json.dumps(payload)\n    url = \"https://gis90.github.io/\"\n\n    # POST\n    response = requests.post(url=url, headers=headers, data=payload)\n    ```\n\n    POST可传递json数据，需要在headers里指定数据的类型。\n\n4. #### 文件\n\n    ```\n    import requests\n\n    files = {'file': open('report.xls', 'rb')}\n    url = \"https://gis90.github.io/\"\n\n    r = requests.post(url, files=files)\n    ```\n\n    把文件读取到内存中，在以流的形式传递出去。\n\n5. #### 请求头\n\n    ```\n    import json\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    payload = {\"key\": \"value\"}\n    headers = {\"user-agent\": \"my-app/0.0.1\"}\n\n    # GET\n    response = requests.get(url=url,\n                            params=payload,\n                            headers=headers)\n\n    # POST\n    response = requests.post(url=url,\n                             data=json.dumps(payload)\n                             headers=headers)\n    ```\n    所有的header值必须是string、bytestring或者unicode。\n\n6. #### Cookie\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    # 第一种\n    cookies_1 = dict(key_1='value_1')\n    response = requests.get(url, cookies=cookies_1)\n    # 第二种\n    cookies_2 = requests.cookies.RequestsCookieJar()\n    cookies_2 = jar.set('key_2', 'value_2', domain=url, path='/cookies')\n    r = requests.get(url, cookies=cookies_2)\n\n    # 查看cookies信息以及类型\n    print response.cookies, type(response.cookies)\n    ```\n    demo中给出了2种set cookies的方式，用第一种的较多，其中输出的cookies是一个***requests.cookies.RequestsCookieJar对象***。\n\n7. #### timeout\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    response = requests.get(url, timeout=5)\n    ```\n    请求时间，可选参数。以设定参数timeout秒数时间之后停止等待响应，超过这个实际会停止对服务端的请求，如果是一般的restful api接口也就是几百毫秒的响应时间，如果是大数据量可以设置长一点，默认是无限制。\n    建议最好，设定一个值，这样请求timeout之后，也会报异常，对异常进行捕捉可以对方法进行监控报警，知道程序是否出现异常状况，时间根据对方的接口而定，建议60 ～ 120，单位：秒。\n\n8. #### allow_redirects\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    response = requests.get(url, allow_redirects=False)\n    ```\n    参数之一，允许请求重定向，默认值是True，所以这个参数只有有不允许重定向需求的时候采用得到。\n    **HTTP重定向**：服务器无法处理本次发送过来的request请求，服务器会返回一个新的url让客户端可以进行跳转，客户端会自动访问该url地址，但是在客户端是无法分辨是否重定向了， 重定向的状态码是**3XX**，关于状态码下面有粗略的介绍。\n\n9. #### RESPONSE\n\n    ```\n    import requests\n\n\n    data = {'key': 'value'}\n    response = requests.get(url='https://gis90.github.io/', data=data)\n\n    # 请求地址\n    print response.url\n    # 响应状态码\n    print response.status_code\n    # 响应头\n    print response.headers\n    # 文本编码\n    print response.encoding\n    # 字符串格式响应内容\n    print response.text\n    # 二进制格式响应内容\n    print response.content\n    # json格式响应内容\n    print response.json()\n    # 原始套接字响应内容\n    print response.raw\n    # cookie信息\n    print response.cookies\n    ```\n\n    总结一下需要说明得点。\n\n    > 状态码\n\n    {% raw %}\n    <table>\n      <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">描述</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">1**</td>\n        <td style=\"text-align:center;\">信息，服务器收到请求，需要请求者继续执行操作</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">2**</td>\n        <td style=\"text-align:center;\">成功，操作被成功接收并处理</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">3**</td>\n        <td style=\"text-align:center;\">重定向，需要进一步的操作以完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">4**</td>\n        <td style=\"text-align:center;\">客户端错误，请求包含语法错误或无法完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">5**</td>\n        <td style=\"text-align:center;\">服务器错误，服务器在处理请求的过程中发生了错误</td>\n      </tr>\n    </table>\n    {% endraw %}\n\n    > 响应头\n\n    返回来的headers是一个***requests.structures.CaseInsensitiveDict对象***，但是直接可以用dict字典的方式进行数据获取。\n\n    > text与content\n\n    text与content都是返回网页的内容，唯一的区别：content是字节码，而text的内容编码是字符串。\n\n    > cookies\n\n    cookies在上面有详细说明。\n\n### 学习参考\n\nRequests官方：https://realpython.com/python-requests/\n快速上手（中文版）：https://cn.python-requests.org/zh_CN/latest/user/quickstart.html\n快速上手（高阶版）：https://cn.python-requests.org//zh_CN/latest/\n\n### 特别技巧\n{% note danger %}\n\nPostman工具，相信做开发没有几个人不知道，它的最大用处就是用来实现各种HTTP请求。\n\n今天在这里教大家一个技巧，如果使用requests包去模拟HTTP请求失败的话，就用Postman工具去请求，毕竟是可视化的工具，参数、cookies、headers等等比较好设置，只要在Postman上成功实现了请求，使用下图的功能，就可以查看关于请求的相关代码，很方便。\n\n![](postman.png)\n\nPostman下载地址：https://www.getpostman.com/\n{% endnote %}\n","source":"_posts/Python-爬虫利器之requests.md","raw":"---\ntitle: Python爬虫利器之requests(上篇)\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, Python包, 爬虫系列]\ntop: false\nabbrlink: 34296\ndate: 2019-04-04 19:01:28\nupdated: 2019-04-04 19:01:28\ndesc: Python爬虫利器之requests介绍\nkeywords: Python, Packages, 爬虫, BeautifulSoup, requests\n---\n\n### 背景\n{% note primary %}\n身为一位程序员，没事的时候爬爬糗百笑话、淘宝女郎、小片片。。。。。。有点邪恶了。反正关于<font color='red' size=6.5>爬虫</font>，相信很多人都不陌生，本人没事的时候也写写爬虫的小项目，写过***天气报警、糗百笑话、美女图片。。。。。。***，后续会在博客中挑选个例子写出来。\n\n关于数据采集，用Python去写爬虫程序，主要涉及2个主要的Package：***Requests && BeautifulSoup***。\n\n|     包名      | 功能说明             |\n|:-------------:|:--------------------: |\n|   Requests    | HTTP获取源数据       |\n| BeautifulSoup | 解析 && 获取目标数据 |\n\n关于这2个爬虫利器分为上下篇进行讲解，本篇先介绍***Requests***，主要功能是进行数据的获取。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 简介\n\n官方原话：\n```\nThe requests library is the de facto standard for making HTTP requests in Python.\nIt abstracts the complexities of making requests behind a beautiful,\nsimple API so that you can focus on interacting with services and\nconsuming data in your application.\n```\n简要内容：**Requests**是一个很实用的***Python HTTP***客户端库，主要用于**API**请求。\n\n### 安装\n\n```\npip install requests\n```\n如果不指定版本，会自动安装最新的版本，有不熟悉***pip***的请自行进行恶补。\n### 源码说明\n\n{% code %}\ndef request(method, url, **kwargs):\n    \"\"\"Constructs and sends a :class:`Request <Request>`.\n\n    :param method: method for the new :class:`Request` object.\n    :param url: URL for the new :class:`Request` object.\n    :param params: (optional) Dictionary or bytes to be sent in the query string for the :class:`Request`.\n    :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.\n    :param json: (optional) json data to send in the body of the :class:`Request`.\n    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.\n    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.\n    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': ('filename', fileobj)}``) for multipart encoding upload.\n    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n    :param timeout: (optional) How long to wait for the server to send data\n        before giving up, as a float, or a (`connect timeout, read timeout\n        <user/advanced.html#timeouts>`_) tuple.\n    :type timeout: float or tuple\n    :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n    :type allow_redirects: bool\n    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.\n    :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n    :param stream: (optional) if ``False``, the response content will be immediately downloaded.\n    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n\n    Usage::\n\n      >>> import requests\n      >>> req = requests.request('GET', 'http://httpbin.org/get')\n      <Response [200]>\n    \"\"\"\n{% endcode %}\n\n以上代码是Requests包中运用方法的核心，写代码多看看<font color='red' size=6.5>源码</font>，提高代码的质量，很重要。\n上面的方法是关于HTTP请求的核心方法，挑重点说，方法的参数很多。其中***method***代表HTTP请求的方式，GET、POST等等；***url***代表请求的地址；***kwargs***代表不限参数，但是在注释中罗列了一些重要的参数，查看以你发现，其中这些参数都是关于***HTTP协议***用到的数据。参数的具体请自动查看源码，下面也会针对于常用的参数进行demo举例。\n\n### 使用教程\n\nHTTP协议请求方式主要有：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、TRACE和CONNECT方法。虽然方法很多，但是工作中常用的只有<font size=5 color='red'>GET</font>与<font size=5 color='blue'>POST</font>。\n本人主要对***Requests***进行介绍，关于HTTP协议的相关知识这个不做过多讲解。\n\n1. #### 无参\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n\n    # GET\n    response = requests.get(url)\n\n    # POST\n    response = requests.post(url)\n    ```\n    最简单的HTTP请求。\n\n2. #### 有参\n\n    ```\n    import json\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    payload = {\"key\": \"value\"}\n\n    # GET\n    response = requests.get(url=url, params=payload)\n\n    # POST\n    response = requests.post(url=url, data=payload)\n    ```\n\n    GET方法的params参数实际就是url中的参数，使用GET方法可以把参数直接封装在url中，也可以把参数封装起来传递到request方法中。\n    POST方式的参数就是form表单提交的参数。\n\n3. #### json数据\n\n    ```\n    import json\n    import requests\n\n    # headers中添加上content-type这个参数，指定为json格式\n    headers = {'Content-Type': 'application/json'}\n    # post的时候，将data字典形式的参数用json包转换成json格式。\n    payload = {\"key\": \"value\"}\n    payload = json.dumps(payload)\n    url = \"https://gis90.github.io/\"\n\n    # POST\n    response = requests.post(url=url, headers=headers, data=payload)\n    ```\n\n    POST可传递json数据，需要在headers里指定数据的类型。\n\n4. #### 文件\n\n    ```\n    import requests\n\n    files = {'file': open('report.xls', 'rb')}\n    url = \"https://gis90.github.io/\"\n\n    r = requests.post(url, files=files)\n    ```\n\n    把文件读取到内存中，在以流的形式传递出去。\n\n5. #### 请求头\n\n    ```\n    import json\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    payload = {\"key\": \"value\"}\n    headers = {\"user-agent\": \"my-app/0.0.1\"}\n\n    # GET\n    response = requests.get(url=url,\n                            params=payload,\n                            headers=headers)\n\n    # POST\n    response = requests.post(url=url,\n                             data=json.dumps(payload)\n                             headers=headers)\n    ```\n    所有的header值必须是string、bytestring或者unicode。\n\n6. #### Cookie\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    # 第一种\n    cookies_1 = dict(key_1='value_1')\n    response = requests.get(url, cookies=cookies_1)\n    # 第二种\n    cookies_2 = requests.cookies.RequestsCookieJar()\n    cookies_2 = jar.set('key_2', 'value_2', domain=url, path='/cookies')\n    r = requests.get(url, cookies=cookies_2)\n\n    # 查看cookies信息以及类型\n    print response.cookies, type(response.cookies)\n    ```\n    demo中给出了2种set cookies的方式，用第一种的较多，其中输出的cookies是一个***requests.cookies.RequestsCookieJar对象***。\n\n7. #### timeout\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    response = requests.get(url, timeout=5)\n    ```\n    请求时间，可选参数。以设定参数timeout秒数时间之后停止等待响应，超过这个实际会停止对服务端的请求，如果是一般的restful api接口也就是几百毫秒的响应时间，如果是大数据量可以设置长一点，默认是无限制。\n    建议最好，设定一个值，这样请求timeout之后，也会报异常，对异常进行捕捉可以对方法进行监控报警，知道程序是否出现异常状况，时间根据对方的接口而定，建议60 ～ 120，单位：秒。\n\n8. #### allow_redirects\n\n    ```\n    import requests\n\n\n    url = \"https://gis90.github.io/\"\n    response = requests.get(url, allow_redirects=False)\n    ```\n    参数之一，允许请求重定向，默认值是True，所以这个参数只有有不允许重定向需求的时候采用得到。\n    **HTTP重定向**：服务器无法处理本次发送过来的request请求，服务器会返回一个新的url让客户端可以进行跳转，客户端会自动访问该url地址，但是在客户端是无法分辨是否重定向了， 重定向的状态码是**3XX**，关于状态码下面有粗略的介绍。\n\n9. #### RESPONSE\n\n    ```\n    import requests\n\n\n    data = {'key': 'value'}\n    response = requests.get(url='https://gis90.github.io/', data=data)\n\n    # 请求地址\n    print response.url\n    # 响应状态码\n    print response.status_code\n    # 响应头\n    print response.headers\n    # 文本编码\n    print response.encoding\n    # 字符串格式响应内容\n    print response.text\n    # 二进制格式响应内容\n    print response.content\n    # json格式响应内容\n    print response.json()\n    # 原始套接字响应内容\n    print response.raw\n    # cookie信息\n    print response.cookies\n    ```\n\n    总结一下需要说明得点。\n\n    > 状态码\n\n    {% raw %}\n    <table>\n      <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">描述</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">1**</td>\n        <td style=\"text-align:center;\">信息，服务器收到请求，需要请求者继续执行操作</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">2**</td>\n        <td style=\"text-align:center;\">成功，操作被成功接收并处理</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">3**</td>\n        <td style=\"text-align:center;\">重定向，需要进一步的操作以完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">4**</td>\n        <td style=\"text-align:center;\">客户端错误，请求包含语法错误或无法完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">5**</td>\n        <td style=\"text-align:center;\">服务器错误，服务器在处理请求的过程中发生了错误</td>\n      </tr>\n    </table>\n    {% endraw %}\n\n    > 响应头\n\n    返回来的headers是一个***requests.structures.CaseInsensitiveDict对象***，但是直接可以用dict字典的方式进行数据获取。\n\n    > text与content\n\n    text与content都是返回网页的内容，唯一的区别：content是字节码，而text的内容编码是字符串。\n\n    > cookies\n\n    cookies在上面有详细说明。\n\n### 学习参考\n\nRequests官方：https://realpython.com/python-requests/\n快速上手（中文版）：https://cn.python-requests.org/zh_CN/latest/user/quickstart.html\n快速上手（高阶版）：https://cn.python-requests.org//zh_CN/latest/\n\n### 特别技巧\n{% note danger %}\n\nPostman工具，相信做开发没有几个人不知道，它的最大用处就是用来实现各种HTTP请求。\n\n今天在这里教大家一个技巧，如果使用requests包去模拟HTTP请求失败的话，就用Postman工具去请求，毕竟是可视化的工具，参数、cookies、headers等等比较好设置，只要在Postman上成功实现了请求，使用下图的功能，就可以查看关于请求的相关代码，很方便。\n\n![](postman.png)\n\nPostman下载地址：https://www.getpostman.com/\n{% endnote %}\n","slug":"Python-爬虫利器之requests","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38c00gftabj9il559xy","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>身为一位程序员，没事的时候爬爬糗百笑话、淘宝女郎、小片片。。。。。。有点邪恶了。反正关于<font color=\"red\" size=\"6.5\">爬虫</font>，相信很多人都不陌生，本人没事的时候也写写爬虫的小项目，写过<strong><em>天气报警、糗百笑话、美女图片。。。。。。</em></strong>，后续会在博客中挑选个例子写出来。</p><p>关于数据采集，用Python去写爬虫程序，主要涉及2个主要的Package：<strong><em>Requests &amp;&amp; BeautifulSoup</em></strong>。</p><table><thead><tr><th style=\"text-align:center\">包名</th><th style=\"text-align:center\">功能说明</th></tr></thead><tbody><tr><td style=\"text-align:center\">Requests</td><td style=\"text-align:center\">HTTP获取源数据</td></tr><tr><td style=\"text-align:center\">BeautifulSoup</td><td style=\"text-align:center\">解析 &amp;&amp; 获取目标数据</td></tr></tbody></table><p>关于这2个爬虫利器分为上下篇进行讲解，本篇先介绍<strong><em>Requests</em></strong>，主要功能是进行数据的获取。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>官方原话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The requests library is the de facto standard for making HTTP requests in Python.</span><br><span class=\"line\">It abstracts the complexities of making requests behind a beautiful,</span><br><span class=\"line\">simple API so that you can focus on interacting with services and</span><br><span class=\"line\">consuming data in your application.</span><br></pre></td></tr></table></figure></p>\n<p>简要内容：<strong>Requests</strong>是一个很实用的<strong><em>Python HTTP</em></strong>客户端库，主要用于<strong>API</strong>请求。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<p>如果不指定版本，会自动安装最新的版本，有不熟悉<strong><em>pip</em></strong>的请自行进行恶补。</p>\n<h3 id=\"源码说明\"><a href=\"#源码说明\" class=\"headerlink\" title=\"源码说明\"></a>源码说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def request(method, url, **kwargs):</span><br><span class=\"line\">    &quot;&quot;&quot;Constructs and sends a :class:`Request &lt;Request&gt;`.</span><br><span class=\"line\"></span><br><span class=\"line\">    :param method: method for the new :class:`Request` object.</span><br><span class=\"line\">    :param url: URL for the new :class:`Request` object.</span><br><span class=\"line\">    :param params: (optional) Dictionary or bytes to be sent in the query string for the :class:`Request`.</span><br><span class=\"line\">    :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.</span><br><span class=\"line\">    :param json: (optional) json data to send in the body of the :class:`Request`.</span><br><span class=\"line\">    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.</span><br><span class=\"line\">    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.</span><br><span class=\"line\">    :param files: (optional) Dictionary of ``&apos;name&apos;: file-like-objects`` (or ``&#123;&apos;name&apos;: (&apos;filename&apos;, fileobj)&#125;``) for multipart encoding upload.</span><br><span class=\"line\">    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.</span><br><span class=\"line\">    :param timeout: (optional) How long to wait for the server to send data</span><br><span class=\"line\">        before giving up, as a float, or a (`connect timeout, read timeout</span><br><span class=\"line\">        &lt;user/advanced.html#timeouts&gt;`_) tuple.</span><br><span class=\"line\">    :type timeout: float or tuple</span><br><span class=\"line\">    :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</span><br><span class=\"line\">    :type allow_redirects: bool</span><br><span class=\"line\">    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.</span><br><span class=\"line\">    :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.</span><br><span class=\"line\">    :param stream: (optional) if ``False``, the response content will be immediately downloaded.</span><br><span class=\"line\">    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, (&apos;cert&apos;, &apos;key&apos;) pair.</span><br><span class=\"line\">    :return: :class:`Response &lt;Response&gt;` object</span><br><span class=\"line\">    :rtype: requests.Response</span><br><span class=\"line\"></span><br><span class=\"line\">    Usage::</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt;&gt;&gt; import requests</span><br><span class=\"line\">      &gt;&gt;&gt; req = requests.request(&apos;GET&apos;, &apos;http://httpbin.org/get&apos;)</span><br><span class=\"line\">      &lt;Response [200]&gt;</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>以上代码是Requests包中运用方法的核心，写代码多看看<font color=\"red\" size=\"6.5\">源码</font>，提高代码的质量，很重要。<br>上面的方法是关于HTTP请求的核心方法，挑重点说，方法的参数很多。其中<strong><em>method</em></strong>代表HTTP请求的方式，GET、POST等等；<strong><em>url</em></strong>代表请求的地址；<strong><em>kwargs</em></strong>代表不限参数，但是在注释中罗列了一些重要的参数，查看以你发现，其中这些参数都是关于<strong><em>HTTP协议</em></strong>用到的数据。参数的具体请自动查看源码，下面也会针对于常用的参数进行demo举例。</p>\n<h3 id=\"使用教程\"><a href=\"#使用教程\" class=\"headerlink\" title=\"使用教程\"></a>使用教程</h3><p>HTTP协议请求方式主要有：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、TRACE和CONNECT方法。虽然方法很多，但是工作中常用的只有<font size=\"5\" color=\"red\">GET</font>与<font size=\"5\" color=\"blue\">POST</font>。<br>本人主要对<strong><em>Requests</em></strong>进行介绍，关于HTTP协议的相关知识这个不做过多讲解。</p>\n<ol>\n<li><h4 id=\"无参\"><a href=\"#无参\" class=\"headerlink\" title=\"无参\"></a>无参</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url)</span><br></pre></td></tr></table></figure>\n<p> 最简单的HTTP请求。</p>\n</li>\n<li><h4 id=\"有参\"><a href=\"#有参\" class=\"headerlink\" title=\"有参\"></a>有参</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url=url, params=payload)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url, data=payload)</span><br></pre></td></tr></table></figure>\n<p> GET方法的params参数实际就是url中的参数，使用GET方法可以把参数直接封装在url中，也可以把参数封装起来传递到request方法中。<br> POST方式的参数就是form表单提交的参数。</p>\n</li>\n<li><h4 id=\"json数据\"><a href=\"#json数据\" class=\"headerlink\" title=\"json数据\"></a>json数据</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"># headers中添加上content-type这个参数，指定为json格式</span><br><span class=\"line\">headers = &#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;</span><br><span class=\"line\"># post的时候，将data字典形式的参数用json包转换成json格式。</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\">payload = json.dumps(payload)</span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<p> POST可传递json数据，需要在headers里指定数据的类型。</p>\n</li>\n<li><h4 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">files = &#123;&apos;file&apos;: open(&apos;report.xls&apos;, &apos;rb&apos;)&#125;</span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.post(url, files=files)</span><br></pre></td></tr></table></figure>\n<p> 把文件读取到内存中，在以流的形式传递出去。</p>\n</li>\n<li><h4 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\">headers = &#123;&quot;user-agent&quot;: &quot;my-app/0.0.1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url=url,</span><br><span class=\"line\">                        params=payload,</span><br><span class=\"line\">                        headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url,</span><br><span class=\"line\">                         data=json.dumps(payload)</span><br><span class=\"line\">                         headers=headers)</span><br></pre></td></tr></table></figure>\n<p> 所有的header值必须是string、bytestring或者unicode。</p>\n</li>\n<li><h4 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"># 第一种</span><br><span class=\"line\">cookies_1 = dict(key_1=&apos;value_1&apos;)</span><br><span class=\"line\">response = requests.get(url, cookies=cookies_1)</span><br><span class=\"line\"># 第二种</span><br><span class=\"line\">cookies_2 = requests.cookies.RequestsCookieJar()</span><br><span class=\"line\">cookies_2 = jar.set(&apos;key_2&apos;, &apos;value_2&apos;, domain=url, path=&apos;/cookies&apos;)</span><br><span class=\"line\">r = requests.get(url, cookies=cookies_2)</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看cookies信息以及类型</span><br><span class=\"line\">print response.cookies, type(response.cookies)</span><br></pre></td></tr></table></figure>\n<p> demo中给出了2种set cookies的方式，用第一种的较多，其中输出的cookies是一个<strong><em>requests.cookies.RequestsCookieJar对象</em></strong>。</p>\n</li>\n<li><h4 id=\"timeout\"><a href=\"#timeout\" class=\"headerlink\" title=\"timeout\"></a>timeout</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">response = requests.get(url, timeout=5)</span><br></pre></td></tr></table></figure>\n<p> 请求时间，可选参数。以设定参数timeout秒数时间之后停止等待响应，超过这个实际会停止对服务端的请求，如果是一般的restful api接口也就是几百毫秒的响应时间，如果是大数据量可以设置长一点，默认是无限制。<br> 建议最好，设定一个值，这样请求timeout之后，也会报异常，对异常进行捕捉可以对方法进行监控报警，知道程序是否出现异常状况，时间根据对方的接口而定，建议60 ～ 120，单位：秒。</p>\n</li>\n<li><h4 id=\"allow-redirects\"><a href=\"#allow-redirects\" class=\"headerlink\" title=\"allow_redirects\"></a>allow_redirects</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">response = requests.get(url, allow_redirects=False)</span><br></pre></td></tr></table></figure>\n<p> 参数之一，允许请求重定向，默认值是True，所以这个参数只有有不允许重定向需求的时候采用得到。<br> <strong>HTTP重定向</strong>：服务器无法处理本次发送过来的request请求，服务器会返回一个新的url让客户端可以进行跳转，客户端会自动访问该url地址，但是在客户端是无法分辨是否重定向了， 重定向的状态码是<strong>3XX</strong>，关于状态码下面有粗略的介绍。</p>\n</li>\n<li><h4 id=\"RESPONSE\"><a href=\"#RESPONSE\" class=\"headerlink\" title=\"RESPONSE\"></a>RESPONSE</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;&apos;key&apos;: &apos;value&apos;&#125;</span><br><span class=\"line\">response = requests.get(url=&apos;https://gis90.github.io/&apos;, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"># 请求地址</span><br><span class=\"line\">print response.url</span><br><span class=\"line\"># 响应状态码</span><br><span class=\"line\">print response.status_code</span><br><span class=\"line\"># 响应头</span><br><span class=\"line\">print response.headers</span><br><span class=\"line\"># 文本编码</span><br><span class=\"line\">print response.encoding</span><br><span class=\"line\"># 字符串格式响应内容</span><br><span class=\"line\">print response.text</span><br><span class=\"line\"># 二进制格式响应内容</span><br><span class=\"line\">print response.content</span><br><span class=\"line\"># json格式响应内容</span><br><span class=\"line\">print response.json()</span><br><span class=\"line\"># 原始套接字响应内容</span><br><span class=\"line\">print response.raw</span><br><span class=\"line\"># cookie信息</span><br><span class=\"line\">print response.cookies</span><br></pre></td></tr></table></figure>\n<p> 总结一下需要说明得点。</p>\n<blockquote>\n<p>状态码</p>\n</blockquote>\n \n    <table>\n      <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">描述</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">1**</td>\n        <td style=\"text-align:center;\">信息，服务器收到请求，需要请求者继续执行操作</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">2**</td>\n        <td style=\"text-align:center;\">成功，操作被成功接收并处理</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">3**</td>\n        <td style=\"text-align:center;\">重定向，需要进一步的操作以完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">4**</td>\n        <td style=\"text-align:center;\">客户端错误，请求包含语法错误或无法完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">5**</td>\n        <td style=\"text-align:center;\">服务器错误，服务器在处理请求的过程中发生了错误</td>\n      </tr>\n    </table>\n    \n<blockquote>\n<p>响应头</p>\n</blockquote>\n<p> 返回来的headers是一个<strong><em>requests.structures.CaseInsensitiveDict对象</em></strong>，但是直接可以用dict字典的方式进行数据获取。</p>\n<blockquote>\n<p>text与content</p>\n</blockquote>\n<p> text与content都是返回网页的内容，唯一的区别：content是字节码，而text的内容编码是字符串。</p>\n<blockquote>\n<p>cookies</p>\n</blockquote>\n<p> cookies在上面有详细说明。</p>\n</li>\n</ol>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>Requests官方：<a href=\"https://realpython.com/python-requests/\" target=\"_blank\" rel=\"noopener\">https://realpython.com/python-requests/</a><br>快速上手（中文版）：<a href=\"https://cn.python-requests.org/zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">https://cn.python-requests.org/zh_CN/latest/user/quickstart.html</a><br>快速上手（高阶版）：<a href=\"https://cn.python-requests.org//zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">https://cn.python-requests.org//zh_CN/latest/</a></p>\n<h3 id=\"特别技巧\"><a href=\"#特别技巧\" class=\"headerlink\" title=\"特别技巧\"></a>特别技巧</h3><div class=\"note danger\">\n            <p>Postman工具，相信做开发没有几个人不知道，它的最大用处就是用来实现各种HTTP请求。</p><p>今天在这里教大家一个技巧，如果使用requests包去模拟HTTP请求失败的话，就用Postman工具去请求，毕竟是可视化的工具，参数、cookies、headers等等比较好设置，只要在Postman上成功实现了请求，使用下图的功能，就可以查看关于请求的相关代码，很方便。</p><p><img src=\"postman.png\" alt></p><p>Postman下载地址：<a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></p>\n          </div>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>身为一位程序员，没事的时候爬爬糗百笑话、淘宝女郎、小片片。。。。。。有点邪恶了。反正关于<font color=\"red\" size=\"6.5\">爬虫</font>，相信很多人都不陌生，本人没事的时候也写写爬虫的小项目，写过<strong><em>天气报警、糗百笑话、美女图片。。。。。。</em></strong>，后续会在博客中挑选个例子写出来。</p><p>关于数据采集，用Python去写爬虫程序，主要涉及2个主要的Package：<strong><em>Requests &amp;&amp; BeautifulSoup</em></strong>。</p><table><thead><tr><th style=\"text-align:center\">包名</th><th style=\"text-align:center\">功能说明</th></tr></thead><tbody><tr><td style=\"text-align:center\">Requests</td><td style=\"text-align:center\">HTTP获取源数据</td></tr><tr><td style=\"text-align:center\">BeautifulSoup</td><td style=\"text-align:center\">解析 &amp;&amp; 获取目标数据</td></tr></tbody></table><p>关于这2个爬虫利器分为上下篇进行讲解，本篇先介绍<strong><em>Requests</em></strong>，主要功能是进行数据的获取。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>官方原话：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The requests library is the de facto standard for making HTTP requests in Python.</span><br><span class=\"line\">It abstracts the complexities of making requests behind a beautiful,</span><br><span class=\"line\">simple API so that you can focus on interacting with services and</span><br><span class=\"line\">consuming data in your application.</span><br></pre></td></tr></table></figure></p>\n<p>简要内容：<strong>Requests</strong>是一个很实用的<strong><em>Python HTTP</em></strong>客户端库，主要用于<strong>API</strong>请求。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<p>如果不指定版本，会自动安装最新的版本，有不熟悉<strong><em>pip</em></strong>的请自行进行恶补。</p>\n<h3 id=\"源码说明\"><a href=\"#源码说明\" class=\"headerlink\" title=\"源码说明\"></a>源码说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def request(method, url, **kwargs):</span><br><span class=\"line\">    &quot;&quot;&quot;Constructs and sends a :class:`Request &lt;Request&gt;`.</span><br><span class=\"line\"></span><br><span class=\"line\">    :param method: method for the new :class:`Request` object.</span><br><span class=\"line\">    :param url: URL for the new :class:`Request` object.</span><br><span class=\"line\">    :param params: (optional) Dictionary or bytes to be sent in the query string for the :class:`Request`.</span><br><span class=\"line\">    :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.</span><br><span class=\"line\">    :param json: (optional) json data to send in the body of the :class:`Request`.</span><br><span class=\"line\">    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.</span><br><span class=\"line\">    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.</span><br><span class=\"line\">    :param files: (optional) Dictionary of ``&apos;name&apos;: file-like-objects`` (or ``&#123;&apos;name&apos;: (&apos;filename&apos;, fileobj)&#125;``) for multipart encoding upload.</span><br><span class=\"line\">    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.</span><br><span class=\"line\">    :param timeout: (optional) How long to wait for the server to send data</span><br><span class=\"line\">        before giving up, as a float, or a (`connect timeout, read timeout</span><br><span class=\"line\">        &lt;user/advanced.html#timeouts&gt;`_) tuple.</span><br><span class=\"line\">    :type timeout: float or tuple</span><br><span class=\"line\">    :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.</span><br><span class=\"line\">    :type allow_redirects: bool</span><br><span class=\"line\">    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.</span><br><span class=\"line\">    :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.</span><br><span class=\"line\">    :param stream: (optional) if ``False``, the response content will be immediately downloaded.</span><br><span class=\"line\">    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, (&apos;cert&apos;, &apos;key&apos;) pair.</span><br><span class=\"line\">    :return: :class:`Response &lt;Response&gt;` object</span><br><span class=\"line\">    :rtype: requests.Response</span><br><span class=\"line\"></span><br><span class=\"line\">    Usage::</span><br><span class=\"line\"></span><br><span class=\"line\">      &gt;&gt;&gt; import requests</span><br><span class=\"line\">      &gt;&gt;&gt; req = requests.request(&apos;GET&apos;, &apos;http://httpbin.org/get&apos;)</span><br><span class=\"line\">      &lt;Response [200]&gt;</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n<p>以上代码是Requests包中运用方法的核心，写代码多看看<font color=\"red\" size=\"6.5\">源码</font>，提高代码的质量，很重要。<br>上面的方法是关于HTTP请求的核心方法，挑重点说，方法的参数很多。其中<strong><em>method</em></strong>代表HTTP请求的方式，GET、POST等等；<strong><em>url</em></strong>代表请求的地址；<strong><em>kwargs</em></strong>代表不限参数，但是在注释中罗列了一些重要的参数，查看以你发现，其中这些参数都是关于<strong><em>HTTP协议</em></strong>用到的数据。参数的具体请自动查看源码，下面也会针对于常用的参数进行demo举例。</p>\n<h3 id=\"使用教程\"><a href=\"#使用教程\" class=\"headerlink\" title=\"使用教程\"></a>使用教程</h3><p>HTTP协议请求方式主要有：GET、POST、HEAD、OPTIONS、PUT、PATCH、DELETE、TRACE和CONNECT方法。虽然方法很多，但是工作中常用的只有<font size=\"5\" color=\"red\">GET</font>与<font size=\"5\" color=\"blue\">POST</font>。<br>本人主要对<strong><em>Requests</em></strong>进行介绍，关于HTTP协议的相关知识这个不做过多讲解。</p>\n<ol>\n<li><h4 id=\"无参\"><a href=\"#无参\" class=\"headerlink\" title=\"无参\"></a>无参</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url)</span><br></pre></td></tr></table></figure>\n<p> 最简单的HTTP请求。</p>\n</li>\n<li><h4 id=\"有参\"><a href=\"#有参\" class=\"headerlink\" title=\"有参\"></a>有参</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url=url, params=payload)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url, data=payload)</span><br></pre></td></tr></table></figure>\n<p> GET方法的params参数实际就是url中的参数，使用GET方法可以把参数直接封装在url中，也可以把参数封装起来传递到request方法中。<br> POST方式的参数就是form表单提交的参数。</p>\n</li>\n<li><h4 id=\"json数据\"><a href=\"#json数据\" class=\"headerlink\" title=\"json数据\"></a>json数据</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"># headers中添加上content-type这个参数，指定为json格式</span><br><span class=\"line\">headers = &#123;&apos;Content-Type&apos;: &apos;application/json&apos;&#125;</span><br><span class=\"line\"># post的时候，将data字典形式的参数用json包转换成json格式。</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\">payload = json.dumps(payload)</span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<p> POST可传递json数据，需要在headers里指定数据的类型。</p>\n</li>\n<li><h4 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">files = &#123;&apos;file&apos;: open(&apos;report.xls&apos;, &apos;rb&apos;)&#125;</span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">r = requests.post(url, files=files)</span><br></pre></td></tr></table></figure>\n<p> 把文件读取到内存中，在以流的形式传递出去。</p>\n</li>\n<li><h4 id=\"请求头\"><a href=\"#请求头\" class=\"headerlink\" title=\"请求头\"></a>请求头</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import json</span><br><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">payload = &#123;&quot;key&quot;: &quot;value&quot;&#125;</span><br><span class=\"line\">headers = &#123;&quot;user-agent&quot;: &quot;my-app/0.0.1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># GET</span><br><span class=\"line\">response = requests.get(url=url,</span><br><span class=\"line\">                        params=payload,</span><br><span class=\"line\">                        headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">response = requests.post(url=url,</span><br><span class=\"line\">                         data=json.dumps(payload)</span><br><span class=\"line\">                         headers=headers)</span><br></pre></td></tr></table></figure>\n<p> 所有的header值必须是string、bytestring或者unicode。</p>\n</li>\n<li><h4 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\"># 第一种</span><br><span class=\"line\">cookies_1 = dict(key_1=&apos;value_1&apos;)</span><br><span class=\"line\">response = requests.get(url, cookies=cookies_1)</span><br><span class=\"line\"># 第二种</span><br><span class=\"line\">cookies_2 = requests.cookies.RequestsCookieJar()</span><br><span class=\"line\">cookies_2 = jar.set(&apos;key_2&apos;, &apos;value_2&apos;, domain=url, path=&apos;/cookies&apos;)</span><br><span class=\"line\">r = requests.get(url, cookies=cookies_2)</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看cookies信息以及类型</span><br><span class=\"line\">print response.cookies, type(response.cookies)</span><br></pre></td></tr></table></figure>\n<p> demo中给出了2种set cookies的方式，用第一种的较多，其中输出的cookies是一个<strong><em>requests.cookies.RequestsCookieJar对象</em></strong>。</p>\n</li>\n<li><h4 id=\"timeout\"><a href=\"#timeout\" class=\"headerlink\" title=\"timeout\"></a>timeout</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">response = requests.get(url, timeout=5)</span><br></pre></td></tr></table></figure>\n<p> 请求时间，可选参数。以设定参数timeout秒数时间之后停止等待响应，超过这个实际会停止对服务端的请求，如果是一般的restful api接口也就是几百毫秒的响应时间，如果是大数据量可以设置长一点，默认是无限制。<br> 建议最好，设定一个值，这样请求timeout之后，也会报异常，对异常进行捕捉可以对方法进行监控报警，知道程序是否出现异常状况，时间根据对方的接口而定，建议60 ～ 120，单位：秒。</p>\n</li>\n<li><h4 id=\"allow-redirects\"><a href=\"#allow-redirects\" class=\"headerlink\" title=\"allow_redirects\"></a>allow_redirects</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;https://gis90.github.io/&quot;</span><br><span class=\"line\">response = requests.get(url, allow_redirects=False)</span><br></pre></td></tr></table></figure>\n<p> 参数之一，允许请求重定向，默认值是True，所以这个参数只有有不允许重定向需求的时候采用得到。<br> <strong>HTTP重定向</strong>：服务器无法处理本次发送过来的request请求，服务器会返回一个新的url让客户端可以进行跳转，客户端会自动访问该url地址，但是在客户端是无法分辨是否重定向了， 重定向的状态码是<strong>3XX</strong>，关于状态码下面有粗略的介绍。</p>\n</li>\n<li><h4 id=\"RESPONSE\"><a href=\"#RESPONSE\" class=\"headerlink\" title=\"RESPONSE\"></a>RESPONSE</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;&apos;key&apos;: &apos;value&apos;&#125;</span><br><span class=\"line\">response = requests.get(url=&apos;https://gis90.github.io/&apos;, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"># 请求地址</span><br><span class=\"line\">print response.url</span><br><span class=\"line\"># 响应状态码</span><br><span class=\"line\">print response.status_code</span><br><span class=\"line\"># 响应头</span><br><span class=\"line\">print response.headers</span><br><span class=\"line\"># 文本编码</span><br><span class=\"line\">print response.encoding</span><br><span class=\"line\"># 字符串格式响应内容</span><br><span class=\"line\">print response.text</span><br><span class=\"line\"># 二进制格式响应内容</span><br><span class=\"line\">print response.content</span><br><span class=\"line\"># json格式响应内容</span><br><span class=\"line\">print response.json()</span><br><span class=\"line\"># 原始套接字响应内容</span><br><span class=\"line\">print response.raw</span><br><span class=\"line\"># cookie信息</span><br><span class=\"line\">print response.cookies</span><br></pre></td></tr></table></figure>\n<p> 总结一下需要说明得点。</p>\n<blockquote>\n<p>状态码</p>\n</blockquote>\n \n    <table>\n      <tr>\n        <th style=\"text-align:center;\">类型</th>\n        <th style=\"text-align:center;\">描述</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">1**</td>\n        <td style=\"text-align:center;\">信息，服务器收到请求，需要请求者继续执行操作</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">2**</td>\n        <td style=\"text-align:center;\">成功，操作被成功接收并处理</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">3**</td>\n        <td style=\"text-align:center;\">重定向，需要进一步的操作以完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">4**</td>\n        <td style=\"text-align:center;\">客户端错误，请求包含语法错误或无法完成请求</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">5**</td>\n        <td style=\"text-align:center;\">服务器错误，服务器在处理请求的过程中发生了错误</td>\n      </tr>\n    </table>\n    \n<blockquote>\n<p>响应头</p>\n</blockquote>\n<p> 返回来的headers是一个<strong><em>requests.structures.CaseInsensitiveDict对象</em></strong>，但是直接可以用dict字典的方式进行数据获取。</p>\n<blockquote>\n<p>text与content</p>\n</blockquote>\n<p> text与content都是返回网页的内容，唯一的区别：content是字节码，而text的内容编码是字符串。</p>\n<blockquote>\n<p>cookies</p>\n</blockquote>\n<p> cookies在上面有详细说明。</p>\n</li>\n</ol>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>Requests官方：<a href=\"https://realpython.com/python-requests/\" target=\"_blank\" rel=\"noopener\">https://realpython.com/python-requests/</a><br>快速上手（中文版）：<a href=\"https://cn.python-requests.org/zh_CN/latest/user/quickstart.html\" target=\"_blank\" rel=\"noopener\">https://cn.python-requests.org/zh_CN/latest/user/quickstart.html</a><br>快速上手（高阶版）：<a href=\"https://cn.python-requests.org//zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">https://cn.python-requests.org//zh_CN/latest/</a></p>\n<h3 id=\"特别技巧\"><a href=\"#特别技巧\" class=\"headerlink\" title=\"特别技巧\"></a>特别技巧</h3><div class=\"note danger\">\n            <p>Postman工具，相信做开发没有几个人不知道，它的最大用处就是用来实现各种HTTP请求。</p><p>今天在这里教大家一个技巧，如果使用requests包去模拟HTTP请求失败的话，就用Postman工具去请求，毕竟是可视化的工具，参数、cookies、headers等等比较好设置，只要在Postman上成功实现了请求，使用下图的功能，就可以查看关于请求的相关代码，很方便。</p><p><img src=\"postman.png\" alt></p><p>Postman下载地址：<a href=\"https://www.getpostman.com/\" target=\"_blank\" rel=\"noopener\">https://www.getpostman.com/</a></p>\n          </div>"},{"title":"Python爬虫利器之BS4(下篇)","comments":0,"top":false,"abbrlink":34936,"date":"2019-05-13T13:01:43.000Z","updated":"2019-05-13T13:01:43.000Z","desc":"Python爬虫利器之BeautifulSoup介绍","keywords":"Python, Packages, 爬虫, BeautifulSoup, requests","_content":"\n### 背景\n\n{% note primary %}\n\n关于爬虫的教程数据获取在上篇requestts文章中已经讲解过了，本篇讲解爬虫的数据清洗利器***BeautifulSoup***，继续为<font color='red' size=6.5>爬虫</font>而服务。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 简介\n\nPypi官方的简介：\n```\nBeautiful Soup is a library that makes it easy to scrape information from web pages.\nIt sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching,\nand modifying the parse tree.\n```\n简明扼要，***BeautifulSoup***是用来解析HTML的工具。\n\n### 安装\n\n```\npip install beautifulsoup4\n```\n很多单，不多说。\n\n### 解析器\n\n1. #### 安装\n\n    ```\n    pip install lxml\n    pip install html5lib\n    ```\n\n2. #### 比对\n\n    {% raw %}\n    <table>\n      <tr>\n        <th style=\"text-align:center;\">解析器</th>\n        <th style=\"text-align:center;\">使用方法</th>\n        <th style=\"text-align:center;\">优势</th>\n        <th style=\"text-align:center;\">劣势</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">Python标准库</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html.parser\")</td>\n        <td style=\"text-align:center;\">\n        Python的内置标准库\n        执行速度适中\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml HTML 解析器</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"lxml\")</td>\n        <td style=\"text-align:center;\">\n        速度快\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml XML 解析器</td>\n        <td style=\"text-align:center;\">\n        BeautifulSoup(markup, [\"lxml-xml\"])\n        BeautifulSoup(markup, \"xml\")\n        </td>\n        <td style=\"text-align:center;\">\n        速度快\n        唯一支持XML的解析器\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">html5lib</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html5lib\")</td>\n        <td style=\"text-align:center;\">最好的容错性\n        以浏览器的方式解析文档\n        生成HTML5格式的文档\n        </td>\n        <td style=\"text-align:center;\">\n        速度慢\n        不依赖外部扩展\n        </td>\n      </tr>\n    </table>\n    {% endraw %}\n\n    官方是推荐使用lxml作为解析器，效率更高以及容错能力也比较高，在Python2.7.3之前的版本和Python3中3.2.2之前的版本，必须安装lxml或html5lib, 因为那些Python版本的标准库中内置的HTML解析方法不够稳定.\n\n    个人也推荐使用lxml，确实比其他的解析起来快一些，如果不想安装解析器的话那么就推荐使用html5lib，因为2.7版本之后不用安装。\n\n    {% note danger %}\n    <font color='red' size=5>提示</font>\n    如果一段HTML或XML文档格式不正确的话,那么在不同的解析器中返回的结果可能是不一样的,查看 解析器之间的区别 了解更多细节\n    {% endnote %}\n\n### 基础语法\n\n```\nfrom bs4 import BeautifulSoup\n\n\nhtml_doc = \"\"\"\n<html>\n    <head>\n        <title>The Dormouse's story</title>\n    </head>\n    <body>\n        <p class=\"title\"><b>The Dormouse's story</b></p>\n        <p class=\"story\">Once upon a time there were three little sisters; and their names were\n        <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>,\n        <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n        <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\n        and they lived at the bottom of a well.</p>\n        <p class=\"story\">...</p>\n    </body>\n</html>\n\"\"\"\n\nsoup = BeautifulSoup(html_doc, \"lxml\")\nprint soup.prettify()\n```\n这里的html的demo直接引用与官网，基础语法主要做了2件事情，第一把html加载进来，第二设定一下解析器。\n关于加载html文档这里直接是引用的string，可以用上篇中requests包，获取返回的html数据运用response的text或者content都可以；或者直接用open打开下载好的html也可以。\n\n### soup的对象说明\n\nBeautifulSoup将HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为4种: **Tag、NavigableString、BeautifulSoup、Comment**。\n\n1. #### Tag\n\n    ***Tag对象***：对应着XML或HTML原生文档中的tag，说白了就是标签，如果连标签都不明白，我真的没法解释了。\n    ```\n    print soup.p\n    # <p class=\"title\"><b>The Dormouse's story</b></p>\n\n    print soup.title\n    # <title>The Dormouse's story</title>\n    ```\n\n    每个Tag有两个重要的属性name和attrs。\n\n    > Name\n\n    通过.name获取tag标签:\n    ```\n    p = soup.p\n    print p.name\n    # p\n    ```\n\n    > Attributes\n\n    一个tag可能会有多个属性，.tag的属性的获取方法与dict字典相同：\n    ```\n    p = soup.p\n    # 获取\n    print p.attrs\n    # {'class': ['title']}\n    # 设定set\n    p['class'] = 'new_title'\n    p['id'] = 1\n    print p.attrs\n    # {'class': 'new_title', 'id': 1}\n    ```\n\n    > 多值属性\n\n    在HTML5中会常见的多值的属性，例如class='1 2 3'，在Beautiful Soup中多值属性的返回类型是list:\n    ```\n    css_soup = BeautifulSoup('<p class=\"body strikeout\"></p>')\n    css_soup.p['class']\n    # [\"body\", \"strikeout\"]\n\n    css_soup = BeautifulSoup('<p class=\"body\"></p>')\n    css_soup.p['class']\n    # [\"body\"]\n    ```\n\n2. #### NavigableString\n\n    ***NavigableString对象***：获取标签内部的内容，这个就比较简单了，通过.string进行获取，直接看demo：\n    ```\n    print p.string\n    # The Dormouse's story\n    ```\n\n3. #### BeautifulSoup\n\n    ***BeautifulSoup对象***：表示一个文档的全部内容，它支持遍历、搜索，没有name和attribute属性。\n    说白了，这个其实就把html作为一个soup对象了，在基础方法中的设定。\n\n4. #### Comment\n\n    ***Comment对象***：这个对象是用来解决html文档中的注释用的，它是一个特殊类型的NavigableString对象。\n    在这里，直接引用了官方的demo：\n    ```\n    markup = \"<b><!--Hey, buddy. Want to buy a used parser?--></b>\"\n    soup = BeautifulSoup(markup)\n    comment = soup.b.string\n    print comment\n    # Hey, buddy. Want to buy a used parser?\n    print type(comment)\n    # <class 'bs4.element.Comment'>\n    ```\n\n### 遍历\n\n关于遍历不进行详细讲解了，主要没咋用过，做爬虫就是数据获取、清洗，至于遍历数据，还不如直接进行搜索，感兴趣的可以在**学习参考**中去官方进行学习。\n在这里列举一下我用过并且觉得常用的方法：\n\n1. #### 子节点\n\n    通过.contents 和 .children，可以将tag的子节点以列表的方式输出。\n    ```\n    head_tag = soup.head\n    print head_tag\n    # <head><title>The Dormouse's story</title></head>\n\n    print head_tag.contents\n    # [<title>The Dormouse's story</title>]\n    print len(head_tag.contents)\n    # 1\n\n    for child in title_tag.children:\n        print child\n        # <title>The Dormouse's story</title>\n    ```\n\n2. #### 父节点\n\n    通过.parent属性来获取元素的父节点，只获取当前元素的父节点而且只寻找一次。\n    ```\n    title_tag = soup.title\n    print title_tag\n    # <title>The Dormouse's story</title>\n    print title_tag.parent\n    # <head><title>The Dormouse's story</title></head>\n    ```\n    通过.parents属性可以递归得到元素的所有父辈节点，一级一级的向父节点去寻找，最终寻找到根节点。\n    ```\n    link = soup.a\n    print line\n    # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>\n    for parent in link.parents:\n        if parent is None:\n            print parent\n        else:\n            print parent.name\n    # p body html [document] None\n    ```\n\n### 搜索\n\n这个是重点，因为数据索取主要通过搜索来进行获取，BeautifulSoup官方文档主要介绍了find()和find_all()搜索方法，但是根据传入的参数不一样，方法又会变成多种，这里列举一些常用的搜索方法。\n先简单说一下find()和find_all()方法的区别：1.就是find()返回搜索查询到的第一条数据，find_all()会返回所有查询到的数据；2.find_all()返回的数据类型是**class 'bs4.element.ResultSet**，find()返回的数据类型**class 'bs4.element.Tag**，可知find_all()返回的是一个set集合类型。\n日常搜索数据中还是用find_all()比较多，下面的方法介绍我也使用find_all()进行举例。\n\n源码方法：find_all( name , attrs , recursive , string , **kwargs )\n\n1. #### 标签名\n\n    根据tag也就是标签名字进行搜索。\n    ```\n    a = soup.find_all('a')\n    print a\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n    也可以根据多个标签名进行查看，具体看demo：\n    ```\n    ab = soup.find_all([\"a\", \"b\"])\n    print ab\n    # [<b>The Dormouse's story</b>,\n    #  <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n\n2. #### attr属性\n\n    可以根据标签的内在属性进行查询，参数可以写多个，下面例子给出了多种写法。\n    ```\n    link1_1 = soup.find_all(attrs={'id': 'link1', 'key': 'value'})\n    link1_2 = soup.find_all(id='link1')\n    print link1_1, link1_2\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>]\n    ```\n    如果在查询数据中，属性固定可以多用此方法。\n\n3. #### class\n\n    通过**class_**参数搜索有指定CSS类名的tag，class在Python中是保留字，所以使用***class_***，使用看demo:\n    ```\n    sister_css = soup.find_all(class_=\"sister\")\n    print sister_css\n    #  <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n\n4. #### string\n\n    通过string参数可以搜搜文档中的字符串内容,与name参数的可选值一样，string参数接受字符串、正则表达式、列表、True。\n    ```\n    print soup.find_all(string=\"Elsie\")\n    # [u'Elsie']\n\n    print soup.find_all(string=[\"Tillie\", \"Elsie\", \"Lacie\"])\n    # [u'Elsie', u'Lacie', u'Tillie']\n\n    print soup.find_all(string=re.compile(\"Dormouse\"))\n    # [u\"The Dormouse's story\", u\"The Dormouse's story\"]\n    ```\n\n5. #### limit\n\n    这个参数的使用，说白了与SQL的limit用法一样，限制返回数据的条数，防止文档树很大导致搜索响应过慢。\n    ```\n    print soup.find_all(\"a\", limit=2)\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>]\n    ```\n\n6. #### recursive\n\n    设置是否进行遍历子节点，调用tag的find_all()方法时，BeautifulSoup会检索当前tag的所有子孙节点，如果只想搜索tag的直接子节点，可以使用参数recursive=False。\n\n    ```\n    print soup.html.find_all(\"title\")\n    # [<title>The Dormouse's story</title>]\n\n    print soup.html.find_all(\"title\", recursive=False)\n    # []\n    ```\n\n7. #### get_text() 方法\n\n    获取到tag中包含的所有文本内容。\n    ```\n    print soup.find_all('a', string='Elsie')[0].get_text()\n    # 'Elsie'\n    print soup.find_all('a', string='Elsie')[0].string\n    # 'Elsie'\n    ```\n8. #### 组合式\n\n    所有的参数可以一起使用，增加过滤条件加快搜索效率，前面涉及的1～6参数都可以进行组合，写了几个简单的小demo：\n    ```\n    sister_css = soup.find_all('a', class_=\"sister\")\n    sister_css = soup.find_all('a', class_=\"sister\", limit=2)\n    link1 = soup.find_all('a', attrs={'id': 'link1'})\n    link1 = soup.find_all('a', attrs={'id': 'link1'}, recursive=False)\n    strings = soup.find_all('a', string=[\"Tillie\", \"Elsie\", \"Lacie\"])\n    ```\n\n### 总结\n\n本篇主要讲述了BeautifulSoup的基本使用方法，感兴趣的、深入研究的请自行查看官方方法，具体的地址也在下面整理出来了。\n\n### 学习参考\n\nBeautifulSoup(4.4.0)中文文档：http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\nPypi介绍：https://pypi.org/project/beautifulsoup4/\nBeautifulSoup(4.4.0)官方文档：https://www.crummy.com/software/BeautifulSoup/bs4/doc/\n","source":"_posts/Python-爬虫利器之BeautifulSoup.md","raw":"---\ntitle: Python爬虫利器之BS4(下篇)\ncomments: false\ncategories:\n  - [Python]\ntags: [Python, Python包, 爬虫系列]\ntop: false\nabbrlink: 34936\ndate: 2019-05-13 21:01:43\nupdated: 2019-05-13 21:01:43\ndesc: Python爬虫利器之BeautifulSoup介绍\nkeywords: Python, Packages, 爬虫, BeautifulSoup, requests\n---\n\n### 背景\n\n{% note primary %}\n\n关于爬虫的教程数据获取在上篇requestts文章中已经讲解过了，本篇讲解爬虫的数据清洗利器***BeautifulSoup***，继续为<font color='red' size=6.5>爬虫</font>而服务。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 简介\n\nPypi官方的简介：\n```\nBeautiful Soup is a library that makes it easy to scrape information from web pages.\nIt sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching,\nand modifying the parse tree.\n```\n简明扼要，***BeautifulSoup***是用来解析HTML的工具。\n\n### 安装\n\n```\npip install beautifulsoup4\n```\n很多单，不多说。\n\n### 解析器\n\n1. #### 安装\n\n    ```\n    pip install lxml\n    pip install html5lib\n    ```\n\n2. #### 比对\n\n    {% raw %}\n    <table>\n      <tr>\n        <th style=\"text-align:center;\">解析器</th>\n        <th style=\"text-align:center;\">使用方法</th>\n        <th style=\"text-align:center;\">优势</th>\n        <th style=\"text-align:center;\">劣势</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">Python标准库</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html.parser\")</td>\n        <td style=\"text-align:center;\">\n        Python的内置标准库\n        执行速度适中\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml HTML 解析器</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"lxml\")</td>\n        <td style=\"text-align:center;\">\n        速度快\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml XML 解析器</td>\n        <td style=\"text-align:center;\">\n        BeautifulSoup(markup, [\"lxml-xml\"])\n        BeautifulSoup(markup, \"xml\")\n        </td>\n        <td style=\"text-align:center;\">\n        速度快\n        唯一支持XML的解析器\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">html5lib</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html5lib\")</td>\n        <td style=\"text-align:center;\">最好的容错性\n        以浏览器的方式解析文档\n        生成HTML5格式的文档\n        </td>\n        <td style=\"text-align:center;\">\n        速度慢\n        不依赖外部扩展\n        </td>\n      </tr>\n    </table>\n    {% endraw %}\n\n    官方是推荐使用lxml作为解析器，效率更高以及容错能力也比较高，在Python2.7.3之前的版本和Python3中3.2.2之前的版本，必须安装lxml或html5lib, 因为那些Python版本的标准库中内置的HTML解析方法不够稳定.\n\n    个人也推荐使用lxml，确实比其他的解析起来快一些，如果不想安装解析器的话那么就推荐使用html5lib，因为2.7版本之后不用安装。\n\n    {% note danger %}\n    <font color='red' size=5>提示</font>\n    如果一段HTML或XML文档格式不正确的话,那么在不同的解析器中返回的结果可能是不一样的,查看 解析器之间的区别 了解更多细节\n    {% endnote %}\n\n### 基础语法\n\n```\nfrom bs4 import BeautifulSoup\n\n\nhtml_doc = \"\"\"\n<html>\n    <head>\n        <title>The Dormouse's story</title>\n    </head>\n    <body>\n        <p class=\"title\"><b>The Dormouse's story</b></p>\n        <p class=\"story\">Once upon a time there were three little sisters; and their names were\n        <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>,\n        <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n        <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\n        and they lived at the bottom of a well.</p>\n        <p class=\"story\">...</p>\n    </body>\n</html>\n\"\"\"\n\nsoup = BeautifulSoup(html_doc, \"lxml\")\nprint soup.prettify()\n```\n这里的html的demo直接引用与官网，基础语法主要做了2件事情，第一把html加载进来，第二设定一下解析器。\n关于加载html文档这里直接是引用的string，可以用上篇中requests包，获取返回的html数据运用response的text或者content都可以；或者直接用open打开下载好的html也可以。\n\n### soup的对象说明\n\nBeautifulSoup将HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为4种: **Tag、NavigableString、BeautifulSoup、Comment**。\n\n1. #### Tag\n\n    ***Tag对象***：对应着XML或HTML原生文档中的tag，说白了就是标签，如果连标签都不明白，我真的没法解释了。\n    ```\n    print soup.p\n    # <p class=\"title\"><b>The Dormouse's story</b></p>\n\n    print soup.title\n    # <title>The Dormouse's story</title>\n    ```\n\n    每个Tag有两个重要的属性name和attrs。\n\n    > Name\n\n    通过.name获取tag标签:\n    ```\n    p = soup.p\n    print p.name\n    # p\n    ```\n\n    > Attributes\n\n    一个tag可能会有多个属性，.tag的属性的获取方法与dict字典相同：\n    ```\n    p = soup.p\n    # 获取\n    print p.attrs\n    # {'class': ['title']}\n    # 设定set\n    p['class'] = 'new_title'\n    p['id'] = 1\n    print p.attrs\n    # {'class': 'new_title', 'id': 1}\n    ```\n\n    > 多值属性\n\n    在HTML5中会常见的多值的属性，例如class='1 2 3'，在Beautiful Soup中多值属性的返回类型是list:\n    ```\n    css_soup = BeautifulSoup('<p class=\"body strikeout\"></p>')\n    css_soup.p['class']\n    # [\"body\", \"strikeout\"]\n\n    css_soup = BeautifulSoup('<p class=\"body\"></p>')\n    css_soup.p['class']\n    # [\"body\"]\n    ```\n\n2. #### NavigableString\n\n    ***NavigableString对象***：获取标签内部的内容，这个就比较简单了，通过.string进行获取，直接看demo：\n    ```\n    print p.string\n    # The Dormouse's story\n    ```\n\n3. #### BeautifulSoup\n\n    ***BeautifulSoup对象***：表示一个文档的全部内容，它支持遍历、搜索，没有name和attribute属性。\n    说白了，这个其实就把html作为一个soup对象了，在基础方法中的设定。\n\n4. #### Comment\n\n    ***Comment对象***：这个对象是用来解决html文档中的注释用的，它是一个特殊类型的NavigableString对象。\n    在这里，直接引用了官方的demo：\n    ```\n    markup = \"<b><!--Hey, buddy. Want to buy a used parser?--></b>\"\n    soup = BeautifulSoup(markup)\n    comment = soup.b.string\n    print comment\n    # Hey, buddy. Want to buy a used parser?\n    print type(comment)\n    # <class 'bs4.element.Comment'>\n    ```\n\n### 遍历\n\n关于遍历不进行详细讲解了，主要没咋用过，做爬虫就是数据获取、清洗，至于遍历数据，还不如直接进行搜索，感兴趣的可以在**学习参考**中去官方进行学习。\n在这里列举一下我用过并且觉得常用的方法：\n\n1. #### 子节点\n\n    通过.contents 和 .children，可以将tag的子节点以列表的方式输出。\n    ```\n    head_tag = soup.head\n    print head_tag\n    # <head><title>The Dormouse's story</title></head>\n\n    print head_tag.contents\n    # [<title>The Dormouse's story</title>]\n    print len(head_tag.contents)\n    # 1\n\n    for child in title_tag.children:\n        print child\n        # <title>The Dormouse's story</title>\n    ```\n\n2. #### 父节点\n\n    通过.parent属性来获取元素的父节点，只获取当前元素的父节点而且只寻找一次。\n    ```\n    title_tag = soup.title\n    print title_tag\n    # <title>The Dormouse's story</title>\n    print title_tag.parent\n    # <head><title>The Dormouse's story</title></head>\n    ```\n    通过.parents属性可以递归得到元素的所有父辈节点，一级一级的向父节点去寻找，最终寻找到根节点。\n    ```\n    link = soup.a\n    print line\n    # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>\n    for parent in link.parents:\n        if parent is None:\n            print parent\n        else:\n            print parent.name\n    # p body html [document] None\n    ```\n\n### 搜索\n\n这个是重点，因为数据索取主要通过搜索来进行获取，BeautifulSoup官方文档主要介绍了find()和find_all()搜索方法，但是根据传入的参数不一样，方法又会变成多种，这里列举一些常用的搜索方法。\n先简单说一下find()和find_all()方法的区别：1.就是find()返回搜索查询到的第一条数据，find_all()会返回所有查询到的数据；2.find_all()返回的数据类型是**class 'bs4.element.ResultSet**，find()返回的数据类型**class 'bs4.element.Tag**，可知find_all()返回的是一个set集合类型。\n日常搜索数据中还是用find_all()比较多，下面的方法介绍我也使用find_all()进行举例。\n\n源码方法：find_all( name , attrs , recursive , string , **kwargs )\n\n1. #### 标签名\n\n    根据tag也就是标签名字进行搜索。\n    ```\n    a = soup.find_all('a')\n    print a\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n    也可以根据多个标签名进行查看，具体看demo：\n    ```\n    ab = soup.find_all([\"a\", \"b\"])\n    print ab\n    # [<b>The Dormouse's story</b>,\n    #  <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n\n2. #### attr属性\n\n    可以根据标签的内在属性进行查询，参数可以写多个，下面例子给出了多种写法。\n    ```\n    link1_1 = soup.find_all(attrs={'id': 'link1', 'key': 'value'})\n    link1_2 = soup.find_all(id='link1')\n    print link1_1, link1_2\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>]\n    ```\n    如果在查询数据中，属性固定可以多用此方法。\n\n3. #### class\n\n    通过**class_**参数搜索有指定CSS类名的tag，class在Python中是保留字，所以使用***class_***，使用看demo:\n    ```\n    sister_css = soup.find_all(class_=\"sister\")\n    print sister_css\n    #  <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]\n    ```\n\n4. #### string\n\n    通过string参数可以搜搜文档中的字符串内容,与name参数的可选值一样，string参数接受字符串、正则表达式、列表、True。\n    ```\n    print soup.find_all(string=\"Elsie\")\n    # [u'Elsie']\n\n    print soup.find_all(string=[\"Tillie\", \"Elsie\", \"Lacie\"])\n    # [u'Elsie', u'Lacie', u'Tillie']\n\n    print soup.find_all(string=re.compile(\"Dormouse\"))\n    # [u\"The Dormouse's story\", u\"The Dormouse's story\"]\n    ```\n\n5. #### limit\n\n    这个参数的使用，说白了与SQL的limit用法一样，限制返回数据的条数，防止文档树很大导致搜索响应过慢。\n    ```\n    print soup.find_all(\"a\", limit=2)\n    # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>,\n    #  <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>]\n    ```\n\n6. #### recursive\n\n    设置是否进行遍历子节点，调用tag的find_all()方法时，BeautifulSoup会检索当前tag的所有子孙节点，如果只想搜索tag的直接子节点，可以使用参数recursive=False。\n\n    ```\n    print soup.html.find_all(\"title\")\n    # [<title>The Dormouse's story</title>]\n\n    print soup.html.find_all(\"title\", recursive=False)\n    # []\n    ```\n\n7. #### get_text() 方法\n\n    获取到tag中包含的所有文本内容。\n    ```\n    print soup.find_all('a', string='Elsie')[0].get_text()\n    # 'Elsie'\n    print soup.find_all('a', string='Elsie')[0].string\n    # 'Elsie'\n    ```\n8. #### 组合式\n\n    所有的参数可以一起使用，增加过滤条件加快搜索效率，前面涉及的1～6参数都可以进行组合，写了几个简单的小demo：\n    ```\n    sister_css = soup.find_all('a', class_=\"sister\")\n    sister_css = soup.find_all('a', class_=\"sister\", limit=2)\n    link1 = soup.find_all('a', attrs={'id': 'link1'})\n    link1 = soup.find_all('a', attrs={'id': 'link1'}, recursive=False)\n    strings = soup.find_all('a', string=[\"Tillie\", \"Elsie\", \"Lacie\"])\n    ```\n\n### 总结\n\n本篇主要讲述了BeautifulSoup的基本使用方法，感兴趣的、深入研究的请自行查看官方方法，具体的地址也在下面整理出来了。\n\n### 学习参考\n\nBeautifulSoup(4.4.0)中文文档：http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\nPypi介绍：https://pypi.org/project/beautifulsoup4/\nBeautifulSoup(4.4.0)官方文档：https://www.crummy.com/software/BeautifulSoup/bs4/doc/\n","slug":"Python-爬虫利器之BeautifulSoup","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38e00gjtabj4pz57mdg","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>关于爬虫的教程数据获取在上篇requestts文章中已经讲解过了，本篇讲解爬虫的数据清洗利器<strong><em>BeautifulSoup</em></strong>，继续为<font color=\"red\" size=\"6.5\">爬虫</font>而服务。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>Pypi官方的简介：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Beautiful Soup is a library that makes it easy to scrape information from web pages.</span><br><span class=\"line\">It sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching,</span><br><span class=\"line\">and modifying the parse tree.</span><br></pre></td></tr></table></figure></p>\n<p>简明扼要，<strong><em>BeautifulSoup</em></strong>是用来解析HTML的工具。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<p>很多单，不多说。</p>\n<h3 id=\"解析器\"><a href=\"#解析器\" class=\"headerlink\" title=\"解析器\"></a>解析器</h3><ol>\n<li><h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install lxml</span><br><span class=\"line\">pip install html5lib</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"比对\"><a href=\"#比对\" class=\"headerlink\" title=\"比对\"></a>比对</h4> \n    <table>\n      <tr>\n        <th style=\"text-align:center;\">解析器</th>\n        <th style=\"text-align:center;\">使用方法</th>\n        <th style=\"text-align:center;\">优势</th>\n        <th style=\"text-align:center;\">劣势</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">Python标准库</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html.parser\")</td>\n        <td style=\"text-align:center;\">\n        Python的内置标准库\n        执行速度适中\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml HTML 解析器</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"lxml\")</td>\n        <td style=\"text-align:center;\">\n        速度快\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml XML 解析器</td>\n        <td style=\"text-align:center;\">\n        BeautifulSoup(markup, [\"lxml-xml\"])\n        BeautifulSoup(markup, \"xml\")\n        </td>\n        <td style=\"text-align:center;\">\n        速度快\n        唯一支持XML的解析器\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">html5lib</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html5lib\")</td>\n        <td style=\"text-align:center;\">最好的容错性\n        以浏览器的方式解析文档\n        生成HTML5格式的文档\n        </td>\n        <td style=\"text-align:center;\">\n        速度慢\n        不依赖外部扩展\n        </td>\n      </tr>\n    </table>\n    \n<p> 官方是推荐使用lxml作为解析器，效率更高以及容错能力也比较高，在Python2.7.3之前的版本和Python3中3.2.2之前的版本，必须安装lxml或html5lib, 因为那些Python版本的标准库中内置的HTML解析方法不够稳定.</p>\n<p> 个人也推荐使用lxml，确实比其他的解析起来快一些，如果不想安装解析器的话那么就推荐使用html5lib，因为2.7版本之后不用安装。</p>\n <div class=\"note danger\">\n            <p><font color=\"red\" size=\"5\">提示</font><br>如果一段HTML或XML文档格式不正确的话,那么在不同的解析器中返回的结果可能是不一样的,查看 解析器之间的区别 了解更多细节</p>\n          </div>\n</li>\n</ol>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">html_doc = &quot;&quot;&quot;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span><br><span class=\"line\">        and they lived at the bottom of a well.&lt;/p&gt;</span><br><span class=\"line\">        &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">soup = BeautifulSoup(html_doc, &quot;lxml&quot;)</span><br><span class=\"line\">print soup.prettify()</span><br></pre></td></tr></table></figure>\n<p>这里的html的demo直接引用与官网，基础语法主要做了2件事情，第一把html加载进来，第二设定一下解析器。<br>关于加载html文档这里直接是引用的string，可以用上篇中requests包，获取返回的html数据运用response的text或者content都可以；或者直接用open打开下载好的html也可以。</p>\n<h3 id=\"soup的对象说明\"><a href=\"#soup的对象说明\" class=\"headerlink\" title=\"soup的对象说明\"></a>soup的对象说明</h3><p>BeautifulSoup将HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为4种: <strong>Tag、NavigableString、BeautifulSoup、Comment</strong>。</p>\n<ol>\n<li><h4 id=\"Tag\"><a href=\"#Tag\" class=\"headerlink\" title=\"Tag\"></a>Tag</h4><p> <strong><em>Tag对象</em></strong>：对应着XML或HTML原生文档中的tag，说白了就是标签，如果连标签都不明白，我真的没法解释了。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.p</span><br><span class=\"line\"># &lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.title</span><br><span class=\"line\"># &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br></pre></td></tr></table></figure>\n<p> 每个Tag有两个重要的属性name和attrs。</p>\n<blockquote>\n<p>Name</p>\n</blockquote>\n<p> 通过.name获取tag标签:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = soup.p</span><br><span class=\"line\">print p.name</span><br><span class=\"line\"># p</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Attributes</p>\n</blockquote>\n<p> 一个tag可能会有多个属性，.tag的属性的获取方法与dict字典相同：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = soup.p</span><br><span class=\"line\"># 获取</span><br><span class=\"line\">print p.attrs</span><br><span class=\"line\"># &#123;&apos;class&apos;: [&apos;title&apos;]&#125;</span><br><span class=\"line\"># 设定set</span><br><span class=\"line\">p[&apos;class&apos;] = &apos;new_title&apos;</span><br><span class=\"line\">p[&apos;id&apos;] = 1</span><br><span class=\"line\">print p.attrs</span><br><span class=\"line\"># &#123;&apos;class&apos;: &apos;new_title&apos;, &apos;id&apos;: 1&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>多值属性</p>\n</blockquote>\n<p> 在HTML5中会常见的多值的属性，例如class=’1 2 3’，在Beautiful Soup中多值属性的返回类型是list:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css_soup = BeautifulSoup(&apos;&lt;p class=&quot;body strikeout&quot;&gt;&lt;/p&gt;&apos;)</span><br><span class=\"line\">css_soup.p[&apos;class&apos;]</span><br><span class=\"line\"># [&quot;body&quot;, &quot;strikeout&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">css_soup = BeautifulSoup(&apos;&lt;p class=&quot;body&quot;&gt;&lt;/p&gt;&apos;)</span><br><span class=\"line\">css_soup.p[&apos;class&apos;]</span><br><span class=\"line\"># [&quot;body&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"NavigableString\"><a href=\"#NavigableString\" class=\"headerlink\" title=\"NavigableString\"></a>NavigableString</h4><p> <strong><em>NavigableString对象</em></strong>：获取标签内部的内容，这个就比较简单了，通过.string进行获取，直接看demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print p.string</span><br><span class=\"line\"># The Dormouse&apos;s story</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h4><p> <strong><em>BeautifulSoup对象</em></strong>：表示一个文档的全部内容，它支持遍历、搜索，没有name和attribute属性。<br> 说白了，这个其实就把html作为一个soup对象了，在基础方法中的设定。</p>\n</li>\n<li><h4 id=\"Comment\"><a href=\"#Comment\" class=\"headerlink\" title=\"Comment\"></a>Comment</h4><p> <strong><em>Comment对象</em></strong>：这个对象是用来解决html文档中的注释用的，它是一个特殊类型的NavigableString对象。<br> 在这里，直接引用了官方的demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markup = &quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;&quot;</span><br><span class=\"line\">soup = BeautifulSoup(markup)</span><br><span class=\"line\">comment = soup.b.string</span><br><span class=\"line\">print comment</span><br><span class=\"line\"># Hey, buddy. Want to buy a used parser?</span><br><span class=\"line\">print type(comment)</span><br><span class=\"line\"># &lt;class &apos;bs4.element.Comment&apos;&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h3><p>关于遍历不进行详细讲解了，主要没咋用过，做爬虫就是数据获取、清洗，至于遍历数据，还不如直接进行搜索，感兴趣的可以在<strong>学习参考</strong>中去官方进行学习。<br>在这里列举一下我用过并且觉得常用的方法：</p>\n<ol>\n<li><h4 id=\"子节点\"><a href=\"#子节点\" class=\"headerlink\" title=\"子节点\"></a>子节点</h4><p> 通过.contents 和 .children，可以将tag的子节点以列表的方式输出。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head_tag = soup.head</span><br><span class=\"line\">print head_tag</span><br><span class=\"line\"># &lt;head&gt;&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">print head_tag.contents</span><br><span class=\"line\"># [&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;]</span><br><span class=\"line\">print len(head_tag.contents)</span><br><span class=\"line\"># 1</span><br><span class=\"line\"></span><br><span class=\"line\">for child in title_tag.children:</span><br><span class=\"line\">    print child</span><br><span class=\"line\">    # &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"父节点\"><a href=\"#父节点\" class=\"headerlink\" title=\"父节点\"></a>父节点</h4><p> 通过.parent属性来获取元素的父节点，只获取当前元素的父节点而且只寻找一次。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title_tag = soup.title</span><br><span class=\"line\">print title_tag</span><br><span class=\"line\"># &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br><span class=\"line\">print title_tag.parent</span><br><span class=\"line\"># &lt;head&gt;&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<p> 通过.parents属性可以递归得到元素的所有父辈节点，一级一级的向父节点去寻找，最终寻找到根节点。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">link = soup.a</span><br><span class=\"line\">print line</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span><br><span class=\"line\">for parent in link.parents:</span><br><span class=\"line\">    if parent is None:</span><br><span class=\"line\">        print parent</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print parent.name</span><br><span class=\"line\"># p body html [document] None</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>这个是重点，因为数据索取主要通过搜索来进行获取，BeautifulSoup官方文档主要介绍了find()和find_all()搜索方法，但是根据传入的参数不一样，方法又会变成多种，这里列举一些常用的搜索方法。<br>先简单说一下find()和find_all()方法的区别：1.就是find()返回搜索查询到的第一条数据，find_all()会返回所有查询到的数据；2.find_all()返回的数据类型是<strong>class ‘bs4.element.ResultSet</strong>，find()返回的数据类型<strong>class ‘bs4.element.Tag</strong>，可知find_all()返回的是一个set集合类型。<br>日常搜索数据中还是用find_all()比较多，下面的方法介绍我也使用find_all()进行举例。</p>\n<p>源码方法：find_all( name , attrs , recursive , string , **kwargs )</p>\n<ol>\n<li><h4 id=\"标签名\"><a href=\"#标签名\" class=\"headerlink\" title=\"标签名\"></a>标签名</h4><p> 根据tag也就是标签名字进行搜索。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = soup.find_all(&apos;a&apos;)</span><br><span class=\"line\">print a</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n<p> 也可以根据多个标签名进行查看，具体看demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ab = soup.find_all([&quot;a&quot;, &quot;b&quot;])</span><br><span class=\"line\">print ab</span><br><span class=\"line\"># [&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"attr属性\"><a href=\"#attr属性\" class=\"headerlink\" title=\"attr属性\"></a>attr属性</h4><p> 可以根据标签的内在属性进行查询，参数可以写多个，下面例子给出了多种写法。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">link1_1 = soup.find_all(attrs=&#123;&apos;id&apos;: &apos;link1&apos;, &apos;key&apos;: &apos;value&apos;&#125;)</span><br><span class=\"line\">link1_2 = soup.find_all(id=&apos;link1&apos;)</span><br><span class=\"line\">print link1_1, link1_2</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n<p> 如果在查询数据中，属性固定可以多用此方法。</p>\n</li>\n<li><h4 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h4><p> 通过<strong>class_</strong>参数搜索有指定CSS类名的tag，class在Python中是保留字，所以使用<strong><em>class_</em></strong>，使用看demo:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sister_css = soup.find_all(class_=&quot;sister&quot;)</span><br><span class=\"line\">print sister_css</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h4><p> 通过string参数可以搜搜文档中的字符串内容,与name参数的可选值一样，string参数接受字符串、正则表达式、列表、True。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(string=&quot;Elsie&quot;)</span><br><span class=\"line\"># [u&apos;Elsie&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.find_all(string=[&quot;Tillie&quot;, &quot;Elsie&quot;, &quot;Lacie&quot;])</span><br><span class=\"line\"># [u&apos;Elsie&apos;, u&apos;Lacie&apos;, u&apos;Tillie&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.find_all(string=re.compile(&quot;Dormouse&quot;))</span><br><span class=\"line\"># [u&quot;The Dormouse&apos;s story&quot;, u&quot;The Dormouse&apos;s story&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"limit\"><a href=\"#limit\" class=\"headerlink\" title=\"limit\"></a>limit</h4><p> 这个参数的使用，说白了与SQL的limit用法一样，限制返回数据的条数，防止文档树很大导致搜索响应过慢。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(&quot;a&quot;, limit=2)</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h4><p> 设置是否进行遍历子节点，调用tag的find_all()方法时，BeautifulSoup会检索当前tag的所有子孙节点，如果只想搜索tag的直接子节点，可以使用参数recursive=False。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.html.find_all(&quot;title&quot;)</span><br><span class=\"line\"># [&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.html.find_all(&quot;title&quot;, recursive=False)</span><br><span class=\"line\"># []</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"get-text-方法\"><a href=\"#get-text-方法\" class=\"headerlink\" title=\"get_text() 方法\"></a>get_text() 方法</h4><p> 获取到tag中包含的所有文本内容。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(&apos;a&apos;, string=&apos;Elsie&apos;)[0].get_text()</span><br><span class=\"line\"># &apos;Elsie&apos;</span><br><span class=\"line\">print soup.find_all(&apos;a&apos;, string=&apos;Elsie&apos;)[0].string</span><br><span class=\"line\"># &apos;Elsie&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"组合式\"><a href=\"#组合式\" class=\"headerlink\" title=\"组合式\"></a>组合式</h4><p> 所有的参数可以一起使用，增加过滤条件加快搜索效率，前面涉及的1～6参数都可以进行组合，写了几个简单的小demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sister_css = soup.find_all(&apos;a&apos;, class_=&quot;sister&quot;)</span><br><span class=\"line\">sister_css = soup.find_all(&apos;a&apos;, class_=&quot;sister&quot;, limit=2)</span><br><span class=\"line\">link1 = soup.find_all(&apos;a&apos;, attrs=&#123;&apos;id&apos;: &apos;link1&apos;&#125;)</span><br><span class=\"line\">link1 = soup.find_all(&apos;a&apos;, attrs=&#123;&apos;id&apos;: &apos;link1&apos;&#125;, recursive=False)</span><br><span class=\"line\">strings = soup.find_all(&apos;a&apos;, string=[&quot;Tillie&quot;, &quot;Elsie&quot;, &quot;Lacie&quot;])</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>本篇主要讲述了BeautifulSoup的基本使用方法，感兴趣的、深入研究的请自行查看官方方法，具体的地址也在下面整理出来了。</p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>BeautifulSoup(4.4.0)中文文档：<a href=\"http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" target=\"_blank\" rel=\"noopener\">http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/</a><br>Pypi介绍：<a href=\"https://pypi.org/project/beautifulsoup4/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/beautifulsoup4/</a><br>BeautifulSoup(4.4.0)官方文档：<a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\" target=\"_blank\" rel=\"noopener\">https://www.crummy.com/software/BeautifulSoup/bs4/doc/</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><div class=\"note primary\">\n            <p>关于爬虫的教程数据获取在上篇requestts文章中已经讲解过了，本篇讲解爬虫的数据清洗利器<strong><em>BeautifulSoup</em></strong>，继续为<font color=\"red\" size=\"6.5\">爬虫</font>而服务。</p>\n          </div>","more":"<hr>\n\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>Pypi官方的简介：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Beautiful Soup is a library that makes it easy to scrape information from web pages.</span><br><span class=\"line\">It sits atop an HTML or XML parser, providing Pythonic idioms for iterating, searching,</span><br><span class=\"line\">and modifying the parse tree.</span><br></pre></td></tr></table></figure></p>\n<p>简明扼要，<strong><em>BeautifulSoup</em></strong>是用来解析HTML的工具。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<p>很多单，不多说。</p>\n<h3 id=\"解析器\"><a href=\"#解析器\" class=\"headerlink\" title=\"解析器\"></a>解析器</h3><ol>\n<li><h4 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install lxml</span><br><span class=\"line\">pip install html5lib</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"比对\"><a href=\"#比对\" class=\"headerlink\" title=\"比对\"></a>比对</h4> \n    <table>\n      <tr>\n        <th style=\"text-align:center;\">解析器</th>\n        <th style=\"text-align:center;\">使用方法</th>\n        <th style=\"text-align:center;\">优势</th>\n        <th style=\"text-align:center;\">劣势</th>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">Python标准库</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html.parser\")</td>\n        <td style=\"text-align:center;\">\n        Python的内置标准库\n        执行速度适中\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml HTML 解析器</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"lxml\")</td>\n        <td style=\"text-align:center;\">\n        速度快\n        文档容错能力强\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">lxml XML 解析器</td>\n        <td style=\"text-align:center;\">\n        BeautifulSoup(markup, [\"lxml-xml\"])\n        BeautifulSoup(markup, \"xml\")\n        </td>\n        <td style=\"text-align:center;\">\n        速度快\n        唯一支持XML的解析器\n        </td>\n        <td style=\"text-align:center;\">需要安装C语言库</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:center;\">html5lib</td>\n        <td style=\"text-align:center;\">BeautifulSoup(markup, \"html5lib\")</td>\n        <td style=\"text-align:center;\">最好的容错性\n        以浏览器的方式解析文档\n        生成HTML5格式的文档\n        </td>\n        <td style=\"text-align:center;\">\n        速度慢\n        不依赖外部扩展\n        </td>\n      </tr>\n    </table>\n    \n<p> 官方是推荐使用lxml作为解析器，效率更高以及容错能力也比较高，在Python2.7.3之前的版本和Python3中3.2.2之前的版本，必须安装lxml或html5lib, 因为那些Python版本的标准库中内置的HTML解析方法不够稳定.</p>\n<p> 个人也推荐使用lxml，确实比其他的解析起来快一些，如果不想安装解析器的话那么就推荐使用html5lib，因为2.7版本之后不用安装。</p>\n <div class=\"note danger\">\n            <p><font color=\"red\" size=\"5\">提示</font><br>如果一段HTML或XML文档格式不正确的话,那么在不同的解析器中返回的结果可能是不一样的,查看 解析器之间的区别 了解更多细节</p>\n          </div>\n</li>\n</ol>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">html_doc = &quot;&quot;&quot;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p class=&quot;story&quot;&gt;Once upon a time there were three little sisters; and their names were</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/elsie&quot; class=&quot;sister&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/lacie&quot; class=&quot;sister&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt; and</span><br><span class=\"line\">        &lt;a href=&quot;http://example.com/tillie&quot; class=&quot;sister&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;;</span><br><span class=\"line\">        and they lived at the bottom of a well.&lt;/p&gt;</span><br><span class=\"line\">        &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">soup = BeautifulSoup(html_doc, &quot;lxml&quot;)</span><br><span class=\"line\">print soup.prettify()</span><br></pre></td></tr></table></figure>\n<p>这里的html的demo直接引用与官网，基础语法主要做了2件事情，第一把html加载进来，第二设定一下解析器。<br>关于加载html文档这里直接是引用的string，可以用上篇中requests包，获取返回的html数据运用response的text或者content都可以；或者直接用open打开下载好的html也可以。</p>\n<h3 id=\"soup的对象说明\"><a href=\"#soup的对象说明\" class=\"headerlink\" title=\"soup的对象说明\"></a>soup的对象说明</h3><p>BeautifulSoup将HTML文档转换成一个复杂的树形结构，每个节点都是Python对象，所有对象可以归纳为4种: <strong>Tag、NavigableString、BeautifulSoup、Comment</strong>。</p>\n<ol>\n<li><h4 id=\"Tag\"><a href=\"#Tag\" class=\"headerlink\" title=\"Tag\"></a>Tag</h4><p> <strong><em>Tag对象</em></strong>：对应着XML或HTML原生文档中的tag，说白了就是标签，如果连标签都不明白，我真的没法解释了。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.p</span><br><span class=\"line\"># &lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.title</span><br><span class=\"line\"># &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br></pre></td></tr></table></figure>\n<p> 每个Tag有两个重要的属性name和attrs。</p>\n<blockquote>\n<p>Name</p>\n</blockquote>\n<p> 通过.name获取tag标签:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = soup.p</span><br><span class=\"line\">print p.name</span><br><span class=\"line\"># p</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Attributes</p>\n</blockquote>\n<p> 一个tag可能会有多个属性，.tag的属性的获取方法与dict字典相同：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p = soup.p</span><br><span class=\"line\"># 获取</span><br><span class=\"line\">print p.attrs</span><br><span class=\"line\"># &#123;&apos;class&apos;: [&apos;title&apos;]&#125;</span><br><span class=\"line\"># 设定set</span><br><span class=\"line\">p[&apos;class&apos;] = &apos;new_title&apos;</span><br><span class=\"line\">p[&apos;id&apos;] = 1</span><br><span class=\"line\">print p.attrs</span><br><span class=\"line\"># &#123;&apos;class&apos;: &apos;new_title&apos;, &apos;id&apos;: 1&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>多值属性</p>\n</blockquote>\n<p> 在HTML5中会常见的多值的属性，例如class=’1 2 3’，在Beautiful Soup中多值属性的返回类型是list:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">css_soup = BeautifulSoup(&apos;&lt;p class=&quot;body strikeout&quot;&gt;&lt;/p&gt;&apos;)</span><br><span class=\"line\">css_soup.p[&apos;class&apos;]</span><br><span class=\"line\"># [&quot;body&quot;, &quot;strikeout&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">css_soup = BeautifulSoup(&apos;&lt;p class=&quot;body&quot;&gt;&lt;/p&gt;&apos;)</span><br><span class=\"line\">css_soup.p[&apos;class&apos;]</span><br><span class=\"line\"># [&quot;body&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"NavigableString\"><a href=\"#NavigableString\" class=\"headerlink\" title=\"NavigableString\"></a>NavigableString</h4><p> <strong><em>NavigableString对象</em></strong>：获取标签内部的内容，这个就比较简单了，通过.string进行获取，直接看demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print p.string</span><br><span class=\"line\"># The Dormouse&apos;s story</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h4><p> <strong><em>BeautifulSoup对象</em></strong>：表示一个文档的全部内容，它支持遍历、搜索，没有name和attribute属性。<br> 说白了，这个其实就把html作为一个soup对象了，在基础方法中的设定。</p>\n</li>\n<li><h4 id=\"Comment\"><a href=\"#Comment\" class=\"headerlink\" title=\"Comment\"></a>Comment</h4><p> <strong><em>Comment对象</em></strong>：这个对象是用来解决html文档中的注释用的，它是一个特殊类型的NavigableString对象。<br> 在这里，直接引用了官方的demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markup = &quot;&lt;b&gt;&lt;!--Hey, buddy. Want to buy a used parser?--&gt;&lt;/b&gt;&quot;</span><br><span class=\"line\">soup = BeautifulSoup(markup)</span><br><span class=\"line\">comment = soup.b.string</span><br><span class=\"line\">print comment</span><br><span class=\"line\"># Hey, buddy. Want to buy a used parser?</span><br><span class=\"line\">print type(comment)</span><br><span class=\"line\"># &lt;class &apos;bs4.element.Comment&apos;&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h3><p>关于遍历不进行详细讲解了，主要没咋用过，做爬虫就是数据获取、清洗，至于遍历数据，还不如直接进行搜索，感兴趣的可以在<strong>学习参考</strong>中去官方进行学习。<br>在这里列举一下我用过并且觉得常用的方法：</p>\n<ol>\n<li><h4 id=\"子节点\"><a href=\"#子节点\" class=\"headerlink\" title=\"子节点\"></a>子节点</h4><p> 通过.contents 和 .children，可以将tag的子节点以列表的方式输出。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head_tag = soup.head</span><br><span class=\"line\">print head_tag</span><br><span class=\"line\"># &lt;head&gt;&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">print head_tag.contents</span><br><span class=\"line\"># [&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;]</span><br><span class=\"line\">print len(head_tag.contents)</span><br><span class=\"line\"># 1</span><br><span class=\"line\"></span><br><span class=\"line\">for child in title_tag.children:</span><br><span class=\"line\">    print child</span><br><span class=\"line\">    # &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"父节点\"><a href=\"#父节点\" class=\"headerlink\" title=\"父节点\"></a>父节点</h4><p> 通过.parent属性来获取元素的父节点，只获取当前元素的父节点而且只寻找一次。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title_tag = soup.title</span><br><span class=\"line\">print title_tag</span><br><span class=\"line\"># &lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;</span><br><span class=\"line\">print title_tag.parent</span><br><span class=\"line\"># &lt;head&gt;&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<p> 通过.parents属性可以递归得到元素的所有父辈节点，一级一级的向父节点去寻找，最终寻找到根节点。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">link = soup.a</span><br><span class=\"line\">print line</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span><br><span class=\"line\">for parent in link.parents:</span><br><span class=\"line\">    if parent is None:</span><br><span class=\"line\">        print parent</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print parent.name</span><br><span class=\"line\"># p body html [document] None</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>这个是重点，因为数据索取主要通过搜索来进行获取，BeautifulSoup官方文档主要介绍了find()和find_all()搜索方法，但是根据传入的参数不一样，方法又会变成多种，这里列举一些常用的搜索方法。<br>先简单说一下find()和find_all()方法的区别：1.就是find()返回搜索查询到的第一条数据，find_all()会返回所有查询到的数据；2.find_all()返回的数据类型是<strong>class ‘bs4.element.ResultSet</strong>，find()返回的数据类型<strong>class ‘bs4.element.Tag</strong>，可知find_all()返回的是一个set集合类型。<br>日常搜索数据中还是用find_all()比较多，下面的方法介绍我也使用find_all()进行举例。</p>\n<p>源码方法：find_all( name , attrs , recursive , string , **kwargs )</p>\n<ol>\n<li><h4 id=\"标签名\"><a href=\"#标签名\" class=\"headerlink\" title=\"标签名\"></a>标签名</h4><p> 根据tag也就是标签名字进行搜索。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = soup.find_all(&apos;a&apos;)</span><br><span class=\"line\">print a</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\"># &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n<p> 也可以根据多个标签名进行查看，具体看demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ab = soup.find_all([&quot;a&quot;, &quot;b&quot;])</span><br><span class=\"line\">print ab</span><br><span class=\"line\"># [&lt;b&gt;The Dormouse&apos;s story&lt;/b&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"attr属性\"><a href=\"#attr属性\" class=\"headerlink\" title=\"attr属性\"></a>attr属性</h4><p> 可以根据标签的内在属性进行查询，参数可以写多个，下面例子给出了多种写法。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">link1_1 = soup.find_all(attrs=&#123;&apos;id&apos;: &apos;link1&apos;, &apos;key&apos;: &apos;value&apos;&#125;)</span><br><span class=\"line\">link1_2 = soup.find_all(id=&apos;link1&apos;)</span><br><span class=\"line\">print link1_1, link1_2</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n<p> 如果在查询数据中，属性固定可以多用此方法。</p>\n</li>\n<li><h4 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h4><p> 通过<strong>class_</strong>参数搜索有指定CSS类名的tag，class在Python中是保留字，所以使用<strong><em>class_</em></strong>，使用看demo:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sister_css = soup.find_all(class_=&quot;sister&quot;)</span><br><span class=\"line\">print sister_css</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h4><p> 通过string参数可以搜搜文档中的字符串内容,与name参数的可选值一样，string参数接受字符串、正则表达式、列表、True。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(string=&quot;Elsie&quot;)</span><br><span class=\"line\"># [u&apos;Elsie&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.find_all(string=[&quot;Tillie&quot;, &quot;Elsie&quot;, &quot;Lacie&quot;])</span><br><span class=\"line\"># [u&apos;Elsie&apos;, u&apos;Lacie&apos;, u&apos;Tillie&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.find_all(string=re.compile(&quot;Dormouse&quot;))</span><br><span class=\"line\"># [u&quot;The Dormouse&apos;s story&quot;, u&quot;The Dormouse&apos;s story&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"limit\"><a href=\"#limit\" class=\"headerlink\" title=\"limit\"></a>limit</h4><p> 这个参数的使用，说白了与SQL的limit用法一样，限制返回数据的条数，防止文档树很大导致搜索响应过慢。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(&quot;a&quot;, limit=2)</span><br><span class=\"line\"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class=\"line\">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"recursive\"><a href=\"#recursive\" class=\"headerlink\" title=\"recursive\"></a>recursive</h4><p> 设置是否进行遍历子节点，调用tag的find_all()方法时，BeautifulSoup会检索当前tag的所有子孙节点，如果只想搜索tag的直接子节点，可以使用参数recursive=False。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.html.find_all(&quot;title&quot;)</span><br><span class=\"line\"># [&lt;title&gt;The Dormouse&apos;s story&lt;/title&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">print soup.html.find_all(&quot;title&quot;, recursive=False)</span><br><span class=\"line\"># []</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"get-text-方法\"><a href=\"#get-text-方法\" class=\"headerlink\" title=\"get_text() 方法\"></a>get_text() 方法</h4><p> 获取到tag中包含的所有文本内容。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print soup.find_all(&apos;a&apos;, string=&apos;Elsie&apos;)[0].get_text()</span><br><span class=\"line\"># &apos;Elsie&apos;</span><br><span class=\"line\">print soup.find_all(&apos;a&apos;, string=&apos;Elsie&apos;)[0].string</span><br><span class=\"line\"># &apos;Elsie&apos;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"组合式\"><a href=\"#组合式\" class=\"headerlink\" title=\"组合式\"></a>组合式</h4><p> 所有的参数可以一起使用，增加过滤条件加快搜索效率，前面涉及的1～6参数都可以进行组合，写了几个简单的小demo：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sister_css = soup.find_all(&apos;a&apos;, class_=&quot;sister&quot;)</span><br><span class=\"line\">sister_css = soup.find_all(&apos;a&apos;, class_=&quot;sister&quot;, limit=2)</span><br><span class=\"line\">link1 = soup.find_all(&apos;a&apos;, attrs=&#123;&apos;id&apos;: &apos;link1&apos;&#125;)</span><br><span class=\"line\">link1 = soup.find_all(&apos;a&apos;, attrs=&#123;&apos;id&apos;: &apos;link1&apos;&#125;, recursive=False)</span><br><span class=\"line\">strings = soup.find_all(&apos;a&apos;, string=[&quot;Tillie&quot;, &quot;Elsie&quot;, &quot;Lacie&quot;])</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>本篇主要讲述了BeautifulSoup的基本使用方法，感兴趣的、深入研究的请自行查看官方方法，具体的地址也在下面整理出来了。</p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>BeautifulSoup(4.4.0)中文文档：<a href=\"http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/\" target=\"_blank\" rel=\"noopener\">http://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/</a><br>Pypi介绍：<a href=\"https://pypi.org/project/beautifulsoup4/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/beautifulsoup4/</a><br>BeautifulSoup(4.4.0)官方文档：<a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\" target=\"_blank\" rel=\"noopener\">https://www.crummy.com/software/BeautifulSoup/bs4/doc/</a></p>"},{"title":"ffmpeg的基础学习","comments":0,"top":false,"abbrlink":37692,"date":"2019-12-15T07:19:18.000Z","updated":"2019-12-17T07:19:18.000Z","desc":"ffmpeg的基础学习，有关于视频、图片的处理工具","keywords":"ffmpeg, 视频, 音频, 工具, 压缩, 格式转换","_content":"\n### 简介\n{% note primary %}\n\n![](/images/article_ffmpeg.png)\n\n大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。\n\nFFmpeg：<font size=6 color='red'>我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！</font>\n我：<font size=6 color='blue'>好的，👌！</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 背景\n\n因为公司做了一个宣传片，把宣传片视频上传到第三方网站上，发现非会员会有广告。这还得了，如果客户没有会员，岂不是要等，为了解决这个问题，从一个程序员的角度来想办法，直接做个页面，把视频放进去，通过域名访问就可以解决无广告的问题。\n\n周末花了一上午的时候搞完了，通过域名直接访问看，可以播放视频，但是发现视频有点卡，查看了一下视频大小：6分钟的视频500M，有点大啊，于是想压缩一下，上网搜索***在线 视频压缩***，TMD，要不就收费、要不就限制100M，身为程序员的我咋可能花钱去处理。于是，继续搜索***python 视频压缩***，看到了自己没有见过的***ffmpeg***命令，查了下资料，评价还不错，花了1小时搞定了***ffmpeg***环境，压缩 + 转格式的方式处理，最后视频110M，压缩了将近4/5，为了方便日后使用以及推荐给大家使用，写下本篇。\n\n背景介绍完毕了，开始搞。\n\n### 下载\n\n安装需要下载2个文件：ffmpeg音视频处理工具，yasm是一款汇编器。yasm是安不安装都可以，既然ffmpeg里面都要求了就装上，省得日后麻烦。\n文件下载地址：\nyasm：http://yasm.tortall.net/Download.html\nffmpeg：http://ffmpeg.org/download.html\n\n都是国外下载地址，如果翻不过去，本篇提供下载地址，百度云盘：\n\n|  name  |                       url                       | password |\n|:------:|:-----------------------------------------------:|:--------:|\n|  yasm  | https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg |   ymw5   |\n| ffmpeg | https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ |   j3oj   |\n\n### 安装\n\n#### 上传 && 解压\n\n把yasm && ffmpeg文件下载到本地，需要上传到Linux服务器，在这里我采用的***scp***命令。\n\n```\nscp ~/Downloads/ffmpeg/* root@192.168.151.64:~\n```\n\n上传完之后，ssh连接服务器，找到上传的文件进行解压：\n\n```\n# ffmpeg\ntar -jxvf ffmpeg-4.2.1.tar.bz2\n\n# yasm\ntar -zxvf yasm-1.3.0.tar.gz\n```\n看好了，在这里yasm用的参数是**z**，ffmpeg用的是**j**，因为压缩的格式不一样，所以参数是不一样的，不知道的请看下tar的用法。\n\n\n#### yasm安装\n\n进入到yasm-1.3.0进行编译安装，因为是源码：\n```\ncd yasm-1.3.0/\n./configure\nmake\nmake install\n```\n这个安装过程是没有任何问题的，等待安装完成即可。\n\n#### ffmpeg安装\n\n进入ffmpeg-4.2.1文件夹进行编译安装。\n```\n./configure --enable-shared --prefix=/usr/loacl/ffmpeg\nmake\nmake install\n```\n编译过程有点长，请耐心等待，也可以做些别的事情。\n安装成功后，***cd /usr/loacl/ffmpeg***进入安装目录，查看一下发现有bin、include,、ib、share这4个目录，\n- bin：是ffmpeg主程序二进制目录\n- include是C/C++头文件目录\n- lib是编译好的库文件目录\n- share是文档目录\n\n#### lib配置\n\n> ld.so.conf\n\n编辑lib包的配置文件，加入***/usr/local/ffmpeg/lib***内容（/usr/local/ffmpeg是ffmpeg的安装目录，根据个人不同安装目录修改）。\n```\nvim /etc/ld.so.conf\n```\n更新环境变量\n```\nldconfig\n```\n\n> /etc/profile\n\n打开/etc/profile文件，在文件末尾加入以下内容:\nexport PATH=\"/usr/local/ffmpeg/bin:$PATH\"\n```\nvim /etc/profile\n```\n然后保存并运行：\n```\nsource /etc/profile\n```\n\n#### 运行\n\n如果上步配置正确了，那么运行ffmpeg命令就会出现下图所示，因为ffmpeg不是系统命令，也不再系统PATH里面，所以执行要写全路径+ffmpeg。\n\n```\n[root@localhost /usr/local/ffmpeg/bin]#./ffmpeg\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nHyper fast Audio and Video encoder\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n\nUse -h to get full help or, even better, run 'man ffmpeg'\n```\n\n#### 问题\n\n```\nlibavdevice.so.57: cannot open shared object file: No such file or directory\n```\n如果出现了以上问题，那么就检查一下在lib配置配置那步，是否做对了；如果解决不了，欢迎留言咨询。\n\n\n### 使用\n\n总结一下本人暂时学到的一些基础使用方法，这个命令很强大，喜欢的可以去官网进行查看详细的使用方法。\n\n#### 信息获取\n\n> 获取媒体信息\n```\n/usr/local/ffmpeg/bin/ffmpeg -i file_name\n```\n\n```\n[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'elt.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 0\n    compatible_brands: mp42mp41\n    creation_time   : 2019-12-12T07:49:20.000000Z\n  Duration: 00:06:22.93, start: 0.000000, bitrate: 10291 kb/s\n    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p, 1920x1080 [SAR 1:1 DAR 16:9], 9966 kb/s, 25 fps, 25 tbr, 25k tbn, 50 tbc (default)\n    Metadata:\n      creation_time   : 2019-12-12T07:49:20.000000Z\n      handler_name    : ?Mainconcept Video Media Handler\n      encoder         : AVC Coding\n    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 317 kb/s (default)\n    Metadata:\n      creation_time   : 2019-12-12T07:49:20.000000Z\n      handler_name    : #Mainconcept MP4 Sound Media Handler\nAt least one output file must be specified\n```\n\n音频、视频都可以，读取文件的相关信息。\n\n> 查看支持格式\n```\n/usr/local/ffmpeg/bin/ffmpeg -formats\n```\n\n```\n[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -formats | head -n 10\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nFile formats:\n D. = Demuxing supported\n .E = Muxing supported\n --\n D  3dostr          3DO STR\n  E 3g2             3GP2 (3GPP2 file format)\n  E 3gp             3GP (3GPP file format)\n D  4xm             4X Technologies\n  E a64             a64 - video for Commodore 64\n D  aa              Audible AA format files\n```\n\n\n查看支持的音频、视频格式。\n\n#### 格式转换\n\n> 基础使用\n\n```\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi\n\n# 多格式输出\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi elt_output.wmv\n```\n\n![](ffmpeg_i_tf.png)\n\n命令行中指定文件的输入和输出文件名就行了，这个方法同样适用于视频和音频文件，这个是常用的命令之一。\n\n> 保留视频质量\n\n```\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 -qscale 0 elt_output.avi\n\n```\n\n通过-qscale 0参数来保留视频格式转换的视频质量。\n\n#### 视频压缩\n\n> 降低比特率\n\n```\nffmpeg -i elt.mp4 -b:v 1000k -bufsize 1000k elt.mp4\n```\n通过降低比特率(使用 -b:a 或 -ab)来进行视频压缩，一些常用的比特率有: 96k, 112k, 128k, 160k, 192k, 256k, 320k.值越大，文件所需要的体积就越大。\n\n\n### 学习参考\n\nffmpeg官网：http://ffmpeg.org/ffmpeg.html#Audio-Options\nLinux上的ffmpeg完全使用指南：https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage\n\n### 结束语\n\nffmpeg的安装与基础使用先记录到这里吧，但是关于ffmpeg的探索不会停止，学习永无止境，日后有使用到其他命令会更新此博客。\n\n<font size=6 color='red'>不会的东西，干它就完了！！！</font>\n","source":"_posts/Tools-ffmpeg的基础学习.md","raw":"---\ntitle: ffmpeg的基础学习\ncomments: false\ncategories:\n  - [工具集]\ntags: [ffmpeg, 运维工具]\ntop: false\nabbrlink: 37692\ndate: 2019-12-15 15:19:18\nupdated: 2019-12-17 15:19:18\ndesc: ffmpeg的基础学习，有关于视频、图片的处理工具\nkeywords: ffmpeg, 视频, 音频, 工具, 压缩, 格式转换\n---\n\n### 简介\n{% note primary %}\n\n![](/images/article_ffmpeg.png)\n\n大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。\n\nFFmpeg：<font size=6 color='red'>我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！</font>\n我：<font size=6 color='blue'>好的，👌！</font>\n{% endnote %}\n\n<!--more-->\n<hr />\n\n### 背景\n\n因为公司做了一个宣传片，把宣传片视频上传到第三方网站上，发现非会员会有广告。这还得了，如果客户没有会员，岂不是要等，为了解决这个问题，从一个程序员的角度来想办法，直接做个页面，把视频放进去，通过域名访问就可以解决无广告的问题。\n\n周末花了一上午的时候搞完了，通过域名直接访问看，可以播放视频，但是发现视频有点卡，查看了一下视频大小：6分钟的视频500M，有点大啊，于是想压缩一下，上网搜索***在线 视频压缩***，TMD，要不就收费、要不就限制100M，身为程序员的我咋可能花钱去处理。于是，继续搜索***python 视频压缩***，看到了自己没有见过的***ffmpeg***命令，查了下资料，评价还不错，花了1小时搞定了***ffmpeg***环境，压缩 + 转格式的方式处理，最后视频110M，压缩了将近4/5，为了方便日后使用以及推荐给大家使用，写下本篇。\n\n背景介绍完毕了，开始搞。\n\n### 下载\n\n安装需要下载2个文件：ffmpeg音视频处理工具，yasm是一款汇编器。yasm是安不安装都可以，既然ffmpeg里面都要求了就装上，省得日后麻烦。\n文件下载地址：\nyasm：http://yasm.tortall.net/Download.html\nffmpeg：http://ffmpeg.org/download.html\n\n都是国外下载地址，如果翻不过去，本篇提供下载地址，百度云盘：\n\n|  name  |                       url                       | password |\n|:------:|:-----------------------------------------------:|:--------:|\n|  yasm  | https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg |   ymw5   |\n| ffmpeg | https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ |   j3oj   |\n\n### 安装\n\n#### 上传 && 解压\n\n把yasm && ffmpeg文件下载到本地，需要上传到Linux服务器，在这里我采用的***scp***命令。\n\n```\nscp ~/Downloads/ffmpeg/* root@192.168.151.64:~\n```\n\n上传完之后，ssh连接服务器，找到上传的文件进行解压：\n\n```\n# ffmpeg\ntar -jxvf ffmpeg-4.2.1.tar.bz2\n\n# yasm\ntar -zxvf yasm-1.3.0.tar.gz\n```\n看好了，在这里yasm用的参数是**z**，ffmpeg用的是**j**，因为压缩的格式不一样，所以参数是不一样的，不知道的请看下tar的用法。\n\n\n#### yasm安装\n\n进入到yasm-1.3.0进行编译安装，因为是源码：\n```\ncd yasm-1.3.0/\n./configure\nmake\nmake install\n```\n这个安装过程是没有任何问题的，等待安装完成即可。\n\n#### ffmpeg安装\n\n进入ffmpeg-4.2.1文件夹进行编译安装。\n```\n./configure --enable-shared --prefix=/usr/loacl/ffmpeg\nmake\nmake install\n```\n编译过程有点长，请耐心等待，也可以做些别的事情。\n安装成功后，***cd /usr/loacl/ffmpeg***进入安装目录，查看一下发现有bin、include,、ib、share这4个目录，\n- bin：是ffmpeg主程序二进制目录\n- include是C/C++头文件目录\n- lib是编译好的库文件目录\n- share是文档目录\n\n#### lib配置\n\n> ld.so.conf\n\n编辑lib包的配置文件，加入***/usr/local/ffmpeg/lib***内容（/usr/local/ffmpeg是ffmpeg的安装目录，根据个人不同安装目录修改）。\n```\nvim /etc/ld.so.conf\n```\n更新环境变量\n```\nldconfig\n```\n\n> /etc/profile\n\n打开/etc/profile文件，在文件末尾加入以下内容:\nexport PATH=\"/usr/local/ffmpeg/bin:$PATH\"\n```\nvim /etc/profile\n```\n然后保存并运行：\n```\nsource /etc/profile\n```\n\n#### 运行\n\n如果上步配置正确了，那么运行ffmpeg命令就会出现下图所示，因为ffmpeg不是系统命令，也不再系统PATH里面，所以执行要写全路径+ffmpeg。\n\n```\n[root@localhost /usr/local/ffmpeg/bin]#./ffmpeg\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nHyper fast Audio and Video encoder\nusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\n\nUse -h to get full help or, even better, run 'man ffmpeg'\n```\n\n#### 问题\n\n```\nlibavdevice.so.57: cannot open shared object file: No such file or directory\n```\n如果出现了以上问题，那么就检查一下在lib配置配置那步，是否做对了；如果解决不了，欢迎留言咨询。\n\n\n### 使用\n\n总结一下本人暂时学到的一些基础使用方法，这个命令很强大，喜欢的可以去官网进行查看详细的使用方法。\n\n#### 信息获取\n\n> 获取媒体信息\n```\n/usr/local/ffmpeg/bin/ffmpeg -i file_name\n```\n\n```\n[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'elt.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 0\n    compatible_brands: mp42mp41\n    creation_time   : 2019-12-12T07:49:20.000000Z\n  Duration: 00:06:22.93, start: 0.000000, bitrate: 10291 kb/s\n    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p, 1920x1080 [SAR 1:1 DAR 16:9], 9966 kb/s, 25 fps, 25 tbr, 25k tbn, 50 tbc (default)\n    Metadata:\n      creation_time   : 2019-12-12T07:49:20.000000Z\n      handler_name    : ?Mainconcept Video Media Handler\n      encoder         : AVC Coding\n    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 317 kb/s (default)\n    Metadata:\n      creation_time   : 2019-12-12T07:49:20.000000Z\n      handler_name    : #Mainconcept MP4 Sound Media Handler\nAt least one output file must be specified\n```\n\n音频、视频都可以，读取文件的相关信息。\n\n> 查看支持格式\n```\n/usr/local/ffmpeg/bin/ffmpeg -formats\n```\n\n```\n[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -formats | head -n 10\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\n  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)\n  configuration: --enable-shared --prefix=/usr/local/ffmpeg\n  libavutil      56. 31.100 / 56. 31.100\n  libavcodec     58. 54.100 / 58. 54.100\n  libavformat    58. 29.100 / 58. 29.100\n  libavdevice    58.  8.100 / 58.  8.100\n  libavfilter     7. 57.100 /  7. 57.100\n  libswscale      5.  5.100 /  5.  5.100\n  libswresample   3.  5.100 /  3.  5.100\nFile formats:\n D. = Demuxing supported\n .E = Muxing supported\n --\n D  3dostr          3DO STR\n  E 3g2             3GP2 (3GPP2 file format)\n  E 3gp             3GP (3GPP file format)\n D  4xm             4X Technologies\n  E a64             a64 - video for Commodore 64\n D  aa              Audible AA format files\n```\n\n\n查看支持的音频、视频格式。\n\n#### 格式转换\n\n> 基础使用\n\n```\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi\n\n# 多格式输出\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi elt_output.wmv\n```\n\n![](ffmpeg_i_tf.png)\n\n命令行中指定文件的输入和输出文件名就行了，这个方法同样适用于视频和音频文件，这个是常用的命令之一。\n\n> 保留视频质量\n\n```\n/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 -qscale 0 elt_output.avi\n\n```\n\n通过-qscale 0参数来保留视频格式转换的视频质量。\n\n#### 视频压缩\n\n> 降低比特率\n\n```\nffmpeg -i elt.mp4 -b:v 1000k -bufsize 1000k elt.mp4\n```\n通过降低比特率(使用 -b:a 或 -ab)来进行视频压缩，一些常用的比特率有: 96k, 112k, 128k, 160k, 192k, 256k, 320k.值越大，文件所需要的体积就越大。\n\n\n### 学习参考\n\nffmpeg官网：http://ffmpeg.org/ffmpeg.html#Audio-Options\nLinux上的ffmpeg完全使用指南：https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage\n\n### 结束语\n\nffmpeg的安装与基础使用先记录到这里吧，但是关于ffmpeg的探索不会停止，学习永无止境，日后有使用到其他命令会更新此博客。\n\n<font size=6 color='red'>不会的东西，干它就完了！！！</font>\n","slug":"Tools-ffmpeg的基础学习","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38f00gmtabjz12ungqx","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p><img src=\"/images/article_ffmpeg.png\" alt></p><p>大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。</p><p>FFmpeg：<font size=\"6\" color=\"red\">我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！</font><br>我：<font size=\"6\" color=\"blue\">好的，👌！</font></p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>因为公司做了一个宣传片，把宣传片视频上传到第三方网站上，发现非会员会有广告。这还得了，如果客户没有会员，岂不是要等，为了解决这个问题，从一个程序员的角度来想办法，直接做个页面，把视频放进去，通过域名访问就可以解决无广告的问题。</p>\n<p>周末花了一上午的时候搞完了，通过域名直接访问看，可以播放视频，但是发现视频有点卡，查看了一下视频大小：6分钟的视频500M，有点大啊，于是想压缩一下，上网搜索<strong><em>在线 视频压缩</em></strong>，TMD，要不就收费、要不就限制100M，身为程序员的我咋可能花钱去处理。于是，继续搜索<strong><em>python 视频压缩</em></strong>，看到了自己没有见过的<strong><em>ffmpeg</em></strong>命令，查了下资料，评价还不错，花了1小时搞定了<strong><em>ffmpeg</em></strong>环境，压缩 + 转格式的方式处理，最后视频110M，压缩了将近4/5，为了方便日后使用以及推荐给大家使用，写下本篇。</p>\n<p>背景介绍完毕了，开始搞。</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>安装需要下载2个文件：ffmpeg音视频处理工具，yasm是一款汇编器。yasm是安不安装都可以，既然ffmpeg里面都要求了就装上，省得日后麻烦。<br>文件下载地址：<br>yasm：<a href=\"http://yasm.tortall.net/Download.html\" target=\"_blank\" rel=\"noopener\">http://yasm.tortall.net/Download.html</a><br>ffmpeg：<a href=\"http://ffmpeg.org/download.html\" target=\"_blank\" rel=\"noopener\">http://ffmpeg.org/download.html</a></p>\n<p>都是国外下载地址，如果翻不过去，本篇提供下载地址，百度云盘：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">url</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">yasm</td>\n<td style=\"text-align:center\"><a href=\"https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg</a></td>\n<td style=\"text-align:center\">ymw5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ffmpeg</td>\n<td style=\"text-align:center\"><a href=\"https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ</a></td>\n<td style=\"text-align:center\">j3oj</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"上传-amp-amp-解压\"><a href=\"#上传-amp-amp-解压\" class=\"headerlink\" title=\"上传 &amp;&amp; 解压\"></a>上传 &amp;&amp; 解压</h4><p>把yasm &amp;&amp; ffmpeg文件下载到本地，需要上传到Linux服务器，在这里我采用的<strong><em>scp</em></strong>命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp ~/Downloads/ffmpeg/* root@192.168.151.64:~</span><br></pre></td></tr></table></figure>\n<p>上传完之后，ssh连接服务器，找到上传的文件进行解压：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ffmpeg</span><br><span class=\"line\">tar -jxvf ffmpeg-4.2.1.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"># yasm</span><br><span class=\"line\">tar -zxvf yasm-1.3.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>看好了，在这里yasm用的参数是<strong>z</strong>，ffmpeg用的是<strong>j</strong>，因为压缩的格式不一样，所以参数是不一样的，不知道的请看下tar的用法。</p>\n<h4 id=\"yasm安装\"><a href=\"#yasm安装\" class=\"headerlink\" title=\"yasm安装\"></a>yasm安装</h4><p>进入到yasm-1.3.0进行编译安装，因为是源码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yasm-1.3.0/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></p>\n<p>这个安装过程是没有任何问题的，等待安装完成即可。</p>\n<h4 id=\"ffmpeg安装\"><a href=\"#ffmpeg安装\" class=\"headerlink\" title=\"ffmpeg安装\"></a>ffmpeg安装</h4><p>进入ffmpeg-4.2.1文件夹进行编译安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --enable-shared --prefix=/usr/loacl/ffmpeg</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></p>\n<p>编译过程有点长，请耐心等待，也可以做些别的事情。<br>安装成功后，<strong><em>cd /usr/loacl/ffmpeg</em></strong>进入安装目录，查看一下发现有bin、include,、ib、share这4个目录，</p>\n<ul>\n<li>bin：是ffmpeg主程序二进制目录</li>\n<li>include是C/C++头文件目录</li>\n<li>lib是编译好的库文件目录</li>\n<li>share是文档目录</li>\n</ul>\n<h4 id=\"lib配置\"><a href=\"#lib配置\" class=\"headerlink\" title=\"lib配置\"></a>lib配置</h4><blockquote>\n<p>ld.so.conf</p>\n</blockquote>\n<p>编辑lib包的配置文件，加入<strong><em>/usr/local/ffmpeg/lib</em></strong>内容（/usr/local/ffmpeg是ffmpeg的安装目录，根据个人不同安装目录修改）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ld.so.conf</span><br></pre></td></tr></table></figure></p>\n<p>更新环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>/etc/profile</p>\n</blockquote>\n<p>打开/etc/profile文件，在文件末尾加入以下内容:<br>export PATH=”/usr/local/ffmpeg/bin:$PATH”<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure></p>\n<p>然后保存并运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><p>如果上步配置正确了，那么运行ffmpeg命令就会出现下图所示，因为ffmpeg不是系统命令，也不再系统PATH里面，所以执行要写全路径+ffmpeg。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /usr/local/ffmpeg/bin]#./ffmpeg</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">Hyper fast Audio and Video encoder</span><br><span class=\"line\">usage: ffmpeg [options] [[infile options] -i infile]... &#123;[outfile options] outfile&#125;...</span><br><span class=\"line\"></span><br><span class=\"line\">Use -h to get full help or, even better, run &apos;man ffmpeg&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libavdevice.so.57: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n<p>如果出现了以上问题，那么就检查一下在lib配置配置那步，是否做对了；如果解决不了，欢迎留言咨询。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>总结一下本人暂时学到的一些基础使用方法，这个命令很强大，喜欢的可以去官网进行查看详细的使用方法。</p>\n<h4 id=\"信息获取\"><a href=\"#信息获取\" class=\"headerlink\" title=\"信息获取\"></a>信息获取</h4><blockquote>\n<p>获取媒体信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i file_name</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &apos;elt.mp4&apos;:</span><br><span class=\"line\">  Metadata:</span><br><span class=\"line\">    major_brand     : mp42</span><br><span class=\"line\">    minor_version   : 0</span><br><span class=\"line\">    compatible_brands: mp42mp41</span><br><span class=\"line\">    creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">  Duration: 00:06:22.93, start: 0.000000, bitrate: 10291 kb/s</span><br><span class=\"line\">    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p, 1920x1080 [SAR 1:1 DAR 16:9], 9966 kb/s, 25 fps, 25 tbr, 25k tbn, 50 tbc (default)</span><br><span class=\"line\">    Metadata:</span><br><span class=\"line\">      creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">      handler_name    : ?Mainconcept Video Media Handler</span><br><span class=\"line\">      encoder         : AVC Coding</span><br><span class=\"line\">    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 317 kb/s (default)</span><br><span class=\"line\">    Metadata:</span><br><span class=\"line\">      creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">      handler_name    : #Mainconcept MP4 Sound Media Handler</span><br><span class=\"line\">At least one output file must be specified</span><br></pre></td></tr></table></figure>\n<p>音频、视频都可以，读取文件的相关信息。</p>\n<blockquote>\n<p>查看支持格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -formats</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -formats | head -n 10</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">File formats:</span><br><span class=\"line\"> D. = Demuxing supported</span><br><span class=\"line\"> .E = Muxing supported</span><br><span class=\"line\"> --</span><br><span class=\"line\"> D  3dostr          3DO STR</span><br><span class=\"line\">  E 3g2             3GP2 (3GPP2 file format)</span><br><span class=\"line\">  E 3gp             3GP (3GPP file format)</span><br><span class=\"line\"> D  4xm             4X Technologies</span><br><span class=\"line\">  E a64             a64 - video for Commodore 64</span><br><span class=\"line\"> D  aa              Audible AA format files</span><br></pre></td></tr></table></figure>\n<p>查看支持的音频、视频格式。</p>\n<h4 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h4><blockquote>\n<p>基础使用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi</span><br><span class=\"line\"></span><br><span class=\"line\"># 多格式输出</span><br><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi elt_output.wmv</span><br></pre></td></tr></table></figure>\n<p><img src=\"ffmpeg_i_tf.png\" alt></p>\n<p>命令行中指定文件的输入和输出文件名就行了，这个方法同样适用于视频和音频文件，这个是常用的命令之一。</p>\n<blockquote>\n<p>保留视频质量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 -qscale 0 elt_output.avi</span><br></pre></td></tr></table></figure>\n<p>通过-qscale 0参数来保留视频格式转换的视频质量。</p>\n<h4 id=\"视频压缩\"><a href=\"#视频压缩\" class=\"headerlink\" title=\"视频压缩\"></a>视频压缩</h4><blockquote>\n<p>降低比特率</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i elt.mp4 -b:v 1000k -bufsize 1000k elt.mp4</span><br></pre></td></tr></table></figure>\n<p>通过降低比特率(使用 -b:a 或 -ab)来进行视频压缩，一些常用的比特率有: 96k, 112k, 128k, 160k, 192k, 256k, 320k.值越大，文件所需要的体积就越大。</p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>ffmpeg官网：<a href=\"http://ffmpeg.org/ffmpeg.html#Audio-Options\" target=\"_blank\" rel=\"noopener\">http://ffmpeg.org/ffmpeg.html#Audio-Options</a><br>Linux上的ffmpeg完全使用指南：<a href=\"https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage\" target=\"_blank\" rel=\"noopener\">https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage</a></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>ffmpeg的安装与基础使用先记录到这里吧，但是关于ffmpeg的探索不会停止，学习永无止境，日后有使用到其他命令会更新此博客。</p>\n<font size=\"6\" color=\"red\">不会的东西，干它就完了！！！</font>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p><img src=\"/images/article_ffmpeg.png\" alt></p><p>大致的意思：FFmpeg是一款多媒体框架，能处理音频、视频等，不管什么格式的数据都可以进行处理，支持MacOS、Windows、Linux等各种系统。</p><p>FFmpeg：<font size=\"6\" color=\"red\">我是处理媒介数据方面的专家，我很牛逼，快来用我吧！！！</font><br>我：<font size=\"6\" color=\"blue\">好的，👌！</font></p>\n          </div>","more":"<hr>\n\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>因为公司做了一个宣传片，把宣传片视频上传到第三方网站上，发现非会员会有广告。这还得了，如果客户没有会员，岂不是要等，为了解决这个问题，从一个程序员的角度来想办法，直接做个页面，把视频放进去，通过域名访问就可以解决无广告的问题。</p>\n<p>周末花了一上午的时候搞完了，通过域名直接访问看，可以播放视频，但是发现视频有点卡，查看了一下视频大小：6分钟的视频500M，有点大啊，于是想压缩一下，上网搜索<strong><em>在线 视频压缩</em></strong>，TMD，要不就收费、要不就限制100M，身为程序员的我咋可能花钱去处理。于是，继续搜索<strong><em>python 视频压缩</em></strong>，看到了自己没有见过的<strong><em>ffmpeg</em></strong>命令，查了下资料，评价还不错，花了1小时搞定了<strong><em>ffmpeg</em></strong>环境，压缩 + 转格式的方式处理，最后视频110M，压缩了将近4/5，为了方便日后使用以及推荐给大家使用，写下本篇。</p>\n<p>背景介绍完毕了，开始搞。</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>安装需要下载2个文件：ffmpeg音视频处理工具，yasm是一款汇编器。yasm是安不安装都可以，既然ffmpeg里面都要求了就装上，省得日后麻烦。<br>文件下载地址：<br>yasm：<a href=\"http://yasm.tortall.net/Download.html\" target=\"_blank\" rel=\"noopener\">http://yasm.tortall.net/Download.html</a><br>ffmpeg：<a href=\"http://ffmpeg.org/download.html\" target=\"_blank\" rel=\"noopener\">http://ffmpeg.org/download.html</a></p>\n<p>都是国外下载地址，如果翻不过去，本篇提供下载地址，百度云盘：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">url</th>\n<th style=\"text-align:center\">password</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">yasm</td>\n<td style=\"text-align:center\"><a href=\"https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/14CEpqZvDhgyIcwjsINw4Gg</a></td>\n<td style=\"text-align:center\">ymw5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ffmpeg</td>\n<td style=\"text-align:center\"><a href=\"https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1n65Ss2S7rtp5bYIFxKHeHQ</a></td>\n<td style=\"text-align:center\">j3oj</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"上传-amp-amp-解压\"><a href=\"#上传-amp-amp-解压\" class=\"headerlink\" title=\"上传 &amp;&amp; 解压\"></a>上传 &amp;&amp; 解压</h4><p>把yasm &amp;&amp; ffmpeg文件下载到本地，需要上传到Linux服务器，在这里我采用的<strong><em>scp</em></strong>命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp ~/Downloads/ffmpeg/* root@192.168.151.64:~</span><br></pre></td></tr></table></figure>\n<p>上传完之后，ssh连接服务器，找到上传的文件进行解压：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ffmpeg</span><br><span class=\"line\">tar -jxvf ffmpeg-4.2.1.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"># yasm</span><br><span class=\"line\">tar -zxvf yasm-1.3.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>看好了，在这里yasm用的参数是<strong>z</strong>，ffmpeg用的是<strong>j</strong>，因为压缩的格式不一样，所以参数是不一样的，不知道的请看下tar的用法。</p>\n<h4 id=\"yasm安装\"><a href=\"#yasm安装\" class=\"headerlink\" title=\"yasm安装\"></a>yasm安装</h4><p>进入到yasm-1.3.0进行编译安装，因为是源码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yasm-1.3.0/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></p>\n<p>这个安装过程是没有任何问题的，等待安装完成即可。</p>\n<h4 id=\"ffmpeg安装\"><a href=\"#ffmpeg安装\" class=\"headerlink\" title=\"ffmpeg安装\"></a>ffmpeg安装</h4><p>进入ffmpeg-4.2.1文件夹进行编译安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --enable-shared --prefix=/usr/loacl/ffmpeg</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure></p>\n<p>编译过程有点长，请耐心等待，也可以做些别的事情。<br>安装成功后，<strong><em>cd /usr/loacl/ffmpeg</em></strong>进入安装目录，查看一下发现有bin、include,、ib、share这4个目录，</p>\n<ul>\n<li>bin：是ffmpeg主程序二进制目录</li>\n<li>include是C/C++头文件目录</li>\n<li>lib是编译好的库文件目录</li>\n<li>share是文档目录</li>\n</ul>\n<h4 id=\"lib配置\"><a href=\"#lib配置\" class=\"headerlink\" title=\"lib配置\"></a>lib配置</h4><blockquote>\n<p>ld.so.conf</p>\n</blockquote>\n<p>编辑lib包的配置文件，加入<strong><em>/usr/local/ffmpeg/lib</em></strong>内容（/usr/local/ffmpeg是ffmpeg的安装目录，根据个人不同安装目录修改）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ld.so.conf</span><br></pre></td></tr></table></figure></p>\n<p>更新环境变量<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>/etc/profile</p>\n</blockquote>\n<p>打开/etc/profile文件，在文件末尾加入以下内容:<br>export PATH=”/usr/local/ffmpeg/bin:$PATH”<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/profile</span><br></pre></td></tr></table></figure></p>\n<p>然后保存并运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><p>如果上步配置正确了，那么运行ffmpeg命令就会出现下图所示，因为ffmpeg不是系统命令，也不再系统PATH里面，所以执行要写全路径+ffmpeg。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /usr/local/ffmpeg/bin]#./ffmpeg</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">Hyper fast Audio and Video encoder</span><br><span class=\"line\">usage: ffmpeg [options] [[infile options] -i infile]... &#123;[outfile options] outfile&#125;...</span><br><span class=\"line\"></span><br><span class=\"line\">Use -h to get full help or, even better, run &apos;man ffmpeg&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libavdevice.so.57: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>\n<p>如果出现了以上问题，那么就检查一下在lib配置配置那步，是否做对了；如果解决不了，欢迎留言咨询。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>总结一下本人暂时学到的一些基础使用方法，这个命令很强大，喜欢的可以去官网进行查看详细的使用方法。</p>\n<h4 id=\"信息获取\"><a href=\"#信息获取\" class=\"headerlink\" title=\"信息获取\"></a>信息获取</h4><blockquote>\n<p>获取媒体信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i file_name</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">Input #0, mov,mp4,m4a,3gp,3g2,mj2, from &apos;elt.mp4&apos;:</span><br><span class=\"line\">  Metadata:</span><br><span class=\"line\">    major_brand     : mp42</span><br><span class=\"line\">    minor_version   : 0</span><br><span class=\"line\">    compatible_brands: mp42mp41</span><br><span class=\"line\">    creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">  Duration: 00:06:22.93, start: 0.000000, bitrate: 10291 kb/s</span><br><span class=\"line\">    Stream #0:0(eng): Video: h264 (Main) (avc1 / 0x31637661), yuv420p, 1920x1080 [SAR 1:1 DAR 16:9], 9966 kb/s, 25 fps, 25 tbr, 25k tbn, 50 tbc (default)</span><br><span class=\"line\">    Metadata:</span><br><span class=\"line\">      creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">      handler_name    : ?Mainconcept Video Media Handler</span><br><span class=\"line\">      encoder         : AVC Coding</span><br><span class=\"line\">    Stream #0:1(eng): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 317 kb/s (default)</span><br><span class=\"line\">    Metadata:</span><br><span class=\"line\">      creation_time   : 2019-12-12T07:49:20.000000Z</span><br><span class=\"line\">      handler_name    : #Mainconcept MP4 Sound Media Handler</span><br><span class=\"line\">At least one output file must be specified</span><br></pre></td></tr></table></figure>\n<p>音频、视频都可以，读取文件的相关信息。</p>\n<blockquote>\n<p>查看支持格式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -formats</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/usr/local/ffmpeg/bin/ffmpeg -formats | head -n 10</span><br><span class=\"line\">ffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers</span><br><span class=\"line\">  built with gcc 4.8.5 (GCC) 20150623 (Red Hat 4.8.5-39)</span><br><span class=\"line\">  configuration: --enable-shared --prefix=/usr/local/ffmpeg</span><br><span class=\"line\">  libavutil      56. 31.100 / 56. 31.100</span><br><span class=\"line\">  libavcodec     58. 54.100 / 58. 54.100</span><br><span class=\"line\">  libavformat    58. 29.100 / 58. 29.100</span><br><span class=\"line\">  libavdevice    58.  8.100 / 58.  8.100</span><br><span class=\"line\">  libavfilter     7. 57.100 /  7. 57.100</span><br><span class=\"line\">  libswscale      5.  5.100 /  5.  5.100</span><br><span class=\"line\">  libswresample   3.  5.100 /  3.  5.100</span><br><span class=\"line\">File formats:</span><br><span class=\"line\"> D. = Demuxing supported</span><br><span class=\"line\"> .E = Muxing supported</span><br><span class=\"line\"> --</span><br><span class=\"line\"> D  3dostr          3DO STR</span><br><span class=\"line\">  E 3g2             3GP2 (3GPP2 file format)</span><br><span class=\"line\">  E 3gp             3GP (3GPP file format)</span><br><span class=\"line\"> D  4xm             4X Technologies</span><br><span class=\"line\">  E a64             a64 - video for Commodore 64</span><br><span class=\"line\"> D  aa              Audible AA format files</span><br></pre></td></tr></table></figure>\n<p>查看支持的音频、视频格式。</p>\n<h4 id=\"格式转换\"><a href=\"#格式转换\" class=\"headerlink\" title=\"格式转换\"></a>格式转换</h4><blockquote>\n<p>基础使用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi</span><br><span class=\"line\"></span><br><span class=\"line\"># 多格式输出</span><br><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 elt_output.avi elt_output.wmv</span><br></pre></td></tr></table></figure>\n<p><img src=\"ffmpeg_i_tf.png\" alt></p>\n<p>命令行中指定文件的输入和输出文件名就行了，这个方法同样适用于视频和音频文件，这个是常用的命令之一。</p>\n<blockquote>\n<p>保留视频质量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/ffmpeg/bin/ffmpeg -i elt.mp4 -qscale 0 elt_output.avi</span><br></pre></td></tr></table></figure>\n<p>通过-qscale 0参数来保留视频格式转换的视频质量。</p>\n<h4 id=\"视频压缩\"><a href=\"#视频压缩\" class=\"headerlink\" title=\"视频压缩\"></a>视频压缩</h4><blockquote>\n<p>降低比特率</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i elt.mp4 -b:v 1000k -bufsize 1000k elt.mp4</span><br></pre></td></tr></table></figure>\n<p>通过降低比特率(使用 -b:a 或 -ab)来进行视频压缩，一些常用的比特率有: 96k, 112k, 128k, 160k, 192k, 256k, 320k.值越大，文件所需要的体积就越大。</p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>ffmpeg官网：<a href=\"http://ffmpeg.org/ffmpeg.html#Audio-Options\" target=\"_blank\" rel=\"noopener\">http://ffmpeg.org/ffmpeg.html#Audio-Options</a><br>Linux上的ffmpeg完全使用指南：<a href=\"https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage\" target=\"_blank\" rel=\"noopener\">https://eyehere.net/2019/the-complete-guide-for-using-ffmpeg-in-linux/#basic-usage</a></p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>ffmpeg的安装与基础使用先记录到这里吧，但是关于ffmpeg的探索不会停止，学习永无止境，日后有使用到其他命令会更新此博客。</p>\n<font size=\"6\" color=\"red\">不会的东西，干它就完了！！！</font>"},{"title":"etherpad在线协作编辑","comments":0,"top":false,"abbrlink":7544,"date":"2019-12-24T07:24:47.000Z","updated":"2019-12-24T07:24:47.000Z","desc":"一款基于Web的实时协同文档开源编辑服务平台，主要用于多用户在线协作编辑","keywords":"etherpad, 在线, 协作, 编辑, 多用户, 文本, web","_content":"\n![](/images/article_etherpad.jpg)\n\n### 简介\n{% note primary %}\n\n官网：Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time.\n\n个人翻译：Etherpad是一款定制、开源的在线编辑器，提供实时协作编辑。\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n\n### 版本\n\n![](version.png)\n\n### 安装\n\n\n本人实践的机器是阿里云服务器，系统是：\n```\n[mingliang.gao@VM_0_16_centos ~]$ cat /etc/*release*\n\nCentOS Linux release 7.5.1804 (Core)\nDerived from Red Hat Enterprise Linux 7.5 (Source)\nNAME=\"CentOS Linux\"\nVERSION=\"7 (Core)\"\nID=\"centos\"\nID_LIKE=\"rhel fedora\"\nVERSION_ID=\"7\"\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:centos:centos:7\"\nHOME_URL=\"https://www.centos.org/\"\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\n\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\nREDHAT_SUPPORT_PRODUCT=\"centos\"\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\n\nCentOS Linux release 7.5.1804 (Core)\nCentOS Linux release 7.5.1804 (Core)\ncpe:/o:centos:centos:7\n```\n\n#### node环境\n\n```\n# 安装\nyum install -y nodejs\n\n# check\nnode -v\n```\n\n#### 依赖包\n\n```\nyum install curl vim gcc-c++ make\n```\n\n#### MariaDB数据库安装与配置\n\n> 安装\n\n```\nyum install mariadb-server\n```\n执行过程略，在安装过程中会让出现root密码等设置，具体请参考文章最后的MariaDB安装与配置，进行下一步启动。\n\n> 启动\n\n```\n# 开启mariadb数据库\nsystemctl start mariadb.service\n\n# 设置开机自动启动\nsystemctl enable mariadb.service\n```\n\n> 首次安装\n\n```\n[root@VM_0_16_centos conf.d]#  mysql_secure_installation\n\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\n\nIn order to log into MariaDB to secure it, we'll need the current\npassword for the root user.  If you've just installed MariaDB, and\nyou haven't set the root password yet, the password will be blank,\nso you should just press enter here.\n\nEnter current password for root (enter for none):\nERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\nEnter current password for root (enter for none):\nERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\nEnter current password for root (enter for none):\nOK, successfully used password, moving on...\n\nSetting the root password ensures that nobody can log into the MariaDB\nroot user without the proper authorisation.\n\nSet root password? [Y/n] y\nNew password:\nRe-enter new password:\nPassword updated successfully!\nReloading privilege tables..\n ... Success!\n\n\nBy default, a MariaDB installation has an anonymous user, allowing anyone\nto log into MariaDB without having to have a user account created for\nthem.  This is intended only for testing, and to make the installation\ngo a bit smoother.  You should remove them before moving into a\nproduction environment.\n\nRemove anonymous users? [Y/n] n\n ... skipping.\n\nNormally, root should only be allowed to connect from 'localhost'.  This\nensures that someone cannot guess at the root password from the network.\n\nDisallow root login remotely? [Y/n] n\n ... skipping.\n\nBy default, MariaDB comes with a database named 'test' that anyone can\naccess.  This is also intended only for testing, and should be removed\nbefore moving into a production environment.\n\nRemove test database and access to it? [Y/n] n\n ... skipping.\n\nReloading the privilege tables will ensure that all changes made so far\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n ... Success!\n\nCleaning up...\n\nAll done!  If you've completed all of the above steps, your MariaDB\ninstallation should now be secure.\n\nThanks for using MariaDB!\n```\n完成初始化设置，主要是root密码的设置最重要。\n\n> 连接\n\n```\nmysql -h 127.0.0.1 -P 3306 -u root -p\n```\n具体mysql命令怎么使用这里也不做解释，不知道的请自行查资料。\n\n> 配置\n\n```\nMariaDB [(none)]> CREATE DATABASE etherpad;\nMariaDB [(none)]> GRANT ALL PRIVILEGES ON etherpad.* TO 'etherpad'@'localhost' IDENTIFIED BY '123456';\nMariaDB [(none)]> FLUSH PRIVILEGES;\nMariaDB [(none)]> \\q\n```\n在这里操作是创建etherpad数据库，以及etherpad用户并分配etherpad用户有访问etherpad数据库的权限，用户名：etherpad，密码：123456。\n关于数据库、用户、密码自己定义，在etherpad安装与配置中需要用户。\n\n#### 创建linux用户\n\n```\nadduser --home /opt/etherpad --shell /bin/bash etherpad\ninstall -d -m 755 -o etherpad -g etherpad /opt/etherpad\n```\n用户启动使用etherpad程序，我之前没有建立用户，直接用root去启动，会提示：\n```\n[root@VM_0_16_centos opt]# bash /opt/etherpad-lite/bin/run.sh\nYou shouldn't start Etherpad as root!\nPlease type 'Etherpad rocks my socks' or supply the '--root' argument if you still want to start it as root\n```\n也可以在启动的命令后面加上--root进行启动，但是既然etherpad不让用root，那就新建一个就好了。\n\n{% raw %}\n<div class=\"post_cus_note\">准备工作已经完毕。。。。。。</div>\n{% endraw %}\n\n#### 下载etherpad\n\n```\nsu etherpad\ncd ~\ngit clone https://github.com/ether/etherpad-lite\n```\n切换etherpad用户，如果没有git命令的用户进行安装，文章最后有相关参考。\n把etherpad放在自己想要放的目录。\n\n#### 配置文件\n\n> 创建配置文件\n\n```\ncp ~/etherpad-lite/settings.json.template ~/etherpad-lite/settings.json\n```\n\n> 编辑配置\n\n```\nvim ~/etherpad-lite/settings.json\n```\n\n- Ip配置\n在配置中搜索***0.0.0.0***，在文件88行，***IP***改成服务器IP，***PORT***端口改成自己设置的端口，去掉注释，配置更改如下：\n```\n\"ip\": \"192.168.151.64\",\n\"port\": 9002,\n```\n\n- 数据库配置\n在配置中搜索***dbType***，在文件144行，这里用的信息都是在数据库安装配置中设置的配置，写清楚即可，去掉注释，配置更改如下：\n```\n\"dbType\" : \"mysql\",\n\"dbSettings\" : {\n  \"user\":     \"etherpad\",\n  \"host\":     \"192.168.151.64\",\n  \"port\":     3306,\n  \"password\": \"123456\",\n  \"database\": \"etherpad\",\n  \"charset\":  \"utf8mb4\"\n},\n```\n\n- 管理员\n在配置中搜索***password***，在文件365行，这里用的信息都是在数据库安装配置中设置的配置，去掉注释，配置更改如下：\n```\n\"users\": {\n  \"admin\": {\n    // 1) \"password\" can be replaced with \"hash\" if you install ep_hash_auth\n    // 2) please note that if password is null, the user will not be created\n    \"password\": \"admin\",\n    \"is_admin\": true\n  },\n  \"user\": {\n    // 1) \"password\" can be replaced with \"hash\" if you install ep_hash_auth\n    // 2) please note that if password is null, the user will not be created\n    \"password\": \"user\",\n    \"is_admin\": false\n  }\n},\n```\n\n> 保存配置\n\n```\n:wq\n\n:X\n```\n用哪个都可以，vim保存并退出。\n\n#### etherpad安装依赖\n\n```\nbash ~/etherpad-lite/bin/installDeps.sh\n```\n安装一下etherpad所需要的依赖包。\n\n#### 启动\n\n```\n~/etherpad-lite/bin/run.sh\n```\n用etherpad用户直接执行上面命令。\n```\n[root@localhost ~]#/opt/etherpad/etherpad-lite/bin/run.sh\n\nEnsure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.\naudited 13370 packages in 5.363s\n\n8 packages are looking for funding\n  run `npm fund` for details\n\nfound 5 vulnerabilities (3 low, 2 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\nClearing minified cache...\nStarted Etherpad...\n[2019-12-28 15:27:21.215] [DEBUG] console - Running on Node v12.14.0 (minimum required Node version: 8.9.0)\n[2019-12-28 15:27:21.324] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: /opt/etherpad/etherpad-lite\n[2019-12-28 15:27:21.324] [DEBUG] AbsolutePaths - Relative path \"settings.json\" can be rewritten to \"/opt/etherpad/etherpad-lite/settings.json\"\n[2019-12-28 15:27:21.325] [DEBUG] AbsolutePaths - Relative path \"credentials.json\" can be rewritten to \"/opt/etherpad/etherpad-lite/credentials.json\"\n[2019-12-28 15:27:21.331] [INFO] console - settings loaded from: /opt/etherpad/etherpad-lite/settings.json\n[2019-12-28 15:27:21.331] [INFO] console - No credentials file found in /opt/etherpad/etherpad-lite/credentials.json. Ignoring.\n[2019-12-28 15:27:21.332] [INFO] console - Using skin \"colibris\" in dir: /opt/etherpad/etherpad-lite/src/static/skins/colibris\n[2019-12-28 15:27:21.332] [INFO] console - Session key loaded from: /opt/etherpad/etherpad-lite/SESSIONKEY.txt\n[2019-12-28 15:27:21.381] [ERROR] console - (node:25518) [DEP0126] DeprecationWarning: timers.active() is deprecated. Please use timeout.refresh() instead.\n[2019-12-28 15:27:21.382] [ERROR] console - (node:25518) [DEP0096] DeprecationWarning: timers.unenroll() is deprecated. Please use clearTimeout instead.\n[2019-12-28 15:27:21.831] [INFO] APIHandler - Api key file read from: \"/opt/etherpad/etherpad-lite/APIKEY.txt\"\n[2019-12-28 15:27:22.139] [INFO] console - Installed plugins: ep_align@0.0.24, ep_image_upload@1.0.12\n[2019-12-28 15:27:22.142] [INFO] console - Report bugs at https://github.com/ether/etherpad-lite/issues\n[2019-12-28 15:27:22.143] [INFO] console - Your Etherpad version is 1.8.0 (5bcc5a3)\n[2019-12-28 15:27:22.228] [INFO] console - You can access your Etherpad instance at http://192.168.151.64:9001/\n[2019-12-28 15:27:22.228] [INFO] console - The plugin admin page is at http://192.168.151.64:9001/admin/plugins\n[2019-12-28 15:27:22.228] [WARN] console - Etherpad is running in Development mode.  This mode is slower for users and less secure than production mode.  You should set the NODE_ENV environment variable to production by using: export NODE_ENV=production\n```\n\n#### 访问\n\n在浏览器上直接访问：http://IP:PORT，服务器IP + 配置的PORT端口。\n\n\n{% raw %}\n<div class=\"post_cus_note\">列举一下可能遇到的问题</div>\n{% endraw %}\n\n### 常见问题\n\n> 端口设置\n\n如果在浏览器访问，提示服务不可以用，那么检查一下服务器防火墙问题。\n\n- 检查端口是否开通\n```\n[root@localhost ~]#firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp3s0\n  sources:\n  services: dhcpv6-client mysql ssh\n  ports: 3306/tcp 8090/tcp 80/tcp 10000/tcp 9001/tcp\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n```\n\n- 开放端口\n```\nfirewall-cmd --zone=public --add-port=9001/tcp\n```\n\n- 重启服务\n```\nsystemctl restart firewalld\n```\n\n> npm版本\n\n在安装etherpad依赖包或者其他包的时候，有的也许会提示***node版本过低***，更新下就好，这里推荐用n去更新。\n\n文章最后有相关参考。\n\n> etherpad依赖脚本不可执行\n\n如果遇到***/opt/etherpad/etherpad-lite/bin/run.sh***脚本不被执行，那么将脚本改变读、写、执行的权限。\n```\nchmod 777 /opt/etherpad/etherpad-lite/bin/run.sh\n```\n\n\n### 插件配置\n\n在这里，是主要配置etherpad的插件，有几个还是蛮好用，具体配置在下面有解释，访问Ip:Port/admin，账号密码就是在etherpad配置的那个。\n\n![](search_plugin.png)\n\n#### align\n\n作用：文字左、中、右对齐插件。\n\n> 查找\n\n在搜索出查找***align***。\n\n> 安装\n\n搜索到之后进行***install***安装。\n\n> 配置\n\n打开Settings找到toolbar，去掉toolbar的注视，在414行添加以下内容：\n```\n[“alignLeft”, “alignCenter”, “alignJustify”, “alignRight”]\n```\n\n> 结果\n\n![](align.jpg)\n\n#### image_upload\n\n作用：图片上传功能。\n\n> 查找\n\n在搜索出查找***image***。\n\n> 安装\n\n搜索到之后进行***install***安装。\n\n> 配置\n\n打开Settings找到toolbar，在415行添加以下内容：\n```\n\n  \"toolbar\": {\n    \"left\": [\n      [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n      [\"orderedlist\", \"unorderedlist\", \"indent\", \"outdent\"],\n      [\"undo\", \"redo\"],\n      [\"clearauthorship\"],\n      [\"alignLeft\", \"alignCenter\", \"alignJustify\", \"alignRight\"],\n      [\"addImage\"]\n    ],\n    \"right\": [\n      [\"importexport\", \"timeslider\", \"savedrevision\"],\n      [\"settings\", \"embed\"],\n      [\"showusers\"]\n    ],\n    \"timeslider\": [\n      [\"timeslider_export\", \"timeslider_returnToPad\"]\n    ]\n  },\n\n\n\n\"ep_image_upload\": {\n      \"fileTypes\": [\"jpeg\",\"jpg\",\"bmp\",\"gif\",\"png\"],\n      \"maxFileSize\": 5000000\n},\n\n```\n\n> 结果\n\n![](image-upload.png)\n\n<font size=6.5 color='red'>插件根据自己的需求制定。。。。。。</font>\n\n### 额外脚本\n\n我把启动与杀死进程做成了.sh脚本，具体如下：\n\n> start\n\n```\nnohup /opt/etherpad/etherpad-lite/bin/run.sh>/dev/null  2>&1 &\n```\n\n> end\n\n```\nps -ef | grep etherpad | grep -v grep | awk -F \" \" '{print $2}' | xargs kill\n```\n\n> nohub无此命令\n\n```\n# 切换用户\nsu root\n\n# 安装\nyum install coreutils\n\n# check\nwhich nohub\n```\n\n### nginx域名配置\n\nnginx配置：\n```\n[root@VM_0_16_centos nginx]# cat /etc/nginx/conf.d/etherpad.conf\nserver {\n    listen  9001;\n    server_name     _;\n\n    access_log  /var/log/nginx/etherpad9001.access.log  main;\n\n    location / {\n         proxy_pass http://172.17.0.16:9002/;\n    }\n\n    error_page 404 /error.html;\n    location = /40x.html {\n\n    }\n\n    error_page 500 502 503 504 /error.html;\n    location = /50x.html {\n\n    }\n\n}\n```\n因为本人的域名还在审核中，这里用ip进行访问。\n{% note danger %}\n说明一下：本人的服务器是腾讯云服务器，所以在配置nginx监听的IP是外网IP、端口是9001，在etherpad配置里面配置内网IP以及端口是9002。\n{% endnote %}\n\n### 测试地址\n\nhttp://212.64.61.62:9001/\n\n### 学习参考\n\n官网：https://etherpad.org/\nGithub：https://github.com/ether/etherpad-lite\nMariaDB安装：https://www.jianshu.com/p/85ad52c88399\nGit安装：https://www.jianshu.com/p/f19d1473c3e1\nnode与npm更新：https://www.jianshu.com/p/2ad99f605499\n","source":"_posts/Tools-etherpad在线协作编辑.md","raw":"---\ntitle: etherpad在线协作编辑\ncomments: false\ncategories:\n  - [工具集]\ntags: [etherpad, 运维工具]\ntop: false\nabbrlink: 7544\ndate: 2019-12-24 15:24:47\nupdated: 2019-12-24 15:24:47\ndesc: 一款基于Web的实时协同文档开源编辑服务平台，主要用于多用户在线协作编辑\nkeywords: etherpad, 在线, 协作, 编辑, 多用户, 文本, web\n---\n\n![](/images/article_etherpad.jpg)\n\n### 简介\n{% note primary %}\n\n官网：Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time.\n\n个人翻译：Etherpad是一款定制、开源的在线编辑器，提供实时协作编辑。\n\n{% endnote %}\n\n<!--more-->\n<hr />\n\n\n### 版本\n\n![](version.png)\n\n### 安装\n\n\n本人实践的机器是阿里云服务器，系统是：\n```\n[mingliang.gao@VM_0_16_centos ~]$ cat /etc/*release*\n\nCentOS Linux release 7.5.1804 (Core)\nDerived from Red Hat Enterprise Linux 7.5 (Source)\nNAME=\"CentOS Linux\"\nVERSION=\"7 (Core)\"\nID=\"centos\"\nID_LIKE=\"rhel fedora\"\nVERSION_ID=\"7\"\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:centos:centos:7\"\nHOME_URL=\"https://www.centos.org/\"\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\n\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\nREDHAT_SUPPORT_PRODUCT=\"centos\"\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\n\nCentOS Linux release 7.5.1804 (Core)\nCentOS Linux release 7.5.1804 (Core)\ncpe:/o:centos:centos:7\n```\n\n#### node环境\n\n```\n# 安装\nyum install -y nodejs\n\n# check\nnode -v\n```\n\n#### 依赖包\n\n```\nyum install curl vim gcc-c++ make\n```\n\n#### MariaDB数据库安装与配置\n\n> 安装\n\n```\nyum install mariadb-server\n```\n执行过程略，在安装过程中会让出现root密码等设置，具体请参考文章最后的MariaDB安装与配置，进行下一步启动。\n\n> 启动\n\n```\n# 开启mariadb数据库\nsystemctl start mariadb.service\n\n# 设置开机自动启动\nsystemctl enable mariadb.service\n```\n\n> 首次安装\n\n```\n[root@VM_0_16_centos conf.d]#  mysql_secure_installation\n\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\n\nIn order to log into MariaDB to secure it, we'll need the current\npassword for the root user.  If you've just installed MariaDB, and\nyou haven't set the root password yet, the password will be blank,\nso you should just press enter here.\n\nEnter current password for root (enter for none):\nERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\nEnter current password for root (enter for none):\nERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)\nEnter current password for root (enter for none):\nOK, successfully used password, moving on...\n\nSetting the root password ensures that nobody can log into the MariaDB\nroot user without the proper authorisation.\n\nSet root password? [Y/n] y\nNew password:\nRe-enter new password:\nPassword updated successfully!\nReloading privilege tables..\n ... Success!\n\n\nBy default, a MariaDB installation has an anonymous user, allowing anyone\nto log into MariaDB without having to have a user account created for\nthem.  This is intended only for testing, and to make the installation\ngo a bit smoother.  You should remove them before moving into a\nproduction environment.\n\nRemove anonymous users? [Y/n] n\n ... skipping.\n\nNormally, root should only be allowed to connect from 'localhost'.  This\nensures that someone cannot guess at the root password from the network.\n\nDisallow root login remotely? [Y/n] n\n ... skipping.\n\nBy default, MariaDB comes with a database named 'test' that anyone can\naccess.  This is also intended only for testing, and should be removed\nbefore moving into a production environment.\n\nRemove test database and access to it? [Y/n] n\n ... skipping.\n\nReloading the privilege tables will ensure that all changes made so far\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n ... Success!\n\nCleaning up...\n\nAll done!  If you've completed all of the above steps, your MariaDB\ninstallation should now be secure.\n\nThanks for using MariaDB!\n```\n完成初始化设置，主要是root密码的设置最重要。\n\n> 连接\n\n```\nmysql -h 127.0.0.1 -P 3306 -u root -p\n```\n具体mysql命令怎么使用这里也不做解释，不知道的请自行查资料。\n\n> 配置\n\n```\nMariaDB [(none)]> CREATE DATABASE etherpad;\nMariaDB [(none)]> GRANT ALL PRIVILEGES ON etherpad.* TO 'etherpad'@'localhost' IDENTIFIED BY '123456';\nMariaDB [(none)]> FLUSH PRIVILEGES;\nMariaDB [(none)]> \\q\n```\n在这里操作是创建etherpad数据库，以及etherpad用户并分配etherpad用户有访问etherpad数据库的权限，用户名：etherpad，密码：123456。\n关于数据库、用户、密码自己定义，在etherpad安装与配置中需要用户。\n\n#### 创建linux用户\n\n```\nadduser --home /opt/etherpad --shell /bin/bash etherpad\ninstall -d -m 755 -o etherpad -g etherpad /opt/etherpad\n```\n用户启动使用etherpad程序，我之前没有建立用户，直接用root去启动，会提示：\n```\n[root@VM_0_16_centos opt]# bash /opt/etherpad-lite/bin/run.sh\nYou shouldn't start Etherpad as root!\nPlease type 'Etherpad rocks my socks' or supply the '--root' argument if you still want to start it as root\n```\n也可以在启动的命令后面加上--root进行启动，但是既然etherpad不让用root，那就新建一个就好了。\n\n{% raw %}\n<div class=\"post_cus_note\">准备工作已经完毕。。。。。。</div>\n{% endraw %}\n\n#### 下载etherpad\n\n```\nsu etherpad\ncd ~\ngit clone https://github.com/ether/etherpad-lite\n```\n切换etherpad用户，如果没有git命令的用户进行安装，文章最后有相关参考。\n把etherpad放在自己想要放的目录。\n\n#### 配置文件\n\n> 创建配置文件\n\n```\ncp ~/etherpad-lite/settings.json.template ~/etherpad-lite/settings.json\n```\n\n> 编辑配置\n\n```\nvim ~/etherpad-lite/settings.json\n```\n\n- Ip配置\n在配置中搜索***0.0.0.0***，在文件88行，***IP***改成服务器IP，***PORT***端口改成自己设置的端口，去掉注释，配置更改如下：\n```\n\"ip\": \"192.168.151.64\",\n\"port\": 9002,\n```\n\n- 数据库配置\n在配置中搜索***dbType***，在文件144行，这里用的信息都是在数据库安装配置中设置的配置，写清楚即可，去掉注释，配置更改如下：\n```\n\"dbType\" : \"mysql\",\n\"dbSettings\" : {\n  \"user\":     \"etherpad\",\n  \"host\":     \"192.168.151.64\",\n  \"port\":     3306,\n  \"password\": \"123456\",\n  \"database\": \"etherpad\",\n  \"charset\":  \"utf8mb4\"\n},\n```\n\n- 管理员\n在配置中搜索***password***，在文件365行，这里用的信息都是在数据库安装配置中设置的配置，去掉注释，配置更改如下：\n```\n\"users\": {\n  \"admin\": {\n    // 1) \"password\" can be replaced with \"hash\" if you install ep_hash_auth\n    // 2) please note that if password is null, the user will not be created\n    \"password\": \"admin\",\n    \"is_admin\": true\n  },\n  \"user\": {\n    // 1) \"password\" can be replaced with \"hash\" if you install ep_hash_auth\n    // 2) please note that if password is null, the user will not be created\n    \"password\": \"user\",\n    \"is_admin\": false\n  }\n},\n```\n\n> 保存配置\n\n```\n:wq\n\n:X\n```\n用哪个都可以，vim保存并退出。\n\n#### etherpad安装依赖\n\n```\nbash ~/etherpad-lite/bin/installDeps.sh\n```\n安装一下etherpad所需要的依赖包。\n\n#### 启动\n\n```\n~/etherpad-lite/bin/run.sh\n```\n用etherpad用户直接执行上面命令。\n```\n[root@localhost ~]#/opt/etherpad/etherpad-lite/bin/run.sh\n\nEnsure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.\naudited 13370 packages in 5.363s\n\n8 packages are looking for funding\n  run `npm fund` for details\n\nfound 5 vulnerabilities (3 low, 2 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\nClearing minified cache...\nStarted Etherpad...\n[2019-12-28 15:27:21.215] [DEBUG] console - Running on Node v12.14.0 (minimum required Node version: 8.9.0)\n[2019-12-28 15:27:21.324] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: /opt/etherpad/etherpad-lite\n[2019-12-28 15:27:21.324] [DEBUG] AbsolutePaths - Relative path \"settings.json\" can be rewritten to \"/opt/etherpad/etherpad-lite/settings.json\"\n[2019-12-28 15:27:21.325] [DEBUG] AbsolutePaths - Relative path \"credentials.json\" can be rewritten to \"/opt/etherpad/etherpad-lite/credentials.json\"\n[2019-12-28 15:27:21.331] [INFO] console - settings loaded from: /opt/etherpad/etherpad-lite/settings.json\n[2019-12-28 15:27:21.331] [INFO] console - No credentials file found in /opt/etherpad/etherpad-lite/credentials.json. Ignoring.\n[2019-12-28 15:27:21.332] [INFO] console - Using skin \"colibris\" in dir: /opt/etherpad/etherpad-lite/src/static/skins/colibris\n[2019-12-28 15:27:21.332] [INFO] console - Session key loaded from: /opt/etherpad/etherpad-lite/SESSIONKEY.txt\n[2019-12-28 15:27:21.381] [ERROR] console - (node:25518) [DEP0126] DeprecationWarning: timers.active() is deprecated. Please use timeout.refresh() instead.\n[2019-12-28 15:27:21.382] [ERROR] console - (node:25518) [DEP0096] DeprecationWarning: timers.unenroll() is deprecated. Please use clearTimeout instead.\n[2019-12-28 15:27:21.831] [INFO] APIHandler - Api key file read from: \"/opt/etherpad/etherpad-lite/APIKEY.txt\"\n[2019-12-28 15:27:22.139] [INFO] console - Installed plugins: ep_align@0.0.24, ep_image_upload@1.0.12\n[2019-12-28 15:27:22.142] [INFO] console - Report bugs at https://github.com/ether/etherpad-lite/issues\n[2019-12-28 15:27:22.143] [INFO] console - Your Etherpad version is 1.8.0 (5bcc5a3)\n[2019-12-28 15:27:22.228] [INFO] console - You can access your Etherpad instance at http://192.168.151.64:9001/\n[2019-12-28 15:27:22.228] [INFO] console - The plugin admin page is at http://192.168.151.64:9001/admin/plugins\n[2019-12-28 15:27:22.228] [WARN] console - Etherpad is running in Development mode.  This mode is slower for users and less secure than production mode.  You should set the NODE_ENV environment variable to production by using: export NODE_ENV=production\n```\n\n#### 访问\n\n在浏览器上直接访问：http://IP:PORT，服务器IP + 配置的PORT端口。\n\n\n{% raw %}\n<div class=\"post_cus_note\">列举一下可能遇到的问题</div>\n{% endraw %}\n\n### 常见问题\n\n> 端口设置\n\n如果在浏览器访问，提示服务不可以用，那么检查一下服务器防火墙问题。\n\n- 检查端口是否开通\n```\n[root@localhost ~]#firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: enp3s0\n  sources:\n  services: dhcpv6-client mysql ssh\n  ports: 3306/tcp 8090/tcp 80/tcp 10000/tcp 9001/tcp\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n```\n\n- 开放端口\n```\nfirewall-cmd --zone=public --add-port=9001/tcp\n```\n\n- 重启服务\n```\nsystemctl restart firewalld\n```\n\n> npm版本\n\n在安装etherpad依赖包或者其他包的时候，有的也许会提示***node版本过低***，更新下就好，这里推荐用n去更新。\n\n文章最后有相关参考。\n\n> etherpad依赖脚本不可执行\n\n如果遇到***/opt/etherpad/etherpad-lite/bin/run.sh***脚本不被执行，那么将脚本改变读、写、执行的权限。\n```\nchmod 777 /opt/etherpad/etherpad-lite/bin/run.sh\n```\n\n\n### 插件配置\n\n在这里，是主要配置etherpad的插件，有几个还是蛮好用，具体配置在下面有解释，访问Ip:Port/admin，账号密码就是在etherpad配置的那个。\n\n![](search_plugin.png)\n\n#### align\n\n作用：文字左、中、右对齐插件。\n\n> 查找\n\n在搜索出查找***align***。\n\n> 安装\n\n搜索到之后进行***install***安装。\n\n> 配置\n\n打开Settings找到toolbar，去掉toolbar的注视，在414行添加以下内容：\n```\n[“alignLeft”, “alignCenter”, “alignJustify”, “alignRight”]\n```\n\n> 结果\n\n![](align.jpg)\n\n#### image_upload\n\n作用：图片上传功能。\n\n> 查找\n\n在搜索出查找***image***。\n\n> 安装\n\n搜索到之后进行***install***安装。\n\n> 配置\n\n打开Settings找到toolbar，在415行添加以下内容：\n```\n\n  \"toolbar\": {\n    \"left\": [\n      [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n      [\"orderedlist\", \"unorderedlist\", \"indent\", \"outdent\"],\n      [\"undo\", \"redo\"],\n      [\"clearauthorship\"],\n      [\"alignLeft\", \"alignCenter\", \"alignJustify\", \"alignRight\"],\n      [\"addImage\"]\n    ],\n    \"right\": [\n      [\"importexport\", \"timeslider\", \"savedrevision\"],\n      [\"settings\", \"embed\"],\n      [\"showusers\"]\n    ],\n    \"timeslider\": [\n      [\"timeslider_export\", \"timeslider_returnToPad\"]\n    ]\n  },\n\n\n\n\"ep_image_upload\": {\n      \"fileTypes\": [\"jpeg\",\"jpg\",\"bmp\",\"gif\",\"png\"],\n      \"maxFileSize\": 5000000\n},\n\n```\n\n> 结果\n\n![](image-upload.png)\n\n<font size=6.5 color='red'>插件根据自己的需求制定。。。。。。</font>\n\n### 额外脚本\n\n我把启动与杀死进程做成了.sh脚本，具体如下：\n\n> start\n\n```\nnohup /opt/etherpad/etherpad-lite/bin/run.sh>/dev/null  2>&1 &\n```\n\n> end\n\n```\nps -ef | grep etherpad | grep -v grep | awk -F \" \" '{print $2}' | xargs kill\n```\n\n> nohub无此命令\n\n```\n# 切换用户\nsu root\n\n# 安装\nyum install coreutils\n\n# check\nwhich nohub\n```\n\n### nginx域名配置\n\nnginx配置：\n```\n[root@VM_0_16_centos nginx]# cat /etc/nginx/conf.d/etherpad.conf\nserver {\n    listen  9001;\n    server_name     _;\n\n    access_log  /var/log/nginx/etherpad9001.access.log  main;\n\n    location / {\n         proxy_pass http://172.17.0.16:9002/;\n    }\n\n    error_page 404 /error.html;\n    location = /40x.html {\n\n    }\n\n    error_page 500 502 503 504 /error.html;\n    location = /50x.html {\n\n    }\n\n}\n```\n因为本人的域名还在审核中，这里用ip进行访问。\n{% note danger %}\n说明一下：本人的服务器是腾讯云服务器，所以在配置nginx监听的IP是外网IP、端口是9001，在etherpad配置里面配置内网IP以及端口是9002。\n{% endnote %}\n\n### 测试地址\n\nhttp://212.64.61.62:9001/\n\n### 学习参考\n\n官网：https://etherpad.org/\nGithub：https://github.com/ether/etherpad-lite\nMariaDB安装：https://www.jianshu.com/p/85ad52c88399\nGit安装：https://www.jianshu.com/p/f19d1473c3e1\nnode与npm更新：https://www.jianshu.com/p/2ad99f605499\n","slug":"Tools-etherpad在线协作编辑","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38i00gptabjxck2zfc1","content":"<p><img src=\"/images/article_etherpad.jpg\" alt></p>\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p>官网：Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time.</p><p>个人翻译：Etherpad是一款定制、开源的在线编辑器，提供实时协作编辑。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n\n<h3 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h3><p><img src=\"version.png\" alt></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>本人实践的机器是阿里云服务器，系统是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingliang.gao@VM_0_16_centos ~]$ cat /etc/*release*</span><br><span class=\"line\"></span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">Derived from Red Hat Enterprise Linux 7.5 (Source)</span><br><span class=\"line\">NAME=&quot;CentOS Linux&quot;</span><br><span class=\"line\">VERSION=&quot;7 (Core)&quot;</span><br><span class=\"line\">ID=&quot;centos&quot;</span><br><span class=\"line\">ID_LIKE=&quot;rhel fedora&quot;</span><br><span class=\"line\">VERSION_ID=&quot;7&quot;</span><br><span class=\"line\">PRETTY_NAME=&quot;CentOS Linux 7 (Core)&quot;</span><br><span class=\"line\">ANSI_COLOR=&quot;0;31&quot;</span><br><span class=\"line\">CPE_NAME=&quot;cpe:/o:centos:centos:7&quot;</span><br><span class=\"line\">HOME_URL=&quot;https://www.centos.org/&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://bugs.centos.org/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">CENTOS_MANTISBT_PROJECT=&quot;CentOS-7&quot;</span><br><span class=\"line\">CENTOS_MANTISBT_PROJECT_VERSION=&quot;7&quot;</span><br><span class=\"line\">REDHAT_SUPPORT_PRODUCT=&quot;centos&quot;</span><br><span class=\"line\">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;7&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">cpe:/o:centos:centos:7</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"node环境\"><a href=\"#node环境\" class=\"headerlink\" title=\"node环境\"></a>node环境</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\"></span><br><span class=\"line\"># check</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install curl vim gcc-c++ make</span><br></pre></td></tr></table></figure>\n<h4 id=\"MariaDB数据库安装与配置\"><a href=\"#MariaDB数据库安装与配置\" class=\"headerlink\" title=\"MariaDB数据库安装与配置\"></a>MariaDB数据库安装与配置</h4><blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install mariadb-server</span><br></pre></td></tr></table></figure>\n<p>执行过程略，在安装过程中会让出现root密码等设置，具体请参考文章最后的MariaDB安装与配置，进行下一步启动。</p>\n<blockquote>\n<p>启动</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开启mariadb数据库</span><br><span class=\"line\">systemctl start mariadb.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置开机自动启动</span><br><span class=\"line\">systemctl enable mariadb.service</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>首次安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos conf.d]#  mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class=\"line\">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class=\"line\"></span><br><span class=\"line\">In order to log into MariaDB to secure it, we&apos;ll need the current</span><br><span class=\"line\">password for the root user.  If you&apos;ve just installed MariaDB, and</span><br><span class=\"line\">you haven&apos;t set the root password yet, the password will be blank,</span><br><span class=\"line\">so you should just press enter here.</span><br><span class=\"line\"></span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">OK, successfully used password, moving on...</span><br><span class=\"line\"></span><br><span class=\"line\">Setting the root password ensures that nobody can log into the MariaDB</span><br><span class=\"line\">root user without the proper authorisation.</span><br><span class=\"line\"></span><br><span class=\"line\">Set root password? [Y/n] y</span><br><span class=\"line\">New password:</span><br><span class=\"line\">Re-enter new password:</span><br><span class=\"line\">Password updated successfully!</span><br><span class=\"line\">Reloading privilege tables..</span><br><span class=\"line\"> ... Success!</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class=\"line\">to log into MariaDB without having to have a user account created for</span><br><span class=\"line\">them.  This is intended only for testing, and to make the installation</span><br><span class=\"line\">go a bit smoother.  You should remove them before moving into a</span><br><span class=\"line\">production environment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove anonymous users? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">Normally, root should only be allowed to connect from &apos;localhost&apos;.  This</span><br><span class=\"line\">ensures that someone cannot guess at the root password from the network.</span><br><span class=\"line\"></span><br><span class=\"line\">Disallow root login remotely? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">By default, MariaDB comes with a database named &apos;test&apos; that anyone can</span><br><span class=\"line\">access.  This is also intended only for testing, and should be removed</span><br><span class=\"line\">before moving into a production environment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove test database and access to it? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading the privilege tables will ensure that all changes made so far</span><br><span class=\"line\">will take effect immediately.</span><br><span class=\"line\"></span><br><span class=\"line\">Reload privilege tables now? [Y/n] y</span><br><span class=\"line\"> ... Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\"></span><br><span class=\"line\">All done!  If you&apos;ve completed all of the above steps, your MariaDB</span><br><span class=\"line\">installation should now be secure.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure>\n<p>完成初始化设置，主要是root密码的设置最重要。</p>\n<blockquote>\n<p>连接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h 127.0.0.1 -P 3306 -u root -p</span><br></pre></td></tr></table></figure>\n<p>具体mysql命令怎么使用这里也不做解释，不知道的请自行查资料。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; CREATE DATABASE etherpad;</span><br><span class=\"line\">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON etherpad.* TO &apos;etherpad&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">MariaDB [(none)]&gt; FLUSH PRIVILEGES;</span><br><span class=\"line\">MariaDB [(none)]&gt; \\q</span><br></pre></td></tr></table></figure>\n<p>在这里操作是创建etherpad数据库，以及etherpad用户并分配etherpad用户有访问etherpad数据库的权限，用户名：etherpad，密码：123456。<br>关于数据库、用户、密码自己定义，在etherpad安装与配置中需要用户。</p>\n<h4 id=\"创建linux用户\"><a href=\"#创建linux用户\" class=\"headerlink\" title=\"创建linux用户\"></a>创建linux用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser --home /opt/etherpad --shell /bin/bash etherpad</span><br><span class=\"line\">install -d -m 755 -o etherpad -g etherpad /opt/etherpad</span><br></pre></td></tr></table></figure>\n<p>用户启动使用etherpad程序，我之前没有建立用户，直接用root去启动，会提示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos opt]# bash /opt/etherpad-lite/bin/run.sh</span><br><span class=\"line\">You shouldn&apos;t start Etherpad as root!</span><br><span class=\"line\">Please type &apos;Etherpad rocks my socks&apos; or supply the &apos;--root&apos; argument if you still want to start it as root</span><br></pre></td></tr></table></figure></p>\n<p>也可以在启动的命令后面加上–root进行启动，但是既然etherpad不让用root，那就新建一个就好了。</p>\n\n<div class=\"post_cus_note\">准备工作已经完毕。。。。。。</div>\n\n<h4 id=\"下载etherpad\"><a href=\"#下载etherpad\" class=\"headerlink\" title=\"下载etherpad\"></a>下载etherpad</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su etherpad</span><br><span class=\"line\">cd ~</span><br><span class=\"line\">git clone https://github.com/ether/etherpad-lite</span><br></pre></td></tr></table></figure>\n<p>切换etherpad用户，如果没有git命令的用户进行安装，文章最后有相关参考。<br>把etherpad放在自己想要放的目录。</p>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><blockquote>\n<p>创建配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~/etherpad-lite/settings.json.template ~/etherpad-lite/settings.json</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/etherpad-lite/settings.json</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Ip配置<br>在配置中搜索<strong><em>0.0.0.0</em></strong>，在文件88行，<strong><em>IP</em></strong>改成服务器IP，<strong><em>PORT</em></strong>端口改成自己设置的端口，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;ip&quot;: &quot;192.168.151.64&quot;,</span><br><span class=\"line\">&quot;port&quot;: 9002,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库配置<br>在配置中搜索<strong><em>dbType</em></strong>，在文件144行，这里用的信息都是在数据库安装配置中设置的配置，写清楚即可，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dbType&quot; : &quot;mysql&quot;,</span><br><span class=\"line\">&quot;dbSettings&quot; : &#123;</span><br><span class=\"line\">  &quot;user&quot;:     &quot;etherpad&quot;,</span><br><span class=\"line\">  &quot;host&quot;:     &quot;192.168.151.64&quot;,</span><br><span class=\"line\">  &quot;port&quot;:     3306,</span><br><span class=\"line\">  &quot;password&quot;: &quot;123456&quot;,</span><br><span class=\"line\">  &quot;database&quot;: &quot;etherpad&quot;,</span><br><span class=\"line\">  &quot;charset&quot;:  &quot;utf8mb4&quot;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>管理员<br>在配置中搜索<strong><em>password</em></strong>，在文件365行，这里用的信息都是在数据库安装配置中设置的配置，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;users&quot;: &#123;</span><br><span class=\"line\">  &quot;admin&quot;: &#123;</span><br><span class=\"line\">    // 1) &quot;password&quot; can be replaced with &quot;hash&quot; if you install ep_hash_auth</span><br><span class=\"line\">    // 2) please note that if password is null, the user will not be created</span><br><span class=\"line\">    &quot;password&quot;: &quot;admin&quot;,</span><br><span class=\"line\">    &quot;is_admin&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;user&quot;: &#123;</span><br><span class=\"line\">    // 1) &quot;password&quot; can be replaced with &quot;hash&quot; if you install ep_hash_auth</span><br><span class=\"line\">    // 2) please note that if password is null, the user will not be created</span><br><span class=\"line\">    &quot;password&quot;: &quot;user&quot;,</span><br><span class=\"line\">    &quot;is_admin&quot;: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>保存配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:wq</span><br><span class=\"line\"></span><br><span class=\"line\">:X</span><br></pre></td></tr></table></figure>\n<p>用哪个都可以，vim保存并退出。</p>\n<h4 id=\"etherpad安装依赖\"><a href=\"#etherpad安装依赖\" class=\"headerlink\" title=\"etherpad安装依赖\"></a>etherpad安装依赖</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ~/etherpad-lite/bin/installDeps.sh</span><br></pre></td></tr></table></figure>\n<p>安装一下etherpad所需要的依赖包。</p>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/etherpad-lite/bin/run.sh</span><br></pre></td></tr></table></figure>\n<p>用etherpad用户直接执行上面命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/opt/etherpad/etherpad-lite/bin/run.sh</span><br><span class=\"line\"></span><br><span class=\"line\">Ensure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.</span><br><span class=\"line\">audited 13370 packages in 5.363s</span><br><span class=\"line\"></span><br><span class=\"line\">8 packages are looking for funding</span><br><span class=\"line\">  run `npm fund` for details</span><br><span class=\"line\"></span><br><span class=\"line\">found 5 vulnerabilities (3 low, 2 high)</span><br><span class=\"line\">  run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class=\"line\">Clearing minified cache...</span><br><span class=\"line\">Started Etherpad...</span><br><span class=\"line\">[2019-12-28 15:27:21.215] [DEBUG] console - Running on Node v12.14.0 (minimum required Node version: 8.9.0)</span><br><span class=\"line\">[2019-12-28 15:27:21.324] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: /opt/etherpad/etherpad-lite</span><br><span class=\"line\">[2019-12-28 15:27:21.324] [DEBUG] AbsolutePaths - Relative path &quot;settings.json&quot; can be rewritten to &quot;/opt/etherpad/etherpad-lite/settings.json&quot;</span><br><span class=\"line\">[2019-12-28 15:27:21.325] [DEBUG] AbsolutePaths - Relative path &quot;credentials.json&quot; can be rewritten to &quot;/opt/etherpad/etherpad-lite/credentials.json&quot;</span><br><span class=\"line\">[2019-12-28 15:27:21.331] [INFO] console - settings loaded from: /opt/etherpad/etherpad-lite/settings.json</span><br><span class=\"line\">[2019-12-28 15:27:21.331] [INFO] console - No credentials file found in /opt/etherpad/etherpad-lite/credentials.json. Ignoring.</span><br><span class=\"line\">[2019-12-28 15:27:21.332] [INFO] console - Using skin &quot;colibris&quot; in dir: /opt/etherpad/etherpad-lite/src/static/skins/colibris</span><br><span class=\"line\">[2019-12-28 15:27:21.332] [INFO] console - Session key loaded from: /opt/etherpad/etherpad-lite/SESSIONKEY.txt</span><br><span class=\"line\">[2019-12-28 15:27:21.381] [ERROR] console - (node:25518) [DEP0126] DeprecationWarning: timers.active() is deprecated. Please use timeout.refresh() instead.</span><br><span class=\"line\">[2019-12-28 15:27:21.382] [ERROR] console - (node:25518) [DEP0096] DeprecationWarning: timers.unenroll() is deprecated. Please use clearTimeout instead.</span><br><span class=\"line\">[2019-12-28 15:27:21.831] [INFO] APIHandler - Api key file read from: &quot;/opt/etherpad/etherpad-lite/APIKEY.txt&quot;</span><br><span class=\"line\">[2019-12-28 15:27:22.139] [INFO] console - Installed plugins: ep_align@0.0.24, ep_image_upload@1.0.12</span><br><span class=\"line\">[2019-12-28 15:27:22.142] [INFO] console - Report bugs at https://github.com/ether/etherpad-lite/issues</span><br><span class=\"line\">[2019-12-28 15:27:22.143] [INFO] console - Your Etherpad version is 1.8.0 (5bcc5a3)</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [INFO] console - You can access your Etherpad instance at http://192.168.151.64:9001/</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [INFO] console - The plugin admin page is at http://192.168.151.64:9001/admin/plugins</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [WARN] console - Etherpad is running in Development mode.  This mode is slower for users and less secure than production mode.  You should set the NODE_ENV environment variable to production by using: export NODE_ENV=production</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h4><p>在浏览器上直接访问：<a href=\"http://IP:PORT，服务器IP\" target=\"_blank\" rel=\"noopener\">http://IP:PORT，服务器IP</a> + 配置的PORT端口。</p>\n\n<div class=\"post_cus_note\">列举一下可能遇到的问题</div>\n\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><blockquote>\n<p>端口设置</p>\n</blockquote>\n<p>如果在浏览器访问，提示服务不可以用，那么检查一下服务器防火墙问题。</p>\n<ul>\n<li><p>检查端口是否开通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#firewall-cmd --list-all</span><br><span class=\"line\">public (active)</span><br><span class=\"line\">  target: default</span><br><span class=\"line\">  icmp-block-inversion: no</span><br><span class=\"line\">  interfaces: enp3s0</span><br><span class=\"line\">  sources:</span><br><span class=\"line\">  services: dhcpv6-client mysql ssh</span><br><span class=\"line\">  ports: 3306/tcp 8090/tcp 80/tcp 10000/tcp 9001/tcp</span><br><span class=\"line\">  protocols:</span><br><span class=\"line\">  masquerade: no</span><br><span class=\"line\">  forward-ports:</span><br><span class=\"line\">  source-ports:</span><br><span class=\"line\">  icmp-blocks:</span><br><span class=\"line\">  rich rules:</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开放端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=9001/tcp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart firewalld</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>npm版本</p>\n</blockquote>\n<p>在安装etherpad依赖包或者其他包的时候，有的也许会提示<strong><em>node版本过低</em></strong>，更新下就好，这里推荐用n去更新。</p>\n<p>文章最后有相关参考。</p>\n<blockquote>\n<p>etherpad依赖脚本不可执行</p>\n</blockquote>\n<p>如果遇到<strong><em>/opt/etherpad/etherpad-lite/bin/run.sh</em></strong>脚本不被执行，那么将脚本改变读、写、执行的权限。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 /opt/etherpad/etherpad-lite/bin/run.sh</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h3><p>在这里，是主要配置etherpad的插件，有几个还是蛮好用，具体配置在下面有解释，访问Ip:Port/admin，账号密码就是在etherpad配置的那个。</p>\n<p><img src=\"search_plugin.png\" alt></p>\n<h4 id=\"align\"><a href=\"#align\" class=\"headerlink\" title=\"align\"></a>align</h4><p>作用：文字左、中、右对齐插件。</p>\n<blockquote>\n<p>查找</p>\n</blockquote>\n<p>在搜索出查找<strong><em>align</em></strong>。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<p>搜索到之后进行<strong><em>install</em></strong>安装。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p>打开Settings找到toolbar，去掉toolbar的注视，在414行添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[“alignLeft”, “alignCenter”, “alignJustify”, “alignRight”]</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>结果</p>\n</blockquote>\n<p><img src=\"align.jpg\" alt></p>\n<h4 id=\"image-upload\"><a href=\"#image-upload\" class=\"headerlink\" title=\"image_upload\"></a>image_upload</h4><p>作用：图片上传功能。</p>\n<blockquote>\n<p>查找</p>\n</blockquote>\n<p>在搜索出查找<strong><em>image</em></strong>。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<p>搜索到之后进行<strong><em>install</em></strong>安装。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p>打开Settings找到toolbar，在415行添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  &quot;toolbar&quot;: &#123;</span><br><span class=\"line\">    &quot;left&quot;: [</span><br><span class=\"line\">      [&quot;bold&quot;, &quot;italic&quot;, &quot;underline&quot;, &quot;strikethrough&quot;],</span><br><span class=\"line\">      [&quot;orderedlist&quot;, &quot;unorderedlist&quot;, &quot;indent&quot;, &quot;outdent&quot;],</span><br><span class=\"line\">      [&quot;undo&quot;, &quot;redo&quot;],</span><br><span class=\"line\">      [&quot;clearauthorship&quot;],</span><br><span class=\"line\">      [&quot;alignLeft&quot;, &quot;alignCenter&quot;, &quot;alignJustify&quot;, &quot;alignRight&quot;],</span><br><span class=\"line\">      [&quot;addImage&quot;]</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;right&quot;: [</span><br><span class=\"line\">      [&quot;importexport&quot;, &quot;timeslider&quot;, &quot;savedrevision&quot;],</span><br><span class=\"line\">      [&quot;settings&quot;, &quot;embed&quot;],</span><br><span class=\"line\">      [&quot;showusers&quot;]</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;timeslider&quot;: [</span><br><span class=\"line\">      [&quot;timeslider_export&quot;, &quot;timeslider_returnToPad&quot;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;ep_image_upload&quot;: &#123;</span><br><span class=\"line\">      &quot;fileTypes&quot;: [&quot;jpeg&quot;,&quot;jpg&quot;,&quot;bmp&quot;,&quot;gif&quot;,&quot;png&quot;],</span><br><span class=\"line\">      &quot;maxFileSize&quot;: 5000000</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>结果</p>\n</blockquote>\n<p><img src=\"image-upload.png\" alt></p>\n<font size=\"6.5\" color=\"red\">插件根据自己的需求制定。。。。。。</font>\n\n<h3 id=\"额外脚本\"><a href=\"#额外脚本\" class=\"headerlink\" title=\"额外脚本\"></a>额外脚本</h3><p>我把启动与杀死进程做成了.sh脚本，具体如下：</p>\n<blockquote>\n<p>start</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /opt/etherpad/etherpad-lite/bin/run.sh&gt;/dev/null  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>end</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep etherpad | grep -v grep | awk -F &quot; &quot; &apos;&#123;print $2&#125;&apos; | xargs kill</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>nohub无此命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换用户</span><br><span class=\"line\">su root</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">yum install coreutils</span><br><span class=\"line\"></span><br><span class=\"line\"># check</span><br><span class=\"line\">which nohub</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx域名配置\"><a href=\"#nginx域名配置\" class=\"headerlink\" title=\"nginx域名配置\"></a>nginx域名配置</h3><p>nginx配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos nginx]# cat /etc/nginx/conf.d/etherpad.conf</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  9001;</span><br><span class=\"line\">    server_name     _;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/etherpad9001.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">         proxy_pass http://172.17.0.16:9002/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 404 /error.html;</span><br><span class=\"line\">    location = /40x.html &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 500 502 503 504 /error.html;</span><br><span class=\"line\">    location = /50x.html &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因为本人的域名还在审核中，这里用ip进行访问。<br><div class=\"note danger\">\n            <p>说明一下：本人的服务器是腾讯云服务器，所以在配置nginx监听的IP是外网IP、端口是9001，在etherpad配置里面配置内网IP以及端口是9002。</p>\n          </div></p>\n<h3 id=\"测试地址\"><a href=\"#测试地址\" class=\"headerlink\" title=\"测试地址\"></a>测试地址</h3><p><a href=\"http://212.64.61.62:9001/\" target=\"_blank\" rel=\"noopener\">http://212.64.61.62:9001/</a></p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>官网：<a href=\"https://etherpad.org/\" target=\"_blank\" rel=\"noopener\">https://etherpad.org/</a><br>Github：<a href=\"https://github.com/ether/etherpad-lite\" target=\"_blank\" rel=\"noopener\">https://github.com/ether/etherpad-lite</a><br>MariaDB安装：<a href=\"https://www.jianshu.com/p/85ad52c88399\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/85ad52c88399</a><br>Git安装：<a href=\"https://www.jianshu.com/p/f19d1473c3e1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f19d1473c3e1</a><br>node与npm更新：<a href=\"https://www.jianshu.com/p/2ad99f605499\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/2ad99f605499</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_etherpad.jpg\" alt></p>\n<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><div class=\"note primary\">\n            <p>官网：Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time.</p><p>个人翻译：Etherpad是一款定制、开源的在线编辑器，提供实时协作编辑。</p>\n          </div>","more":"<hr>\n\n\n<h3 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h3><p><img src=\"version.png\" alt></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>本人实践的机器是阿里云服务器，系统是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingliang.gao@VM_0_16_centos ~]$ cat /etc/*release*</span><br><span class=\"line\"></span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">Derived from Red Hat Enterprise Linux 7.5 (Source)</span><br><span class=\"line\">NAME=&quot;CentOS Linux&quot;</span><br><span class=\"line\">VERSION=&quot;7 (Core)&quot;</span><br><span class=\"line\">ID=&quot;centos&quot;</span><br><span class=\"line\">ID_LIKE=&quot;rhel fedora&quot;</span><br><span class=\"line\">VERSION_ID=&quot;7&quot;</span><br><span class=\"line\">PRETTY_NAME=&quot;CentOS Linux 7 (Core)&quot;</span><br><span class=\"line\">ANSI_COLOR=&quot;0;31&quot;</span><br><span class=\"line\">CPE_NAME=&quot;cpe:/o:centos:centos:7&quot;</span><br><span class=\"line\">HOME_URL=&quot;https://www.centos.org/&quot;</span><br><span class=\"line\">BUG_REPORT_URL=&quot;https://bugs.centos.org/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">CENTOS_MANTISBT_PROJECT=&quot;CentOS-7&quot;</span><br><span class=\"line\">CENTOS_MANTISBT_PROJECT_VERSION=&quot;7&quot;</span><br><span class=\"line\">REDHAT_SUPPORT_PRODUCT=&quot;centos&quot;</span><br><span class=\"line\">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;7&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">CentOS Linux release 7.5.1804 (Core)</span><br><span class=\"line\">cpe:/o:centos:centos:7</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"node环境\"><a href=\"#node环境\" class=\"headerlink\" title=\"node环境\"></a>node环境</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装</span><br><span class=\"line\">yum install -y nodejs</span><br><span class=\"line\"></span><br><span class=\"line\"># check</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<h4 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install curl vim gcc-c++ make</span><br></pre></td></tr></table></figure>\n<h4 id=\"MariaDB数据库安装与配置\"><a href=\"#MariaDB数据库安装与配置\" class=\"headerlink\" title=\"MariaDB数据库安装与配置\"></a>MariaDB数据库安装与配置</h4><blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install mariadb-server</span><br></pre></td></tr></table></figure>\n<p>执行过程略，在安装过程中会让出现root密码等设置，具体请参考文章最后的MariaDB安装与配置，进行下一步启动。</p>\n<blockquote>\n<p>启动</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开启mariadb数据库</span><br><span class=\"line\">systemctl start mariadb.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置开机自动启动</span><br><span class=\"line\">systemctl enable mariadb.service</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>首次安装</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos conf.d]#  mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class=\"line\">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class=\"line\"></span><br><span class=\"line\">In order to log into MariaDB to secure it, we&apos;ll need the current</span><br><span class=\"line\">password for the root user.  If you&apos;ve just installed MariaDB, and</span><br><span class=\"line\">you haven&apos;t set the root password yet, the password will be blank,</span><br><span class=\"line\">so you should just press enter here.</span><br><span class=\"line\"></span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br><span class=\"line\">Enter current password for root (enter for none):</span><br><span class=\"line\">OK, successfully used password, moving on...</span><br><span class=\"line\"></span><br><span class=\"line\">Setting the root password ensures that nobody can log into the MariaDB</span><br><span class=\"line\">root user without the proper authorisation.</span><br><span class=\"line\"></span><br><span class=\"line\">Set root password? [Y/n] y</span><br><span class=\"line\">New password:</span><br><span class=\"line\">Re-enter new password:</span><br><span class=\"line\">Password updated successfully!</span><br><span class=\"line\">Reloading privilege tables..</span><br><span class=\"line\"> ... Success!</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class=\"line\">to log into MariaDB without having to have a user account created for</span><br><span class=\"line\">them.  This is intended only for testing, and to make the installation</span><br><span class=\"line\">go a bit smoother.  You should remove them before moving into a</span><br><span class=\"line\">production environment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove anonymous users? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">Normally, root should only be allowed to connect from &apos;localhost&apos;.  This</span><br><span class=\"line\">ensures that someone cannot guess at the root password from the network.</span><br><span class=\"line\"></span><br><span class=\"line\">Disallow root login remotely? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">By default, MariaDB comes with a database named &apos;test&apos; that anyone can</span><br><span class=\"line\">access.  This is also intended only for testing, and should be removed</span><br><span class=\"line\">before moving into a production environment.</span><br><span class=\"line\"></span><br><span class=\"line\">Remove test database and access to it? [Y/n] n</span><br><span class=\"line\"> ... skipping.</span><br><span class=\"line\"></span><br><span class=\"line\">Reloading the privilege tables will ensure that all changes made so far</span><br><span class=\"line\">will take effect immediately.</span><br><span class=\"line\"></span><br><span class=\"line\">Reload privilege tables now? [Y/n] y</span><br><span class=\"line\"> ... Success!</span><br><span class=\"line\"></span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\"></span><br><span class=\"line\">All done!  If you&apos;ve completed all of the above steps, your MariaDB</span><br><span class=\"line\">installation should now be secure.</span><br><span class=\"line\"></span><br><span class=\"line\">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure>\n<p>完成初始化设置，主要是root密码的设置最重要。</p>\n<blockquote>\n<p>连接</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h 127.0.0.1 -P 3306 -u root -p</span><br></pre></td></tr></table></figure>\n<p>具体mysql命令怎么使用这里也不做解释，不知道的请自行查资料。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MariaDB [(none)]&gt; CREATE DATABASE etherpad;</span><br><span class=\"line\">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON etherpad.* TO &apos;etherpad&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos;;</span><br><span class=\"line\">MariaDB [(none)]&gt; FLUSH PRIVILEGES;</span><br><span class=\"line\">MariaDB [(none)]&gt; \\q</span><br></pre></td></tr></table></figure>\n<p>在这里操作是创建etherpad数据库，以及etherpad用户并分配etherpad用户有访问etherpad数据库的权限，用户名：etherpad，密码：123456。<br>关于数据库、用户、密码自己定义，在etherpad安装与配置中需要用户。</p>\n<h4 id=\"创建linux用户\"><a href=\"#创建linux用户\" class=\"headerlink\" title=\"创建linux用户\"></a>创建linux用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser --home /opt/etherpad --shell /bin/bash etherpad</span><br><span class=\"line\">install -d -m 755 -o etherpad -g etherpad /opt/etherpad</span><br></pre></td></tr></table></figure>\n<p>用户启动使用etherpad程序，我之前没有建立用户，直接用root去启动，会提示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos opt]# bash /opt/etherpad-lite/bin/run.sh</span><br><span class=\"line\">You shouldn&apos;t start Etherpad as root!</span><br><span class=\"line\">Please type &apos;Etherpad rocks my socks&apos; or supply the &apos;--root&apos; argument if you still want to start it as root</span><br></pre></td></tr></table></figure></p>\n<p>也可以在启动的命令后面加上–root进行启动，但是既然etherpad不让用root，那就新建一个就好了。</p>\n\n<div class=\"post_cus_note\">准备工作已经完毕。。。。。。</div>\n\n<h4 id=\"下载etherpad\"><a href=\"#下载etherpad\" class=\"headerlink\" title=\"下载etherpad\"></a>下载etherpad</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su etherpad</span><br><span class=\"line\">cd ~</span><br><span class=\"line\">git clone https://github.com/ether/etherpad-lite</span><br></pre></td></tr></table></figure>\n<p>切换etherpad用户，如果没有git命令的用户进行安装，文章最后有相关参考。<br>把etherpad放在自己想要放的目录。</p>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><blockquote>\n<p>创建配置文件</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~/etherpad-lite/settings.json.template ~/etherpad-lite/settings.json</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>编辑配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/etherpad-lite/settings.json</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Ip配置<br>在配置中搜索<strong><em>0.0.0.0</em></strong>，在文件88行，<strong><em>IP</em></strong>改成服务器IP，<strong><em>PORT</em></strong>端口改成自己设置的端口，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;ip&quot;: &quot;192.168.151.64&quot;,</span><br><span class=\"line\">&quot;port&quot;: 9002,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库配置<br>在配置中搜索<strong><em>dbType</em></strong>，在文件144行，这里用的信息都是在数据库安装配置中设置的配置，写清楚即可，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dbType&quot; : &quot;mysql&quot;,</span><br><span class=\"line\">&quot;dbSettings&quot; : &#123;</span><br><span class=\"line\">  &quot;user&quot;:     &quot;etherpad&quot;,</span><br><span class=\"line\">  &quot;host&quot;:     &quot;192.168.151.64&quot;,</span><br><span class=\"line\">  &quot;port&quot;:     3306,</span><br><span class=\"line\">  &quot;password&quot;: &quot;123456&quot;,</span><br><span class=\"line\">  &quot;database&quot;: &quot;etherpad&quot;,</span><br><span class=\"line\">  &quot;charset&quot;:  &quot;utf8mb4&quot;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>管理员<br>在配置中搜索<strong><em>password</em></strong>，在文件365行，这里用的信息都是在数据库安装配置中设置的配置，去掉注释，配置更改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;users&quot;: &#123;</span><br><span class=\"line\">  &quot;admin&quot;: &#123;</span><br><span class=\"line\">    // 1) &quot;password&quot; can be replaced with &quot;hash&quot; if you install ep_hash_auth</span><br><span class=\"line\">    // 2) please note that if password is null, the user will not be created</span><br><span class=\"line\">    &quot;password&quot;: &quot;admin&quot;,</span><br><span class=\"line\">    &quot;is_admin&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;user&quot;: &#123;</span><br><span class=\"line\">    // 1) &quot;password&quot; can be replaced with &quot;hash&quot; if you install ep_hash_auth</span><br><span class=\"line\">    // 2) please note that if password is null, the user will not be created</span><br><span class=\"line\">    &quot;password&quot;: &quot;user&quot;,</span><br><span class=\"line\">    &quot;is_admin&quot;: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>保存配置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:wq</span><br><span class=\"line\"></span><br><span class=\"line\">:X</span><br></pre></td></tr></table></figure>\n<p>用哪个都可以，vim保存并退出。</p>\n<h4 id=\"etherpad安装依赖\"><a href=\"#etherpad安装依赖\" class=\"headerlink\" title=\"etherpad安装依赖\"></a>etherpad安装依赖</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ~/etherpad-lite/bin/installDeps.sh</span><br></pre></td></tr></table></figure>\n<p>安装一下etherpad所需要的依赖包。</p>\n<h4 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/etherpad-lite/bin/run.sh</span><br></pre></td></tr></table></figure>\n<p>用etherpad用户直接执行上面命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#/opt/etherpad/etherpad-lite/bin/run.sh</span><br><span class=\"line\"></span><br><span class=\"line\">Ensure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.</span><br><span class=\"line\">audited 13370 packages in 5.363s</span><br><span class=\"line\"></span><br><span class=\"line\">8 packages are looking for funding</span><br><span class=\"line\">  run `npm fund` for details</span><br><span class=\"line\"></span><br><span class=\"line\">found 5 vulnerabilities (3 low, 2 high)</span><br><span class=\"line\">  run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class=\"line\">Clearing minified cache...</span><br><span class=\"line\">Started Etherpad...</span><br><span class=\"line\">[2019-12-28 15:27:21.215] [DEBUG] console - Running on Node v12.14.0 (minimum required Node version: 8.9.0)</span><br><span class=\"line\">[2019-12-28 15:27:21.324] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: /opt/etherpad/etherpad-lite</span><br><span class=\"line\">[2019-12-28 15:27:21.324] [DEBUG] AbsolutePaths - Relative path &quot;settings.json&quot; can be rewritten to &quot;/opt/etherpad/etherpad-lite/settings.json&quot;</span><br><span class=\"line\">[2019-12-28 15:27:21.325] [DEBUG] AbsolutePaths - Relative path &quot;credentials.json&quot; can be rewritten to &quot;/opt/etherpad/etherpad-lite/credentials.json&quot;</span><br><span class=\"line\">[2019-12-28 15:27:21.331] [INFO] console - settings loaded from: /opt/etherpad/etherpad-lite/settings.json</span><br><span class=\"line\">[2019-12-28 15:27:21.331] [INFO] console - No credentials file found in /opt/etherpad/etherpad-lite/credentials.json. Ignoring.</span><br><span class=\"line\">[2019-12-28 15:27:21.332] [INFO] console - Using skin &quot;colibris&quot; in dir: /opt/etherpad/etherpad-lite/src/static/skins/colibris</span><br><span class=\"line\">[2019-12-28 15:27:21.332] [INFO] console - Session key loaded from: /opt/etherpad/etherpad-lite/SESSIONKEY.txt</span><br><span class=\"line\">[2019-12-28 15:27:21.381] [ERROR] console - (node:25518) [DEP0126] DeprecationWarning: timers.active() is deprecated. Please use timeout.refresh() instead.</span><br><span class=\"line\">[2019-12-28 15:27:21.382] [ERROR] console - (node:25518) [DEP0096] DeprecationWarning: timers.unenroll() is deprecated. Please use clearTimeout instead.</span><br><span class=\"line\">[2019-12-28 15:27:21.831] [INFO] APIHandler - Api key file read from: &quot;/opt/etherpad/etherpad-lite/APIKEY.txt&quot;</span><br><span class=\"line\">[2019-12-28 15:27:22.139] [INFO] console - Installed plugins: ep_align@0.0.24, ep_image_upload@1.0.12</span><br><span class=\"line\">[2019-12-28 15:27:22.142] [INFO] console - Report bugs at https://github.com/ether/etherpad-lite/issues</span><br><span class=\"line\">[2019-12-28 15:27:22.143] [INFO] console - Your Etherpad version is 1.8.0 (5bcc5a3)</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [INFO] console - You can access your Etherpad instance at http://192.168.151.64:9001/</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [INFO] console - The plugin admin page is at http://192.168.151.64:9001/admin/plugins</span><br><span class=\"line\">[2019-12-28 15:27:22.228] [WARN] console - Etherpad is running in Development mode.  This mode is slower for users and less secure than production mode.  You should set the NODE_ENV environment variable to production by using: export NODE_ENV=production</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h4><p>在浏览器上直接访问：<a href=\"http://IP:PORT，服务器IP\" target=\"_blank\" rel=\"noopener\">http://IP:PORT，服务器IP</a> + 配置的PORT端口。</p>\n\n<div class=\"post_cus_note\">列举一下可能遇到的问题</div>\n\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><blockquote>\n<p>端口设置</p>\n</blockquote>\n<p>如果在浏览器访问，提示服务不可以用，那么检查一下服务器防火墙问题。</p>\n<ul>\n<li><p>检查端口是否开通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]#firewall-cmd --list-all</span><br><span class=\"line\">public (active)</span><br><span class=\"line\">  target: default</span><br><span class=\"line\">  icmp-block-inversion: no</span><br><span class=\"line\">  interfaces: enp3s0</span><br><span class=\"line\">  sources:</span><br><span class=\"line\">  services: dhcpv6-client mysql ssh</span><br><span class=\"line\">  ports: 3306/tcp 8090/tcp 80/tcp 10000/tcp 9001/tcp</span><br><span class=\"line\">  protocols:</span><br><span class=\"line\">  masquerade: no</span><br><span class=\"line\">  forward-ports:</span><br><span class=\"line\">  source-ports:</span><br><span class=\"line\">  icmp-blocks:</span><br><span class=\"line\">  rich rules:</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开放端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=9001/tcp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart firewalld</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>npm版本</p>\n</blockquote>\n<p>在安装etherpad依赖包或者其他包的时候，有的也许会提示<strong><em>node版本过低</em></strong>，更新下就好，这里推荐用n去更新。</p>\n<p>文章最后有相关参考。</p>\n<blockquote>\n<p>etherpad依赖脚本不可执行</p>\n</blockquote>\n<p>如果遇到<strong><em>/opt/etherpad/etherpad-lite/bin/run.sh</em></strong>脚本不被执行，那么将脚本改变读、写、执行的权限。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 /opt/etherpad/etherpad-lite/bin/run.sh</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h3><p>在这里，是主要配置etherpad的插件，有几个还是蛮好用，具体配置在下面有解释，访问Ip:Port/admin，账号密码就是在etherpad配置的那个。</p>\n<p><img src=\"search_plugin.png\" alt></p>\n<h4 id=\"align\"><a href=\"#align\" class=\"headerlink\" title=\"align\"></a>align</h4><p>作用：文字左、中、右对齐插件。</p>\n<blockquote>\n<p>查找</p>\n</blockquote>\n<p>在搜索出查找<strong><em>align</em></strong>。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<p>搜索到之后进行<strong><em>install</em></strong>安装。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p>打开Settings找到toolbar，去掉toolbar的注视，在414行添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[“alignLeft”, “alignCenter”, “alignJustify”, “alignRight”]</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>结果</p>\n</blockquote>\n<p><img src=\"align.jpg\" alt></p>\n<h4 id=\"image-upload\"><a href=\"#image-upload\" class=\"headerlink\" title=\"image_upload\"></a>image_upload</h4><p>作用：图片上传功能。</p>\n<blockquote>\n<p>查找</p>\n</blockquote>\n<p>在搜索出查找<strong><em>image</em></strong>。</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<p>搜索到之后进行<strong><em>install</em></strong>安装。</p>\n<blockquote>\n<p>配置</p>\n</blockquote>\n<p>打开Settings找到toolbar，在415行添加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  &quot;toolbar&quot;: &#123;</span><br><span class=\"line\">    &quot;left&quot;: [</span><br><span class=\"line\">      [&quot;bold&quot;, &quot;italic&quot;, &quot;underline&quot;, &quot;strikethrough&quot;],</span><br><span class=\"line\">      [&quot;orderedlist&quot;, &quot;unorderedlist&quot;, &quot;indent&quot;, &quot;outdent&quot;],</span><br><span class=\"line\">      [&quot;undo&quot;, &quot;redo&quot;],</span><br><span class=\"line\">      [&quot;clearauthorship&quot;],</span><br><span class=\"line\">      [&quot;alignLeft&quot;, &quot;alignCenter&quot;, &quot;alignJustify&quot;, &quot;alignRight&quot;],</span><br><span class=\"line\">      [&quot;addImage&quot;]</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;right&quot;: [</span><br><span class=\"line\">      [&quot;importexport&quot;, &quot;timeslider&quot;, &quot;savedrevision&quot;],</span><br><span class=\"line\">      [&quot;settings&quot;, &quot;embed&quot;],</span><br><span class=\"line\">      [&quot;showusers&quot;]</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;timeslider&quot;: [</span><br><span class=\"line\">      [&quot;timeslider_export&quot;, &quot;timeslider_returnToPad&quot;]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;ep_image_upload&quot;: &#123;</span><br><span class=\"line\">      &quot;fileTypes&quot;: [&quot;jpeg&quot;,&quot;jpg&quot;,&quot;bmp&quot;,&quot;gif&quot;,&quot;png&quot;],</span><br><span class=\"line\">      &quot;maxFileSize&quot;: 5000000</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>结果</p>\n</blockquote>\n<p><img src=\"image-upload.png\" alt></p>\n<font size=\"6.5\" color=\"red\">插件根据自己的需求制定。。。。。。</font>\n\n<h3 id=\"额外脚本\"><a href=\"#额外脚本\" class=\"headerlink\" title=\"额外脚本\"></a>额外脚本</h3><p>我把启动与杀死进程做成了.sh脚本，具体如下：</p>\n<blockquote>\n<p>start</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /opt/etherpad/etherpad-lite/bin/run.sh&gt;/dev/null  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>end</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep etherpad | grep -v grep | awk -F &quot; &quot; &apos;&#123;print $2&#125;&apos; | xargs kill</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>nohub无此命令</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 切换用户</span><br><span class=\"line\">su root</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装</span><br><span class=\"line\">yum install coreutils</span><br><span class=\"line\"></span><br><span class=\"line\"># check</span><br><span class=\"line\">which nohub</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx域名配置\"><a href=\"#nginx域名配置\" class=\"headerlink\" title=\"nginx域名配置\"></a>nginx域名配置</h3><p>nginx配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@VM_0_16_centos nginx]# cat /etc/nginx/conf.d/etherpad.conf</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen  9001;</span><br><span class=\"line\">    server_name     _;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/etherpad9001.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">         proxy_pass http://172.17.0.16:9002/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 404 /error.html;</span><br><span class=\"line\">    location = /40x.html &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    error_page 500 502 503 504 /error.html;</span><br><span class=\"line\">    location = /50x.html &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>因为本人的域名还在审核中，这里用ip进行访问。<br><div class=\"note danger\">\n            <p>说明一下：本人的服务器是腾讯云服务器，所以在配置nginx监听的IP是外网IP、端口是9001，在etherpad配置里面配置内网IP以及端口是9002。</p>\n          </div></p>\n<h3 id=\"测试地址\"><a href=\"#测试地址\" class=\"headerlink\" title=\"测试地址\"></a>测试地址</h3><p><a href=\"http://212.64.61.62:9001/\" target=\"_blank\" rel=\"noopener\">http://212.64.61.62:9001/</a></p>\n<h3 id=\"学习参考\"><a href=\"#学习参考\" class=\"headerlink\" title=\"学习参考\"></a>学习参考</h3><p>官网：<a href=\"https://etherpad.org/\" target=\"_blank\" rel=\"noopener\">https://etherpad.org/</a><br>Github：<a href=\"https://github.com/ether/etherpad-lite\" target=\"_blank\" rel=\"noopener\">https://github.com/ether/etherpad-lite</a><br>MariaDB安装：<a href=\"https://www.jianshu.com/p/85ad52c88399\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/85ad52c88399</a><br>Git安装：<a href=\"https://www.jianshu.com/p/f19d1473c3e1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f19d1473c3e1</a><br>node与npm更新：<a href=\"https://www.jianshu.com/p/2ad99f605499\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/2ad99f605499</a></p>"},{"title":"北京奋斗终章:巴厘岛之旅","comments":0,"desc":"在即将结束北京的奋斗之旅，准备提前来次蜜月旅游","keywords":"旅行, 巴厘岛, 美食, 蜜月, 海, 日落, 蓝梦岛, 恶魔之泪, 印尼, 印度尼西亚","abbrlink":23626,"date":"2019-05-09T07:25:49.000Z","updated":"2019-05-09T07:25:49.000Z","password":"0803","abstract":"<div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>","message":"密码提示：生日","top":true,"_content":"\n![](/images/article_balidao_ren.jpg)\n\n{% cq %}\n带上媳妇巴厘岛二人蜜月\n**PyGo²**\n{% endcq %}\n\n<!--more-->\n\n<hr />\n\n#### <font color=\"red\">背景</font>\n带上媳妇度蜜月，结束北京6年奋斗之旅。\n\n#### <font color=\"red\">目的地</font>\n**巴厘岛**【一流的酒店，二流的海滩，三流的景点】。\n\n#### <font color=\"red\">旅行方式</font>\n自由行。\n\n#### <font color=\"red\">机票</font>\n{% raw %}\n<table>\n  <tr>\n    <th style=\"text-align:center;\">时间</th>\n    <th style=\"text-align:center;\">出发城市</th>\n    <th style=\"text-align:center;\">目的城市</th>\n    <th style=\"text-align:center;\">航空公司</th>\n    <th style=\"text-align:center;\">飞行时间</th>\n    <th style=\"text-align:center;\">机型</th>\n    <th style=\"text-align:center;\">票价</th>\n    <th style=\"text-align:center;\">是否保险</th>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-07 16:30～00:50（+1）</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">8h20min</td>\n    <td style=\"text-align:center;\">MU781</td>\n    <td rowspan=\"2\">\n        2675\n    </td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-15 01:35～08:40</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">7h5min</td>\n    <td style=\"text-align:center;\">MU782</td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n</table>\n{% endraw %}\n\n#### <font color=\"red\">日程</font>\n\n{% tabs bali_richeng %}\n<!-- tab Day1 -->\n\n> 日期\n\n2019-07-08\n\n> 景点\n\n情人崖(1h)【乌鲁瓦图寺】 → 神鹰广场(1h) → 海神庙(2h) → 库塔海滩\n\n> 美食\n\n- 竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font> 海鲜，价格合理】\n- Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font> 网红餐厅 味道别致】\n- Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font> 猪排】\n\n<!-- endtab -->\n<!-- tab Day2 -->\n\n> 日期\n\n2019-07-09\n\n> 景点\n\n蓝梦岛\n- 恶魔的眼泪\n- 梦幻海滩\n- 蘑菇海滩\n- 红树林\n- 黄桥\n\n> 建议\n\n- 自行定船时间需要早些【7点酒店出发->萨努尔码头】，建议船票可以淘宝。\n- 还可以淘宝订购一个蓝梦岛一日游【<font color=\"red\">推荐</font>】。\n\n<!-- endtab -->\n<!-- tab Day3 -->\n\n> 日期\n\n2019-07-10\n\n> 景点\n\n阿勇河漂流(0.5天) → 岩石吧 → 金巴兰海滩\n漂流可以淘宝，接送+门票，还是比较划算的。\n\n> 美食\n\n- 金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】\n\n<!-- endtab -->\n<!-- tab Day4 -->\n\n> 日期\n\n2019-07-11\n\n> 景点\n\nspa 酒店 浪漫\n\n<!-- endtab -->\n<!-- tab Day5 -->\n\n> 日期\n\n2019-07-12\n\n> 景点\n\n圣泉寺(1.5小时) → 德格拉郎梯田(1小时) → 乌布皇宫(1小时) → 乌布市场(3小时)\n\n> 美食\n\n- 脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font> 卡脏鸭餐】\n- Pundi-Pundi Grill & Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font> 猪排饭】\n- Naughty Nuri's Warung Ubud （Naughty Nuri's Ubud）【<font size=\"5\" color=\"blue\">4.5</font> 烤猪排】\n\n<!-- endtab -->\n<!-- tab Day6 -->\n\n> 日期\n\n2019-07-13\n\n> 景点\n\n- 太阳百货\n- Discovery Shopping Mall\n\n> 建议\n\n- 2个地方里的很近，走路大概25分钟，但是交通很差。\n\n<!-- endtab -->\n<!-- tab Day7 -->\n\n> 日期\n\n2019-07-13\n\n自由浪\n<!-- endtab -->\n<!-- tab 备选 -->\n> 景点\n\n- 天空之门\n- 巴厘岛野生动物园\n- 圣猴森林公园（与乌布市场、乌布皇宫聚集）\n- 水明漾 && 水明漾海滩\n- 海龟岛\n- 南湾海滩（水上娱乐项目）\n- 京打马尼火山（较远，建议包车）\n- 水神庙\n\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">住宿</font>\n\n总结一下集中居住的区域位置的优点，方便进行选取：\n{% tabs bali_accommodation %}\n<!-- tab 库塔 -->\n适合冲浪的海滩，酒店多以连锁商务酒店为主，价格较便宜，性价比高，很多背包客的选择，夜晚热闹，临近繁闹街道。\n<!-- endtab -->\n<!-- tab 金巴兰-->\n沙滩可看落日，有很多Villa酒店，价格适中。\n<!-- endtab -->\n<!-- tab 努沙杜瓦-->\n酒店拥有私人沙滩，环境好，适合度假。\n<!-- endtab -->\n<!-- tab 乌布-->\n丛林体验，天然养吧，适合休闲放松。\n<!-- endtab -->\n{% endtabs %}\n\n|                日期                |      酒店名称      |  位置  |    价格    | 是否早餐 |    房间类型    |  推荐指数  |\n|:----------------------------------:|:------------------:|:------:|:----------:|:--------:|:--------------:|:----------:|\n|      2019-07-07 ~ 2019-07-10       | 巴厘岛库塔明星酒店 |  库塔  | 1251(含税) |    Y     |     豪华间     | 🌟🌟🌟🌟🌟 |\n| <font color=\"red\">2019-07-11</font> |  阿什姆萨海滩酒店  | 金巴兰 | 852(含税)  |    Y     | 单卧室泳池别墅 | 🌟🌟🌟🌟🌟 |\n|      2019-07-12 ~ 2019-07-14       | 巴厘岛库塔明星酒店 |  库塔  | 622(含税)  |    Y     |     豪华间     | 🌟🌟🌟🌟🌟 |\n\n{% note success %}\n<font size=\"4\" color=\"blue\">巴厘岛库塔明星酒店</font>\n抖音网红酒店，携程、马蜂窝推荐top的酒店，而且看了下价格，在繁华的库塔地带，离机场10min、海滩15min的步行，美食环绕，晚上也有繁华的夜市，位置相当不错。\n其次，我已邮件的方式联系了酒店，有免费接机的服务（3天以上free）。\n![](bali_jiudian_1.png)\n<font size=\"4\" color=\"blue\">阿什姆萨海滩酒店</font>\n去了巴厘岛，一定要住一次私人别墅的酒店，这是巴厘岛之行的必须体验之一，想象2个世界、私人别墅、私人泳池，多么嗨皮。建议提前一个月预定，价格会便宜好多，而且选择的也很多。\n![](bali_jiudian_2.png)\n{% endnote %}\n\n#### <font color=\"red\">景点</font>\n\n列举了一下top5的景点，可以查阅马蜂窝巴厘岛景色介绍，根据自己的喜爱去进行定义。\n\n> 蓝梦岛\n\n绝美的沙滩海景，是个休闲度假的绝佳地。\n\n> 情人崖\n\n巴厘岛的爱情圣地，很多人在此举行婚礼。\n\n> 海神庙\n\n坐落于海上的神庙，最具巴厘岛特色。\n\n> 库塔海滩\n\n最受欢迎的美食娱乐天堂，沙质细腻。\n\n> 金巴兰海滩\n\n世界十大最美落日海滩之一。\n\n#### <font color=\"red\">美食</font>\n\n{% tabs bali_meishi %}\n<!-- tab 库塔 -->\n- 竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font>】\n低廉的价格和美味的海鲜篮，令这家狭小门面的小店生意兴隆。\n- Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font>】\n就餐环境别致，菜品的味道会让人意想不到。\n- Kori Restaurant & Bar【<font size=\"5\" color=\"blue\">4.2</font>】\n巴厘岛式凉亭搭配潺潺流水，在这里吃饭或者喝东西都是一种享受。\n- Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font>】\n在水明漾，炭烤猪排真的推荐。\n<!-- endtab -->\n<!-- tab 金巴兰 -->\n- 金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】\n在海滩上边欣赏日落边吃海鲜。\n<!-- endtab -->\n<!-- tab 乌布-->\n- 脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font>】\n最老牌正宗的脏鸭餐餐厅。\n- Pundi-Pundi Grill & Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font>】\n烤猪排餐的份量超大！\n- Naughty Nuri's Warung Ubud （Naughty Nuri's Ubud）【<font size=\"5\" color=\"blue\">4.5</font>】\n巴厘岛上很有名的猪肋排餐厅，有好吃的烤肉、烤乳猪和牛排。\n- Fair Warung Bale （Fair Warung Bale - Fair Future Foundation）【<font size=\"5\" color=\"blue\">4.6</font>】\n马蜂窝推荐还不错。\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">购物</font>\n\n{% tabs bali_purchase %}\n<!-- tab 库塔 -->\n库塔是巴厘岛传统的商业和旅游购物中心，**太阳百货（Matahari）**和**Discovery Shopping Mall**是其中两个最大购物中心。\n<!-- endtab -->\n<!-- tab 登巴萨家乐福-->\n大型超市，里面东西我觉得不便宜。\n<!-- endtab -->\n<!-- tab Geneva-->\nGeneva位于库塔北边，需要专门坐车过去。在这里打算给自己的家添置点工艺品的，给朋友带小礼物的，都可以在此地解决。这里东西种类很多而且价格公道。\n<!-- endtab -->\n<!-- tab 黄金咖啡工场-->\n喜欢咖啡的人可以去，在咖啡工厂参观咖啡生产、筛选、烘焙等制作过程，享受黄金咖啡文化的熏陶，一边品尝黄金咖啡苦、甘、香却不酸涩的咖啡特色。\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">App</font>\n记录一下自己用到的App。\n\n| id  |     name     | function                             |\n|:---:|:------------:|:------------------------------------ |\n|  1  |    去哪儿    | 机票预定                             |\n|  2  |     携程     | 酒店预订                             |\n|  3  |    马蜂窝    | 查看旅游地点吃喝玩乐的推荐，参考游记 |\n|  4  | My Blue Bird | 巴厘岛本地taxi打车神器               |\n|  5  |     grab     | 国际打车神器                         |\n|  6  | Google Maps  | 地图导航                             |\n|  7  |   有道翻译   | 英文不好的一定要下载一个             |\n\n#### <font color=\"red\">费用</font>\n\n|     类别     | 金额  |\n|:------------:|:-----:|\n|     机票     | 5350  |\n|     酒店     | 2725  |\n|   本地消费   | 3500  |\n|     包车     |  658  |\n|     漂流     |  658  |\n| 蓝梦岛一日游 |  730  |\n|     spa      |  680  |\n|     总计     | 14301 |\n\n单位：RMB\n\n#### <font color=\"red\">注意</font>\n{% note danger %}\n<font size=\"4\" color=\"blue\">1.签证</font>\n巴厘岛是免签的，不需要签证，直接护照入境就可以，但要看清楚啊，机场同时开着免签通道和落地签通道，走落地签通道要收35美金落地签费用。很好辨别，你看没人的那个就是落地签通道了，找有人排队的就是免签通道。\n\n<font size=\"4\" color=\"blue\">2.包车</font>\n建议淘宝就行，搜一下，选择一个适合自己的。远一点的包车玩比较舒服，我预计打算包车2-3天，第一天玩情人崖、海神庙，相距较远；第五天去乌布、圣泉寺，那边玩的比较集中，建议在包一天，剩下的就看自己想不想去远的地方了。\n\n<font size=\"4\" color=\"blue\">3.出租车</font>\n巴厘岛的出租车分5种，分别是浅蓝灰色的Bali Taxi、绿色的 Panwirthi Taxi、橘色的Praja Taxi、白色的Ngurah Rai Taxi和黑 色的机场出租车。其中Bali Taxi口碑最佳，在挡风玻璃上标 有“BlueBird Group”和蓝色鸟的标记所以也称蓝鸟出租车，司机有礼貌、基本跳表计费，起步6,000卢比/1km，之后3,000卢比/ km。其次是绿色或橘色车，而如果是白色车子，通常是不跳表的， 因此乘白色车之前要先谈好价钱。\n\n<font size=\"4\" color=\"blue\">4.小费</font>\n住完酒店适当的给点小费即可，一般是10000印尼盾（1RMB = 2000IDR），觉得好可以多给一些；吃饭的话我看介绍说不用给了，因为餐饮费里已经包含小费了。\n\n{% endnote %}\n","source":"_posts/Travel-北京奋斗终章-巴厘岛之旅.md","raw":"---\ntitle: '北京奋斗终章:巴厘岛之旅'\ncomments: false\ndesc: 在即将结束北京的奋斗之旅，准备提前来次蜜月旅游\ncategories:\n  - [旅行记]\ntags: [旅行记, 美食]\nkeywords: 旅行, 巴厘岛, 美食, 蜜月, 海, 日落, 蓝梦岛, 恶魔之泪, 印尼, 印度尼西亚\nabbrlink: 23626\ndate: 2019-05-09 15:25:49\nupdated: 2019-05-09 15:25:49\npassword: 0803\nabstract: <div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>\nmessage: 密码提示：生日\ntop: true\n---\n\n![](/images/article_balidao_ren.jpg)\n\n{% cq %}\n带上媳妇巴厘岛二人蜜月\n**PyGo²**\n{% endcq %}\n\n<!--more-->\n\n<hr />\n\n#### <font color=\"red\">背景</font>\n带上媳妇度蜜月，结束北京6年奋斗之旅。\n\n#### <font color=\"red\">目的地</font>\n**巴厘岛**【一流的酒店，二流的海滩，三流的景点】。\n\n#### <font color=\"red\">旅行方式</font>\n自由行。\n\n#### <font color=\"red\">机票</font>\n{% raw %}\n<table>\n  <tr>\n    <th style=\"text-align:center;\">时间</th>\n    <th style=\"text-align:center;\">出发城市</th>\n    <th style=\"text-align:center;\">目的城市</th>\n    <th style=\"text-align:center;\">航空公司</th>\n    <th style=\"text-align:center;\">飞行时间</th>\n    <th style=\"text-align:center;\">机型</th>\n    <th style=\"text-align:center;\">票价</th>\n    <th style=\"text-align:center;\">是否保险</th>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-07 16:30～00:50（+1）</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">8h20min</td>\n    <td style=\"text-align:center;\">MU781</td>\n    <td rowspan=\"2\">\n        2675\n    </td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-15 01:35～08:40</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">7h5min</td>\n    <td style=\"text-align:center;\">MU782</td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n</table>\n{% endraw %}\n\n#### <font color=\"red\">日程</font>\n\n{% tabs bali_richeng %}\n<!-- tab Day1 -->\n\n> 日期\n\n2019-07-08\n\n> 景点\n\n情人崖(1h)【乌鲁瓦图寺】 → 神鹰广场(1h) → 海神庙(2h) → 库塔海滩\n\n> 美食\n\n- 竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font> 海鲜，价格合理】\n- Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font> 网红餐厅 味道别致】\n- Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font> 猪排】\n\n<!-- endtab -->\n<!-- tab Day2 -->\n\n> 日期\n\n2019-07-09\n\n> 景点\n\n蓝梦岛\n- 恶魔的眼泪\n- 梦幻海滩\n- 蘑菇海滩\n- 红树林\n- 黄桥\n\n> 建议\n\n- 自行定船时间需要早些【7点酒店出发->萨努尔码头】，建议船票可以淘宝。\n- 还可以淘宝订购一个蓝梦岛一日游【<font color=\"red\">推荐</font>】。\n\n<!-- endtab -->\n<!-- tab Day3 -->\n\n> 日期\n\n2019-07-10\n\n> 景点\n\n阿勇河漂流(0.5天) → 岩石吧 → 金巴兰海滩\n漂流可以淘宝，接送+门票，还是比较划算的。\n\n> 美食\n\n- 金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】\n\n<!-- endtab -->\n<!-- tab Day4 -->\n\n> 日期\n\n2019-07-11\n\n> 景点\n\nspa 酒店 浪漫\n\n<!-- endtab -->\n<!-- tab Day5 -->\n\n> 日期\n\n2019-07-12\n\n> 景点\n\n圣泉寺(1.5小时) → 德格拉郎梯田(1小时) → 乌布皇宫(1小时) → 乌布市场(3小时)\n\n> 美食\n\n- 脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font> 卡脏鸭餐】\n- Pundi-Pundi Grill & Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font> 猪排饭】\n- Naughty Nuri's Warung Ubud （Naughty Nuri's Ubud）【<font size=\"5\" color=\"blue\">4.5</font> 烤猪排】\n\n<!-- endtab -->\n<!-- tab Day6 -->\n\n> 日期\n\n2019-07-13\n\n> 景点\n\n- 太阳百货\n- Discovery Shopping Mall\n\n> 建议\n\n- 2个地方里的很近，走路大概25分钟，但是交通很差。\n\n<!-- endtab -->\n<!-- tab Day7 -->\n\n> 日期\n\n2019-07-13\n\n自由浪\n<!-- endtab -->\n<!-- tab 备选 -->\n> 景点\n\n- 天空之门\n- 巴厘岛野生动物园\n- 圣猴森林公园（与乌布市场、乌布皇宫聚集）\n- 水明漾 && 水明漾海滩\n- 海龟岛\n- 南湾海滩（水上娱乐项目）\n- 京打马尼火山（较远，建议包车）\n- 水神庙\n\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">住宿</font>\n\n总结一下集中居住的区域位置的优点，方便进行选取：\n{% tabs bali_accommodation %}\n<!-- tab 库塔 -->\n适合冲浪的海滩，酒店多以连锁商务酒店为主，价格较便宜，性价比高，很多背包客的选择，夜晚热闹，临近繁闹街道。\n<!-- endtab -->\n<!-- tab 金巴兰-->\n沙滩可看落日，有很多Villa酒店，价格适中。\n<!-- endtab -->\n<!-- tab 努沙杜瓦-->\n酒店拥有私人沙滩，环境好，适合度假。\n<!-- endtab -->\n<!-- tab 乌布-->\n丛林体验，天然养吧，适合休闲放松。\n<!-- endtab -->\n{% endtabs %}\n\n|                日期                |      酒店名称      |  位置  |    价格    | 是否早餐 |    房间类型    |  推荐指数  |\n|:----------------------------------:|:------------------:|:------:|:----------:|:--------:|:--------------:|:----------:|\n|      2019-07-07 ~ 2019-07-10       | 巴厘岛库塔明星酒店 |  库塔  | 1251(含税) |    Y     |     豪华间     | 🌟🌟🌟🌟🌟 |\n| <font color=\"red\">2019-07-11</font> |  阿什姆萨海滩酒店  | 金巴兰 | 852(含税)  |    Y     | 单卧室泳池别墅 | 🌟🌟🌟🌟🌟 |\n|      2019-07-12 ~ 2019-07-14       | 巴厘岛库塔明星酒店 |  库塔  | 622(含税)  |    Y     |     豪华间     | 🌟🌟🌟🌟🌟 |\n\n{% note success %}\n<font size=\"4\" color=\"blue\">巴厘岛库塔明星酒店</font>\n抖音网红酒店，携程、马蜂窝推荐top的酒店，而且看了下价格，在繁华的库塔地带，离机场10min、海滩15min的步行，美食环绕，晚上也有繁华的夜市，位置相当不错。\n其次，我已邮件的方式联系了酒店，有免费接机的服务（3天以上free）。\n![](bali_jiudian_1.png)\n<font size=\"4\" color=\"blue\">阿什姆萨海滩酒店</font>\n去了巴厘岛，一定要住一次私人别墅的酒店，这是巴厘岛之行的必须体验之一，想象2个世界、私人别墅、私人泳池，多么嗨皮。建议提前一个月预定，价格会便宜好多，而且选择的也很多。\n![](bali_jiudian_2.png)\n{% endnote %}\n\n#### <font color=\"red\">景点</font>\n\n列举了一下top5的景点，可以查阅马蜂窝巴厘岛景色介绍，根据自己的喜爱去进行定义。\n\n> 蓝梦岛\n\n绝美的沙滩海景，是个休闲度假的绝佳地。\n\n> 情人崖\n\n巴厘岛的爱情圣地，很多人在此举行婚礼。\n\n> 海神庙\n\n坐落于海上的神庙，最具巴厘岛特色。\n\n> 库塔海滩\n\n最受欢迎的美食娱乐天堂，沙质细腻。\n\n> 金巴兰海滩\n\n世界十大最美落日海滩之一。\n\n#### <font color=\"red\">美食</font>\n\n{% tabs bali_meishi %}\n<!-- tab 库塔 -->\n- 竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font>】\n低廉的价格和美味的海鲜篮，令这家狭小门面的小店生意兴隆。\n- Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font>】\n就餐环境别致，菜品的味道会让人意想不到。\n- Kori Restaurant & Bar【<font size=\"5\" color=\"blue\">4.2</font>】\n巴厘岛式凉亭搭配潺潺流水，在这里吃饭或者喝东西都是一种享受。\n- Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font>】\n在水明漾，炭烤猪排真的推荐。\n<!-- endtab -->\n<!-- tab 金巴兰 -->\n- 金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】\n在海滩上边欣赏日落边吃海鲜。\n<!-- endtab -->\n<!-- tab 乌布-->\n- 脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font>】\n最老牌正宗的脏鸭餐餐厅。\n- Pundi-Pundi Grill & Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font>】\n烤猪排餐的份量超大！\n- Naughty Nuri's Warung Ubud （Naughty Nuri's Ubud）【<font size=\"5\" color=\"blue\">4.5</font>】\n巴厘岛上很有名的猪肋排餐厅，有好吃的烤肉、烤乳猪和牛排。\n- Fair Warung Bale （Fair Warung Bale - Fair Future Foundation）【<font size=\"5\" color=\"blue\">4.6</font>】\n马蜂窝推荐还不错。\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">购物</font>\n\n{% tabs bali_purchase %}\n<!-- tab 库塔 -->\n库塔是巴厘岛传统的商业和旅游购物中心，**太阳百货（Matahari）**和**Discovery Shopping Mall**是其中两个最大购物中心。\n<!-- endtab -->\n<!-- tab 登巴萨家乐福-->\n大型超市，里面东西我觉得不便宜。\n<!-- endtab -->\n<!-- tab Geneva-->\nGeneva位于库塔北边，需要专门坐车过去。在这里打算给自己的家添置点工艺品的，给朋友带小礼物的，都可以在此地解决。这里东西种类很多而且价格公道。\n<!-- endtab -->\n<!-- tab 黄金咖啡工场-->\n喜欢咖啡的人可以去，在咖啡工厂参观咖啡生产、筛选、烘焙等制作过程，享受黄金咖啡文化的熏陶，一边品尝黄金咖啡苦、甘、香却不酸涩的咖啡特色。\n<!-- endtab -->\n{% endtabs %}\n\n#### <font color=\"red\">App</font>\n记录一下自己用到的App。\n\n| id  |     name     | function                             |\n|:---:|:------------:|:------------------------------------ |\n|  1  |    去哪儿    | 机票预定                             |\n|  2  |     携程     | 酒店预订                             |\n|  3  |    马蜂窝    | 查看旅游地点吃喝玩乐的推荐，参考游记 |\n|  4  | My Blue Bird | 巴厘岛本地taxi打车神器               |\n|  5  |     grab     | 国际打车神器                         |\n|  6  | Google Maps  | 地图导航                             |\n|  7  |   有道翻译   | 英文不好的一定要下载一个             |\n\n#### <font color=\"red\">费用</font>\n\n|     类别     | 金额  |\n|:------------:|:-----:|\n|     机票     | 5350  |\n|     酒店     | 2725  |\n|   本地消费   | 3500  |\n|     包车     |  658  |\n|     漂流     |  658  |\n| 蓝梦岛一日游 |  730  |\n|     spa      |  680  |\n|     总计     | 14301 |\n\n单位：RMB\n\n#### <font color=\"red\">注意</font>\n{% note danger %}\n<font size=\"4\" color=\"blue\">1.签证</font>\n巴厘岛是免签的，不需要签证，直接护照入境就可以，但要看清楚啊，机场同时开着免签通道和落地签通道，走落地签通道要收35美金落地签费用。很好辨别，你看没人的那个就是落地签通道了，找有人排队的就是免签通道。\n\n<font size=\"4\" color=\"blue\">2.包车</font>\n建议淘宝就行，搜一下，选择一个适合自己的。远一点的包车玩比较舒服，我预计打算包车2-3天，第一天玩情人崖、海神庙，相距较远；第五天去乌布、圣泉寺，那边玩的比较集中，建议在包一天，剩下的就看自己想不想去远的地方了。\n\n<font size=\"4\" color=\"blue\">3.出租车</font>\n巴厘岛的出租车分5种，分别是浅蓝灰色的Bali Taxi、绿色的 Panwirthi Taxi、橘色的Praja Taxi、白色的Ngurah Rai Taxi和黑 色的机场出租车。其中Bali Taxi口碑最佳，在挡风玻璃上标 有“BlueBird Group”和蓝色鸟的标记所以也称蓝鸟出租车，司机有礼貌、基本跳表计费，起步6,000卢比/1km，之后3,000卢比/ km。其次是绿色或橘色车，而如果是白色车子，通常是不跳表的， 因此乘白色车之前要先谈好价钱。\n\n<font size=\"4\" color=\"blue\">4.小费</font>\n住完酒店适当的给点小费即可，一般是10000印尼盾（1RMB = 2000IDR），觉得好可以多给一些；吃饭的话我看介绍说不用给了，因为餐饮费里已经包含小费了。\n\n{% endnote %}\n","slug":"Travel-北京奋斗终章-巴厘岛之旅","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s38k00gttabjeerzrcob","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"密码提示：生日\" />\n    <label for=\"pass\">密码提示：生日</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"<div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>","more":"<div class=\"article_encrypt_abstract\">暂不公开，请勿打扰 ～<font size=\"5\" color=\"red\">【状态：加密】</font></div>","origin":"<p><img src=\"/images/article_balidao_ren.jpg\" alt></p>\n<blockquote class=\"blockquote-center\"><p>带上媳妇巴厘岛二人蜜月<br><strong>PyGo²</strong></p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a><font color=\"red\">背景</font></h4><p>带上媳妇度蜜月，结束北京6年奋斗之旅。</p>\n<h4 id=\"目的地\"><a href=\"#目的地\" class=\"headerlink\" title=\"目的地\"></a><font color=\"red\">目的地</font></h4><p><strong>巴厘岛</strong>【一流的酒店，二流的海滩，三流的景点】。</p>\n<h4 id=\"旅行方式\"><a href=\"#旅行方式\" class=\"headerlink\" title=\"旅行方式\"></a><font color=\"red\">旅行方式</font></h4><p>自由行。</p>\n<h4 id=\"机票\"><a href=\"#机票\" class=\"headerlink\" title=\"机票\"></a><font color=\"red\">机票</font></h4>\n<table>\n  <tr>\n    <th style=\"text-align:center;\">时间</th>\n    <th style=\"text-align:center;\">出发城市</th>\n    <th style=\"text-align:center;\">目的城市</th>\n    <th style=\"text-align:center;\">航空公司</th>\n    <th style=\"text-align:center;\">飞行时间</th>\n    <th style=\"text-align:center;\">机型</th>\n    <th style=\"text-align:center;\">票价</th>\n    <th style=\"text-align:center;\">是否保险</th>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-07 16:30～00:50（+1）</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">8h20min</td>\n    <td style=\"text-align:center;\">MU781</td>\n    <td rowspan=\"2\">\n        2675\n    </td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n  <tr>\n    <td style=\"text-align:center;\">2019-07-15 01:35～08:40</td>\n    <td style=\"text-align:center;\">巴厘岛</td>\n    <td style=\"text-align:center;\">北京</td>\n    <td style=\"text-align:center;\">中国东方航空公司</td>\n    <td style=\"text-align:center;\">7h5min</td>\n    <td style=\"text-align:center;\">MU782</td>\n    <td style=\"text-align:center;\">是</td>\n  </tr>\n</table>\n\n<h4 id=\"日程\"><a href=\"#日程\" class=\"headerlink\" title=\"日程\"></a><font color=\"red\">日程</font></h4><div class=\"tabs\" id=\"bali_richeng\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#bali_richeng-1\">Day1</a></li><li class=\"tab\"><a href=\"#bali_richeng-2\">Day2</a></li><li class=\"tab\"><a href=\"#bali_richeng-3\">Day3</a></li><li class=\"tab\"><a href=\"#bali_richeng-4\">Day4</a></li><li class=\"tab\"><a href=\"#bali_richeng-5\">Day5</a></li><li class=\"tab\"><a href=\"#bali_richeng-6\">Day6</a></li><li class=\"tab\"><a href=\"#bali_richeng-7\">Day7</a></li><li class=\"tab\"><a href=\"#bali_richeng-8\">备选</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"bali_richeng-1\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-08</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>情人崖(1h)【乌鲁瓦图寺】 → 神鹰广场(1h) → 海神庙(2h) → 库塔海滩</p>\n<blockquote>\n<p>美食</p>\n</blockquote>\n<ul>\n<li>竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font> 海鲜，价格合理】</li>\n<li>Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font> 网红餐厅 味道别致】</li>\n<li>Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font> 猪排】</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_richeng-2\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-09</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>蓝梦岛</p>\n<ul>\n<li>恶魔的眼泪</li>\n<li>梦幻海滩</li>\n<li>蘑菇海滩</li>\n<li>红树林</li>\n<li>黄桥</li>\n</ul>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<ul>\n<li>自行定船时间需要早些【7点酒店出发-&gt;萨努尔码头】，建议船票可以淘宝。</li>\n<li>还可以淘宝订购一个蓝梦岛一日游【<font color=\"red\">推荐</font>】。</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_richeng-3\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-10</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>阿勇河漂流(0.5天) → 岩石吧 → 金巴兰海滩<br>漂流可以淘宝，接送+门票，还是比较划算的。</p>\n<blockquote>\n<p>美食</p>\n</blockquote>\n<ul>\n<li>金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_richeng-4\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-11</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>spa 酒店 浪漫</p></div><div class=\"tab-pane\" id=\"bali_richeng-5\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-12</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<p>圣泉寺(1.5小时) → 德格拉郎梯田(1小时) → 乌布皇宫(1小时) → 乌布市场(3小时)</p>\n<blockquote>\n<p>美食</p>\n</blockquote>\n<ul>\n<li>脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font> 卡脏鸭餐】</li>\n<li>Pundi-Pundi Grill &amp; Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font> 猪排饭】</li>\n<li>Naughty Nuri’s Warung Ubud （Naughty Nuri’s Ubud）【<font size=\"5\" color=\"blue\">4.5</font> 烤猪排】</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_richeng-6\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-13</p>\n<blockquote>\n<p>景点</p>\n</blockquote>\n<ul>\n<li>太阳百货</li>\n<li>Discovery Shopping Mall</li>\n</ul>\n<blockquote>\n<p>建议</p>\n</blockquote>\n<ul>\n<li>2个地方里的很近，走路大概25分钟，但是交通很差。</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_richeng-7\"><blockquote>\n<p>日期</p>\n</blockquote>\n<p>2019-07-13</p>\n<p>自由浪</p></div><div class=\"tab-pane\" id=\"bali_richeng-8\"><blockquote>\n<p>景点</p>\n</blockquote>\n<ul>\n<li>天空之门</li>\n<li>巴厘岛野生动物园</li>\n<li>圣猴森林公园（与乌布市场、乌布皇宫聚集）</li>\n<li>水明漾 &amp;&amp; 水明漾海滩</li>\n<li>海龟岛</li>\n<li>南湾海滩（水上娱乐项目）</li>\n<li>京打马尼火山（较远，建议包车）</li>\n<li>水神庙</li>\n</ul></div></div></div>\n<h4 id=\"住宿\"><a href=\"#住宿\" class=\"headerlink\" title=\"住宿\"></a><font color=\"red\">住宿</font></h4><p>总结一下集中居住的区域位置的优点，方便进行选取：<br><div class=\"tabs\" id=\"bali_accommodation\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#bali_accommodation-1\">库塔</a></li><li class=\"tab\"><a href=\"#bali_accommodation-2\">金巴兰</a></li><li class=\"tab\"><a href=\"#bali_accommodation-3\">努沙杜瓦</a></li><li class=\"tab\"><a href=\"#bali_accommodation-4\">乌布</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"bali_accommodation-1\"><p>适合冲浪的海滩，酒店多以连锁商务酒店为主，价格较便宜，性价比高，很多背包客的选择，夜晚热闹，临近繁闹街道。</p></div><div class=\"tab-pane\" id=\"bali_accommodation-2\"><p>沙滩可看落日，有很多Villa酒店，价格适中。</p></div><div class=\"tab-pane\" id=\"bali_accommodation-3\"><p>酒店拥有私人沙滩，环境好，适合度假。</p></div><div class=\"tab-pane\" id=\"bali_accommodation-4\"><p>丛林体验，天然养吧，适合休闲放松。</p></div></div></div></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">日期</th>\n<th style=\"text-align:center\">酒店名称</th>\n<th style=\"text-align:center\">位置</th>\n<th style=\"text-align:center\">价格</th>\n<th style=\"text-align:center\">是否早餐</th>\n<th style=\"text-align:center\">房间类型</th>\n<th style=\"text-align:center\">推荐指数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2019-07-07 ~ 2019-07-10</td>\n<td style=\"text-align:center\">巴厘岛库塔明星酒店</td>\n<td style=\"text-align:center\">库塔</td>\n<td style=\"text-align:center\">1251(含税)</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">豪华间</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><font color=\"red\">2019-07-11</font></td>\n<td style=\"text-align:center\">阿什姆萨海滩酒店</td>\n<td style=\"text-align:center\">金巴兰</td>\n<td style=\"text-align:center\">852(含税)</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">单卧室泳池别墅</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2019-07-12 ~ 2019-07-14</td>\n<td style=\"text-align:center\">巴厘岛库塔明星酒店</td>\n<td style=\"text-align:center\">库塔</td>\n<td style=\"text-align:center\">622(含税)</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">豪华间</td>\n<td style=\"text-align:center\">🌟🌟🌟🌟🌟</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note success\">\n            <p><font size=\"4\" color=\"blue\">巴厘岛库塔明星酒店</font><br>抖音网红酒店，携程、马蜂窝推荐top的酒店，而且看了下价格，在繁华的库塔地带，离机场10min、海滩15min的步行，美食环绕，晚上也有繁华的夜市，位置相当不错。<br>其次，我已邮件的方式联系了酒店，有免费接机的服务（3天以上free）。<br><img src=\"bali_jiudian_1.png\" alt></p><p><font size=\"4\" color=\"blue\">阿什姆萨海滩酒店</font><br>去了巴厘岛，一定要住一次私人别墅的酒店，这是巴厘岛之行的必须体验之一，想象2个世界、私人别墅、私人泳池，多么嗨皮。建议提前一个月预定，价格会便宜好多，而且选择的也很多。<br><img src=\"bali_jiudian_2.png\" alt></p>\n          </div>\n<h4 id=\"景点\"><a href=\"#景点\" class=\"headerlink\" title=\"景点\"></a><font color=\"red\">景点</font></h4><p>列举了一下top5的景点，可以查阅马蜂窝巴厘岛景色介绍，根据自己的喜爱去进行定义。</p>\n<blockquote>\n<p>蓝梦岛</p>\n</blockquote>\n<p>绝美的沙滩海景，是个休闲度假的绝佳地。</p>\n<blockquote>\n<p>情人崖</p>\n</blockquote>\n<p>巴厘岛的爱情圣地，很多人在此举行婚礼。</p>\n<blockquote>\n<p>海神庙</p>\n</blockquote>\n<p>坐落于海上的神庙，最具巴厘岛特色。</p>\n<blockquote>\n<p>库塔海滩</p>\n</blockquote>\n<p>最受欢迎的美食娱乐天堂，沙质细腻。</p>\n<blockquote>\n<p>金巴兰海滩</p>\n</blockquote>\n<p>世界十大最美落日海滩之一。</p>\n<h4 id=\"美食\"><a href=\"#美食\" class=\"headerlink\" title=\"美食\"></a><font color=\"red\">美食</font></h4><div class=\"tabs\" id=\"bali_meishi\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#bali_meishi-1\">库塔</a></li><li class=\"tab\"><a href=\"#bali_meishi-2\">金巴兰</a></li><li class=\"tab\"><a href=\"#bali_meishi-3\">乌布</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"bali_meishi-1\"><ul>\n<li>竹子角落 （Bamboo Corner）【<font size=\"5\" color=\"blue\">3.9</font>】<br>低廉的价格和美味的海鲜篮，令这家狭小门面的小店生意兴隆。</li>\n<li>Poppies Restaurant【<font size=\"5\" color=\"blue\">4.3</font>】<br>就餐环境别致，菜品的味道会让人意想不到。</li>\n<li>Kori Restaurant &amp; Bar【<font size=\"5\" color=\"blue\">4.2</font>】<br>巴厘岛式凉亭搭配潺潺流水，在这里吃饭或者喝东西都是一种享受。</li>\n<li>Hog wild in Bali Kuta （Hog Wild with Chef Bruno）【<font size=\"5\" color=\"blue\">4.7</font>】<br>在水明漾，炭烤猪排真的推荐。</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_meishi-2\"><ul>\n<li>金巴兰海滩烧烤 （Jimbaran Bay Seafood Club）【<font size=\"5\" color=\"blue\">3.9</font>】<br>在海滩上边欣赏日落边吃海鲜。</li>\n</ul></div><div class=\"tab-pane\" id=\"bali_meishi-3\"><ul>\n<li>脏鸭餐厅(乌布店) （Bebek Bengil）【<font size=\"5\" color=\"blue\">3.9</font>】<br>最老牌正宗的脏鸭餐餐厅。</li>\n<li>Pundi-Pundi Grill &amp; Asian Cuisine （Pundi-Pundi）【<font size=\"5\" color=\"blue\">4.2</font>】<br>烤猪排餐的份量超大！</li>\n<li>Naughty Nuri’s Warung Ubud （Naughty Nuri’s Ubud）【<font size=\"5\" color=\"blue\">4.5</font>】<br>巴厘岛上很有名的猪肋排餐厅，有好吃的烤肉、烤乳猪和牛排。</li>\n<li>Fair Warung Bale （Fair Warung Bale - Fair Future Foundation）【<font size=\"5\" color=\"blue\">4.6</font>】<br>马蜂窝推荐还不错。</li>\n</ul></div></div></div>\n<h4 id=\"购物\"><a href=\"#购物\" class=\"headerlink\" title=\"购物\"></a><font color=\"red\">购物</font></h4><div class=\"tabs\" id=\"bali_purchase\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#bali_purchase-1\">库塔</a></li><li class=\"tab\"><a href=\"#bali_purchase-2\">登巴萨家乐福</a></li><li class=\"tab\"><a href=\"#bali_purchase-3\">Geneva</a></li><li class=\"tab\"><a href=\"#bali_purchase-4\">黄金咖啡工场</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"bali_purchase-1\"><p>库塔是巴厘岛传统的商业和旅游购物中心，<strong>太阳百货（Matahari）</strong>和<strong>Discovery Shopping Mall</strong>是其中两个最大购物中心。</p></div><div class=\"tab-pane\" id=\"bali_purchase-2\"><p>大型超市，里面东西我觉得不便宜。</p></div><div class=\"tab-pane\" id=\"bali_purchase-3\"><p>Geneva位于库塔北边，需要专门坐车过去。在这里打算给自己的家添置点工艺品的，给朋友带小礼物的，都可以在此地解决。这里东西种类很多而且价格公道。</p></div><div class=\"tab-pane\" id=\"bali_purchase-4\"><p>喜欢咖啡的人可以去，在咖啡工厂参观咖啡生产、筛选、烘焙等制作过程，享受黄金咖啡文化的熏陶，一边品尝黄金咖啡苦、甘、香却不酸涩的咖啡特色。</p></div></div></div>\n<h4 id=\"App\"><a href=\"#App\" class=\"headerlink\" title=\"App\"></a><font color=\"red\">App</font></h4><p>记录一下自己用到的App。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:left\">function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">去哪儿</td>\n<td style=\"text-align:left\">机票预定</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">携程</td>\n<td style=\"text-align:left\">酒店预订</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">马蜂窝</td>\n<td style=\"text-align:left\">查看旅游地点吃喝玩乐的推荐，参考游记</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">My Blue Bird</td>\n<td style=\"text-align:left\">巴厘岛本地taxi打车神器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">grab</td>\n<td style=\"text-align:left\">国际打车神器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">Google Maps</td>\n<td style=\"text-align:left\">地图导航</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">有道翻译</td>\n<td style=\"text-align:left\">英文不好的一定要下载一个</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"费用\"><a href=\"#费用\" class=\"headerlink\" title=\"费用\"></a><font color=\"red\">费用</font></h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类别</th>\n<th style=\"text-align:center\">金额</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">机票</td>\n<td style=\"text-align:center\">5350</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">酒店</td>\n<td style=\"text-align:center\">2725</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">本地消费</td>\n<td style=\"text-align:center\">3500</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">包车</td>\n<td style=\"text-align:center\">658</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">漂流</td>\n<td style=\"text-align:center\">658</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">蓝梦岛一日游</td>\n<td style=\"text-align:center\">730</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">spa</td>\n<td style=\"text-align:center\">680</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">总计</td>\n<td style=\"text-align:center\">14301</td>\n</tr>\n</tbody>\n</table>\n<p>单位：RMB</p>\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a><font color=\"red\">注意</font></h4><div class=\"note danger\">\n            <p><font size=\"4\" color=\"blue\">1.签证</font><br>巴厘岛是免签的，不需要签证，直接护照入境就可以，但要看清楚啊，机场同时开着免签通道和落地签通道，走落地签通道要收35美金落地签费用。很好辨别，你看没人的那个就是落地签通道了，找有人排队的就是免签通道。</p><p><font size=\"4\" color=\"blue\">2.包车</font><br>建议淘宝就行，搜一下，选择一个适合自己的。远一点的包车玩比较舒服，我预计打算包车2-3天，第一天玩情人崖、海神庙，相距较远；第五天去乌布、圣泉寺，那边玩的比较集中，建议在包一天，剩下的就看自己想不想去远的地方了。</p><p><font size=\"4\" color=\"blue\">3.出租车</font><br>巴厘岛的出租车分5种，分别是浅蓝灰色的Bali Taxi、绿色的 Panwirthi Taxi、橘色的Praja Taxi、白色的Ngurah Rai Taxi和黑 色的机场出租车。其中Bali Taxi口碑最佳，在挡风玻璃上标 有“BlueBird Group”和蓝色鸟的标记所以也称蓝鸟出租车，司机有礼貌、基本跳表计费，起步6,000卢比/1km，之后3,000卢比/ km。其次是绿色或橘色车，而如果是白色车子，通常是不跳表的， 因此乘白色车之前要先谈好价钱。</p><p><font size=\"4\" color=\"blue\">4.小费</font><br>住完酒店适当的给点小费即可，一般是10000印尼盾（1RMB = 2000IDR），觉得好可以多给一些；吃饭的话我看介绍说不用给了，因为餐饮费里已经包含小费了。</p>\n          </div>\n","encrypt":true,"template":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"密码提示：生日\" />\n    <label for=\"pass\">密码提示：生日</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"title":"Next主题优化-基础篇（Gemini）","comments":0,"desc":"Next主题优化系统教程的基础篇，主题是基于next的Gemini","keywords":"hexo, next, Hexo, 美化, 插件, 博客, blog, 站点配置, 菜单栏, about, tags, catalog, 头像, 文件夹, Gemini, 分享, 友情链接","abbrlink":58065,"date":"2018-12-02T13:38:00.000Z","updated":"2019-12-06T02:12:46.000Z","_content":"\n### 问题简述\n{% note success %}\n<font color=\"#dd0000\">***My blog***</font> 采用Hexo + Next搭建，搭建完之后，看页面居然还是英文，好ugly，身为一名程序猿怎么可以忍呢。在持续一个月的捣鼓中，总结出Next一些通过配置优化的点。\n{% endnote %}\n\n![](/images/article_next.png)\n\n<!--more-->\n<hr />\n\n### 版本信息\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n|  3  |     ATOM     | 1.34.0  |  编译器  |\n|  4  |    Theme     | Gemini  |          |\n\n### 优化Catalog\n\n- ***<font color=\"#dd0000\" size=\"5\">切记config文件冒号“：”后面一定要有一个空格</font>***\n- ***<font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g && hexo server -p 8888 --debug***\n\n1. #### Blog站点配置\n位置：blog/_config.yml\n***hexo自带的config.yml，不是next主题的，看好了***\n```\n# 基本信息配置 Site\ntitle: PyGo²\nsubtitle: 一个爱老婆的python程序猿。。。。。。\ndescription: 直男，双鱼星座，现居北京，去哪儿网python开发工程师。\nkeywords: python\nauthor: mingliang.gao\nlanguage: zh-CN # 🌟页面的语言设置\ntimezone: Asia/Shanghai #时区\n```\n\n2. #### Next风格设置\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Schemes***</font>，更改配置如下：\n```\n# Schemes 主题风格\n# scheme: Muse\n# scheme: Mist\nscheme: Pisces\n# scheme: Gemini\n```\n\n3. #### 菜单栏\n位置：blog/theme/next/_config.yml\n打开文件，格式：***Key: Path || Icon***，不想要的#禁止掉\n```\nmenu:\n  home: / || home\n  archives: /archives/ || history\n  tags: /tags/ || tags\n  categories: /categories/ || list\n  movie: /categories/影视说 || film\n  messagepad: /messagepad/ || sticky-note\n  about: /about/ || user\n  # schedule: /schedule/ || calendar\n  # sitemap: /sitemap.xml || sitemap\n  # commonweal: /404/ || heartbeat\n\nmenu_settings:\n  icons: true   # 是否显示图标\n  badges: true  # 是否显示分类、标签、时间轴所包含内容个数\n```\n\n4. #### about页面\n终端（mac推荐使用zsh + item2）回到blog的根目录，运行：***hexo new page about***，在**blog/source**下会自动建立about文件夹，编辑里面的index.md，配置如下：\n```\n---\nlayout: about\ntitle: Self Introduction\ndate: 2018-01-01\ncomments: false\ntype: about\n---\n```\n现在可以使用atom去写关于自己的描述了（markdown语法，不知道的请自行恶补）\n\n5. #### tags/catalog页面\n\n> Tags\n\n根目录运行：***hexo new page tags***，配置如下：\n```\n---\ntitle: 标签\ndate: 2019-03-17 13:58:44\ntype: \"tags\"\ncomments: false\n---\n```\n> Catalog\n\n根目录运行：***hexo new page tags***，配置如下：\n```\n---\ntitle: 分类\ndate: 2019-03-17 13:58:10\ntype: \"categories\"\ncomments: false\n---\n```\ntags和categorise页面不用设置样式，自动生成，之所以与about页面分开，我觉得虽然建立的方式一样，但是内容根本不一个东西，每篇文章设置对应的即可，栗子如下：\n```\n---\ntitle: 程序猿七夕-心心相印\ncomments: false\ndate: 2018-8-13 14:19:57\nupdated: 2018-8-13 17:19:57\ndesc: 程序猿七夕-心心相印\ncategories:\n  - [python]\ntags: [python]\n---\n```\n\n6. #### 设置创建文章同名文件夹\n位置：blog/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***post_asset_folder***</font>，更改配置如下：\n```\ndefault_layout: post # 默认创建文件分类\npost_asset_folder: true\n```\n开启之后，在创建文章***hexo new XXXX***，同时也会出现一个同名的文件夹用来存放相关的图片。\n\n7. #### 个人头像设置\n设置侧边栏头像，准备好头像图片，可以是png、jpg、gif等，本人用的动态gif图片。然后，将图片放在/blog/themes/next/source/images/文件夹下。\n位置：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***avatar***</font>，更改配置如下：\n```\nurl: /images/timg.gif # 图片存放位置\nrounded: true #设置图片是否为圆形，当图片为正方形时为圆，否则为正方形\nopacity: 1 #图片的透明度\nrotated: true #设置鼠标移到图片上是否转动\n```\n<img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"/>\n\n8. #### 社交栏设置\n\n在Next主题配置文件中，搜索<font size=\"4\" color=\"red\">***social***</font>，设置相对应的社交信息，格式：**网站名: 网址 || 图标**（英文“:”）。\n图标选取地址：[自选图标](https://fontawesome.com/cheatsheet?from=io)\n> 菜单栏的个人社交信息设置\n\n```\nsocial:\n  GitHub: https://github.com/GIS90 || github\n  WeiBo: https://weibo.com/u/1989571513 || weibo\n  E-Mail: gaoming971366@163.com || envelope\n  OsChina: https://my.oschina.net/u/2259452 || fire\n  # Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n```\n> 社交信息图标设置\n\n```\nsocial_icons:\n  enable: true # 是否展示图标\n  icons_only: true # 是否只展示图标\n  transition: true # 一/多行格式\n```\n\n9. #### 修改模版\n位置：blog/scaffolds/post.md\n打开上述文件，修改代码如下：\n```\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncategories:\ntags:\ncomments: false\n---\n```\n- title：文章标题\n- desc：文章的简述\n- date：文章创建时间\n- updated：文章修改时间\n- categories：文章分类\n- tags：文章标签\n- comments：是否启用评论功能，默认关闭\n\n10. #### 代码添加复制功能\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Button***</font>，更改配置如下：\n```\ncodeblock:\n  border_radius: 0 # 复制功能button边框\n  copy_button:\n    enable: true # 是否启用复制功能呢\n    show_result: true # 是否显示复制结果\n    style: # 设置flat，样式超难看\n```\n默认按钮显示**复制**，若是想改为英文**copy**，打开blog/themes/next/languages/zh-CN.yml文件中，将下面部分改了即可：\n```\ncopy_button: 复制\ncopy_success: 复制成功\ncopy_failure: 复制失败\n```\n<img src=\"next_youhua_copy.gif\" style=\"border:1.5px solid blue\"/>\n\n11. #### 文章设置打赏\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***reward_settings***</font>，更改配置如下：\n```\nreward_settings:\n  enable: true # 是否启用打赏功能\n  animation: true # 支付名称支付有动画效果\n  comment: 觉得有帮助，欢迎打赏 # 贡献说明\n\nreward:\n  wechatpay: /images/wechatpay.png # 微信\n  alipay: /images/alipay.png # 支付宝\n  # bitcoin: /images/bitcoin.png # 比特币\n```\n<img src=\"next_youhua_pay.gif\" style=\"border:1.5px solid blue\"/>\n\n12. #### footer设置\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***footer***</font>，更改配置如下：\n```\nfooter:\n  # 底部user图标\n  icon:\n    name: user-circle # icon名称\n    animated: true # 是否启用动画效果\n    color: \"#FF0000\" # 图标颜色\n\n  copyright: # 底部hexo版本信息显示设置\n  powered:\n    enable: false # 是否显示hexo版本信息\n    version: true\n\n  theme: # 底部hexo版本信息显示设置\n    enable: false # 是否显示next版本信息\n    version: true\n```\n图标选取地址：https://fontawesome.com/v4.7.0/icons/\n<img src=\"next_youhua_footer.gif\" style=\"border:1.5px solid blue\"/>\n\n13. #### 访问人数和总访问量\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***busuanzi_count***</font>，更改配置如下：\n```\nbusuanzi_count:\n  enable: true # 是否启用统计功能\n  total_visitors: false # 网站总的访问人数，底部展示\n  total_visitors_icon: user # 网站总的访问人数icon\n  total_views: false # 网站总的访问次数，底部展示\n  total_views_icon: eye # 网站总的访问次数icon\n  post_views: true # 阅读次数，文章标题下展示\n  post_views_icon: eye # 阅读次数icon\n```\n\n14. #### 动态背景Canvas\n位置：blog/theme/next/_config.yml\ncanvas-nest：https://github.com/theme-next/theme-next-canvas-nest\nthree_waves：https://github.com/theme-next/theme-next-three\n具体步骤github上有详解\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Canvas-nest***</font>，更改配置如下：\n```\n# Canvas-nest 背景效果\ncanvas_nest:\n  enable: true\n  onmobile: false # display on mobile or not\n  color: \"0,0,255\" # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 199 # the number of lines\n\n# JavaScript 3D library.\n# Dependencies: https://github.com/theme-next/theme-next-three\n# three_waves 背景效果\nthree_waves: false\n# canvas_lines\ncanvas_lines: false\n# canvas_sphere\ncanvas_sphere: false\n```\n特别指出three_waves配置只能选取一个，而且开启canvas-nest，three_waves之后，页面渲染的时间变长了，而且发现内存，cpu的使用率也加大了，所以我只开启了canvas-nest，根据自己的需求进行配置。\n<img src=\"next_youhua_bg.gif\" style=\"border:1.5px solid blue\"/>\n\n15. #### 文章第三方分享\n\n> 分享插件：baidushare\n\n文章添加***新浪、微信、贴吧***等国内第三方分享，关于位置有**button | slide**2种选择。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***baidushare***</font>，更改配置如下：\n```\nbaidushare:\n  type: button\n```\n<img src=\"next_youhua_baidushare.png\" style=\"border:1.5px solid blue\"/>\n\n> 分享插件：likely\n\n文章添加***twitter、facebook、linkedin***等国际第三方分享，有需要的同学可以开启此功能。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***likely***</font>，更改配置如下：\n```\nlikely:\n  enable: false\n  look: normal # available values: normal, light, small, big\n  networks:\n    twitter: Tweet\n    facebook: Share\n    linkedin: Link\n    gplus: Plus\n    vkontakte: Share\n    odnoklassniki: Class\n    telegram: Send\n    whatsapp: Send\n    pinterest: Pin\n```\n<img src=\"next_youhua_likely.png\" style=\"border:1.5px solid blue\"/>\n\n> 分享插件：NeedMoreShare2\n\n配置文件新增了综合国内、国际分享，也是可以设置底部、侧边2种位置。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***NeedMoreShare2***</font>，更改配置如下：\n```\nneedmoreshare2:\n  enable: false\n  postbottom:\n    enable: false\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomCenter\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n  float:\n    enable: false\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: middleRight\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n```\n<img src=\"next_youhua_needmoreshare2.png\" style=\"border:1.5px solid blue\"/>\n\n16. #### 友情链接\n位置：blog/theme/next/_config.yml\n站点浏览添加友情链接，格式：名称: url(英文“:”)。打开配置文件，搜索<font size=\"4\" color=\"red\">***Blog rolls***</font>，更改配置如下：\n```\nlinks_icon: link # 图标\nlinks_title: 友情链接 # 标题\n# links_layout: block # 链接样式 块样式\nlinks_layout: inline # 行样式\nlinks: # 内容\n google搜索: https://www.google.com\n baidu搜索: https://www.baidu.com\n pdf在线转换: https://smallpdf.com/cn\n json格式化: https://www.json.cn/\n```\n<img src=\"next_youhua_link.png\" style=\"border:1.5px solid blue\"/>\n\n18. #### 首页设置文章预览\n首页文章设置预览前言显示，有2种方式，都***share***一下。\n> 配置\n\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***auto_excerpt***</font>，更改配置如下：\n```\nauto_excerpt:\n  enable: true\n  length: 200\n```\n设置完之后，首页预览每个markdown格式，不建议使用。\n> more\n\n在文章需要进行预览的地方，加入如下代码：\n```\n<!-- more -->\n```\n建议使用，格式、图片等不受影响。\n\n19. #### 文章首页图片展示\n首页文章设置预览用***more***去进行处理，当在预览中加入图片时，图片链接会去blog>public>images目录下去寻找对应的图片，打开文章又回去文章对应的目录>images目录下去找。\n所以，当文章预览中有图片显示的文章，在文章的目录下手动建立一个**images**文件夹，把图片分别存放在当前images文件夹以及blog>public>images文件夹下。这样就OK了。\n<img src=\"next_youhua_pic.png\" style=\"border:1.5px solid blue\"/>\n\n不过有个问题，首页如果分页显示，那么首页预览图片寻找的路径会发生改变。所以我在前面设置文章预览个数index_generator的时候设置为0，这是我的解决方法，如果大家有好的解决方案，欢迎大家留言交流。\n\n20. #### 博文添加图片查看器\n首先，下载fancybox插件，有2个版本，我选择了最新版3。\n```\ncd themes/next\ngit clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox\n```\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索***fancybox***，更改配置如下：\n```\nfancybox: true\n```\nfancybox官网：https://github.com/theme-next/theme-next-fancybox3\n<img src=\"next_youhua_fangda.png\" style=\"border:1.5px solid blue\"/>\n\n21. #### 页面浏览进度\n设置页面的浏览百分比，打开配置文件，搜索<font size=\"4\" color=\"red\">***scrollpercent***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false    # sitebar是否在工具栏\n  # Scroll percent label in b2t button.\n  scrollpercent: true   # 浏览进度情况\n```\n22. #### 文章额外信息展示\n在文章标题下面显示文章相关的额外信息，打开配置文件，搜索<font size=\"4\" color=\"red\">***post_meta***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\n# Post meta display settings\n# 文章创作时间、分类\npost_meta:\n  item_text: true\n  created_at: true\n  updated_at:\n    enable: true\n    another_day: true\n  categories: true\n```\n<img src=\"next_youhua_extrainfo.png\" style=\"border:1.5px solid blue\"/>\n\n23. #### 修改访问URL路径\nblog默认情况下访问URL路径为：domain/2017/08/18/title，打开配置文件，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改配置如下：\n位置：blog/_config.yml\n```\npermalink: :category/:title/\n```\n配置完，重启一下server，回到主页在进行文件查看，发现地址发生改变\n\n24. #### 设置博客favicon图标\n修改博客favicon图标，打开配置文件，搜索<font size=\"4\" color=\"red\">***apple_touch_icon***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\nfavicon:\n  small: /images/favicon16.ico\n  medium: /images/favicon32.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n25. #### 修改文章底部的#号标签\n打开/themes/next/layout/_macro/post.swig，搜索<font size=\"4\" color=\"red\">***rel=\"tag\">#***</font>，将#换成下列代码:\n```\n<i class=\"fa fa-tag\"></i>\n```\n\n### 注意\n- 配置完Hexo config需要重启server，next config重新刷新即可。\n\n### 学习\nhexo官方配置手册：https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\nhexo图标选取地址：https://fontawesome.com/icons\n\n### 结束\n本篇内容主要解决Hexo、Next相关config配置文件的优化，内容持续更新中，如有bugs，欢迎大家评论指出。\n待续。。。。。。（未完结）\n\n***<font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font>***\n","source":"_posts/Hexo-Next主题优化-基础篇（Gemini）.md","raw":"---\ntitle: Next主题优化-基础篇（Gemini）\ncomments: false\ndesc: Next主题优化系统教程的基础篇，主题是基于next的Gemini\ncategories:\n  - [Hexo]\ntags: [Hexo, Hexo美化]\nkeywords: hexo, next, Hexo, 美化, 插件, 博客, blog, 站点配置, 菜单栏, about, tags, catalog, 头像, 文件夹, Gemini, 分享, 友情链接\nabbrlink: 58065\ndate: 2018-12-02 21:38:00\nupdated: 2019-12-06 10:12:46\n---\n\n### 问题简述\n{% note success %}\n<font color=\"#dd0000\">***My blog***</font> 采用Hexo + Next搭建，搭建完之后，看页面居然还是英文，好ugly，身为一名程序猿怎么可以忍呢。在持续一个月的捣鼓中，总结出Next一些通过配置优化的点。\n{% endnote %}\n\n![](/images/article_next.png)\n\n<!--more-->\n<hr />\n\n### 版本信息\n| id  |     name     | version |  remark  |\n|:---:|:------------:|:-------:|:--------:|\n|  1  |     Hexo     | v3.8.0  | 系统版本 |\n|  2  | NextT.Pisces | v7.0.1  | 主题版本 |\n|  3  |     ATOM     | 1.34.0  |  编译器  |\n|  4  |    Theme     | Gemini  |          |\n\n### 优化Catalog\n\n- ***<font color=\"#dd0000\" size=\"5\">切记config文件冒号“：”后面一定要有一个空格</font>***\n- ***<font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g && hexo server -p 8888 --debug***\n\n1. #### Blog站点配置\n位置：blog/_config.yml\n***hexo自带的config.yml，不是next主题的，看好了***\n```\n# 基本信息配置 Site\ntitle: PyGo²\nsubtitle: 一个爱老婆的python程序猿。。。。。。\ndescription: 直男，双鱼星座，现居北京，去哪儿网python开发工程师。\nkeywords: python\nauthor: mingliang.gao\nlanguage: zh-CN # 🌟页面的语言设置\ntimezone: Asia/Shanghai #时区\n```\n\n2. #### Next风格设置\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Schemes***</font>，更改配置如下：\n```\n# Schemes 主题风格\n# scheme: Muse\n# scheme: Mist\nscheme: Pisces\n# scheme: Gemini\n```\n\n3. #### 菜单栏\n位置：blog/theme/next/_config.yml\n打开文件，格式：***Key: Path || Icon***，不想要的#禁止掉\n```\nmenu:\n  home: / || home\n  archives: /archives/ || history\n  tags: /tags/ || tags\n  categories: /categories/ || list\n  movie: /categories/影视说 || film\n  messagepad: /messagepad/ || sticky-note\n  about: /about/ || user\n  # schedule: /schedule/ || calendar\n  # sitemap: /sitemap.xml || sitemap\n  # commonweal: /404/ || heartbeat\n\nmenu_settings:\n  icons: true   # 是否显示图标\n  badges: true  # 是否显示分类、标签、时间轴所包含内容个数\n```\n\n4. #### about页面\n终端（mac推荐使用zsh + item2）回到blog的根目录，运行：***hexo new page about***，在**blog/source**下会自动建立about文件夹，编辑里面的index.md，配置如下：\n```\n---\nlayout: about\ntitle: Self Introduction\ndate: 2018-01-01\ncomments: false\ntype: about\n---\n```\n现在可以使用atom去写关于自己的描述了（markdown语法，不知道的请自行恶补）\n\n5. #### tags/catalog页面\n\n> Tags\n\n根目录运行：***hexo new page tags***，配置如下：\n```\n---\ntitle: 标签\ndate: 2019-03-17 13:58:44\ntype: \"tags\"\ncomments: false\n---\n```\n> Catalog\n\n根目录运行：***hexo new page tags***，配置如下：\n```\n---\ntitle: 分类\ndate: 2019-03-17 13:58:10\ntype: \"categories\"\ncomments: false\n---\n```\ntags和categorise页面不用设置样式，自动生成，之所以与about页面分开，我觉得虽然建立的方式一样，但是内容根本不一个东西，每篇文章设置对应的即可，栗子如下：\n```\n---\ntitle: 程序猿七夕-心心相印\ncomments: false\ndate: 2018-8-13 14:19:57\nupdated: 2018-8-13 17:19:57\ndesc: 程序猿七夕-心心相印\ncategories:\n  - [python]\ntags: [python]\n---\n```\n\n6. #### 设置创建文章同名文件夹\n位置：blog/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***post_asset_folder***</font>，更改配置如下：\n```\ndefault_layout: post # 默认创建文件分类\npost_asset_folder: true\n```\n开启之后，在创建文章***hexo new XXXX***，同时也会出现一个同名的文件夹用来存放相关的图片。\n\n7. #### 个人头像设置\n设置侧边栏头像，准备好头像图片，可以是png、jpg、gif等，本人用的动态gif图片。然后，将图片放在/blog/themes/next/source/images/文件夹下。\n位置：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\">***avatar***</font>，更改配置如下：\n```\nurl: /images/timg.gif # 图片存放位置\nrounded: true #设置图片是否为圆形，当图片为正方形时为圆，否则为正方形\nopacity: 1 #图片的透明度\nrotated: true #设置鼠标移到图片上是否转动\n```\n<img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"/>\n\n8. #### 社交栏设置\n\n在Next主题配置文件中，搜索<font size=\"4\" color=\"red\">***social***</font>，设置相对应的社交信息，格式：**网站名: 网址 || 图标**（英文“:”）。\n图标选取地址：[自选图标](https://fontawesome.com/cheatsheet?from=io)\n> 菜单栏的个人社交信息设置\n\n```\nsocial:\n  GitHub: https://github.com/GIS90 || github\n  WeiBo: https://weibo.com/u/1989571513 || weibo\n  E-Mail: gaoming971366@163.com || envelope\n  OsChina: https://my.oschina.net/u/2259452 || fire\n  # Google: https://plus.google.com/yourname || google\n  #Twitter: https://twitter.com/yourname || twitter\n  #FB Page: https://www.facebook.com/yourname || facebook\n  #VK Group: https://vk.com/yourname || vk\n  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow\n  #YouTube: https://youtube.com/yourname || youtube\n  #Instagram: https://instagram.com/yourname || instagram\n  #Skype: skype:yourname?call|chat || skype\n```\n> 社交信息图标设置\n\n```\nsocial_icons:\n  enable: true # 是否展示图标\n  icons_only: true # 是否只展示图标\n  transition: true # 一/多行格式\n```\n\n9. #### 修改模版\n位置：blog/scaffolds/post.md\n打开上述文件，修改代码如下：\n```\n---\ntitle: {{ title }}\ndesc:\ndate: {{ date }}\nupdated: {{ date }}\ncategories:\ntags:\ncomments: false\n---\n```\n- title：文章标题\n- desc：文章的简述\n- date：文章创建时间\n- updated：文章修改时间\n- categories：文章分类\n- tags：文章标签\n- comments：是否启用评论功能，默认关闭\n\n10. #### 代码添加复制功能\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Button***</font>，更改配置如下：\n```\ncodeblock:\n  border_radius: 0 # 复制功能button边框\n  copy_button:\n    enable: true # 是否启用复制功能呢\n    show_result: true # 是否显示复制结果\n    style: # 设置flat，样式超难看\n```\n默认按钮显示**复制**，若是想改为英文**copy**，打开blog/themes/next/languages/zh-CN.yml文件中，将下面部分改了即可：\n```\ncopy_button: 复制\ncopy_success: 复制成功\ncopy_failure: 复制失败\n```\n<img src=\"next_youhua_copy.gif\" style=\"border:1.5px solid blue\"/>\n\n11. #### 文章设置打赏\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***reward_settings***</font>，更改配置如下：\n```\nreward_settings:\n  enable: true # 是否启用打赏功能\n  animation: true # 支付名称支付有动画效果\n  comment: 觉得有帮助，欢迎打赏 # 贡献说明\n\nreward:\n  wechatpay: /images/wechatpay.png # 微信\n  alipay: /images/alipay.png # 支付宝\n  # bitcoin: /images/bitcoin.png # 比特币\n```\n<img src=\"next_youhua_pay.gif\" style=\"border:1.5px solid blue\"/>\n\n12. #### footer设置\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***footer***</font>，更改配置如下：\n```\nfooter:\n  # 底部user图标\n  icon:\n    name: user-circle # icon名称\n    animated: true # 是否启用动画效果\n    color: \"#FF0000\" # 图标颜色\n\n  copyright: # 底部hexo版本信息显示设置\n  powered:\n    enable: false # 是否显示hexo版本信息\n    version: true\n\n  theme: # 底部hexo版本信息显示设置\n    enable: false # 是否显示next版本信息\n    version: true\n```\n图标选取地址：https://fontawesome.com/v4.7.0/icons/\n<img src=\"next_youhua_footer.gif\" style=\"border:1.5px solid blue\"/>\n\n13. #### 访问人数和总访问量\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***busuanzi_count***</font>，更改配置如下：\n```\nbusuanzi_count:\n  enable: true # 是否启用统计功能\n  total_visitors: false # 网站总的访问人数，底部展示\n  total_visitors_icon: user # 网站总的访问人数icon\n  total_views: false # 网站总的访问次数，底部展示\n  total_views_icon: eye # 网站总的访问次数icon\n  post_views: true # 阅读次数，文章标题下展示\n  post_views_icon: eye # 阅读次数icon\n```\n\n14. #### 动态背景Canvas\n位置：blog/theme/next/_config.yml\ncanvas-nest：https://github.com/theme-next/theme-next-canvas-nest\nthree_waves：https://github.com/theme-next/theme-next-three\n具体步骤github上有详解\n打开配置文件，搜索<font size=\"4\" color=\"red\">***Canvas-nest***</font>，更改配置如下：\n```\n# Canvas-nest 背景效果\ncanvas_nest:\n  enable: true\n  onmobile: false # display on mobile or not\n  color: \"0,0,255\" # RGB values, use ',' to separate\n  opacity: 0.5 # the opacity of line: 0~1\n  zIndex: -1 # z-index property of the background\n  count: 199 # the number of lines\n\n# JavaScript 3D library.\n# Dependencies: https://github.com/theme-next/theme-next-three\n# three_waves 背景效果\nthree_waves: false\n# canvas_lines\ncanvas_lines: false\n# canvas_sphere\ncanvas_sphere: false\n```\n特别指出three_waves配置只能选取一个，而且开启canvas-nest，three_waves之后，页面渲染的时间变长了，而且发现内存，cpu的使用率也加大了，所以我只开启了canvas-nest，根据自己的需求进行配置。\n<img src=\"next_youhua_bg.gif\" style=\"border:1.5px solid blue\"/>\n\n15. #### 文章第三方分享\n\n> 分享插件：baidushare\n\n文章添加***新浪、微信、贴吧***等国内第三方分享，关于位置有**button | slide**2种选择。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***baidushare***</font>，更改配置如下：\n```\nbaidushare:\n  type: button\n```\n<img src=\"next_youhua_baidushare.png\" style=\"border:1.5px solid blue\"/>\n\n> 分享插件：likely\n\n文章添加***twitter、facebook、linkedin***等国际第三方分享，有需要的同学可以开启此功能。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***likely***</font>，更改配置如下：\n```\nlikely:\n  enable: false\n  look: normal # available values: normal, light, small, big\n  networks:\n    twitter: Tweet\n    facebook: Share\n    linkedin: Link\n    gplus: Plus\n    vkontakte: Share\n    odnoklassniki: Class\n    telegram: Send\n    whatsapp: Send\n    pinterest: Pin\n```\n<img src=\"next_youhua_likely.png\" style=\"border:1.5px solid blue\"/>\n\n> 分享插件：NeedMoreShare2\n\n配置文件新增了综合国内、国际分享，也是可以设置底部、侧边2种位置。\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***NeedMoreShare2***</font>，更改配置如下：\n```\nneedmoreshare2:\n  enable: false\n  postbottom:\n    enable: false\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomCenter\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n  float:\n    enable: false\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: middleRight\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n```\n<img src=\"next_youhua_needmoreshare2.png\" style=\"border:1.5px solid blue\"/>\n\n16. #### 友情链接\n位置：blog/theme/next/_config.yml\n站点浏览添加友情链接，格式：名称: url(英文“:”)。打开配置文件，搜索<font size=\"4\" color=\"red\">***Blog rolls***</font>，更改配置如下：\n```\nlinks_icon: link # 图标\nlinks_title: 友情链接 # 标题\n# links_layout: block # 链接样式 块样式\nlinks_layout: inline # 行样式\nlinks: # 内容\n google搜索: https://www.google.com\n baidu搜索: https://www.baidu.com\n pdf在线转换: https://smallpdf.com/cn\n json格式化: https://www.json.cn/\n```\n<img src=\"next_youhua_link.png\" style=\"border:1.5px solid blue\"/>\n\n18. #### 首页设置文章预览\n首页文章设置预览前言显示，有2种方式，都***share***一下。\n> 配置\n\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索<font size=\"4\" color=\"red\">***auto_excerpt***</font>，更改配置如下：\n```\nauto_excerpt:\n  enable: true\n  length: 200\n```\n设置完之后，首页预览每个markdown格式，不建议使用。\n> more\n\n在文章需要进行预览的地方，加入如下代码：\n```\n<!-- more -->\n```\n建议使用，格式、图片等不受影响。\n\n19. #### 文章首页图片展示\n首页文章设置预览用***more***去进行处理，当在预览中加入图片时，图片链接会去blog>public>images目录下去寻找对应的图片，打开文章又回去文章对应的目录>images目录下去找。\n所以，当文章预览中有图片显示的文章，在文章的目录下手动建立一个**images**文件夹，把图片分别存放在当前images文件夹以及blog>public>images文件夹下。这样就OK了。\n<img src=\"next_youhua_pic.png\" style=\"border:1.5px solid blue\"/>\n\n不过有个问题，首页如果分页显示，那么首页预览图片寻找的路径会发生改变。所以我在前面设置文章预览个数index_generator的时候设置为0，这是我的解决方法，如果大家有好的解决方案，欢迎大家留言交流。\n\n20. #### 博文添加图片查看器\n首先，下载fancybox插件，有2个版本，我选择了最新版3。\n```\ncd themes/next\ngit clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox\n```\n位置：blog/theme/next/_config.yml\n打开配置文件，搜索***fancybox***，更改配置如下：\n```\nfancybox: true\n```\nfancybox官网：https://github.com/theme-next/theme-next-fancybox3\n<img src=\"next_youhua_fangda.png\" style=\"border:1.5px solid blue\"/>\n\n21. #### 页面浏览进度\n设置页面的浏览百分比，打开配置文件，搜索<font size=\"4\" color=\"red\">***scrollpercent***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\nback2top:\n  enable: true\n  # Back to top in sidebar.\n  sidebar: false    # sitebar是否在工具栏\n  # Scroll percent label in b2t button.\n  scrollpercent: true   # 浏览进度情况\n```\n22. #### 文章额外信息展示\n在文章标题下面显示文章相关的额外信息，打开配置文件，搜索<font size=\"4\" color=\"red\">***post_meta***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\n# Post meta display settings\n# 文章创作时间、分类\npost_meta:\n  item_text: true\n  created_at: true\n  updated_at:\n    enable: true\n    another_day: true\n  categories: true\n```\n<img src=\"next_youhua_extrainfo.png\" style=\"border:1.5px solid blue\"/>\n\n23. #### 修改访问URL路径\nblog默认情况下访问URL路径为：domain/2017/08/18/title，打开配置文件，搜索<font size=\"4\" color=\"red\">***permalink***</font>，更改配置如下：\n位置：blog/_config.yml\n```\npermalink: :category/:title/\n```\n配置完，重启一下server，回到主页在进行文件查看，发现地址发生改变\n\n24. #### 设置博客favicon图标\n修改博客favicon图标，打开配置文件，搜索<font size=\"4\" color=\"red\">***apple_touch_icon***</font>，更改配置如下：\n位置：blog/theme/next/_config.yml\n```\nfavicon:\n  small: /images/favicon16.ico\n  medium: /images/favicon32.ico\n  apple_touch_icon: /images/apple-touch-icon-next.png\n  safari_pinned_tab: /images/logo.svg\n```\n\n25. #### 修改文章底部的#号标签\n打开/themes/next/layout/_macro/post.swig，搜索<font size=\"4\" color=\"red\">***rel=\"tag\">#***</font>，将#换成下列代码:\n```\n<i class=\"fa fa-tag\"></i>\n```\n\n### 注意\n- 配置完Hexo config需要重启server，next config重新刷新即可。\n\n### 学习\nhexo官方配置手册：https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\nhexo图标选取地址：https://fontawesome.com/icons\n\n### 结束\n本篇内容主要解决Hexo、Next相关config配置文件的优化，内容持续更新中，如有bugs，欢迎大家评论指出。\n待续。。。。。。（未完结）\n\n***<font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font>***\n","slug":"Hexo-Next主题优化-基础篇（Gemini）","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s3kz00hftabjp3xby9y2","content":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p><font color=\"#dd0000\"><strong><em>My blog</em></strong></font> 采用Hexo + Next搭建，搭建完之后，看页面居然还是英文，好ugly，身为一名程序猿怎么可以忍呢。在持续一个月的捣鼓中，总结出Next一些通过配置优化的点。</p>\n          </div>\n<p><img src=\"/images/article_next.png\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">ATOM</td>\n<td style=\"text-align:center\">1.34.0</td>\n<td style=\"text-align:center\">编译器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">Theme</td>\n<td style=\"text-align:center\">Gemini</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"优化Catalog\"><a href=\"#优化Catalog\" class=\"headerlink\" title=\"优化Catalog\"></a>优化Catalog</h3><ul>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">切记config文件冒号“：”后面一定要有一个空格</font></em></strong></li>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g &amp;&amp; hexo server -p 8888 –debug</font></em></strong></li>\n</ul>\n<ol>\n<li><h4 id=\"Blog站点配置\"><a href=\"#Blog站点配置\" class=\"headerlink\" title=\"Blog站点配置\"></a>Blog站点配置</h4><p>位置：blog/_config.yml<br><strong><em>hexo自带的config.yml，不是next主题的，看好了</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基本信息配置 Site</span><br><span class=\"line\">title: PyGo²</span><br><span class=\"line\">subtitle: 一个爱老婆的python程序猿。。。。。。</span><br><span class=\"line\">description: 直男，双鱼星座，现居北京，去哪儿网python开发工程师。</span><br><span class=\"line\">keywords: python</span><br><span class=\"line\">author: mingliang.gao</span><br><span class=\"line\">language: zh-CN # 🌟页面的语言设置</span><br><span class=\"line\">timezone: Asia/Shanghai #时区</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"Next风格设置\"><a href=\"#Next风格设置\" class=\"headerlink\" title=\"Next风格设置\"></a>Next风格设置</h4><p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Schemes</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes 主题风格</span><br><span class=\"line\"># scheme: Muse</span><br><span class=\"line\"># scheme: Mist</span><br><span class=\"line\">scheme: Pisces</span><br><span class=\"line\"># scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"菜单栏\"><a href=\"#菜单栏\" class=\"headerlink\" title=\"菜单栏\"></a>菜单栏</h4><p>位置：blog/theme/next/_config.yml<br>打开文件，格式：<strong><em>Key: Path || Icon</em></strong>，不想要的#禁止掉</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  archives: /archives/ || history</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || list</span><br><span class=\"line\">  movie: /categories/影视说 || film</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  # schedule: /schedule/ || calendar</span><br><span class=\"line\">  # sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  # commonweal: /404/ || heartbeat</span><br><span class=\"line\"></span><br><span class=\"line\">menu_settings:</span><br><span class=\"line\">  icons: true   # 是否显示图标</span><br><span class=\"line\">  badges: true  # 是否显示分类、标签、时间轴所包含内容个数</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"about页面\"><a href=\"#about页面\" class=\"headerlink\" title=\"about页面\"></a>about页面</h4><p>终端（mac推荐使用zsh + item2）回到blog的根目录，运行：<strong><em>hexo new page about</em></strong>，在<strong>blog/source</strong>下会自动建立about文件夹，编辑里面的index.md，配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">title: Self Introduction</span><br><span class=\"line\">date: 2018-01-01</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">type: about</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>现在可以使用atom去写关于自己的描述了（markdown语法，不知道的请自行恶补）</p>\n<ol start=\"5\">\n<li><h4 id=\"tags-catalog页面\"><a href=\"#tags-catalog页面\" class=\"headerlink\" title=\"tags/catalog页面\"></a>tags/catalog页面</h4></li>\n</ol>\n<blockquote>\n<p>Tags</p>\n</blockquote>\n<p>根目录运行：<strong><em>hexo new page tags</em></strong>，配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-03-17 13:58:44</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Catalog</p>\n</blockquote>\n<p>根目录运行：<strong><em>hexo new page tags</em></strong>，配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2019-03-17 13:58:10</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p>tags和categorise页面不用设置样式，自动生成，之所以与about页面分开，我觉得虽然建立的方式一样，但是内容根本不一个东西，每篇文章设置对应的即可，栗子如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 程序猿七夕-心心相印</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-8-13 14:19:57</span><br><span class=\"line\">updated: 2018-8-13 17:19:57</span><br><span class=\"line\">desc: 程序猿七夕-心心相印</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [python]</span><br><span class=\"line\">tags: [python]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<ol start=\"6\">\n<li><h4 id=\"设置创建文章同名文件夹\"><a href=\"#设置创建文章同名文件夹\" class=\"headerlink\" title=\"设置创建文章同名文件夹\"></a>设置创建文章同名文件夹</h4>位置：blog/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>post_asset_folder</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">default_layout: post # 默认创建文件分类</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>开启之后，在创建文章<strong><em>hexo new XXXX</em></strong>，同时也会出现一个同名的文件夹用来存放相关的图片。</p>\n<ol start=\"7\">\n<li><h4 id=\"个人头像设置\"><a href=\"#个人头像设置\" class=\"headerlink\" title=\"个人头像设置\"></a>个人头像设置</h4>设置侧边栏头像，准备好头像图片，可以是png、jpg、gif等，本人用的动态gif图片。然后，将图片放在/blog/themes/next/source/images/文件夹下。<br>位置：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>avatar</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: /images/timg.gif # 图片存放位置</span><br><span class=\"line\">rounded: true #设置图片是否为圆形，当图片为正方形时为圆，否则为正方形</span><br><span class=\"line\">opacity: 1 #图片的透明度</span><br><span class=\"line\">rotated: true #设置鼠标移到图片上是否转动</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"8\">\n<li><h4 id=\"社交栏设置\"><a href=\"#社交栏设置\" class=\"headerlink\" title=\"社交栏设置\"></a>社交栏设置</h4></li>\n</ol>\n<p>在Next主题配置文件中，搜索<font size=\"4\" color=\"red\"><strong><em>social</em></strong></font>，设置相对应的社交信息，格式：<strong>网站名: 网址 || 图标</strong>（英文“:”）。<br>图标选取地址：<a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">自选图标</a></p>\n<blockquote>\n<p>菜单栏的个人社交信息设置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/GIS90 || github</span><br><span class=\"line\">  WeiBo: https://weibo.com/u/1989571513 || weibo</span><br><span class=\"line\">  E-Mail: gaoming971366@163.com || envelope</span><br><span class=\"line\">  OsChina: https://my.oschina.net/u/2259452 || fire</span><br><span class=\"line\">  # Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>社交信息图标设置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true # 是否展示图标</span><br><span class=\"line\">  icons_only: true # 是否只展示图标</span><br><span class=\"line\">  transition: true # 一/多行格式</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li><h4 id=\"修改模版\"><a href=\"#修改模版\" class=\"headerlink\" title=\"修改模版\"></a>修改模版</h4>位置：blog/scaffolds/post.md<br>打开上述文件，修改代码如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">updated: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>title：文章标题</li>\n<li>desc：文章的简述</li>\n<li>date：文章创建时间</li>\n<li>updated：文章修改时间</li>\n<li>categories：文章分类</li>\n<li>tags：文章标签</li>\n<li>comments：是否启用评论功能，默认关闭</li>\n</ul>\n<ol start=\"10\">\n<li><h4 id=\"代码添加复制功能\"><a href=\"#代码添加复制功能\" class=\"headerlink\" title=\"代码添加复制功能\"></a>代码添加复制功能</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Button</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  border_radius: 0 # 复制功能button边框</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true # 是否启用复制功能呢</span><br><span class=\"line\">    show_result: true # 是否显示复制结果</span><br><span class=\"line\">    style: # 设置flat，样式超难看</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>默认按钮显示<strong>复制</strong>，若是想改为英文<strong>copy</strong>，打开blog/themes/next/languages/zh-CN.yml文件中，将下面部分改了即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy_button: 复制</span><br><span class=\"line\">copy_success: 复制成功</span><br><span class=\"line\">copy_failure: 复制失败</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_copy.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"11\">\n<li><h4 id=\"文章设置打赏\"><a href=\"#文章设置打赏\" class=\"headerlink\" title=\"文章设置打赏\"></a>文章设置打赏</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>reward_settings</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reward_settings:</span><br><span class=\"line\">  enable: true # 是否启用打赏功能</span><br><span class=\"line\">  animation: true # 支付名称支付有动画效果</span><br><span class=\"line\">  comment: 觉得有帮助，欢迎打赏 # 贡献说明</span><br><span class=\"line\"></span><br><span class=\"line\">reward:</span><br><span class=\"line\">  wechatpay: /images/wechatpay.png # 微信</span><br><span class=\"line\">  alipay: /images/alipay.png # 支付宝</span><br><span class=\"line\">  # bitcoin: /images/bitcoin.png # 比特币</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_pay.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"12\">\n<li><h4 id=\"footer设置\"><a href=\"#footer设置\" class=\"headerlink\" title=\"footer设置\"></a>footer设置</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>footer</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">footer:</span><br><span class=\"line\">  # 底部user图标</span><br><span class=\"line\">  icon:</span><br><span class=\"line\">    name: user-circle # icon名称</span><br><span class=\"line\">    animated: true # 是否启用动画效果</span><br><span class=\"line\">    color: &quot;#FF0000&quot; # 图标颜色</span><br><span class=\"line\"></span><br><span class=\"line\">  copyright: # 底部hexo版本信息显示设置</span><br><span class=\"line\">  powered:</span><br><span class=\"line\">    enable: false # 是否显示hexo版本信息</span><br><span class=\"line\">    version: true</span><br><span class=\"line\"></span><br><span class=\"line\">  theme: # 底部hexo版本信息显示设置</span><br><span class=\"line\">    enable: false # 是否显示next版本信息</span><br><span class=\"line\">    version: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>图标选取地址：<a href=\"https://fontawesome.com/v4.7.0/icons/\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/v4.7.0/icons/</a><br><img src=\"next_youhua_footer.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"13\">\n<li><h4 id=\"访问人数和总访问量\"><a href=\"#访问人数和总访问量\" class=\"headerlink\" title=\"访问人数和总访问量\"></a>访问人数和总访问量</h4><p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>busuanzi_count</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  enable: true # 是否启用统计功能</span><br><span class=\"line\">  total_visitors: false # 网站总的访问人数，底部展示</span><br><span class=\"line\">  total_visitors_icon: user # 网站总的访问人数icon</span><br><span class=\"line\">  total_views: false # 网站总的访问次数，底部展示</span><br><span class=\"line\">  total_views_icon: eye # 网站总的访问次数icon</span><br><span class=\"line\">  post_views: true # 阅读次数，文章标题下展示</span><br><span class=\"line\">  post_views_icon: eye # 阅读次数icon</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"动态背景Canvas\"><a href=\"#动态背景Canvas\" class=\"headerlink\" title=\"动态背景Canvas\"></a>动态背景Canvas</h4><p>位置：blog/theme/next/_config.yml<br>canvas-nest：<a href=\"https://github.com/theme-next/theme-next-canvas-nest\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-canvas-nest</a><br>three_waves：<a href=\"https://github.com/theme-next/theme-next-three\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-three</a><br>具体步骤github上有详解<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Canvas-nest</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest 背景效果</span><br><span class=\"line\">canvas_nest:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: false # display on mobile or not</span><br><span class=\"line\">  color: &quot;0,0,255&quot; # RGB values, use &apos;,&apos; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 199 # the number of lines</span><br><span class=\"line\"></span><br><span class=\"line\"># JavaScript 3D library.</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-three</span><br><span class=\"line\"># three_waves 背景效果</span><br><span class=\"line\">three_waves: false</span><br><span class=\"line\"># canvas_lines</span><br><span class=\"line\">canvas_lines: false</span><br><span class=\"line\"># canvas_sphere</span><br><span class=\"line\">canvas_sphere: false</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>特别指出three_waves配置只能选取一个，而且开启canvas-nest，three_waves之后，页面渲染的时间变长了，而且发现内存，cpu的使用率也加大了，所以我只开启了canvas-nest，根据自己的需求进行配置。<br><img src=\"next_youhua_bg.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"15\">\n<li><h4 id=\"文章第三方分享\"><a href=\"#文章第三方分享\" class=\"headerlink\" title=\"文章第三方分享\"></a>文章第三方分享</h4></li>\n</ol>\n<blockquote>\n<p>分享插件：baidushare</p>\n</blockquote>\n<p>文章添加<strong><em>新浪、微信、贴吧</em></strong>等国内第三方分享，关于位置有<strong>button | slide</strong>2种选择。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>baidushare</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidushare:</span><br><span class=\"line\">  type: button</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_baidushare.png\" style=\"border:1.5px solid blue\"></p>\n<blockquote>\n<p>分享插件：likely</p>\n</blockquote>\n<p>文章添加<strong><em>twitter、facebook、linkedin</em></strong>等国际第三方分享，有需要的同学可以开启此功能。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>likely</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">likely:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  look: normal # available values: normal, light, small, big</span><br><span class=\"line\">  networks:</span><br><span class=\"line\">    twitter: Tweet</span><br><span class=\"line\">    facebook: Share</span><br><span class=\"line\">    linkedin: Link</span><br><span class=\"line\">    gplus: Plus</span><br><span class=\"line\">    vkontakte: Share</span><br><span class=\"line\">    odnoklassniki: Class</span><br><span class=\"line\">    telegram: Send</span><br><span class=\"line\">    whatsapp: Send</span><br><span class=\"line\">    pinterest: Pin</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_likely.png\" style=\"border:1.5px solid blue\"></p>\n<blockquote>\n<p>分享插件：NeedMoreShare2</p>\n</blockquote>\n<p>配置文件新增了综合国内、国际分享，也是可以设置底部、侧边2种位置。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>NeedMoreShare2</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">needmoreshare2:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  postbottom:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    options:</span><br><span class=\"line\">      iconStyle: box</span><br><span class=\"line\">      boxForm: horizontal</span><br><span class=\"line\">      position: bottomCenter</span><br><span class=\"line\">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class=\"line\">  float:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    options:</span><br><span class=\"line\">      iconStyle: box</span><br><span class=\"line\">      boxForm: horizontal</span><br><span class=\"line\">      position: middleRight</span><br><span class=\"line\">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_needmoreshare2.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"16\">\n<li><h4 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h4>位置：blog/theme/next/_config.yml<br>站点浏览添加友情链接，格式：名称: url(英文“:”)。打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Blog rolls</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">links_icon: link # 图标</span><br><span class=\"line\">links_title: 友情链接 # 标题</span><br><span class=\"line\"># links_layout: block # 链接样式 块样式</span><br><span class=\"line\">links_layout: inline # 行样式</span><br><span class=\"line\">links: # 内容</span><br><span class=\"line\"> google搜索: https://www.google.com</span><br><span class=\"line\"> baidu搜索: https://www.baidu.com</span><br><span class=\"line\"> pdf在线转换: https://smallpdf.com/cn</span><br><span class=\"line\"> json格式化: https://www.json.cn/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_link.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"18\">\n<li><h4 id=\"首页设置文章预览\"><a href=\"#首页设置文章预览\" class=\"headerlink\" title=\"首页设置文章预览\"></a>首页设置文章预览</h4>首页文章设置预览前言显示，有2种方式，都<strong><em>share</em></strong>一下。<blockquote>\n<p>配置</p>\n</blockquote>\n</li>\n</ol>\n<p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>auto_excerpt</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  length: 200</span><br></pre></td></tr></table></figure></p>\n<p>设置完之后，首页预览每个markdown格式，不建议使用。</p>\n<blockquote>\n<p>more</p>\n</blockquote>\n<p>在文章需要进行预览的地方，加入如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></p>\n<p>建议使用，格式、图片等不受影响。</p>\n<ol start=\"19\">\n<li><h4 id=\"文章首页图片展示\"><a href=\"#文章首页图片展示\" class=\"headerlink\" title=\"文章首页图片展示\"></a>文章首页图片展示</h4>首页文章设置预览用<strong><em>more</em></strong>去进行处理，当在预览中加入图片时，图片链接会去blog&gt;public&gt;images目录下去寻找对应的图片，打开文章又回去文章对应的目录&gt;images目录下去找。<br>所以，当文章预览中有图片显示的文章，在文章的目录下手动建立一个<strong>images</strong>文件夹，把图片分别存放在当前images文件夹以及blog&gt;public&gt;images文件夹下。这样就OK了。<br><img src=\"next_youhua_pic.png\" style=\"border:1.5px solid blue\"></li>\n</ol>\n<p>不过有个问题，首页如果分页显示，那么首页预览图片寻找的路径会发生改变。所以我在前面设置文章预览个数index_generator的时候设置为0，这是我的解决方法，如果大家有好的解决方案，欢迎大家留言交流。</p>\n<ol start=\"20\">\n<li><h4 id=\"博文添加图片查看器\"><a href=\"#博文添加图片查看器\" class=\"headerlink\" title=\"博文添加图片查看器\"></a>博文添加图片查看器</h4>首先，下载fancybox插件，有2个版本，我选择了最新版3。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<strong><em>fancybox</em></strong>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fancybox: true</span><br></pre></td></tr></table></figure></p>\n<p>fancybox官网：<a href=\"https://github.com/theme-next/theme-next-fancybox3\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-fancybox3</a><br><img src=\"next_youhua_fangda.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"21\">\n<li><h4 id=\"页面浏览进度\"><a href=\"#页面浏览进度\" class=\"headerlink\" title=\"页面浏览进度\"></a>页面浏览进度</h4><p>设置页面的浏览百分比，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>scrollpercent</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">back2top:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Back to top in sidebar.</span><br><span class=\"line\">  sidebar: false    # sitebar是否在工具栏</span><br><span class=\"line\">  # Scroll percent label in b2t button.</span><br><span class=\"line\">  scrollpercent: true   # 浏览进度情况</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"文章额外信息展示\"><a href=\"#文章额外信息展示\" class=\"headerlink\" title=\"文章额外信息展示\"></a>文章额外信息展示</h4><p>在文章标题下面显示文章相关的额外信息，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>post_meta</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Post meta display settings</span><br><span class=\"line\"># 文章创作时间、分类</span><br><span class=\"line\">post_meta:</span><br><span class=\"line\">  item_text: true</span><br><span class=\"line\">  created_at: true</span><br><span class=\"line\">  updated_at:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    another_day: true</span><br><span class=\"line\">  categories: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_extrainfo.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"23\">\n<li><h4 id=\"修改访问URL路径\"><a href=\"#修改访问URL路径\" class=\"headerlink\" title=\"修改访问URL路径\"></a>修改访问URL路径</h4>blog默认情况下访问URL路径为：domain/2017/08/18/title，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改配置如下：<br>位置：blog/_config.yml<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: :category/:title/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>配置完，重启一下server，回到主页在进行文件查看，发现地址发生改变</p>\n<ol start=\"24\">\n<li><h4 id=\"设置博客favicon图标\"><a href=\"#设置博客favicon图标\" class=\"headerlink\" title=\"设置博客favicon图标\"></a>设置博客favicon图标</h4><p>修改博客favicon图标，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>apple_touch_icon</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/favicon16.ico</span><br><span class=\"line\">  medium: /images/favicon32.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"修改文章底部的-号标签\"><a href=\"#修改文章底部的-号标签\" class=\"headerlink\" title=\"修改文章底部的#号标签\"></a>修改文章底部的#号标签</h4><p>打开/themes/next/layout/_macro/post.swig，搜索<font size=\"4\" color=\"red\"><strong><em>rel=”tag”&gt;#</em></strong></font>，将#换成下列代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ul>\n<li>配置完Hexo config需要重启server，next config重新刷新即可。</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>hexo官方配置手册：<a href=\"https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo-guide.readthedocs.io/zh_CN/latest/index.html</a><br>hexo图标选取地址：<a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/icons</a></p>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>本篇内容主要解决Hexo、Next相关config配置文件的优化，内容持续更新中，如有bugs，欢迎大家评论指出。<br>待续。。。。。。（未完结）</p>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font></em></strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"问题简述\"><a href=\"#问题简述\" class=\"headerlink\" title=\"问题简述\"></a>问题简述</h3><div class=\"note success\">\n            <p><font color=\"#dd0000\"><strong><em>My blog</em></strong></font> 采用Hexo + Next搭建，搭建完之后，看页面居然还是英文，好ugly，身为一名程序猿怎么可以忍呢。在持续一个月的捣鼓中，总结出Next一些通过配置优化的点。</p>\n          </div>\n<p><img src=\"/images/article_next.png\" alt></p>","more":"<hr>\n\n<h3 id=\"版本信息\"><a href=\"#版本信息\" class=\"headerlink\" title=\"版本信息\"></a>版本信息</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">version</th>\n<th style=\"text-align:center\">remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hexo</td>\n<td style=\"text-align:center\">v3.8.0</td>\n<td style=\"text-align:center\">系统版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">NextT.Pisces</td>\n<td style=\"text-align:center\">v7.0.1</td>\n<td style=\"text-align:center\">主题版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">ATOM</td>\n<td style=\"text-align:center\">1.34.0</td>\n<td style=\"text-align:center\">编译器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">Theme</td>\n<td style=\"text-align:center\">Gemini</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"优化Catalog\"><a href=\"#优化Catalog\" class=\"headerlink\" title=\"优化Catalog\"></a>优化Catalog</h3><ul>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">切记config文件冒号“：”后面一定要有一个空格</font></em></strong></li>\n<li><strong><em><font color=\"#dd0000\" size=\"5\">修改后重启服务：hexo g &amp;&amp; hexo server -p 8888 –debug</font></em></strong></li>\n</ul>\n<ol>\n<li><h4 id=\"Blog站点配置\"><a href=\"#Blog站点配置\" class=\"headerlink\" title=\"Blog站点配置\"></a>Blog站点配置</h4><p>位置：blog/_config.yml<br><strong><em>hexo自带的config.yml，不是next主题的，看好了</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基本信息配置 Site</span><br><span class=\"line\">title: PyGo²</span><br><span class=\"line\">subtitle: 一个爱老婆的python程序猿。。。。。。</span><br><span class=\"line\">description: 直男，双鱼星座，现居北京，去哪儿网python开发工程师。</span><br><span class=\"line\">keywords: python</span><br><span class=\"line\">author: mingliang.gao</span><br><span class=\"line\">language: zh-CN # 🌟页面的语言设置</span><br><span class=\"line\">timezone: Asia/Shanghai #时区</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"Next风格设置\"><a href=\"#Next风格设置\" class=\"headerlink\" title=\"Next风格设置\"></a>Next风格设置</h4><p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Schemes</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes 主题风格</span><br><span class=\"line\"># scheme: Muse</span><br><span class=\"line\"># scheme: Mist</span><br><span class=\"line\">scheme: Pisces</span><br><span class=\"line\"># scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"菜单栏\"><a href=\"#菜单栏\" class=\"headerlink\" title=\"菜单栏\"></a>菜单栏</h4><p>位置：blog/theme/next/_config.yml<br>打开文件，格式：<strong><em>Key: Path || Icon</em></strong>，不想要的#禁止掉</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  archives: /archives/ || history</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || list</span><br><span class=\"line\">  movie: /categories/影视说 || film</span><br><span class=\"line\">  messagepad: /messagepad/ || sticky-note</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  # schedule: /schedule/ || calendar</span><br><span class=\"line\">  # sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  # commonweal: /404/ || heartbeat</span><br><span class=\"line\"></span><br><span class=\"line\">menu_settings:</span><br><span class=\"line\">  icons: true   # 是否显示图标</span><br><span class=\"line\">  badges: true  # 是否显示分类、标签、时间轴所包含内容个数</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"about页面\"><a href=\"#about页面\" class=\"headerlink\" title=\"about页面\"></a>about页面</h4><p>终端（mac推荐使用zsh + item2）回到blog的根目录，运行：<strong><em>hexo new page about</em></strong>，在<strong>blog/source</strong>下会自动建立about文件夹，编辑里面的index.md，配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">layout: about</span><br><span class=\"line\">title: Self Introduction</span><br><span class=\"line\">date: 2018-01-01</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">type: about</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>现在可以使用atom去写关于自己的描述了（markdown语法，不知道的请自行恶补）</p>\n<ol start=\"5\">\n<li><h4 id=\"tags-catalog页面\"><a href=\"#tags-catalog页面\" class=\"headerlink\" title=\"tags/catalog页面\"></a>tags/catalog页面</h4></li>\n</ol>\n<blockquote>\n<p>Tags</p>\n</blockquote>\n<p>根目录运行：<strong><em>hexo new page tags</em></strong>，配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-03-17 13:58:44</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Catalog</p>\n</blockquote>\n<p>根目录运行：<strong><em>hexo new page tags</em></strong>，配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2019-03-17 13:58:10</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p>tags和categorise页面不用设置样式，自动生成，之所以与about页面分开，我觉得虽然建立的方式一样，但是内容根本不一个东西，每篇文章设置对应的即可，栗子如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 程序猿七夕-心心相印</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">date: 2018-8-13 14:19:57</span><br><span class=\"line\">updated: 2018-8-13 17:19:57</span><br><span class=\"line\">desc: 程序猿七夕-心心相印</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - [python]</span><br><span class=\"line\">tags: [python]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<ol start=\"6\">\n<li><h4 id=\"设置创建文章同名文件夹\"><a href=\"#设置创建文章同名文件夹\" class=\"headerlink\" title=\"设置创建文章同名文件夹\"></a>设置创建文章同名文件夹</h4>位置：blog/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>post_asset_folder</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">default_layout: post # 默认创建文件分类</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>开启之后，在创建文章<strong><em>hexo new XXXX</em></strong>，同时也会出现一个同名的文件夹用来存放相关的图片。</p>\n<ol start=\"7\">\n<li><h4 id=\"个人头像设置\"><a href=\"#个人头像设置\" class=\"headerlink\" title=\"个人头像设置\"></a>个人头像设置</h4>设置侧边栏头像，准备好头像图片，可以是png、jpg、gif等，本人用的动态gif图片。然后，将图片放在/blog/themes/next/source/images/文件夹下。<br>位置：blog/theme/next/_config.yml，搜索<font size=\"4\" color=\"red\"><strong><em>avatar</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: /images/timg.gif # 图片存放位置</span><br><span class=\"line\">rounded: true #设置图片是否为圆形，当图片为正方形时为圆，否则为正方形</span><br><span class=\"line\">opacity: 1 #图片的透明度</span><br><span class=\"line\">rotated: true #设置鼠标移到图片上是否转动</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_avatar.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"8\">\n<li><h4 id=\"社交栏设置\"><a href=\"#社交栏设置\" class=\"headerlink\" title=\"社交栏设置\"></a>社交栏设置</h4></li>\n</ol>\n<p>在Next主题配置文件中，搜索<font size=\"4\" color=\"red\"><strong><em>social</em></strong></font>，设置相对应的社交信息，格式：<strong>网站名: 网址 || 图标</strong>（英文“:”）。<br>图标选取地址：<a href=\"https://fontawesome.com/cheatsheet?from=io\" target=\"_blank\" rel=\"noopener\">自选图标</a></p>\n<blockquote>\n<p>菜单栏的个人社交信息设置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social:</span><br><span class=\"line\">  GitHub: https://github.com/GIS90 || github</span><br><span class=\"line\">  WeiBo: https://weibo.com/u/1989571513 || weibo</span><br><span class=\"line\">  E-Mail: gaoming971366@163.com || envelope</span><br><span class=\"line\">  OsChina: https://my.oschina.net/u/2259452 || fire</span><br><span class=\"line\">  # Google: https://plus.google.com/yourname || google</span><br><span class=\"line\">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class=\"line\">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class=\"line\">  #VK Group: https://vk.com/yourname || vk</span><br><span class=\"line\">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class=\"line\">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class=\"line\">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class=\"line\">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>社交信息图标设置</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">social_icons:</span><br><span class=\"line\">  enable: true # 是否展示图标</span><br><span class=\"line\">  icons_only: true # 是否只展示图标</span><br><span class=\"line\">  transition: true # 一/多行格式</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li><h4 id=\"修改模版\"><a href=\"#修改模版\" class=\"headerlink\" title=\"修改模版\"></a>修改模版</h4>位置：blog/scaffolds/post.md<br>打开上述文件，修改代码如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">desc:</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">updated: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>title：文章标题</li>\n<li>desc：文章的简述</li>\n<li>date：文章创建时间</li>\n<li>updated：文章修改时间</li>\n<li>categories：文章分类</li>\n<li>tags：文章标签</li>\n<li>comments：是否启用评论功能，默认关闭</li>\n</ul>\n<ol start=\"10\">\n<li><h4 id=\"代码添加复制功能\"><a href=\"#代码添加复制功能\" class=\"headerlink\" title=\"代码添加复制功能\"></a>代码添加复制功能</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Button</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  border_radius: 0 # 复制功能button边框</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    enable: true # 是否启用复制功能呢</span><br><span class=\"line\">    show_result: true # 是否显示复制结果</span><br><span class=\"line\">    style: # 设置flat，样式超难看</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>默认按钮显示<strong>复制</strong>，若是想改为英文<strong>copy</strong>，打开blog/themes/next/languages/zh-CN.yml文件中，将下面部分改了即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy_button: 复制</span><br><span class=\"line\">copy_success: 复制成功</span><br><span class=\"line\">copy_failure: 复制失败</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_copy.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"11\">\n<li><h4 id=\"文章设置打赏\"><a href=\"#文章设置打赏\" class=\"headerlink\" title=\"文章设置打赏\"></a>文章设置打赏</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>reward_settings</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reward_settings:</span><br><span class=\"line\">  enable: true # 是否启用打赏功能</span><br><span class=\"line\">  animation: true # 支付名称支付有动画效果</span><br><span class=\"line\">  comment: 觉得有帮助，欢迎打赏 # 贡献说明</span><br><span class=\"line\"></span><br><span class=\"line\">reward:</span><br><span class=\"line\">  wechatpay: /images/wechatpay.png # 微信</span><br><span class=\"line\">  alipay: /images/alipay.png # 支付宝</span><br><span class=\"line\">  # bitcoin: /images/bitcoin.png # 比特币</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_pay.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"12\">\n<li><h4 id=\"footer设置\"><a href=\"#footer设置\" class=\"headerlink\" title=\"footer设置\"></a>footer设置</h4>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>footer</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">footer:</span><br><span class=\"line\">  # 底部user图标</span><br><span class=\"line\">  icon:</span><br><span class=\"line\">    name: user-circle # icon名称</span><br><span class=\"line\">    animated: true # 是否启用动画效果</span><br><span class=\"line\">    color: &quot;#FF0000&quot; # 图标颜色</span><br><span class=\"line\"></span><br><span class=\"line\">  copyright: # 底部hexo版本信息显示设置</span><br><span class=\"line\">  powered:</span><br><span class=\"line\">    enable: false # 是否显示hexo版本信息</span><br><span class=\"line\">    version: true</span><br><span class=\"line\"></span><br><span class=\"line\">  theme: # 底部hexo版本信息显示设置</span><br><span class=\"line\">    enable: false # 是否显示next版本信息</span><br><span class=\"line\">    version: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>图标选取地址：<a href=\"https://fontawesome.com/v4.7.0/icons/\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/v4.7.0/icons/</a><br><img src=\"next_youhua_footer.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"13\">\n<li><h4 id=\"访问人数和总访问量\"><a href=\"#访问人数和总访问量\" class=\"headerlink\" title=\"访问人数和总访问量\"></a>访问人数和总访问量</h4><p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>busuanzi_count</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  enable: true # 是否启用统计功能</span><br><span class=\"line\">  total_visitors: false # 网站总的访问人数，底部展示</span><br><span class=\"line\">  total_visitors_icon: user # 网站总的访问人数icon</span><br><span class=\"line\">  total_views: false # 网站总的访问次数，底部展示</span><br><span class=\"line\">  total_views_icon: eye # 网站总的访问次数icon</span><br><span class=\"line\">  post_views: true # 阅读次数，文章标题下展示</span><br><span class=\"line\">  post_views_icon: eye # 阅读次数icon</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"动态背景Canvas\"><a href=\"#动态背景Canvas\" class=\"headerlink\" title=\"动态背景Canvas\"></a>动态背景Canvas</h4><p>位置：blog/theme/next/_config.yml<br>canvas-nest：<a href=\"https://github.com/theme-next/theme-next-canvas-nest\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-canvas-nest</a><br>three_waves：<a href=\"https://github.com/theme-next/theme-next-three\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-three</a><br>具体步骤github上有详解<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Canvas-nest</em></strong></font>，更改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest 背景效果</span><br><span class=\"line\">canvas_nest:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  onmobile: false # display on mobile or not</span><br><span class=\"line\">  color: &quot;0,0,255&quot; # RGB values, use &apos;,&apos; to separate</span><br><span class=\"line\">  opacity: 0.5 # the opacity of line: 0~1</span><br><span class=\"line\">  zIndex: -1 # z-index property of the background</span><br><span class=\"line\">  count: 199 # the number of lines</span><br><span class=\"line\"></span><br><span class=\"line\"># JavaScript 3D library.</span><br><span class=\"line\"># Dependencies: https://github.com/theme-next/theme-next-three</span><br><span class=\"line\"># three_waves 背景效果</span><br><span class=\"line\">three_waves: false</span><br><span class=\"line\"># canvas_lines</span><br><span class=\"line\">canvas_lines: false</span><br><span class=\"line\"># canvas_sphere</span><br><span class=\"line\">canvas_sphere: false</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>特别指出three_waves配置只能选取一个，而且开启canvas-nest，three_waves之后，页面渲染的时间变长了，而且发现内存，cpu的使用率也加大了，所以我只开启了canvas-nest，根据自己的需求进行配置。<br><img src=\"next_youhua_bg.gif\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"15\">\n<li><h4 id=\"文章第三方分享\"><a href=\"#文章第三方分享\" class=\"headerlink\" title=\"文章第三方分享\"></a>文章第三方分享</h4></li>\n</ol>\n<blockquote>\n<p>分享插件：baidushare</p>\n</blockquote>\n<p>文章添加<strong><em>新浪、微信、贴吧</em></strong>等国内第三方分享，关于位置有<strong>button | slide</strong>2种选择。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>baidushare</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidushare:</span><br><span class=\"line\">  type: button</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_baidushare.png\" style=\"border:1.5px solid blue\"></p>\n<blockquote>\n<p>分享插件：likely</p>\n</blockquote>\n<p>文章添加<strong><em>twitter、facebook、linkedin</em></strong>等国际第三方分享，有需要的同学可以开启此功能。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>likely</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">likely:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  look: normal # available values: normal, light, small, big</span><br><span class=\"line\">  networks:</span><br><span class=\"line\">    twitter: Tweet</span><br><span class=\"line\">    facebook: Share</span><br><span class=\"line\">    linkedin: Link</span><br><span class=\"line\">    gplus: Plus</span><br><span class=\"line\">    vkontakte: Share</span><br><span class=\"line\">    odnoklassniki: Class</span><br><span class=\"line\">    telegram: Send</span><br><span class=\"line\">    whatsapp: Send</span><br><span class=\"line\">    pinterest: Pin</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_likely.png\" style=\"border:1.5px solid blue\"></p>\n<blockquote>\n<p>分享插件：NeedMoreShare2</p>\n</blockquote>\n<p>配置文件新增了综合国内、国际分享，也是可以设置底部、侧边2种位置。<br>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>NeedMoreShare2</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">needmoreshare2:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  postbottom:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    options:</span><br><span class=\"line\">      iconStyle: box</span><br><span class=\"line\">      boxForm: horizontal</span><br><span class=\"line\">      position: bottomCenter</span><br><span class=\"line\">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class=\"line\">  float:</span><br><span class=\"line\">    enable: false</span><br><span class=\"line\">    options:</span><br><span class=\"line\">      iconStyle: box</span><br><span class=\"line\">      boxForm: horizontal</span><br><span class=\"line\">      position: middleRight</span><br><span class=\"line\">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"next_youhua_needmoreshare2.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"16\">\n<li><h4 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h4>位置：blog/theme/next/_config.yml<br>站点浏览添加友情链接，格式：名称: url(英文“:”)。打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>Blog rolls</em></strong></font>，更改配置如下：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">links_icon: link # 图标</span><br><span class=\"line\">links_title: 友情链接 # 标题</span><br><span class=\"line\"># links_layout: block # 链接样式 块样式</span><br><span class=\"line\">links_layout: inline # 行样式</span><br><span class=\"line\">links: # 内容</span><br><span class=\"line\"> google搜索: https://www.google.com</span><br><span class=\"line\"> baidu搜索: https://www.baidu.com</span><br><span class=\"line\"> pdf在线转换: https://smallpdf.com/cn</span><br><span class=\"line\"> json格式化: https://www.json.cn/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_link.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"18\">\n<li><h4 id=\"首页设置文章预览\"><a href=\"#首页设置文章预览\" class=\"headerlink\" title=\"首页设置文章预览\"></a>首页设置文章预览</h4>首页文章设置预览前言显示，有2种方式，都<strong><em>share</em></strong>一下。<blockquote>\n<p>配置</p>\n</blockquote>\n</li>\n</ol>\n<p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>auto_excerpt</em></strong></font>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  length: 200</span><br></pre></td></tr></table></figure></p>\n<p>设置完之后，首页预览每个markdown格式，不建议使用。</p>\n<blockquote>\n<p>more</p>\n</blockquote>\n<p>在文章需要进行预览的地方，加入如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></p>\n<p>建议使用，格式、图片等不受影响。</p>\n<ol start=\"19\">\n<li><h4 id=\"文章首页图片展示\"><a href=\"#文章首页图片展示\" class=\"headerlink\" title=\"文章首页图片展示\"></a>文章首页图片展示</h4>首页文章设置预览用<strong><em>more</em></strong>去进行处理，当在预览中加入图片时，图片链接会去blog&gt;public&gt;images目录下去寻找对应的图片，打开文章又回去文章对应的目录&gt;images目录下去找。<br>所以，当文章预览中有图片显示的文章，在文章的目录下手动建立一个<strong>images</strong>文件夹，把图片分别存放在当前images文件夹以及blog&gt;public&gt;images文件夹下。这样就OK了。<br><img src=\"next_youhua_pic.png\" style=\"border:1.5px solid blue\"></li>\n</ol>\n<p>不过有个问题，首页如果分页显示，那么首页预览图片寻找的路径会发生改变。所以我在前面设置文章预览个数index_generator的时候设置为0，这是我的解决方法，如果大家有好的解决方案，欢迎大家留言交流。</p>\n<ol start=\"20\">\n<li><h4 id=\"博文添加图片查看器\"><a href=\"#博文添加图片查看器\" class=\"headerlink\" title=\"博文添加图片查看器\"></a>博文添加图片查看器</h4>首先，下载fancybox插件，有2个版本，我选择了最新版3。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/next</span><br><span class=\"line\">git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>位置：blog/theme/next/_config.yml<br>打开配置文件，搜索<strong><em>fancybox</em></strong>，更改配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fancybox: true</span><br></pre></td></tr></table></figure></p>\n<p>fancybox官网：<a href=\"https://github.com/theme-next/theme-next-fancybox3\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/theme-next-fancybox3</a><br><img src=\"next_youhua_fangda.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"21\">\n<li><h4 id=\"页面浏览进度\"><a href=\"#页面浏览进度\" class=\"headerlink\" title=\"页面浏览进度\"></a>页面浏览进度</h4><p>设置页面的浏览百分比，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>scrollpercent</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">back2top:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # Back to top in sidebar.</span><br><span class=\"line\">  sidebar: false    # sitebar是否在工具栏</span><br><span class=\"line\">  # Scroll percent label in b2t button.</span><br><span class=\"line\">  scrollpercent: true   # 浏览进度情况</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"文章额外信息展示\"><a href=\"#文章额外信息展示\" class=\"headerlink\" title=\"文章额外信息展示\"></a>文章额外信息展示</h4><p>在文章标题下面显示文章相关的额外信息，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>post_meta</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Post meta display settings</span><br><span class=\"line\"># 文章创作时间、分类</span><br><span class=\"line\">post_meta:</span><br><span class=\"line\">  item_text: true</span><br><span class=\"line\">  created_at: true</span><br><span class=\"line\">  updated_at:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    another_day: true</span><br><span class=\"line\">  categories: true</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"next_youhua_extrainfo.png\" style=\"border:1.5px solid blue\"></p>\n<ol start=\"23\">\n<li><h4 id=\"修改访问URL路径\"><a href=\"#修改访问URL路径\" class=\"headerlink\" title=\"修改访问URL路径\"></a>修改访问URL路径</h4>blog默认情况下访问URL路径为：domain/2017/08/18/title，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>permalink</em></strong></font>，更改配置如下：<br>位置：blog/_config.yml<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink: :category/:title/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>配置完，重启一下server，回到主页在进行文件查看，发现地址发生改变</p>\n<ol start=\"24\">\n<li><h4 id=\"设置博客favicon图标\"><a href=\"#设置博客favicon图标\" class=\"headerlink\" title=\"设置博客favicon图标\"></a>设置博客favicon图标</h4><p>修改博客favicon图标，打开配置文件，搜索<font size=\"4\" color=\"red\"><strong><em>apple_touch_icon</em></strong></font>，更改配置如下：<br>位置：blog/theme/next/_config.yml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">  small: /images/favicon16.ico</span><br><span class=\"line\">  medium: /images/favicon32.ico</span><br><span class=\"line\">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class=\"line\">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"修改文章底部的-号标签\"><a href=\"#修改文章底部的-号标签\" class=\"headerlink\" title=\"修改文章底部的#号标签\"></a>修改文章底部的#号标签</h4><p>打开/themes/next/layout/_macro/post.swig，搜索<font size=\"4\" color=\"red\"><strong><em>rel=”tag”&gt;#</em></strong></font>，将#换成下列代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ul>\n<li>配置完Hexo config需要重启server，next config重新刷新即可。</li>\n</ul>\n<h3 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h3><p>hexo官方配置手册：<a href=\"https://hexo-guide.readthedocs.io/zh_CN/latest/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo-guide.readthedocs.io/zh_CN/latest/index.html</a><br>hexo图标选取地址：<a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">https://fontawesome.com/icons</a></p>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>本篇内容主要解决Hexo、Next相关config配置文件的优化，内容持续更新中，如有bugs，欢迎大家评论指出。<br>待续。。。。。。（未完结）</p>\n<p><strong><em><font color=\"#dd0000\" size=\"5\">学会分享，一起进步</font></em></strong></p>"},{"title":"Python-YouZan数据处理小程序","comments":0,"top":false,"keywords":"python, api, 天气, 程序, YouZan, 数据, 脚本, 程序, 数据库, Excel, CSV","abbrlink":24462,"date":"2020-02-14T08:47:27.000Z","updated":"2020-02-14T08:47:27.000Z","desc":"获取YouZan的数据进行db或excel存储","_content":"\n#### 背景\n{% note primary %}\n前几天朋友找我问我能不能把人家接口数据存下来，大致需求就是获取YouZan的数据进行存储，存到excel，方便使用。花了大概2days的时间，连查询YouZan官方的API，以及对数据进行一些确认处理，写完了记录下来发布到博客，<font color='red' size=4.5>如果有需求的人，拿走不谢</font>！！！。\n{% endnote %}\n\n![](/images/article_youzan.jpeg)\n\n<!--more-->\n<hr />\n\n#### 环境\n\n| id  |  name  | Version |\n|:---:|:------:|:-------:|\n|  1  | Python |   2.7   |\n\n#### 数据流\n\n<font color='red' size=5>YouZan -> 获取数据 -> 处理数据 ->存储</font>\n\n#### 执行方法\n```\npython2 get_youzan_task.py\n```\n\n#### 存储方式\n\n```\n# 数据库\nyouzan.run(_type=1)\n# Excel\nyouzan.run(_type=2)\n```\n\n#### 代码\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n    先获取可以获取数据的token\n    以递增的频率方式进行获取全量数据\n    把数据存储到excel或者数据库\n\nusage:\n    python get_youzan.py\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2019/9/6\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n\n\ncreate table sql:\nCREATE TABLE `blog`.`client_new` (\n    `id` bigint AUTO_INCREMENT NOT NULL,\n    `created_at` timestamp NULL COMMENT '\\n成为客户的时间，时间戳格式，单位秒\\n成为客户的时间\\n成为会员的时间',\n    `is_member` tinyint COMMENT '是否是会员\\n是否是会员',\n    `name` varchar(254) COMMENT '客户姓名',\n    `show_name` varchar(254) COMMENT '推荐展示姓名',\n    `mobile` varchar(30) COMMENT '手机号',\n    `member_created_at` timestamp NULL COMMENT '\\n成为会员的时间，时间戳格式，单位秒',\n    PRIMARY KEY (`id`)\n) COMMENT='';\n\ninsert test sql:\ninsert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n            VALUES(1111111, 111111, \"2020-10-10 00:00:00\", \"1\", 1, 2000, \"测试22222\", \"测试1111\", 22222222, 123123, \"123123123123\", \"2020-10-10 00:00:00\");\n------------------------------------------------\n\"\"\"\nimport requests\nimport time\nimport os\nimport datetime\nimport pymysql\nimport xlwt\nfrom dateutil.relativedelta import relativedelta\n\n\n# 数据库设置\nDB_HOST = '212.64.61.62'\nDB_PORT = 3306\nDB_USER = 'mingliang.gao'\nDB_PWD = 'XXXXXXXXXXXX'\nDB_NAME = 'blog'\n\n\nclass YOUZAN_Client(object):\n    def __init__(self):\n        self.YOUZAN_ROOT_URL = \"https://open.youzanyun.com\"\n        self.YOUZAN_TOKEN_URL = \"https://open.youzanyun.com/auth/token\"\n        self.YOUZAN_CLIENT_URL = \"https://open.youzanyun.com/api/youzan.scrm.customer.search/3.1.2\"\n\n        # YouZan 客户端ID\n        self.CLIENT_ID = 'XXXXXX'\n        self.CLIENT_SECRET = 'XXXXXX'\n        self.GRANT_ID = 'XXXXXX'\n\n        self.TOTAL = 0\n\n        # 配置数据获取的开始时间、结束时间、排除时间\n        self.START_DATETIME = '2020-02-01 00:00:00'\n        self.END_DATETIME = '2020-02-12 10:00:00'\n        self.EXCLUDE_DATETIME = [\n            '2020-02-06 22:00:00',\n            '2020-02-06 23:00:00',\n            '2020-02-07 00:00:00',\n            '2020-02-07 01:00:00',\n            '2020-02-07 02:00:00',\n            '2020-02-07 03:00:00',\n            '2020-02-07 04:00:00',\n            '2020-02-07 05:00:00'\n        ]\n        # 配置excel字段，字段只能从返回数据list中进行选取\n        # weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at\n        self.EXCEL_FIELDS = [\"id\", \"created_at\", \"is_member\", \"name\", \"show_name\", 'mobile', 'member_created_at']\n\n        # DB数据库初始化\n        self.conn = pymysql.connect(host=DB_HOST,\n                                    port=DB_PORT,\n                                    user=DB_USER,\n                                    password=DB_PWD,\n                                    database=DB_NAME,\n                                    charset='utf8')\n\n        self.MAX_PAGE_SIZE = 50\n\n    def add_month(self, transfer_dt, num):\n        \"\"\"\n        实现时间上的月份相加\n        :param transfer_dt:\n        :param num:\n        :return:\n        \"\"\"\n        if isinstance(transfer_dt, str):\n            transfer_dt = datetime.datetime.strptime(transfer_dt, \"%Y-%m-%d %H:%M:%S\")\n        return datetime.datetime.strftime(transfer_dt + relativedelta(months=+1), \"%Y-%m-%d %H:%M:%S\")\n\n    def deal_time(self, transfer_dt, num, type='add', time_type='day'):\n        \"\"\"\n        实现时间上的天数相加相减\n        :param transfer_dt:\n        :param num:\n        :return:\n        \"\"\"\n        if type not in ['add', 'min']:\n            return None\n        if time_type not in ['days', 'hours', 'minutes', 'seconds']:\n            return None\n\n        num = num if type == 'add' else -num\n        if isinstance(transfer_dt, str):\n            transfer_dt = datetime.datetime.strptime(transfer_dt, \"%Y-%m-%d %H:%M:%S\")\n\n        if time_type == 'day':\n            return (transfer_dt + datetime.timedelta(days=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'hours':\n            return (transfer_dt + datetime.timedelta(hours=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'minutes':\n            return (transfer_dt + datetime.timedelta(minutes=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'seconds':\n            return (transfer_dt + datetime.timedelta(seconds=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    def _check_token_expire(self, token_time):\n        \"\"\"\n        check token is or expire\n        :param token_time:\n        :return:\n        \"\"\"\n        if not token_time:\n            return False, '过期时间为null'\n\n        # 获取的时间为毫秒\n        token_date_time = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(token_time/1000))\n        now_time = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n        return (True, token_date_time) if now_time < token_date_time \\\n            else (False, token_date_time)\n\n    def get_token(self):\n        \"\"\"\n        get available token from youzan\n        :return:\n        \"\"\"\n        payload = {\n            \"client_id\": self.CLIENT_ID,\n            \"client_secret\": self.CLIENT_SECRET,\n            \"authorize_type\": \"silent\",\n            \"grant_id\": self.GRANT_ID\n        }\n        headers = {\n            'Content-Type': \"application/json\",\n        }\n\n        try:\n            token_resp = requests.post(url=self.YOUZAN_TOKEN_URL,\n                                       headers=headers,\n                                       json=payload)\n            if token_resp.status_code != 200:\n                return False, 'token请求失败'\n            token_resp_json = token_resp.json()\n            if not token_resp_json:\n                return False, 'token无json数据'\n\n            is_ok = token_resp_json.get('success')\n            if not is_ok:\n                return False, 'token json success为false'\n\n            token_time = token_resp_json.get('data').get('expires')\n            is_ok, token_expires = self._check_token_expire(token_time)\n            if not is_ok:\n                return False, 'token过期：%s' % token_expires\n\n            return True, token_resp_json.get('data').get('access_token')\n        except Exception as e:\n            return False, 'token请求Exception失败: %s' % e.message\n\n    def _transfer_to_time(self, timeStamp, t_type=1):\n        \"\"\"\n        type=1 把时间戳转换成datetime str类型\n        type=2 把datetime类型/datetime str类型转换成时间戳\n\n        :param timeStamp: dateTime or timeStamp\n        :param t_type: 1 or 2\n        :return:\n        \"\"\"\n        if t_type == 2:\n            if isinstance(timeStamp, str):\n                timeStamp = time.strptime(timeStamp, \"%Y-%m-%d %H:%M:%S\")\n            return int(time.mktime(timeStamp))\n\n        if isinstance(timeStamp, str):\n            timeStamp = int(timeStamp)\n        return time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(timeStamp))\n\n    def set_style(self, name, height, bold=False):\n        style = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = name\n        font.bold = bold\n        font.color_index = 4\n        font.height = height\n        style.font = font\n        return style\n\n    def _deal_client_to_excel(self, datas):\n        \"\"\"\n        :param datas: client object to excel\n        :return: None\n        \"\"\"\n        if not datas:\n            return\n\n        f = xlwt.Workbook(encoding='utf-8')\n        sheet = f.add_sheet('sheet', cell_overwrite_ok=True)\n\n        title_style = self.set_style('Times New Roman', 220, True)\n        content_style = self.set_style('Times New Roman', 220, False)\n        # 标题\n        for i in range(0, len(self.EXCEL_FIELDS)):\n            sheet.write(0, i, self.EXCEL_FIELDS[i], title_style)\n\n        row = 1\n\n        for data in datas:\n            if not data:\n                continue\n\n            weixin_fans_id = data.get('weixin_fans_id')\n            fans_id = data.get('fans_id')\n            created_at = self._transfer_to_time(data.get('created_at')) \\\n                if data.get('created_at') else ''\n            member_created_at = self._transfer_to_time(data.get('member_created_at')) \\\n                if data.get('created_at') else ''\n            gender = data.get('gender')\n            is_member = data.get('is_member')\n            trade_count = data.get('trade_count')\n            show_name = data.get('show_name')\n            name = data.get('name')\n            yz_uid = data.get('yz_uid')\n            points = data.get('points')\n            mobile = data.get('mobile')\n\n            if isinstance(show_name, unicode):\n                show_name = show_name.encode('utf-8')\n            if isinstance(mobile, unicode):\n                mobile = mobile.encode('utf-8')\n            if isinstance(created_at, unicode):\n                created_at = created_at.encode('utf-8')\n            if isinstance(member_created_at, unicode):\n                member_created_at = member_created_at.encode('utf-8')\n            if isinstance(name, unicode):\n                name = name.encode('utf-8')\n            if isinstance(mobile, unicode):\n                mobile = mobile.encode('utf-8')\n\n            for field in self.EXCEL_FIELDS:\n                if field == 'id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), row, title_style)\n                elif field == 'weixin_fans_id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), weixin_fans_id, content_style)\n                elif field == 'fans_id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), fans_id, content_style)\n                elif field == 'created_at':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), created_at, content_style)\n                elif field == 'member_created_at':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), member_created_at, content_style)\n                elif field == 'gender':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), gender, content_style)\n                elif field == 'is_member':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), is_member, content_style)\n                elif field == 'trade_count':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), trade_count, content_style)\n                elif field == 'show_name':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), show_name, content_style)\n                elif field == 'name':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), name, content_style)\n                elif field == 'yz_uid':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), yz_uid, content_style)\n                elif field == 'points':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), points, content_style)\n                elif field == 'mobile':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), mobile, content_style)\n            row += 1\n\n        f.save('%s-%s名单.xls' % (self.START_DATETIME, self.END_DATETIME))\n\n    def _deal_client_to_db(self, data):\n        \"\"\"\n        :param data: client object to database\n        :return: None\n        \"\"\"\n        if not data:\n            return\n\n        weixin_fans_id = data.get('weixin_fans_id')\n        fans_id = data.get('fans_id')\n        created_at = self._transfer_to_time(data.get('created_at')) \\\n            if data.get('created_at') else ''\n        member_created_at = self._transfer_to_time(data.get('member_created_at')) \\\n            if data.get('created_at') else ''\n        gender = data.get('gender')\n        is_member = data.get('is_member')\n        trade_count = data.get('trade_count')\n        show_name = data.get('show_name')\n        name = data.get('name')\n        yz_uid = data.get('yz_uid')\n        points = data.get('points')\n        mobile = data.get('mobile')\n\n        if isinstance(show_name, unicode):\n            show_name = show_name.encode('utf-8')\n        if isinstance(mobile, unicode):\n            mobile = mobile.encode('utf-8')\n        if isinstance(created_at, unicode):\n            created_at = created_at.encode('utf-8')\n        if isinstance(member_created_at, unicode):\n            member_created_at = member_created_at.encode('utf-8')\n        if isinstance(name, unicode):\n            name = name.encode('utf-8')\n        if isinstance(mobile, unicode):\n            mobile = mobile.encode('utf-8')\n\n        # insert_sql = \"\"\"\n        # insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n        # VALUES(%s, %s, \"%s\", \"%s\", %s, %s, \"%s\", \"%s\", %s, %s, \"%s\", \"%s\");\n        # \"\"\" % (weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n        insert_sql = 'insert into client_new(created_at, is_member, name, show_name, mobile, member_created_at) VALUES(%s, %s, %s, %s, %s, %s);'\n        cursor = self.conn.cursor()\n        cursor.execute(insert_sql, (created_at, is_member, name, show_name, mobile, member_created_at))\n        self.conn.commit()\n        cursor.close()\n\n    def deal_client_by_token(self, token, store):\n        \"\"\"\n        main method by token\n        设置一个起始时间，每次递增加1月进行数据获取，以此方式进行all data获取\n        :param token:\n        :param store: db or excel\n        :return:\n        \"\"\"\n\n        all_datas = list()\n        end_time = self.START_DATETIME\n\n        while True:\n            start_time = end_time\n            if start_time == self.END_DATETIME:\n                break\n\n            end_time = self.deal_time(start_time, 1, 'add', 'hours')\n            # 去掉脏数据时间段\n            if start_time in self.EXCLUDE_DATETIME:\n                print '【%s】is exclude datetime' % start_time\n                continue\n\n            payload = {\n                # \"is_member\": 1,   # 是否会员\n                \"created_at_start\": self._transfer_to_time(start_time, 2),     # 成为客户的时间\n                \"created_at_end\": self._transfer_to_time(end_time, 2)     # 成为客户的时间\n            }\n            headers = {\n                'Content-Type': \"multipart/form-data\",\n            }\n            real_url = '%s?access_token=%s' % (self.YOUZAN_CLIENT_URL, token)\n            data_resp = requests.post(url=real_url,\n                                      # headers=headers,\n                                      data=payload)\n\n            if data_resp.status_code != 200:\n                print '【%s】client请求失败' % start_time\n                continue\n            resp_json_datas = data_resp.json()\n            if not resp_json_datas:\n                print '【%s】client无json数据' % start_time\n                continue\n            code = resp_json_datas.get('code')\n            if code != 200:\n                print '【%s】client code is error: %s' % (start_time, code)\n                continue\n            total = resp_json_datas.get('data').get('total')\n            if total < 1:\n                print '【%s】client json数据total: %s' % (start_time, total)\n                continue\n\n            # 特别说2 = 1 + 1，有一个page页面的1，还有一个range的1\n            page = int(total / 50) + 2\n            self.TOTAL = self.TOTAL + total\n            print '%s - %s total: %s, page: %s' \\\n                  % (start_time, end_time, total, (page - 1))\n\n            for i in range(1, page, 1):\n                print '===========%s' % i\n                sub_payload = {\n                    \"created_at_start\": self._transfer_to_time(start_time, 2),     # 成为客户的时间\n                    \"created_at_end\": self._transfer_to_time(end_time, 2),     # 成为客户的时间\n                    \"page_size\": self.MAX_PAGE_SIZE     # 每页数量，最多支持50个\n                }\n                sub_data_resp = requests.post(url=real_url,\n                                              data=sub_payload)\n                sub_resp_json_datas = sub_data_resp.json()\n                datas = sub_resp_json_datas.get('data').get('record_list')\n                for data in datas:\n                    if not data:\n                        continue\n                    self._deal_client_to_db(data) if store == 'db' \\\n                        else all_datas.append(data)\n\n        if store == 'excel':\n            self._deal_client_to_excel(all_datas)\n\n    def run(self, _type=1):\n        store = 'db' if _type == 1 else 'excel'\n        is_ok, message = self.get_token()\n        if not is_ok:\n            print 'YouZan token获取失败：【%s】' % message\n            os._exit()\n\n        print 'token: %s' % message\n        self.deal_client_by_token(message, store)\n        if store == 'db':\n            youzan.conn.close()\n        print '===================end: %s' % self.TOTAL\n\n\nif __name__ == '__main__':\n\n    youzan = YOUZAN_Client()\n    youzan.run(_type=2)\n```\n\n![](py.jpeg)\n","source":"_posts/Python-YouZan数据处理小程序.md","raw":"---\ntitle: Python-YouZan数据处理小程序\ncomments: false\ncategories:\n  - Python\ntags:\n  - Python\n  - Python程序篇\ntop: false\nkeywords: 'python, api, 天气, 程序, YouZan, 数据, 脚本, 程序, 数据库, Excel, CSV'\nabbrlink: 24462\ndate: 2020-02-14 16:47:27\nupdated: 2020-02-14 16:47:27\ndesc: 获取YouZan的数据进行db或excel存储\n---\n\n#### 背景\n{% note primary %}\n前几天朋友找我问我能不能把人家接口数据存下来，大致需求就是获取YouZan的数据进行存储，存到excel，方便使用。花了大概2days的时间，连查询YouZan官方的API，以及对数据进行一些确认处理，写完了记录下来发布到博客，<font color='red' size=4.5>如果有需求的人，拿走不谢</font>！！！。\n{% endnote %}\n\n![](/images/article_youzan.jpeg)\n\n<!--more-->\n<hr />\n\n#### 环境\n\n| id  |  name  | Version |\n|:---:|:------:|:-------:|\n|  1  | Python |   2.7   |\n\n#### 数据流\n\n<font color='red' size=5>YouZan -> 获取数据 -> 处理数据 ->存储</font>\n\n#### 执行方法\n```\npython2 get_youzan_task.py\n```\n\n#### 存储方式\n\n```\n# 数据库\nyouzan.run(_type=1)\n# Excel\nyouzan.run(_type=2)\n```\n\n#### 代码\n\n```\n# -*- coding: utf-8 -*-\n\n\"\"\"\n------------------------------------------------\ndescribe:\n    先获取可以获取数据的token\n    以递增的频率方式进行获取全量数据\n    把数据存储到excel或者数据库\n\nusage:\n    python get_youzan.py\n\n\nbase_info:\n    __version__ = \"v.10\"\n    __author__ = \"mingliang.gao\"\n    __time__ = \"2019/9/6\"\n    __mail__ = \"mingliang.gao@qunar.com\"\n\n\ncreate table sql:\nCREATE TABLE `blog`.`client_new` (\n    `id` bigint AUTO_INCREMENT NOT NULL,\n    `created_at` timestamp NULL COMMENT '\\n成为客户的时间，时间戳格式，单位秒\\n成为客户的时间\\n成为会员的时间',\n    `is_member` tinyint COMMENT '是否是会员\\n是否是会员',\n    `name` varchar(254) COMMENT '客户姓名',\n    `show_name` varchar(254) COMMENT '推荐展示姓名',\n    `mobile` varchar(30) COMMENT '手机号',\n    `member_created_at` timestamp NULL COMMENT '\\n成为会员的时间，时间戳格式，单位秒',\n    PRIMARY KEY (`id`)\n) COMMENT='';\n\ninsert test sql:\ninsert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n            VALUES(1111111, 111111, \"2020-10-10 00:00:00\", \"1\", 1, 2000, \"测试22222\", \"测试1111\", 22222222, 123123, \"123123123123\", \"2020-10-10 00:00:00\");\n------------------------------------------------\n\"\"\"\nimport requests\nimport time\nimport os\nimport datetime\nimport pymysql\nimport xlwt\nfrom dateutil.relativedelta import relativedelta\n\n\n# 数据库设置\nDB_HOST = '212.64.61.62'\nDB_PORT = 3306\nDB_USER = 'mingliang.gao'\nDB_PWD = 'XXXXXXXXXXXX'\nDB_NAME = 'blog'\n\n\nclass YOUZAN_Client(object):\n    def __init__(self):\n        self.YOUZAN_ROOT_URL = \"https://open.youzanyun.com\"\n        self.YOUZAN_TOKEN_URL = \"https://open.youzanyun.com/auth/token\"\n        self.YOUZAN_CLIENT_URL = \"https://open.youzanyun.com/api/youzan.scrm.customer.search/3.1.2\"\n\n        # YouZan 客户端ID\n        self.CLIENT_ID = 'XXXXXX'\n        self.CLIENT_SECRET = 'XXXXXX'\n        self.GRANT_ID = 'XXXXXX'\n\n        self.TOTAL = 0\n\n        # 配置数据获取的开始时间、结束时间、排除时间\n        self.START_DATETIME = '2020-02-01 00:00:00'\n        self.END_DATETIME = '2020-02-12 10:00:00'\n        self.EXCLUDE_DATETIME = [\n            '2020-02-06 22:00:00',\n            '2020-02-06 23:00:00',\n            '2020-02-07 00:00:00',\n            '2020-02-07 01:00:00',\n            '2020-02-07 02:00:00',\n            '2020-02-07 03:00:00',\n            '2020-02-07 04:00:00',\n            '2020-02-07 05:00:00'\n        ]\n        # 配置excel字段，字段只能从返回数据list中进行选取\n        # weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at\n        self.EXCEL_FIELDS = [\"id\", \"created_at\", \"is_member\", \"name\", \"show_name\", 'mobile', 'member_created_at']\n\n        # DB数据库初始化\n        self.conn = pymysql.connect(host=DB_HOST,\n                                    port=DB_PORT,\n                                    user=DB_USER,\n                                    password=DB_PWD,\n                                    database=DB_NAME,\n                                    charset='utf8')\n\n        self.MAX_PAGE_SIZE = 50\n\n    def add_month(self, transfer_dt, num):\n        \"\"\"\n        实现时间上的月份相加\n        :param transfer_dt:\n        :param num:\n        :return:\n        \"\"\"\n        if isinstance(transfer_dt, str):\n            transfer_dt = datetime.datetime.strptime(transfer_dt, \"%Y-%m-%d %H:%M:%S\")\n        return datetime.datetime.strftime(transfer_dt + relativedelta(months=+1), \"%Y-%m-%d %H:%M:%S\")\n\n    def deal_time(self, transfer_dt, num, type='add', time_type='day'):\n        \"\"\"\n        实现时间上的天数相加相减\n        :param transfer_dt:\n        :param num:\n        :return:\n        \"\"\"\n        if type not in ['add', 'min']:\n            return None\n        if time_type not in ['days', 'hours', 'minutes', 'seconds']:\n            return None\n\n        num = num if type == 'add' else -num\n        if isinstance(transfer_dt, str):\n            transfer_dt = datetime.datetime.strptime(transfer_dt, \"%Y-%m-%d %H:%M:%S\")\n\n        if time_type == 'day':\n            return (transfer_dt + datetime.timedelta(days=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'hours':\n            return (transfer_dt + datetime.timedelta(hours=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'minutes':\n            return (transfer_dt + datetime.timedelta(minutes=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n        elif time_type == 'seconds':\n            return (transfer_dt + datetime.timedelta(seconds=num)).strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    def _check_token_expire(self, token_time):\n        \"\"\"\n        check token is or expire\n        :param token_time:\n        :return:\n        \"\"\"\n        if not token_time:\n            return False, '过期时间为null'\n\n        # 获取的时间为毫秒\n        token_date_time = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(token_time/1000))\n        now_time = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n        return (True, token_date_time) if now_time < token_date_time \\\n            else (False, token_date_time)\n\n    def get_token(self):\n        \"\"\"\n        get available token from youzan\n        :return:\n        \"\"\"\n        payload = {\n            \"client_id\": self.CLIENT_ID,\n            \"client_secret\": self.CLIENT_SECRET,\n            \"authorize_type\": \"silent\",\n            \"grant_id\": self.GRANT_ID\n        }\n        headers = {\n            'Content-Type': \"application/json\",\n        }\n\n        try:\n            token_resp = requests.post(url=self.YOUZAN_TOKEN_URL,\n                                       headers=headers,\n                                       json=payload)\n            if token_resp.status_code != 200:\n                return False, 'token请求失败'\n            token_resp_json = token_resp.json()\n            if not token_resp_json:\n                return False, 'token无json数据'\n\n            is_ok = token_resp_json.get('success')\n            if not is_ok:\n                return False, 'token json success为false'\n\n            token_time = token_resp_json.get('data').get('expires')\n            is_ok, token_expires = self._check_token_expire(token_time)\n            if not is_ok:\n                return False, 'token过期：%s' % token_expires\n\n            return True, token_resp_json.get('data').get('access_token')\n        except Exception as e:\n            return False, 'token请求Exception失败: %s' % e.message\n\n    def _transfer_to_time(self, timeStamp, t_type=1):\n        \"\"\"\n        type=1 把时间戳转换成datetime str类型\n        type=2 把datetime类型/datetime str类型转换成时间戳\n\n        :param timeStamp: dateTime or timeStamp\n        :param t_type: 1 or 2\n        :return:\n        \"\"\"\n        if t_type == 2:\n            if isinstance(timeStamp, str):\n                timeStamp = time.strptime(timeStamp, \"%Y-%m-%d %H:%M:%S\")\n            return int(time.mktime(timeStamp))\n\n        if isinstance(timeStamp, str):\n            timeStamp = int(timeStamp)\n        return time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(timeStamp))\n\n    def set_style(self, name, height, bold=False):\n        style = xlwt.XFStyle()\n        font = xlwt.Font()\n        font.name = name\n        font.bold = bold\n        font.color_index = 4\n        font.height = height\n        style.font = font\n        return style\n\n    def _deal_client_to_excel(self, datas):\n        \"\"\"\n        :param datas: client object to excel\n        :return: None\n        \"\"\"\n        if not datas:\n            return\n\n        f = xlwt.Workbook(encoding='utf-8')\n        sheet = f.add_sheet('sheet', cell_overwrite_ok=True)\n\n        title_style = self.set_style('Times New Roman', 220, True)\n        content_style = self.set_style('Times New Roman', 220, False)\n        # 标题\n        for i in range(0, len(self.EXCEL_FIELDS)):\n            sheet.write(0, i, self.EXCEL_FIELDS[i], title_style)\n\n        row = 1\n\n        for data in datas:\n            if not data:\n                continue\n\n            weixin_fans_id = data.get('weixin_fans_id')\n            fans_id = data.get('fans_id')\n            created_at = self._transfer_to_time(data.get('created_at')) \\\n                if data.get('created_at') else ''\n            member_created_at = self._transfer_to_time(data.get('member_created_at')) \\\n                if data.get('created_at') else ''\n            gender = data.get('gender')\n            is_member = data.get('is_member')\n            trade_count = data.get('trade_count')\n            show_name = data.get('show_name')\n            name = data.get('name')\n            yz_uid = data.get('yz_uid')\n            points = data.get('points')\n            mobile = data.get('mobile')\n\n            if isinstance(show_name, unicode):\n                show_name = show_name.encode('utf-8')\n            if isinstance(mobile, unicode):\n                mobile = mobile.encode('utf-8')\n            if isinstance(created_at, unicode):\n                created_at = created_at.encode('utf-8')\n            if isinstance(member_created_at, unicode):\n                member_created_at = member_created_at.encode('utf-8')\n            if isinstance(name, unicode):\n                name = name.encode('utf-8')\n            if isinstance(mobile, unicode):\n                mobile = mobile.encode('utf-8')\n\n            for field in self.EXCEL_FIELDS:\n                if field == 'id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), row, title_style)\n                elif field == 'weixin_fans_id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), weixin_fans_id, content_style)\n                elif field == 'fans_id':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), fans_id, content_style)\n                elif field == 'created_at':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), created_at, content_style)\n                elif field == 'member_created_at':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), member_created_at, content_style)\n                elif field == 'gender':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), gender, content_style)\n                elif field == 'is_member':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), is_member, content_style)\n                elif field == 'trade_count':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), trade_count, content_style)\n                elif field == 'show_name':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), show_name, content_style)\n                elif field == 'name':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), name, content_style)\n                elif field == 'yz_uid':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), yz_uid, content_style)\n                elif field == 'points':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), points, content_style)\n                elif field == 'mobile':\n                    sheet.write(row, self.EXCEL_FIELDS.index(field), mobile, content_style)\n            row += 1\n\n        f.save('%s-%s名单.xls' % (self.START_DATETIME, self.END_DATETIME))\n\n    def _deal_client_to_db(self, data):\n        \"\"\"\n        :param data: client object to database\n        :return: None\n        \"\"\"\n        if not data:\n            return\n\n        weixin_fans_id = data.get('weixin_fans_id')\n        fans_id = data.get('fans_id')\n        created_at = self._transfer_to_time(data.get('created_at')) \\\n            if data.get('created_at') else ''\n        member_created_at = self._transfer_to_time(data.get('member_created_at')) \\\n            if data.get('created_at') else ''\n        gender = data.get('gender')\n        is_member = data.get('is_member')\n        trade_count = data.get('trade_count')\n        show_name = data.get('show_name')\n        name = data.get('name')\n        yz_uid = data.get('yz_uid')\n        points = data.get('points')\n        mobile = data.get('mobile')\n\n        if isinstance(show_name, unicode):\n            show_name = show_name.encode('utf-8')\n        if isinstance(mobile, unicode):\n            mobile = mobile.encode('utf-8')\n        if isinstance(created_at, unicode):\n            created_at = created_at.encode('utf-8')\n        if isinstance(member_created_at, unicode):\n            member_created_at = member_created_at.encode('utf-8')\n        if isinstance(name, unicode):\n            name = name.encode('utf-8')\n        if isinstance(mobile, unicode):\n            mobile = mobile.encode('utf-8')\n\n        # insert_sql = \"\"\"\n        # insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n        # VALUES(%s, %s, \"%s\", \"%s\", %s, %s, \"%s\", \"%s\", %s, %s, \"%s\", \"%s\");\n        # \"\"\" % (weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)\n        insert_sql = 'insert into client_new(created_at, is_member, name, show_name, mobile, member_created_at) VALUES(%s, %s, %s, %s, %s, %s);'\n        cursor = self.conn.cursor()\n        cursor.execute(insert_sql, (created_at, is_member, name, show_name, mobile, member_created_at))\n        self.conn.commit()\n        cursor.close()\n\n    def deal_client_by_token(self, token, store):\n        \"\"\"\n        main method by token\n        设置一个起始时间，每次递增加1月进行数据获取，以此方式进行all data获取\n        :param token:\n        :param store: db or excel\n        :return:\n        \"\"\"\n\n        all_datas = list()\n        end_time = self.START_DATETIME\n\n        while True:\n            start_time = end_time\n            if start_time == self.END_DATETIME:\n                break\n\n            end_time = self.deal_time(start_time, 1, 'add', 'hours')\n            # 去掉脏数据时间段\n            if start_time in self.EXCLUDE_DATETIME:\n                print '【%s】is exclude datetime' % start_time\n                continue\n\n            payload = {\n                # \"is_member\": 1,   # 是否会员\n                \"created_at_start\": self._transfer_to_time(start_time, 2),     # 成为客户的时间\n                \"created_at_end\": self._transfer_to_time(end_time, 2)     # 成为客户的时间\n            }\n            headers = {\n                'Content-Type': \"multipart/form-data\",\n            }\n            real_url = '%s?access_token=%s' % (self.YOUZAN_CLIENT_URL, token)\n            data_resp = requests.post(url=real_url,\n                                      # headers=headers,\n                                      data=payload)\n\n            if data_resp.status_code != 200:\n                print '【%s】client请求失败' % start_time\n                continue\n            resp_json_datas = data_resp.json()\n            if not resp_json_datas:\n                print '【%s】client无json数据' % start_time\n                continue\n            code = resp_json_datas.get('code')\n            if code != 200:\n                print '【%s】client code is error: %s' % (start_time, code)\n                continue\n            total = resp_json_datas.get('data').get('total')\n            if total < 1:\n                print '【%s】client json数据total: %s' % (start_time, total)\n                continue\n\n            # 特别说2 = 1 + 1，有一个page页面的1，还有一个range的1\n            page = int(total / 50) + 2\n            self.TOTAL = self.TOTAL + total\n            print '%s - %s total: %s, page: %s' \\\n                  % (start_time, end_time, total, (page - 1))\n\n            for i in range(1, page, 1):\n                print '===========%s' % i\n                sub_payload = {\n                    \"created_at_start\": self._transfer_to_time(start_time, 2),     # 成为客户的时间\n                    \"created_at_end\": self._transfer_to_time(end_time, 2),     # 成为客户的时间\n                    \"page_size\": self.MAX_PAGE_SIZE     # 每页数量，最多支持50个\n                }\n                sub_data_resp = requests.post(url=real_url,\n                                              data=sub_payload)\n                sub_resp_json_datas = sub_data_resp.json()\n                datas = sub_resp_json_datas.get('data').get('record_list')\n                for data in datas:\n                    if not data:\n                        continue\n                    self._deal_client_to_db(data) if store == 'db' \\\n                        else all_datas.append(data)\n\n        if store == 'excel':\n            self._deal_client_to_excel(all_datas)\n\n    def run(self, _type=1):\n        store = 'db' if _type == 1 else 'excel'\n        is_ok, message = self.get_token()\n        if not is_ok:\n            print 'YouZan token获取失败：【%s】' % message\n            os._exit()\n\n        print 'token: %s' % message\n        self.deal_client_by_token(message, store)\n        if store == 'db':\n            youzan.conn.close()\n        print '===================end: %s' % self.TOTAL\n\n\nif __name__ == '__main__':\n\n    youzan = YOUZAN_Client()\n    youzan.run(_type=2)\n```\n\n![](py.jpeg)\n","slug":"Python-YouZan数据处理小程序","published":1,"layout":"post","photos":[],"link":"","_id":"ckcd0s3l100hgtabjynln70pw","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>前几天朋友找我问我能不能把人家接口数据存下来，大致需求就是获取YouZan的数据进行存储，存到excel，方便使用。花了大概2days的时间，连查询YouZan官方的API，以及对数据进行一些确认处理，写完了记录下来发布到博客，<font color=\"red\" size=\"4.5\">如果有需求的人，拿走不谢</font>！！！。</p>\n          </div>\n<p><img src=\"/images/article_youzan.jpeg\" alt></p>\n<a id=\"more\"></a>\n<hr>\n\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"数据流\"><a href=\"#数据流\" class=\"headerlink\" title=\"数据流\"></a>数据流</h4><font color=\"red\" size=\"5\">YouZan -&gt; 获取数据 -&gt; 处理数据 -&gt;存储</font>\n\n<h4 id=\"执行方法\"><a href=\"#执行方法\" class=\"headerlink\" title=\"执行方法\"></a>执行方法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2 get_youzan_task.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"存储方式\"><a href=\"#存储方式\" class=\"headerlink\" title=\"存储方式\"></a>存储方式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 数据库</span><br><span class=\"line\">youzan.run(_type=1)</span><br><span class=\"line\"># Excel</span><br><span class=\"line\">youzan.run(_type=2)</span><br></pre></td></tr></table></figure>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    先获取可以获取数据的token</span><br><span class=\"line\">    以递增的频率方式进行获取全量数据</span><br><span class=\"line\">    把数据存储到excel或者数据库</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python get_youzan.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/9/6&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">create table sql:</span><br><span class=\"line\">CREATE TABLE `blog`.`client_new` (</span><br><span class=\"line\">    `id` bigint AUTO_INCREMENT NOT NULL,</span><br><span class=\"line\">    `created_at` timestamp NULL COMMENT &apos;\\n成为客户的时间，时间戳格式，单位秒\\n成为客户的时间\\n成为会员的时间&apos;,</span><br><span class=\"line\">    `is_member` tinyint COMMENT &apos;是否是会员\\n是否是会员&apos;,</span><br><span class=\"line\">    `name` varchar(254) COMMENT &apos;客户姓名&apos;,</span><br><span class=\"line\">    `show_name` varchar(254) COMMENT &apos;推荐展示姓名&apos;,</span><br><span class=\"line\">    `mobile` varchar(30) COMMENT &apos;手机号&apos;,</span><br><span class=\"line\">    `member_created_at` timestamp NULL COMMENT &apos;\\n成为会员的时间，时间戳格式，单位秒&apos;,</span><br><span class=\"line\">    PRIMARY KEY (`id`)</span><br><span class=\"line\">) COMMENT=&apos;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">insert test sql:</span><br><span class=\"line\">insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">            VALUES(1111111, 111111, &quot;2020-10-10 00:00:00&quot;, &quot;1&quot;, 1, 2000, &quot;测试22222&quot;, &quot;测试1111&quot;, 22222222, 123123, &quot;123123123123&quot;, &quot;2020-10-10 00:00:00&quot;);</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import time</span><br><span class=\"line\">import os</span><br><span class=\"line\">import datetime</span><br><span class=\"line\">import pymysql</span><br><span class=\"line\">import xlwt</span><br><span class=\"line\">from dateutil.relativedelta import relativedelta</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 数据库设置</span><br><span class=\"line\">DB_HOST = &apos;212.64.61.62&apos;</span><br><span class=\"line\">DB_PORT = 3306</span><br><span class=\"line\">DB_USER = &apos;mingliang.gao&apos;</span><br><span class=\"line\">DB_PWD = &apos;XXXXXXXXXXXX&apos;</span><br><span class=\"line\">DB_NAME = &apos;blog&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class YOUZAN_Client(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.YOUZAN_ROOT_URL = &quot;https://open.youzanyun.com&quot;</span><br><span class=\"line\">        self.YOUZAN_TOKEN_URL = &quot;https://open.youzanyun.com/auth/token&quot;</span><br><span class=\"line\">        self.YOUZAN_CLIENT_URL = &quot;https://open.youzanyun.com/api/youzan.scrm.customer.search/3.1.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        # YouZan 客户端ID</span><br><span class=\"line\">        self.CLIENT_ID = &apos;XXXXXX&apos;</span><br><span class=\"line\">        self.CLIENT_SECRET = &apos;XXXXXX&apos;</span><br><span class=\"line\">        self.GRANT_ID = &apos;XXXXXX&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        self.TOTAL = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        # 配置数据获取的开始时间、结束时间、排除时间</span><br><span class=\"line\">        self.START_DATETIME = &apos;2020-02-01 00:00:00&apos;</span><br><span class=\"line\">        self.END_DATETIME = &apos;2020-02-12 10:00:00&apos;</span><br><span class=\"line\">        self.EXCLUDE_DATETIME = [</span><br><span class=\"line\">            &apos;2020-02-06 22:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-06 23:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 00:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 01:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 02:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 03:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 04:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 05:00:00&apos;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        # 配置excel字段，字段只能从返回数据list中进行选取</span><br><span class=\"line\">        # weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at</span><br><span class=\"line\">        self.EXCEL_FIELDS = [&quot;id&quot;, &quot;created_at&quot;, &quot;is_member&quot;, &quot;name&quot;, &quot;show_name&quot;, &apos;mobile&apos;, &apos;member_created_at&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">        # DB数据库初始化</span><br><span class=\"line\">        self.conn = pymysql.connect(host=DB_HOST,</span><br><span class=\"line\">                                    port=DB_PORT,</span><br><span class=\"line\">                                    user=DB_USER,</span><br><span class=\"line\">                                    password=DB_PWD,</span><br><span class=\"line\">                                    database=DB_NAME,</span><br><span class=\"line\">                                    charset=&apos;utf8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.MAX_PAGE_SIZE = 50</span><br><span class=\"line\"></span><br><span class=\"line\">    def add_month(self, transfer_dt, num):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        实现时间上的月份相加</span><br><span class=\"line\">        :param transfer_dt:</span><br><span class=\"line\">        :param num:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if isinstance(transfer_dt, str):</span><br><span class=\"line\">            transfer_dt = datetime.datetime.strptime(transfer_dt, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        return datetime.datetime.strftime(transfer_dt + relativedelta(months=+1), &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def deal_time(self, transfer_dt, num, type=&apos;add&apos;, time_type=&apos;day&apos;):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        实现时间上的天数相加相减</span><br><span class=\"line\">        :param transfer_dt:</span><br><span class=\"line\">        :param num:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if type not in [&apos;add&apos;, &apos;min&apos;]:</span><br><span class=\"line\">            return None</span><br><span class=\"line\">        if time_type not in [&apos;days&apos;, &apos;hours&apos;, &apos;minutes&apos;, &apos;seconds&apos;]:</span><br><span class=\"line\">            return None</span><br><span class=\"line\"></span><br><span class=\"line\">        num = num if type == &apos;add&apos; else -num</span><br><span class=\"line\">        if isinstance(transfer_dt, str):</span><br><span class=\"line\">            transfer_dt = datetime.datetime.strptime(transfer_dt, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        if time_type == &apos;day&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(days=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;hours&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(hours=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;minutes&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(minutes=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;seconds&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(seconds=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def _check_token_expire(self, token_time):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        check token is or expire</span><br><span class=\"line\">        :param token_time:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not token_time:</span><br><span class=\"line\">            return False, &apos;过期时间为null&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 获取的时间为毫秒</span><br><span class=\"line\">        token_date_time = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(token_time/1000))</span><br><span class=\"line\">        now_time = datetime.datetime.now().strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)</span><br><span class=\"line\">        return (True, token_date_time) if now_time &lt; token_date_time \\</span><br><span class=\"line\">            else (False, token_date_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_token(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get available token from youzan</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        payload = &#123;</span><br><span class=\"line\">            &quot;client_id&quot;: self.CLIENT_ID,</span><br><span class=\"line\">            &quot;client_secret&quot;: self.CLIENT_SECRET,</span><br><span class=\"line\">            &quot;authorize_type&quot;: &quot;silent&quot;,</span><br><span class=\"line\">            &quot;grant_id&quot;: self.GRANT_ID</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            &apos;Content-Type&apos;: &quot;application/json&quot;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        try:</span><br><span class=\"line\">            token_resp = requests.post(url=self.YOUZAN_TOKEN_URL,</span><br><span class=\"line\">                                       headers=headers,</span><br><span class=\"line\">                                       json=payload)</span><br><span class=\"line\">            if token_resp.status_code != 200:</span><br><span class=\"line\">                return False, &apos;token请求失败&apos;</span><br><span class=\"line\">            token_resp_json = token_resp.json()</span><br><span class=\"line\">            if not token_resp_json:</span><br><span class=\"line\">                return False, &apos;token无json数据&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">            is_ok = token_resp_json.get(&apos;success&apos;)</span><br><span class=\"line\">            if not is_ok:</span><br><span class=\"line\">                return False, &apos;token json success为false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">            token_time = token_resp_json.get(&apos;data&apos;).get(&apos;expires&apos;)</span><br><span class=\"line\">            is_ok, token_expires = self._check_token_expire(token_time)</span><br><span class=\"line\">            if not is_ok:</span><br><span class=\"line\">                return False, &apos;token过期：%s&apos; % token_expires</span><br><span class=\"line\"></span><br><span class=\"line\">            return True, token_resp_json.get(&apos;data&apos;).get(&apos;access_token&apos;)</span><br><span class=\"line\">        except Exception as e:</span><br><span class=\"line\">            return False, &apos;token请求Exception失败: %s&apos; % e.message</span><br><span class=\"line\"></span><br><span class=\"line\">    def _transfer_to_time(self, timeStamp, t_type=1):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        type=1 把时间戳转换成datetime str类型</span><br><span class=\"line\">        type=2 把datetime类型/datetime str类型转换成时间戳</span><br><span class=\"line\"></span><br><span class=\"line\">        :param timeStamp: dateTime or timeStamp</span><br><span class=\"line\">        :param t_type: 1 or 2</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if t_type == 2:</span><br><span class=\"line\">            if isinstance(timeStamp, str):</span><br><span class=\"line\">                timeStamp = time.strptime(timeStamp, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">            return int(time.mktime(timeStamp))</span><br><span class=\"line\"></span><br><span class=\"line\">        if isinstance(timeStamp, str):</span><br><span class=\"line\">            timeStamp = int(timeStamp)</span><br><span class=\"line\">        return time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(timeStamp))</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_style(self, name, height, bold=False):</span><br><span class=\"line\">        style = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = name</span><br><span class=\"line\">        font.bold = bold</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = height</span><br><span class=\"line\">        style.font = font</span><br><span class=\"line\">        return style</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_client_to_excel(self, datas):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param datas: client object to excel</span><br><span class=\"line\">        :return: None</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not datas:</span><br><span class=\"line\">            return</span><br><span class=\"line\"></span><br><span class=\"line\">        f = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">        sheet = f.add_sheet(&apos;sheet&apos;, cell_overwrite_ok=True)</span><br><span class=\"line\"></span><br><span class=\"line\">        title_style = self.set_style(&apos;Times New Roman&apos;, 220, True)</span><br><span class=\"line\">        content_style = self.set_style(&apos;Times New Roman&apos;, 220, False)</span><br><span class=\"line\">        # 标题</span><br><span class=\"line\">        for i in range(0, len(self.EXCEL_FIELDS)):</span><br><span class=\"line\">            sheet.write(0, i, self.EXCEL_FIELDS[i], title_style)</span><br><span class=\"line\"></span><br><span class=\"line\">        row = 1</span><br><span class=\"line\"></span><br><span class=\"line\">        for data in datas:</span><br><span class=\"line\">            if not data:</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            weixin_fans_id = data.get(&apos;weixin_fans_id&apos;)</span><br><span class=\"line\">            fans_id = data.get(&apos;fans_id&apos;)</span><br><span class=\"line\">            created_at = self._transfer_to_time(data.get(&apos;created_at&apos;)) \\</span><br><span class=\"line\">                if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">            member_created_at = self._transfer_to_time(data.get(&apos;member_created_at&apos;)) \\</span><br><span class=\"line\">                if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">            gender = data.get(&apos;gender&apos;)</span><br><span class=\"line\">            is_member = data.get(&apos;is_member&apos;)</span><br><span class=\"line\">            trade_count = data.get(&apos;trade_count&apos;)</span><br><span class=\"line\">            show_name = data.get(&apos;show_name&apos;)</span><br><span class=\"line\">            name = data.get(&apos;name&apos;)</span><br><span class=\"line\">            yz_uid = data.get(&apos;yz_uid&apos;)</span><br><span class=\"line\">            points = data.get(&apos;points&apos;)</span><br><span class=\"line\">            mobile = data.get(&apos;mobile&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">            if isinstance(show_name, unicode):</span><br><span class=\"line\">                show_name = show_name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(mobile, unicode):</span><br><span class=\"line\">                mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(created_at, unicode):</span><br><span class=\"line\">                created_at = created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(member_created_at, unicode):</span><br><span class=\"line\">                member_created_at = member_created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(name, unicode):</span><br><span class=\"line\">                name = name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(mobile, unicode):</span><br><span class=\"line\">                mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">            for field in self.EXCEL_FIELDS:</span><br><span class=\"line\">                if field == &apos;id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), row, title_style)</span><br><span class=\"line\">                elif field == &apos;weixin_fans_id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), weixin_fans_id, content_style)</span><br><span class=\"line\">                elif field == &apos;fans_id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), fans_id, content_style)</span><br><span class=\"line\">                elif field == &apos;created_at&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), created_at, content_style)</span><br><span class=\"line\">                elif field == &apos;member_created_at&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), member_created_at, content_style)</span><br><span class=\"line\">                elif field == &apos;gender&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), gender, content_style)</span><br><span class=\"line\">                elif field == &apos;is_member&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), is_member, content_style)</span><br><span class=\"line\">                elif field == &apos;trade_count&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), trade_count, content_style)</span><br><span class=\"line\">                elif field == &apos;show_name&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), show_name, content_style)</span><br><span class=\"line\">                elif field == &apos;name&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), name, content_style)</span><br><span class=\"line\">                elif field == &apos;yz_uid&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), yz_uid, content_style)</span><br><span class=\"line\">                elif field == &apos;points&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), points, content_style)</span><br><span class=\"line\">                elif field == &apos;mobile&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), mobile, content_style)</span><br><span class=\"line\">            row += 1</span><br><span class=\"line\"></span><br><span class=\"line\">        f.save(&apos;%s-%s名单.xls&apos; % (self.START_DATETIME, self.END_DATETIME))</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_client_to_db(self, data):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param data: client object to database</span><br><span class=\"line\">        :return: None</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not data:</span><br><span class=\"line\">            return</span><br><span class=\"line\"></span><br><span class=\"line\">        weixin_fans_id = data.get(&apos;weixin_fans_id&apos;)</span><br><span class=\"line\">        fans_id = data.get(&apos;fans_id&apos;)</span><br><span class=\"line\">        created_at = self._transfer_to_time(data.get(&apos;created_at&apos;)) \\</span><br><span class=\"line\">            if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">        member_created_at = self._transfer_to_time(data.get(&apos;member_created_at&apos;)) \\</span><br><span class=\"line\">            if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">        gender = data.get(&apos;gender&apos;)</span><br><span class=\"line\">        is_member = data.get(&apos;is_member&apos;)</span><br><span class=\"line\">        trade_count = data.get(&apos;trade_count&apos;)</span><br><span class=\"line\">        show_name = data.get(&apos;show_name&apos;)</span><br><span class=\"line\">        name = data.get(&apos;name&apos;)</span><br><span class=\"line\">        yz_uid = data.get(&apos;yz_uid&apos;)</span><br><span class=\"line\">        points = data.get(&apos;points&apos;)</span><br><span class=\"line\">        mobile = data.get(&apos;mobile&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        if isinstance(show_name, unicode):</span><br><span class=\"line\">            show_name = show_name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(mobile, unicode):</span><br><span class=\"line\">            mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(created_at, unicode):</span><br><span class=\"line\">            created_at = created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(member_created_at, unicode):</span><br><span class=\"line\">            member_created_at = member_created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(name, unicode):</span><br><span class=\"line\">            name = name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(mobile, unicode):</span><br><span class=\"line\">            mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        # insert_sql = &quot;&quot;&quot;</span><br><span class=\"line\">        # insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">        # VALUES(%s, %s, &quot;%s&quot;, &quot;%s&quot;, %s, %s, &quot;%s&quot;, &quot;%s&quot;, %s, %s, &quot;%s&quot;, &quot;%s&quot;);</span><br><span class=\"line\">        # &quot;&quot;&quot; % (weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">        insert_sql = &apos;insert into client_new(created_at, is_member, name, show_name, mobile, member_created_at) VALUES(%s, %s, %s, %s, %s, %s);&apos;</span><br><span class=\"line\">        cursor = self.conn.cursor()</span><br><span class=\"line\">        cursor.execute(insert_sql, (created_at, is_member, name, show_name, mobile, member_created_at))</span><br><span class=\"line\">        self.conn.commit()</span><br><span class=\"line\">        cursor.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    def deal_client_by_token(self, token, store):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        main method by token</span><br><span class=\"line\">        设置一个起始时间，每次递增加1月进行数据获取，以此方式进行all data获取</span><br><span class=\"line\">        :param token:</span><br><span class=\"line\">        :param store: db or excel</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        all_datas = list()</span><br><span class=\"line\">        end_time = self.START_DATETIME</span><br><span class=\"line\"></span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            start_time = end_time</span><br><span class=\"line\">            if start_time == self.END_DATETIME:</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">            end_time = self.deal_time(start_time, 1, &apos;add&apos;, &apos;hours&apos;)</span><br><span class=\"line\">            # 去掉脏数据时间段</span><br><span class=\"line\">            if start_time in self.EXCLUDE_DATETIME:</span><br><span class=\"line\">                print &apos;【%s】is exclude datetime&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            payload = &#123;</span><br><span class=\"line\">                # &quot;is_member&quot;: 1,   # 是否会员</span><br><span class=\"line\">                &quot;created_at_start&quot;: self._transfer_to_time(start_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                &quot;created_at_end&quot;: self._transfer_to_time(end_time, 2)     # 成为客户的时间</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            headers = &#123;</span><br><span class=\"line\">                &apos;Content-Type&apos;: &quot;multipart/form-data&quot;,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            real_url = &apos;%s?access_token=%s&apos; % (self.YOUZAN_CLIENT_URL, token)</span><br><span class=\"line\">            data_resp = requests.post(url=real_url,</span><br><span class=\"line\">                                      # headers=headers,</span><br><span class=\"line\">                                      data=payload)</span><br><span class=\"line\"></span><br><span class=\"line\">            if data_resp.status_code != 200:</span><br><span class=\"line\">                print &apos;【%s】client请求失败&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            resp_json_datas = data_resp.json()</span><br><span class=\"line\">            if not resp_json_datas:</span><br><span class=\"line\">                print &apos;【%s】client无json数据&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            code = resp_json_datas.get(&apos;code&apos;)</span><br><span class=\"line\">            if code != 200:</span><br><span class=\"line\">                print &apos;【%s】client code is error: %s&apos; % (start_time, code)</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            total = resp_json_datas.get(&apos;data&apos;).get(&apos;total&apos;)</span><br><span class=\"line\">            if total &lt; 1:</span><br><span class=\"line\">                print &apos;【%s】client json数据total: %s&apos; % (start_time, total)</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            # 特别说2 = 1 + 1，有一个page页面的1，还有一个range的1</span><br><span class=\"line\">            page = int(total / 50) + 2</span><br><span class=\"line\">            self.TOTAL = self.TOTAL + total</span><br><span class=\"line\">            print &apos;%s - %s total: %s, page: %s&apos; \\</span><br><span class=\"line\">                  % (start_time, end_time, total, (page - 1))</span><br><span class=\"line\"></span><br><span class=\"line\">            for i in range(1, page, 1):</span><br><span class=\"line\">                print &apos;===========%s&apos; % i</span><br><span class=\"line\">                sub_payload = &#123;</span><br><span class=\"line\">                    &quot;created_at_start&quot;: self._transfer_to_time(start_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                    &quot;created_at_end&quot;: self._transfer_to_time(end_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                    &quot;page_size&quot;: self.MAX_PAGE_SIZE     # 每页数量，最多支持50个</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sub_data_resp = requests.post(url=real_url,</span><br><span class=\"line\">                                              data=sub_payload)</span><br><span class=\"line\">                sub_resp_json_datas = sub_data_resp.json()</span><br><span class=\"line\">                datas = sub_resp_json_datas.get(&apos;data&apos;).get(&apos;record_list&apos;)</span><br><span class=\"line\">                for data in datas:</span><br><span class=\"line\">                    if not data:</span><br><span class=\"line\">                        continue</span><br><span class=\"line\">                    self._deal_client_to_db(data) if store == &apos;db&apos; \\</span><br><span class=\"line\">                        else all_datas.append(data)</span><br><span class=\"line\"></span><br><span class=\"line\">        if store == &apos;excel&apos;:</span><br><span class=\"line\">            self._deal_client_to_excel(all_datas)</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self, _type=1):</span><br><span class=\"line\">        store = &apos;db&apos; if _type == 1 else &apos;excel&apos;</span><br><span class=\"line\">        is_ok, message = self.get_token()</span><br><span class=\"line\">        if not is_ok:</span><br><span class=\"line\">            print &apos;YouZan token获取失败：【%s】&apos; % message</span><br><span class=\"line\">            os._exit()</span><br><span class=\"line\"></span><br><span class=\"line\">        print &apos;token: %s&apos; % message</span><br><span class=\"line\">        self.deal_client_by_token(message, store)</span><br><span class=\"line\">        if store == &apos;db&apos;:</span><br><span class=\"line\">            youzan.conn.close()</span><br><span class=\"line\">        print &apos;===================end: %s&apos; % self.TOTAL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\"></span><br><span class=\"line\">    youzan = YOUZAN_Client()</span><br><span class=\"line\">    youzan.run(_type=2)</span><br></pre></td></tr></table></figure>\n<p><img src=\"py.jpeg\" alt></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><div class=\"note primary\">\n            <p>前几天朋友找我问我能不能把人家接口数据存下来，大致需求就是获取YouZan的数据进行存储，存到excel，方便使用。花了大概2days的时间，连查询YouZan官方的API，以及对数据进行一些确认处理，写完了记录下来发布到博客，<font color=\"red\" size=\"4.5\">如果有需求的人，拿走不谢</font>！！！。</p>\n          </div>\n<p><img src=\"/images/article_youzan.jpeg\" alt></p>","more":"<hr>\n\n<h4 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">id</th>\n<th style=\"text-align:center\">name</th>\n<th style=\"text-align:center\">Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Python</td>\n<td style=\"text-align:center\">2.7</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"数据流\"><a href=\"#数据流\" class=\"headerlink\" title=\"数据流\"></a>数据流</h4><font color=\"red\" size=\"5\">YouZan -&gt; 获取数据 -&gt; 处理数据 -&gt;存储</font>\n\n<h4 id=\"执行方法\"><a href=\"#执行方法\" class=\"headerlink\" title=\"执行方法\"></a>执行方法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2 get_youzan_task.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"存储方式\"><a href=\"#存储方式\" class=\"headerlink\" title=\"存储方式\"></a>存储方式</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 数据库</span><br><span class=\"line\">youzan.run(_type=1)</span><br><span class=\"line\"># Excel</span><br><span class=\"line\">youzan.run(_type=2)</span><br></pre></td></tr></table></figure>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">describe:</span><br><span class=\"line\">    先获取可以获取数据的token</span><br><span class=\"line\">    以递增的频率方式进行获取全量数据</span><br><span class=\"line\">    把数据存储到excel或者数据库</span><br><span class=\"line\"></span><br><span class=\"line\">usage:</span><br><span class=\"line\">    python get_youzan.py</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">base_info:</span><br><span class=\"line\">    __version__ = &quot;v.10&quot;</span><br><span class=\"line\">    __author__ = &quot;mingliang.gao&quot;</span><br><span class=\"line\">    __time__ = &quot;2019/9/6&quot;</span><br><span class=\"line\">    __mail__ = &quot;mingliang.gao@qunar.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">create table sql:</span><br><span class=\"line\">CREATE TABLE `blog`.`client_new` (</span><br><span class=\"line\">    `id` bigint AUTO_INCREMENT NOT NULL,</span><br><span class=\"line\">    `created_at` timestamp NULL COMMENT &apos;\\n成为客户的时间，时间戳格式，单位秒\\n成为客户的时间\\n成为会员的时间&apos;,</span><br><span class=\"line\">    `is_member` tinyint COMMENT &apos;是否是会员\\n是否是会员&apos;,</span><br><span class=\"line\">    `name` varchar(254) COMMENT &apos;客户姓名&apos;,</span><br><span class=\"line\">    `show_name` varchar(254) COMMENT &apos;推荐展示姓名&apos;,</span><br><span class=\"line\">    `mobile` varchar(30) COMMENT &apos;手机号&apos;,</span><br><span class=\"line\">    `member_created_at` timestamp NULL COMMENT &apos;\\n成为会员的时间，时间戳格式，单位秒&apos;,</span><br><span class=\"line\">    PRIMARY KEY (`id`)</span><br><span class=\"line\">) COMMENT=&apos;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">insert test sql:</span><br><span class=\"line\">insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">            VALUES(1111111, 111111, &quot;2020-10-10 00:00:00&quot;, &quot;1&quot;, 1, 2000, &quot;测试22222&quot;, &quot;测试1111&quot;, 22222222, 123123, &quot;123123123123&quot;, &quot;2020-10-10 00:00:00&quot;);</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import time</span><br><span class=\"line\">import os</span><br><span class=\"line\">import datetime</span><br><span class=\"line\">import pymysql</span><br><span class=\"line\">import xlwt</span><br><span class=\"line\">from dateutil.relativedelta import relativedelta</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 数据库设置</span><br><span class=\"line\">DB_HOST = &apos;212.64.61.62&apos;</span><br><span class=\"line\">DB_PORT = 3306</span><br><span class=\"line\">DB_USER = &apos;mingliang.gao&apos;</span><br><span class=\"line\">DB_PWD = &apos;XXXXXXXXXXXX&apos;</span><br><span class=\"line\">DB_NAME = &apos;blog&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class YOUZAN_Client(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.YOUZAN_ROOT_URL = &quot;https://open.youzanyun.com&quot;</span><br><span class=\"line\">        self.YOUZAN_TOKEN_URL = &quot;https://open.youzanyun.com/auth/token&quot;</span><br><span class=\"line\">        self.YOUZAN_CLIENT_URL = &quot;https://open.youzanyun.com/api/youzan.scrm.customer.search/3.1.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        # YouZan 客户端ID</span><br><span class=\"line\">        self.CLIENT_ID = &apos;XXXXXX&apos;</span><br><span class=\"line\">        self.CLIENT_SECRET = &apos;XXXXXX&apos;</span><br><span class=\"line\">        self.GRANT_ID = &apos;XXXXXX&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        self.TOTAL = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        # 配置数据获取的开始时间、结束时间、排除时间</span><br><span class=\"line\">        self.START_DATETIME = &apos;2020-02-01 00:00:00&apos;</span><br><span class=\"line\">        self.END_DATETIME = &apos;2020-02-12 10:00:00&apos;</span><br><span class=\"line\">        self.EXCLUDE_DATETIME = [</span><br><span class=\"line\">            &apos;2020-02-06 22:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-06 23:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 00:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 01:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 02:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 03:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 04:00:00&apos;,</span><br><span class=\"line\">            &apos;2020-02-07 05:00:00&apos;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        # 配置excel字段，字段只能从返回数据list中进行选取</span><br><span class=\"line\">        # weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at</span><br><span class=\"line\">        self.EXCEL_FIELDS = [&quot;id&quot;, &quot;created_at&quot;, &quot;is_member&quot;, &quot;name&quot;, &quot;show_name&quot;, &apos;mobile&apos;, &apos;member_created_at&apos;]</span><br><span class=\"line\"></span><br><span class=\"line\">        # DB数据库初始化</span><br><span class=\"line\">        self.conn = pymysql.connect(host=DB_HOST,</span><br><span class=\"line\">                                    port=DB_PORT,</span><br><span class=\"line\">                                    user=DB_USER,</span><br><span class=\"line\">                                    password=DB_PWD,</span><br><span class=\"line\">                                    database=DB_NAME,</span><br><span class=\"line\">                                    charset=&apos;utf8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.MAX_PAGE_SIZE = 50</span><br><span class=\"line\"></span><br><span class=\"line\">    def add_month(self, transfer_dt, num):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        实现时间上的月份相加</span><br><span class=\"line\">        :param transfer_dt:</span><br><span class=\"line\">        :param num:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if isinstance(transfer_dt, str):</span><br><span class=\"line\">            transfer_dt = datetime.datetime.strptime(transfer_dt, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        return datetime.datetime.strftime(transfer_dt + relativedelta(months=+1), &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def deal_time(self, transfer_dt, num, type=&apos;add&apos;, time_type=&apos;day&apos;):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        实现时间上的天数相加相减</span><br><span class=\"line\">        :param transfer_dt:</span><br><span class=\"line\">        :param num:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if type not in [&apos;add&apos;, &apos;min&apos;]:</span><br><span class=\"line\">            return None</span><br><span class=\"line\">        if time_type not in [&apos;days&apos;, &apos;hours&apos;, &apos;minutes&apos;, &apos;seconds&apos;]:</span><br><span class=\"line\">            return None</span><br><span class=\"line\"></span><br><span class=\"line\">        num = num if type == &apos;add&apos; else -num</span><br><span class=\"line\">        if isinstance(transfer_dt, str):</span><br><span class=\"line\">            transfer_dt = datetime.datetime.strptime(transfer_dt, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">        if time_type == &apos;day&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(days=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;hours&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(hours=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;minutes&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(minutes=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">        elif time_type == &apos;seconds&apos;:</span><br><span class=\"line\">            return (transfer_dt + datetime.timedelta(seconds=num)).strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    def _check_token_expire(self, token_time):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        check token is or expire</span><br><span class=\"line\">        :param token_time:</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not token_time:</span><br><span class=\"line\">            return False, &apos;过期时间为null&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        # 获取的时间为毫秒</span><br><span class=\"line\">        token_date_time = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(token_time/1000))</span><br><span class=\"line\">        now_time = datetime.datetime.now().strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)</span><br><span class=\"line\">        return (True, token_date_time) if now_time &lt; token_date_time \\</span><br><span class=\"line\">            else (False, token_date_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    def get_token(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        get available token from youzan</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        payload = &#123;</span><br><span class=\"line\">            &quot;client_id&quot;: self.CLIENT_ID,</span><br><span class=\"line\">            &quot;client_secret&quot;: self.CLIENT_SECRET,</span><br><span class=\"line\">            &quot;authorize_type&quot;: &quot;silent&quot;,</span><br><span class=\"line\">            &quot;grant_id&quot;: self.GRANT_ID</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        headers = &#123;</span><br><span class=\"line\">            &apos;Content-Type&apos;: &quot;application/json&quot;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        try:</span><br><span class=\"line\">            token_resp = requests.post(url=self.YOUZAN_TOKEN_URL,</span><br><span class=\"line\">                                       headers=headers,</span><br><span class=\"line\">                                       json=payload)</span><br><span class=\"line\">            if token_resp.status_code != 200:</span><br><span class=\"line\">                return False, &apos;token请求失败&apos;</span><br><span class=\"line\">            token_resp_json = token_resp.json()</span><br><span class=\"line\">            if not token_resp_json:</span><br><span class=\"line\">                return False, &apos;token无json数据&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">            is_ok = token_resp_json.get(&apos;success&apos;)</span><br><span class=\"line\">            if not is_ok:</span><br><span class=\"line\">                return False, &apos;token json success为false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">            token_time = token_resp_json.get(&apos;data&apos;).get(&apos;expires&apos;)</span><br><span class=\"line\">            is_ok, token_expires = self._check_token_expire(token_time)</span><br><span class=\"line\">            if not is_ok:</span><br><span class=\"line\">                return False, &apos;token过期：%s&apos; % token_expires</span><br><span class=\"line\"></span><br><span class=\"line\">            return True, token_resp_json.get(&apos;data&apos;).get(&apos;access_token&apos;)</span><br><span class=\"line\">        except Exception as e:</span><br><span class=\"line\">            return False, &apos;token请求Exception失败: %s&apos; % e.message</span><br><span class=\"line\"></span><br><span class=\"line\">    def _transfer_to_time(self, timeStamp, t_type=1):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        type=1 把时间戳转换成datetime str类型</span><br><span class=\"line\">        type=2 把datetime类型/datetime str类型转换成时间戳</span><br><span class=\"line\"></span><br><span class=\"line\">        :param timeStamp: dateTime or timeStamp</span><br><span class=\"line\">        :param t_type: 1 or 2</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if t_type == 2:</span><br><span class=\"line\">            if isinstance(timeStamp, str):</span><br><span class=\"line\">                timeStamp = time.strptime(timeStamp, &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class=\"line\">            return int(time.mktime(timeStamp))</span><br><span class=\"line\"></span><br><span class=\"line\">        if isinstance(timeStamp, str):</span><br><span class=\"line\">            timeStamp = int(timeStamp)</span><br><span class=\"line\">        return time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime(timeStamp))</span><br><span class=\"line\"></span><br><span class=\"line\">    def set_style(self, name, height, bold=False):</span><br><span class=\"line\">        style = xlwt.XFStyle()</span><br><span class=\"line\">        font = xlwt.Font()</span><br><span class=\"line\">        font.name = name</span><br><span class=\"line\">        font.bold = bold</span><br><span class=\"line\">        font.color_index = 4</span><br><span class=\"line\">        font.height = height</span><br><span class=\"line\">        style.font = font</span><br><span class=\"line\">        return style</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_client_to_excel(self, datas):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param datas: client object to excel</span><br><span class=\"line\">        :return: None</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not datas:</span><br><span class=\"line\">            return</span><br><span class=\"line\"></span><br><span class=\"line\">        f = xlwt.Workbook(encoding=&apos;utf-8&apos;)</span><br><span class=\"line\">        sheet = f.add_sheet(&apos;sheet&apos;, cell_overwrite_ok=True)</span><br><span class=\"line\"></span><br><span class=\"line\">        title_style = self.set_style(&apos;Times New Roman&apos;, 220, True)</span><br><span class=\"line\">        content_style = self.set_style(&apos;Times New Roman&apos;, 220, False)</span><br><span class=\"line\">        # 标题</span><br><span class=\"line\">        for i in range(0, len(self.EXCEL_FIELDS)):</span><br><span class=\"line\">            sheet.write(0, i, self.EXCEL_FIELDS[i], title_style)</span><br><span class=\"line\"></span><br><span class=\"line\">        row = 1</span><br><span class=\"line\"></span><br><span class=\"line\">        for data in datas:</span><br><span class=\"line\">            if not data:</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            weixin_fans_id = data.get(&apos;weixin_fans_id&apos;)</span><br><span class=\"line\">            fans_id = data.get(&apos;fans_id&apos;)</span><br><span class=\"line\">            created_at = self._transfer_to_time(data.get(&apos;created_at&apos;)) \\</span><br><span class=\"line\">                if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">            member_created_at = self._transfer_to_time(data.get(&apos;member_created_at&apos;)) \\</span><br><span class=\"line\">                if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">            gender = data.get(&apos;gender&apos;)</span><br><span class=\"line\">            is_member = data.get(&apos;is_member&apos;)</span><br><span class=\"line\">            trade_count = data.get(&apos;trade_count&apos;)</span><br><span class=\"line\">            show_name = data.get(&apos;show_name&apos;)</span><br><span class=\"line\">            name = data.get(&apos;name&apos;)</span><br><span class=\"line\">            yz_uid = data.get(&apos;yz_uid&apos;)</span><br><span class=\"line\">            points = data.get(&apos;points&apos;)</span><br><span class=\"line\">            mobile = data.get(&apos;mobile&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">            if isinstance(show_name, unicode):</span><br><span class=\"line\">                show_name = show_name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(mobile, unicode):</span><br><span class=\"line\">                mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(created_at, unicode):</span><br><span class=\"line\">                created_at = created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(member_created_at, unicode):</span><br><span class=\"line\">                member_created_at = member_created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(name, unicode):</span><br><span class=\"line\">                name = name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">            if isinstance(mobile, unicode):</span><br><span class=\"line\">                mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">            for field in self.EXCEL_FIELDS:</span><br><span class=\"line\">                if field == &apos;id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), row, title_style)</span><br><span class=\"line\">                elif field == &apos;weixin_fans_id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), weixin_fans_id, content_style)</span><br><span class=\"line\">                elif field == &apos;fans_id&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), fans_id, content_style)</span><br><span class=\"line\">                elif field == &apos;created_at&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), created_at, content_style)</span><br><span class=\"line\">                elif field == &apos;member_created_at&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), member_created_at, content_style)</span><br><span class=\"line\">                elif field == &apos;gender&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), gender, content_style)</span><br><span class=\"line\">                elif field == &apos;is_member&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), is_member, content_style)</span><br><span class=\"line\">                elif field == &apos;trade_count&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), trade_count, content_style)</span><br><span class=\"line\">                elif field == &apos;show_name&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), show_name, content_style)</span><br><span class=\"line\">                elif field == &apos;name&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), name, content_style)</span><br><span class=\"line\">                elif field == &apos;yz_uid&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), yz_uid, content_style)</span><br><span class=\"line\">                elif field == &apos;points&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), points, content_style)</span><br><span class=\"line\">                elif field == &apos;mobile&apos;:</span><br><span class=\"line\">                    sheet.write(row, self.EXCEL_FIELDS.index(field), mobile, content_style)</span><br><span class=\"line\">            row += 1</span><br><span class=\"line\"></span><br><span class=\"line\">        f.save(&apos;%s-%s名单.xls&apos; % (self.START_DATETIME, self.END_DATETIME))</span><br><span class=\"line\"></span><br><span class=\"line\">    def _deal_client_to_db(self, data):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        :param data: client object to database</span><br><span class=\"line\">        :return: None</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        if not data:</span><br><span class=\"line\">            return</span><br><span class=\"line\"></span><br><span class=\"line\">        weixin_fans_id = data.get(&apos;weixin_fans_id&apos;)</span><br><span class=\"line\">        fans_id = data.get(&apos;fans_id&apos;)</span><br><span class=\"line\">        created_at = self._transfer_to_time(data.get(&apos;created_at&apos;)) \\</span><br><span class=\"line\">            if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">        member_created_at = self._transfer_to_time(data.get(&apos;member_created_at&apos;)) \\</span><br><span class=\"line\">            if data.get(&apos;created_at&apos;) else &apos;&apos;</span><br><span class=\"line\">        gender = data.get(&apos;gender&apos;)</span><br><span class=\"line\">        is_member = data.get(&apos;is_member&apos;)</span><br><span class=\"line\">        trade_count = data.get(&apos;trade_count&apos;)</span><br><span class=\"line\">        show_name = data.get(&apos;show_name&apos;)</span><br><span class=\"line\">        name = data.get(&apos;name&apos;)</span><br><span class=\"line\">        yz_uid = data.get(&apos;yz_uid&apos;)</span><br><span class=\"line\">        points = data.get(&apos;points&apos;)</span><br><span class=\"line\">        mobile = data.get(&apos;mobile&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        if isinstance(show_name, unicode):</span><br><span class=\"line\">            show_name = show_name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(mobile, unicode):</span><br><span class=\"line\">            mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(created_at, unicode):</span><br><span class=\"line\">            created_at = created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(member_created_at, unicode):</span><br><span class=\"line\">            member_created_at = member_created_at.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(name, unicode):</span><br><span class=\"line\">            name = name.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">        if isinstance(mobile, unicode):</span><br><span class=\"line\">            mobile = mobile.encode(&apos;utf-8&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">        # insert_sql = &quot;&quot;&quot;</span><br><span class=\"line\">        # insert into client(weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">        # VALUES(%s, %s, &quot;%s&quot;, &quot;%s&quot;, %s, %s, &quot;%s&quot;, &quot;%s&quot;, %s, %s, &quot;%s&quot;, &quot;%s&quot;);</span><br><span class=\"line\">        # &quot;&quot;&quot; % (weixin_fans_id, fans_id, created_at, gender, is_member, trade_count, show_name, name, yz_uid, points, mobile, member_created_at)</span><br><span class=\"line\">        insert_sql = &apos;insert into client_new(created_at, is_member, name, show_name, mobile, member_created_at) VALUES(%s, %s, %s, %s, %s, %s);&apos;</span><br><span class=\"line\">        cursor = self.conn.cursor()</span><br><span class=\"line\">        cursor.execute(insert_sql, (created_at, is_member, name, show_name, mobile, member_created_at))</span><br><span class=\"line\">        self.conn.commit()</span><br><span class=\"line\">        cursor.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    def deal_client_by_token(self, token, store):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        main method by token</span><br><span class=\"line\">        设置一个起始时间，每次递增加1月进行数据获取，以此方式进行all data获取</span><br><span class=\"line\">        :param token:</span><br><span class=\"line\">        :param store: db or excel</span><br><span class=\"line\">        :return:</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        all_datas = list()</span><br><span class=\"line\">        end_time = self.START_DATETIME</span><br><span class=\"line\"></span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            start_time = end_time</span><br><span class=\"line\">            if start_time == self.END_DATETIME:</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">            end_time = self.deal_time(start_time, 1, &apos;add&apos;, &apos;hours&apos;)</span><br><span class=\"line\">            # 去掉脏数据时间段</span><br><span class=\"line\">            if start_time in self.EXCLUDE_DATETIME:</span><br><span class=\"line\">                print &apos;【%s】is exclude datetime&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            payload = &#123;</span><br><span class=\"line\">                # &quot;is_member&quot;: 1,   # 是否会员</span><br><span class=\"line\">                &quot;created_at_start&quot;: self._transfer_to_time(start_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                &quot;created_at_end&quot;: self._transfer_to_time(end_time, 2)     # 成为客户的时间</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            headers = &#123;</span><br><span class=\"line\">                &apos;Content-Type&apos;: &quot;multipart/form-data&quot;,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            real_url = &apos;%s?access_token=%s&apos; % (self.YOUZAN_CLIENT_URL, token)</span><br><span class=\"line\">            data_resp = requests.post(url=real_url,</span><br><span class=\"line\">                                      # headers=headers,</span><br><span class=\"line\">                                      data=payload)</span><br><span class=\"line\"></span><br><span class=\"line\">            if data_resp.status_code != 200:</span><br><span class=\"line\">                print &apos;【%s】client请求失败&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            resp_json_datas = data_resp.json()</span><br><span class=\"line\">            if not resp_json_datas:</span><br><span class=\"line\">                print &apos;【%s】client无json数据&apos; % start_time</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            code = resp_json_datas.get(&apos;code&apos;)</span><br><span class=\"line\">            if code != 200:</span><br><span class=\"line\">                print &apos;【%s】client code is error: %s&apos; % (start_time, code)</span><br><span class=\"line\">                continue</span><br><span class=\"line\">            total = resp_json_datas.get(&apos;data&apos;).get(&apos;total&apos;)</span><br><span class=\"line\">            if total &lt; 1:</span><br><span class=\"line\">                print &apos;【%s】client json数据total: %s&apos; % (start_time, total)</span><br><span class=\"line\">                continue</span><br><span class=\"line\"></span><br><span class=\"line\">            # 特别说2 = 1 + 1，有一个page页面的1，还有一个range的1</span><br><span class=\"line\">            page = int(total / 50) + 2</span><br><span class=\"line\">            self.TOTAL = self.TOTAL + total</span><br><span class=\"line\">            print &apos;%s - %s total: %s, page: %s&apos; \\</span><br><span class=\"line\">                  % (start_time, end_time, total, (page - 1))</span><br><span class=\"line\"></span><br><span class=\"line\">            for i in range(1, page, 1):</span><br><span class=\"line\">                print &apos;===========%s&apos; % i</span><br><span class=\"line\">                sub_payload = &#123;</span><br><span class=\"line\">                    &quot;created_at_start&quot;: self._transfer_to_time(start_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                    &quot;created_at_end&quot;: self._transfer_to_time(end_time, 2),     # 成为客户的时间</span><br><span class=\"line\">                    &quot;page_size&quot;: self.MAX_PAGE_SIZE     # 每页数量，最多支持50个</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sub_data_resp = requests.post(url=real_url,</span><br><span class=\"line\">                                              data=sub_payload)</span><br><span class=\"line\">                sub_resp_json_datas = sub_data_resp.json()</span><br><span class=\"line\">                datas = sub_resp_json_datas.get(&apos;data&apos;).get(&apos;record_list&apos;)</span><br><span class=\"line\">                for data in datas:</span><br><span class=\"line\">                    if not data:</span><br><span class=\"line\">                        continue</span><br><span class=\"line\">                    self._deal_client_to_db(data) if store == &apos;db&apos; \\</span><br><span class=\"line\">                        else all_datas.append(data)</span><br><span class=\"line\"></span><br><span class=\"line\">        if store == &apos;excel&apos;:</span><br><span class=\"line\">            self._deal_client_to_excel(all_datas)</span><br><span class=\"line\"></span><br><span class=\"line\">    def run(self, _type=1):</span><br><span class=\"line\">        store = &apos;db&apos; if _type == 1 else &apos;excel&apos;</span><br><span class=\"line\">        is_ok, message = self.get_token()</span><br><span class=\"line\">        if not is_ok:</span><br><span class=\"line\">            print &apos;YouZan token获取失败：【%s】&apos; % message</span><br><span class=\"line\">            os._exit()</span><br><span class=\"line\"></span><br><span class=\"line\">        print &apos;token: %s&apos; % message</span><br><span class=\"line\">        self.deal_client_by_token(message, store)</span><br><span class=\"line\">        if store == &apos;db&apos;:</span><br><span class=\"line\">            youzan.conn.close()</span><br><span class=\"line\">        print &apos;===================end: %s&apos; % self.TOTAL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\"></span><br><span class=\"line\">    youzan = YOUZAN_Client()</span><br><span class=\"line\">    youzan.run(_type=2)</span><br></pre></td></tr></table></figure>\n<p><img src=\"py.jpeg\" alt></p>"},{"title":"Linux学习之番外篇-nohup","comments":0,"top":false,"abbrlink":23692,"date":"2020-05-13T01:46:47.000Z","updated":"2020-05-13T01:46:47.000Z","desc":"总结一下nohub命令在Linux的相关操作","keywords":"Linux, nohub, &","_content":"\n![](/images/article_linux_nohup.jpeg)\n\n#### 简介\n{% note danger %}\n<font color=\"#red\" size=\"5\">用途</font>：不挂断地运行命令。\n<font color=\"#blue\" size=\"5\">语法</font>：nohup Command [ Arg … ] [　& ]\n<font color=\"#white\" size=\"5\">描述</font>：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示”and”的符号）到命令的尾部。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。\n\n#### 总结\n\n|  命令  |                         说明                         |\n|:------:|:----------------------------------------------------:|\n|   w    |               显示当前登录的用户及信息               |\n|  who   | 显示当前已经登录的用户名、终端名称、登录时间及登录IP |\n| whoami |                 显示当前用户的用户名                 |\n|   id   |               用于check系统是有此用户                |\n|  last  |             显示近期用户或终端的登录情况             |\n\n#### w\n\n显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。\n\n```\n[root@bash ~]# w\n 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty1                      Tue21   15:27m  0.09s  0.09s -bash\nroot     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w\nroot     tty2                      07:43   19:29   0.02s  0.02s -bash\n```\n\n#### who\n\n显示当前已经登录的用户名、终端名称、登录时间及登录IP。\n\n```\n[root@bash ~]# who\nroot     tty1         2019-12-24 21:23\nroot     pts/0        2019-12-24 19:23 (192.168.1.116)\nroot     tty2         2019-12-24 07:43\n```\n#### whoami\n\n显示当前用户的用户名。\n```\n[root@bash ~]# whoami\nroot\n```\n\n{% raw %}\n<div class=\"post_cus_note\">额外赠送</div>\n{% endraw %}\n\n#### id\n\n用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。\n```\n[root@bash ~]# id root\nuid=0(root) gid=0(wheel) groups=0(wheel)\n```\n\n#### last\n\n显示近期用户或终端的登录情况。\n```\n[root@bash ~]# last -n 5\nroot     pts/0        :0.0             Wed Apr 25 10:12   still logged in\nroot     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)\nroot     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)\n","source":"_posts/Linux-学习之番外篇-nohup.md","raw":"---\ntitle: Linux学习之番外篇-nohup\ncomments: false\ncategories:\n  - [Linux]\ntags: [Linux, Linux番外篇]\ntop: false\nabbrlink: 23692\ndate: 2020-05-13 09:46:47\nupdated: 2020-05-13 09:46:47\ndesc: 总结一下nohub命令在Linux的相关操作\nkeywords: Linux, nohub, &\n---\n\n![](/images/article_linux_nohup.jpeg)\n\n#### 简介\n{% note danger %}\n<font color=\"#red\" size=\"5\">用途</font>：不挂断地运行命令。\n<font color=\"#blue\" size=\"5\">语法</font>：nohup Command [ Arg … ] [　& ]\n<font color=\"#white\" size=\"5\">描述</font>：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 & （ 表示”and”的符号）到命令的尾部。\n{% endnote %}\n\n<!--more-->\n<hr />\n\n在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。\n\n#### 总结\n\n|  命令  |                         说明                         |\n|:------:|:----------------------------------------------------:|\n|   w    |               显示当前登录的用户及信息               |\n|  who   | 显示当前已经登录的用户名、终端名称、登录时间及登录IP |\n| whoami |                 显示当前用户的用户名                 |\n|   id   |               用于check系统是有此用户                |\n|  last  |             显示近期用户或终端的登录情况             |\n\n#### w\n\n显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。\n\n```\n[root@bash ~]# w\n 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty1                      Tue21   15:27m  0.09s  0.09s -bash\nroot     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w\nroot     tty2                      07:43   19:29   0.02s  0.02s -bash\n```\n\n#### who\n\n显示当前已经登录的用户名、终端名称、登录时间及登录IP。\n\n```\n[root@bash ~]# who\nroot     tty1         2019-12-24 21:23\nroot     pts/0        2019-12-24 19:23 (192.168.1.116)\nroot     tty2         2019-12-24 07:43\n```\n#### whoami\n\n显示当前用户的用户名。\n```\n[root@bash ~]# whoami\nroot\n```\n\n{% raw %}\n<div class=\"post_cus_note\">额外赠送</div>\n{% endraw %}\n\n#### id\n\n用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。\n```\n[root@bash ~]# id root\nuid=0(root) gid=0(wheel) groups=0(wheel)\n```\n\n#### last\n\n显示近期用户或终端的登录情况。\n```\n[root@bash ~]# last -n 5\nroot     pts/0        :0.0             Wed Apr 25 10:12   still logged in\nroot     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)\nroot     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)\nroot     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)\n","slug":"Linux-学习之番外篇-nohup","published":1,"_id":"ckcmvdeh400005cbjoonvpiqb","layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/article_linux_nohup.jpeg\" alt></p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p><font color=\"#red\" size=\"5\">用途</font>：不挂断地运行命令。</p><p><font color=\"#blue\" size=\"5\">语法</font>：nohup Command [ Arg … ] [　&amp; ]</p><p><font color=\"#white\" size=\"5\">描述</font>：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &amp; （ 表示”and”的符号）到命令的尾部。</p>\n          </div>\n<a id=\"more\"></a>\n<hr>\n\n<p>在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">显示当前登录的用户及信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">who</td>\n<td style=\"text-align:center\">显示当前已经登录的用户名、终端名称、登录时间及登录IP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">whoami</td>\n<td style=\"text-align:center\">显示当前用户的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">id</td>\n<td style=\"text-align:center\">用于check系统是有此用户</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">last</td>\n<td style=\"text-align:center\">显示近期用户或终端的登录情况</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"w\"></a>w</h4><p>显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# w</span><br><span class=\"line\"> 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     tty1                      Tue21   15:27m  0.09s  0.09s -bash</span><br><span class=\"line\">root     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w</span><br><span class=\"line\">root     tty2                      07:43   19:29   0.02s  0.02s -bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h4><p>显示当前已经登录的用户名、终端名称、登录时间及登录IP。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# who</span><br><span class=\"line\">root     tty1         2019-12-24 21:23</span><br><span class=\"line\">root     pts/0        2019-12-24 19:23 (192.168.1.116)</span><br><span class=\"line\">root     tty2         2019-12-24 07:43</span><br></pre></td></tr></table></figure>\n<h4 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h4><p>显示当前用户的用户名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure></p>\n\n<div class=\"post_cus_note\">额外赠送</div>\n\n<h4 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h4><p>用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# id root</span><br><span class=\"line\">uid=0(root) gid=0(wheel) groups=0(wheel)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"last\"><a href=\"#last\" class=\"headerlink\" title=\"last\"></a>last</h4><p>显示近期用户或终端的登录情况。<br><code>`</code><br>[root@bash ~]# last -n 5<br>root     pts/0        :0.0             Wed Apr 25 10:12   still logged in<br>root     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)<br>root     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)<br>root     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)<br>root     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/images/article_linux_nohup.jpeg\" alt></p>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><div class=\"note danger\">\n            <p><font color=\"#red\" size=\"5\">用途</font>：不挂断地运行命令。</p><p><font color=\"#blue\" size=\"5\">语法</font>：nohup Command [ Arg … ] [　&amp; ]</p><p><font color=\"#white\" size=\"5\">描述</font>：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断（SIGHUP）信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &amp; （ 表示”and”的符号）到命令的尾部。</p>\n          </div>","more":"<hr>\n\n<p>在Linux系统中，多账户进行ssh登录是常有的事，但是有时候会去查看一下登录的用户都有谁以及相关的登录信息。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">显示当前登录的用户及信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">who</td>\n<td style=\"text-align:center\">显示当前已经登录的用户名、终端名称、登录时间及登录IP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">whoami</td>\n<td style=\"text-align:center\">显示当前用户的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">id</td>\n<td style=\"text-align:center\">用于check系统是有此用户</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">last</td>\n<td style=\"text-align:center\">显示近期用户或终端的登录情况</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"w\"></a>w</h4><p>显示当前登录的用户及信息，除了这些还会显示当前登录了几个用户、系统当前的load。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# w</span><br><span class=\"line\"> 20:22:25 up 15:55,  3 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     tty1                      Tue21   15:27m  0.09s  0.09s -bash</span><br><span class=\"line\">root     pts/0    192.168.1.116    19:23    1.00s  0.12s  0.01s w</span><br><span class=\"line\">root     tty2                      07:43   19:29   0.02s  0.02s -bash</span><br></pre></td></tr></table></figure>\n<h4 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h4><p>显示当前已经登录的用户名、终端名称、登录时间及登录IP。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# who</span><br><span class=\"line\">root     tty1         2019-12-24 21:23</span><br><span class=\"line\">root     pts/0        2019-12-24 19:23 (192.168.1.116)</span><br><span class=\"line\">root     tty2         2019-12-24 07:43</span><br></pre></td></tr></table></figure>\n<h4 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h4><p>显示当前用户的用户名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure></p>\n\n<div class=\"post_cus_note\">额外赠送</div>\n\n<h4 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h4><p>用于显示用户的ID，以及所属群组的ID，主要用于check系统是有此用户。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@bash ~]# id root</span><br><span class=\"line\">uid=0(root) gid=0(wheel) groups=0(wheel)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"last\"><a href=\"#last\" class=\"headerlink\" title=\"last\"></a>last</h4><p>显示近期用户或终端的登录情况。<br><code>`</code><br>[root@bash ~]# last -n 5<br>root     pts/0        :0.0             Wed Apr 25 10:12   still logged in<br>root     pts/1        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)<br>root     pts/0        :0.0             Wed Apr 25 10:06 - 10:10  (00:03)<br>root     pts/0        :0.0             Wed Apr 25 10:02 - 10:06  (00:04)<br>root     pts/0        :0.0             Wed Apr 25 09:51 - 09:51  (00:00)</p>"}],"PostAsset":[{"_id":"source/_posts/College-大学证书那点事/jiangxuejin.jpeg","slug":"jiangxuejin.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/shixisheng.jpeg","slug":"shixisheng.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/yanjiushengzhunkaozheng.jpeg","slug":"yanjiushengzhunkaozheng.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-shizuku.png","slug":"live2d-widget-model-shizuku.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_load.gif","slug":"next_youhua_load.gif","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_youhua_button.gif","slug":"next_youhua_button.gif","post":"ckcd0s2qx001ttabj6ll1qcp4","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fangwenqingkuang.png","slug":"fangwenqingkuang.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-基础命令学习/hexo_help.png","slug":"hexo_help.png","post":"ckcd0s2sj0031tabjqgaouvd1","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片/images/article_mutipicture_2.png","slug":"images/article_mutipicture_2.png","post":"ckcd0s2s4002rtabjrloyleqy","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-tags与categories重构的教训/images/article_404.png","slug":"images/article_404.png","post":"ckcd0s2rv002jtabjkw9xjxxm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-文章添加版权声明/images/article_banquanshengming.png","slug":"images/article_banquanshengming.png","post":"ckcd0s2so0034tabj3vs5q20z","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/images/article_search_show.png","slug":"images/article_search_show.png","post":"ckcd0s2sx003atabj151pbzh2","modified":0,"renderable":0},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01/mountain.png","slug":"mountain.png","post":"ckcd0s2ti003mtabjpx6rgkeg","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_2.png","slug":"etc_2.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_3.png","slug":"etc_3.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/article.png","slug":"article.png","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Travel-2019-06北京美食计划/images/article_beijing_eat_month.png","slug":"images/article_beijing_eat_month.png","post":"ckcd0s2xr0075tabj3v9yvvca","modified":0,"renderable":0},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/bali_jiudian_1.png","slug":"bali_jiudian_1.png","post":"ckcd0s38k00gttabjeerzrcob","modified":0,"renderable":0},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/bali_jiudian_2.png","slug":"bali_jiudian_2.png","post":"ckcd0s38k00gttabjeerzrcob","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/checi.png","slug":"checi.png","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/gisgongchengshi.jpg","slug":"gisgongchengshi.jpg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/images/article_hadoop.jpg","slug":"images/article_hadoop.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_bg.gif","slug":"next_youhua_bg.gif","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/images/article_youhua_zengqiang.png","slug":"images/article_youhua_zengqiang.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_server.gif","slug":"hexo_next_server.gif","post":"ckcd0s2rl0029tabjnukri6pm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-博文展示并排等多样式图片/images/article_mutipicture_1.png","slug":"images/article_mutipicture_1.png","post":"ckcd0s2s4002rtabjrloyleqy","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-添加鼠标点击效果/images/article_click.gif","slug":"images/article_click.gif","post":"ckcd0s2t8003ftabjcm7ihgaf","modified":0,"renderable":0},{"_id":"source/_posts/Live-北京西单抓娃娃心得篇/article_zhuawawa_main.jpg","slug":"article_zhuawawa_main.jpg","post":"ckcd0s2vi0054tabj41gw5khw","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/4.png","slug":"4.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Travel-2019-06北京美食计划/images/article_beijing_beijing.jpg","slug":"images/article_beijing_beijing.jpg","post":"ckcd0s2xr0075tabj3v9yvvca","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/location.png","slug":"location.png","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/Enjoy-加强版小黄车/enjoy_xiaohuangche.jpg","slug":"enjoy_xiaohuangche.jpg","post":"ckcd0s2mb000etabjsvsr9h1t","modified":0,"renderable":0},{"_id":"source/_posts/Enjoy-加班版耳机/enjoy_jiaban.jpg","slug":"enjoy_jiaban.jpg","post":"ckcd0s2me000ftabj92vxhjnn","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-blog常用语记录/article_hadoop.jpg","slug":"article_hadoop.jpg","post":"ckcd0s2rs002ftabjp6si2p8w","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-展示文章统计-hexo-symbols-count-time/hexo-symbols-count-time.png","slug":"hexo-symbols-count-time.png","post":"ckcd0s2se002ytabj3abks7pg","modified":0,"renderable":0},{"_id":"source/_posts/LDAP-查看用户是否锁定lockoutTime/ldap_lockoutTime.png","slug":"ldap_lockoutTime.png","post":"ckcd0s2tu003vtabjg6fgazh9","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-新增tags、categories、自定义菜单栏页/enjoy_list.png","slug":"enjoy_list.png","post":"ckcd0s2tl003otabjuhko5ozv","modified":0,"renderable":0},{"_id":"source/_posts/Python-爬虫之公司网站首页/article_kwpachong.jpg","slug":"article_kwpachong.jpg","post":"ckcd0s2wr0064tabjscuqyrjb","modified":0,"renderable":0},{"_id":"source/_posts/Server-SSH之快捷配置/ssh_config.png","slug":"ssh_config.png","post":"ckcd0s2xc006ptabjiwj7lzjz","modified":0,"renderable":0},{"_id":"source/_posts/Enjoy-选词填空/enjoy_xuance_1.jpg","slug":"enjoy_xuance_1.jpg","post":"ckcd0s2n0000ntabjzbl56b0f","modified":0,"renderable":0},{"_id":"source/_posts/Enjoy-选词填空/enjoy_xuance_2.jpg","slug":"enjoy_xuance_2.jpg","post":"ckcd0s2n0000ntabjzbl56b0f","modified":0,"renderable":0},{"_id":"source/_posts/LDAP-ERROR-DSID-03150F01/ldap_config.jpg","slug":"ldap_config.jpg","post":"ckcd0s2ti003mtabjpx6rgkeg","modified":0,"renderable":0},{"_id":"source/_posts/Ide-初学atom/chuxueatom_list.jpg","slug":"chuxueatom_list.jpg","post":"ckcd0s2tz003ztabj3n78udzx","modified":0,"renderable":0},{"_id":"source/_posts/Ide-初学atom/chuxueatom_power.jpg","slug":"chuxueatom_power.jpg","post":"ckcd0s2tz003ztabj3n78udzx","modified":0,"renderable":0},{"_id":"source/_posts/Live-北京西单抓娃娃心得篇/jiage.png","slug":"jiage.png","post":"ckcd0s2vi0054tabj41gw5khw","modified":0,"renderable":0},{"_id":"source/_posts/Python-爬虫之糗百笑话/article_qiubai_liuchengtu.png","slug":"article_qiubai_liuchengtu.png","post":"ckcd0s2wu0066tabjo9n307uf","modified":0,"renderable":0},{"_id":"source/_posts/Python-爬虫之糗百笑话/qiubaipachong.gif","slug":"qiubaipachong.gif","post":"ckcd0s2wu0066tabjo9n307uf","modified":0,"renderable":0},{"_id":"source/_posts/Qita-新MacOS导致微信截图问题/anquanyuyinsi.png","slug":"anquanyuyinsi.png","post":"ckcd0s2xe006rtabjsjx2qkk4","modified":0,"renderable":0},{"_id":"source/_posts/Qita-新MacOS导致微信截图问题/shezhi.png","slug":"shezhi.png","post":"ckcd0s2xe006rtabjsjx2qkk4","modified":0,"renderable":0},{"_id":"source/_posts/Server-SSH的见解/ssh_keys.png","slug":"ssh_keys.png","post":"ckcd0s2xi006wtabjhr3188ru","modified":0,"renderable":0},{"_id":"source/_posts/Server-SSH的见解/ssh_yuanli.png","slug":"ssh_yuanli.png","post":"ckcd0s2xi006wtabjhr3188ru","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_meihua_post.png","slug":"next_meihua_post.png","post":"ckcd0s2qx001ttabj6ll1qcp4","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-美化篇（Gemini）/next_youhua_border.png","slug":"next_youhua_border.png","post":"ckcd0s2qx001ttabj6ll1qcp4","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-基础命令学习/hexo_list.png","slug":"hexo_list.png","post":"ckcd0s2sj0031tabjqgaouvd1","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-基础命令学习/hexo_version.png","slug":"hexo_version.png","post":"ckcd0s2sj0031tabjqgaouvd1","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-admin.png","slug":"hexo-admin.png","post":"ckcd0s2st0038tabjk8dibona","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-blog-encrypt.png","slug":"hexo-blog-encrypt.png","post":"ckcd0s2st0038tabjk8dibona","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-拓展-插件篇/hexo-tag-echarts.png","slug":"hexo-tag-echarts.png","post":"ckcd0s2st0038tabjk8dibona","modified":0,"renderable":0},{"_id":"source/_posts/Python-for-break-else的坑/for_break_else.jpg","slug":"for_break_else.jpg","post":"ckcd0s2w1005gtabjszl71ksm","modified":0,"renderable":0},{"_id":"source/_posts/Python-for-break-else的坑/for_break_else_english.jpg","slug":"for_break_else_english.jpg","post":"ckcd0s2w1005gtabjszl71ksm","modified":0,"renderable":0},{"_id":"source/_posts/Python-for-break-else的坑/for_else.jpg","slug":"for_else.jpg","post":"ckcd0s2w1005gtabjszl71ksm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next.png","slug":"hexo_next.png","post":"ckcd0s2rl0029tabjnukri6pm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_init.png","slug":"hexo_next_init.png","post":"ckcd0s2rl0029tabjnukri6pm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搭建属于自己的Blog/hexo_next_server.png","slug":"hexo_next_server.png","post":"ckcd0s2rl0029tabjnukri6pm","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/all.png","slug":"all.png","post":"ckcd0s2v1004ptabjfouqn929","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/firewall_state.png","slug":"firewall_state.png","post":"ckcd0s2v1004ptabjfouqn929","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/ports.png","slug":"ports.png","post":"ckcd0s2v1004ptabjfouqn929","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-firewall-cmd/systemctl_state.png","slug":"systemctl_state.png","post":"ckcd0s2v1004ptabjfouqn929","modified":0,"renderable":0},{"_id":"source/_posts/Python-内置函数-any与all/all.png","slug":"all.png","post":"ckcd0s2w8005qtabj20a2hsba","modified":0,"renderable":0},{"_id":"source/_posts/Python-内置函数-any与all/all_demo.png","slug":"all_demo.png","post":"ckcd0s2w8005qtabj20a2hsba","modified":0,"renderable":0},{"_id":"source/_posts/Python-内置函数-any与all/any.png","slug":"any.png","post":"ckcd0s2w8005qtabj20a2hsba","modified":0,"renderable":0},{"_id":"source/_posts/Python-内置函数-any与all/any_demo.png","slug":"any_demo.png","post":"ckcd0s2w8005qtabj20a2hsba","modified":0,"renderable":0},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan1.png","slug":"chengxuyuan1.png","post":"ckcd0s2x4006itabjpzj4ff1l","modified":0,"renderable":0},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan2.jpg","slug":"chengxuyuan2.jpg","post":"ckcd0s2x4006itabjpzj4ff1l","modified":0,"renderable":0},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan3.gif","slug":"chengxuyuan3.gif","post":"ckcd0s2x4006itabjpzj4ff1l","modified":0,"renderable":0},{"_id":"source/_posts/Python-程序猿七夕-心心相印/chengxuyuan4.jpg","slug":"chengxuyuan4.jpg","post":"ckcd0s2x4006itabjpzj4ff1l","modified":0,"renderable":0},{"_id":"source/_posts/Python-程序猿七夕-心心相印/riqi.png","slug":"riqi.png","post":"ckcd0s2x4006itabjpzj4ff1l","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_1.png","slug":"etc_1.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/etc_4.png","slug":"etc_4.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/isapi_dmeo.png","slug":"isapi_dmeo.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-awk/papproval_dmeo.png","slug":"papproval_dmeo.png","post":"ckcd0s2un004ctabj6ag8cput","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/aux.jpg","slug":"aux.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/axjf.jpg","slug":"axjf.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/ef.jpg","slug":"ef.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/examples.jpg","slug":"examples.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/hushi.jpg","slug":"hushi.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ps/u.jpg","slug":"u.jpg","post":"ckcd0s2ut004itabjbs278v6k","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_msg.png","slug":"itchat_msg.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_run.png","slug":"itchat_run.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_create.png","slug":"itchat_tuling_create.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_key.png","slug":"itchat_tuling_key.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_login.png","slug":"itchat_tuling_login.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Python-实现微信小机器人/itchat_tuling_set.png","slug":"itchat_tuling_set.png","post":"ckcd0s2wo0060tabju9vs2cwr","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/article_confluence_hou.png","slug":"article_confluence_hou.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/article_confluence_qian.png","slug":"article_confluence_qian.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_config.png","slug":"confluence_config.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_html.png","slug":"confluence_html.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_search.png","slug":"confluence_search.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之隐藏人员菜单栏/confluence_set.png","slug":"confluence_set.png","post":"ckcd0s2xo0073tabjuva6bfzq","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/guwenhuajie.jpeg","slug":"guwenhuajie.jpeg","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/tianjinzhiyan.jpeg","slug":"tianjinzhiyan.jpeg","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/wudadao.jpeg","slug":"wudadao.jpeg","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/Travel-浪漫二人行之天津二日游/yidalifengqingjie.jpeg","slug":"yidalifengqingjie.jpeg","post":"ckcd0s2xt007atabjwt6xldeb","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_link_commit.png","slug":"baidu_link_commit.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_1.png","slug":"baidu_site_1.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_2.png","slug":"baidu_site_2.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_site_3.png","slug":"baidu_site_3.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_xinxi.png","slug":"baidu_xinxi.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/baidu_zhandian.png","slug":"baidu_zhandian.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（三）baidu搜索/sitemap.png","slug":"sitemap.png","post":"ckcd0s2rk0028tabjd3lecjzm","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/api.jpg","slug":"api.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/baidu.jpg","slug":"baidu.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/db.jpg","slug":"db.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/id.jpg","slug":"id.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/test.jpg","slug":"test.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Python-制作天气数据api/tiaoshi.jpg","slug":"tiaoshi.jpg","post":"ckcd0s2wf005vtabjz64hdlna","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/1.png","slug":"1.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/2.png","slug":"2.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/3.png","slug":"3.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/5.png","slug":"5.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/6.png","slug":"6.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/Tools-Confluence之延期/7.png","slug":"7.png","post":"ckcd0s2xl006ytabjs23dsds2","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/cet4.jpeg","slug":"cet4.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/cet4zhunkaozheng.jpeg","slug":"cet4zhunkaozheng.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/cet6zhunkaozheng.jpeg","slug":"cet6zhunkaozheng.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/giszuopin.jpeg","slug":"giszuopin.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/jisuanjizhunkaozheng.jpeg","slug":"jisuanjizhunkaozheng.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/kaoyan.jpeg","slug":"kaoyan.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/College-大学证书那点事/putonghua.jpeg","slug":"putonghua.jpeg","post":"ckcd0s2ly0003tabj2s60mri6","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/diqu.png","slug":"diqu.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fangwenliang.png","slug":"fangwenliang.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/fugailv.png","slug":"fugailv.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_check.png","slug":"seo_google_sc_check.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_main.png","slug":"seo_google_sc_main.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_new.png","slug":"seo_google_sc_new.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_result.png","slug":"seo_google_sc_result.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_robots.png","slug":"seo_google_sc_robots.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_select.png","slug":"seo_google_sc_select.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next搜索优化（一）google搜索/seo_google_sc_sitemap.png","slug":"seo_google_sc_sitemap.png","post":"ckcd0s2ri0024tabjn0mtvj1g","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190524daka.jpg","slug":"20190524daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190527daka.jpg","slug":"20190527daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190528daka.jpg","slug":"20190528daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190529daka.jpg","slug":"20190529daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190530daka.jpg","slug":"20190530daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190603daka.jpg","slug":"20190603daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190604daka.jpg","slug":"20190604daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190605daka.jpg","slug":"20190605daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190606daka.jpg","slug":"20190606daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190610daka.jpg","slug":"20190610daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190611daka.jpg","slug":"20190611daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190612daka.jpg","slug":"20190612daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190613daka.jpg","slug":"20190613daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190614daka.jpg","slug":"20190614daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190617daka.jpg","slug":"20190617daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190618daka.jpg","slug":"20190618daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190619daka.jpg","slug":"20190619daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190620daka.jpg","slug":"20190620daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190621daka.jpg","slug":"20190621daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190624daka.jpg","slug":"20190624daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190625daka.jpg","slug":"20190625daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190626daka.jpg","slug":"20190626daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190627daka.jpg","slug":"20190627daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190628daka.jpg","slug":"20190628daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190701daka.jpg","slug":"20190701daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190702daka.jpg","slug":"20190702daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190703daka.jpg","slug":"20190703daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190704daka.jpg","slug":"20190704daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190716daka.jpg","slug":"20190716daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190717daka.jpg","slug":"20190717daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190718daka.jpg","slug":"20190718daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190719daka.jpg","slug":"20190719daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190722daka.jpg","slug":"20190722daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190723daka.jpg","slug":"20190723daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190724daka.jpg","slug":"20190724daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190725daka.jpg","slug":"20190725daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190726daka.jpg","slug":"20190726daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190729daka.jpg","slug":"20190729daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190730daka.jpg","slug":"20190730daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190731daka.jpg","slug":"20190731daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190801daka.jpg","slug":"20190801daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190802daka.jpg","slug":"20190802daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190805daka.jpg","slug":"20190805daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190808daka.jpg","slug":"20190808daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190809daka.jpg","slug":"20190809daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190812daka.jpg","slug":"20190812daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190813daka.jpg","slug":"20190813daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190814daka.jpg","slug":"20190814daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190815daka.jpg","slug":"20190815daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/20190816daka.jpg","slug":"20190816daka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Live-百词斩打卡/undaka.jpg","slug":"undaka.jpg","post":"ckcd0s2vb004xtabjg2u4a3pa","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-ni-j.png","slug":"src/live2d-widget-model-ni-j.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nito.png","slug":"src/live2d-widget-model-nito.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-wanko.png","slug":"src/live2d-widget-model-wanko.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Travel-北京奋斗终章-巴厘岛之旅/images/article_balidao.jpg","slug":"images/article_balidao.jpg","post":"ckcd0s38k00gttabjeerzrcob","modified":0,"renderable":0},{"_id":"source/_posts/Project-summary-qunar项目总结/qunar_supervisorctl.png","slug":"qunar_supervisorctl.png","post":"ckcd0s38b00gctabjsh6b76u0","modified":0,"renderable":0},{"_id":"source/_posts/Python-爬虫利器之requests/postman.png","slug":"postman.png","post":"ckcd0s38c00gftabj9il559xy","modified":0,"renderable":0},{"_id":"source/_posts/Tools-ffmpeg的基础学习/article_ffmpeg.png","slug":"article_ffmpeg.png","post":"ckcd0s38f00gmtabjz12ungqx","modified":0,"renderable":0},{"_id":"source/_posts/Tools-ffmpeg的基础学习/ffmpeg_i_tf.png","slug":"ffmpeg_i_tf.png","post":"ckcd0s38f00gmtabjz12ungqx","modified":0,"renderable":0},{"_id":"source/_posts/Tools-etherpad在线协作编辑/align.jpg","slug":"align.jpg","post":"ckcd0s38i00gptabjxck2zfc1","modified":0,"renderable":0},{"_id":"source/_posts/Tools-etherpad在线协作编辑/image-upload.png","slug":"image-upload.png","post":"ckcd0s38i00gptabjxck2zfc1","modified":0,"renderable":0},{"_id":"source/_posts/Tools-etherpad在线协作编辑/search_plugin.png","slug":"search_plugin.png","post":"ckcd0s38i00gptabjxck2zfc1","modified":0,"renderable":0},{"_id":"source/_posts/Tools-etherpad在线协作编辑/version.png","slug":"version.png","post":"ckcd0s38i00gptabjxck2zfc1","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_D.png","slug":"lsof_D.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_c.png","slug":"lsof_c.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_c_id.png","slug":"lsof_c_id.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_dd.png","slug":"lsof_dd.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_fields.png","slug":"lsof_fields.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_i.png","slug":"lsof_i.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_port.png","slug":"lsof_port.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之增强篇-lsof/lsof_user.png","slug":"lsof_user.png","post":"ckcd0s38900gatabjugcyuape","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-hijiki.png","slug":"src/live2d-widget-model-hijiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ls/images/article_linux_ls.png","slug":"images/article_linux_ls.png","post":"ckcd0s2ug0044tabjd9pgihau","modified":0,"renderable":0},{"_id":"source/_posts/Python-YouZan数据处理小程序/py.jpeg","slug":"py.jpeg","post":"ckcd0s3l100hgtabjynln70pw","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next博客添加喵星人/images/article_live2d.png","slug":"images/article_live2d.png","post":"ckcd0s2rb001ytabj09axdjt2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next添加TagCloud/images/article_tagcloud.gif","slug":"images/article_tagcloud.gif","post":"ckcd0s2ro002ctabjdv0oczob","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-文章置顶/images/article_zhiding.png","slug":"images/article_zhiding.png","post":"ckcd0s2t3003ctabjltiv7w4y","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-tags与categories重构的教训/404_ri.jpeg","slug":"404_ri.jpeg","post":"ckcd0s2rv002jtabjkw9xjxxm","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-tar/article_linux_tar.png","slug":"article_linux_tar.png","post":"ckcd0s2uj0048tabjb2vx9l1f","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-tar/images/article_linux_tar.png","slug":"images/article_linux_tar.png","post":"ckcd0s2uj0048tabjb2vx9l1f","modified":0,"renderable":0},{"_id":"source/_posts/Linux-学习之基础篇-ls/article_linux_ls_ll.png","slug":"article_linux_ls_ll.png","post":"ckcd0s2ug0044tabjd9pgihau","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_console.png","slug":"search_console.png","post":"ckcd0s2sx003atabj151pbzh2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_error.png","slug":"search_error.png","post":"ckcd0s2sx003atabj151pbzh2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_promble.png","slug":"search_promble.png","post":"ckcd0s2sx003atabj151pbzh2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-搜索hexo-generator-searchdb/search_sidebar.png","slug":"search_sidebar.png","post":"ckcd0s2sx003atabj151pbzh2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/images/article_next.png","slug":"images/article_next.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_a.gif","slug":"next_youhua_a.gif","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_border.png","slug":"next_youhua_border.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_catalog.png","slug":"next_youhua_catalog.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_github.png","slug":"next_youhua_github.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-增强篇（Gemini）/next_youhua_tags.png","slug":"next_youhua_tags.png","post":"ckcd0s2qo001qtabj61486820","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/changyan.png","slug":"changyan.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/disqus.png","slug":"disqus.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/gitalk.png","slug":"gitalk.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/gitment.png","slug":"gitment.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/images/article_liuyanban.png","slug":"images/article_liuyanban.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_key.png","slug":"leancloud_key.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_newapp.png","slug":"leancloud_newapp.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_setting.png","slug":"leancloud_setting.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/leancloud_zhuce.png","slug":"leancloud_zhuce.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-菜单栏添加留言板-Valine/valine.png","slug":"valine.png","post":"ckcd0s2tq003rtabj5yprig7f","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_avatar.gif","slug":"next_youhua_avatar.gif","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_baidushare.png","slug":"next_youhua_baidushare.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_copy.gif","slug":"next_youhua_copy.gif","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_extrainfo.png","slug":"next_youhua_extrainfo.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_fangda.png","slug":"next_youhua_fangda.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_footer.gif","slug":"next_youhua_footer.gif","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_likely.png","slug":"next_youhua_likely.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_link.png","slug":"next_youhua_link.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_needmoreshare2.png","slug":"next_youhua_needmoreshare2.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_pay.gif","slug":"next_youhua_pay.gif","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Next主题优化-基础篇（Gemini）/next_youhua_pic.png","slug":"next_youhua_pic.png","post":"ckcd0s3kz00hftabjp3xby9y2","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/addgroup.jpg","slug":"addgroup.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/addgroup_hadoop.jpg","slug":"addgroup_hadoop.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/adduser.jpg","slug":"adduser.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/adduser_hadoop.jpg","slug":"adduser_hadoop.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/cat.jpg","slug":"cat.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit.jpg","slug":"gedit.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_core_site.jpg","slug":"gedit_core_site.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_hadoop_env.jpg","slug":"gedit_hadoop_env.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_hdfs_site.jpg","slug":"gedit_hdfs_site.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_mapred_site.jpg","slug":"gedit_mapred_site.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_master_slaves.jpg","slug":"gedit_master_slaves.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/gedit_sudoers.jpg","slug":"gedit_sudoers.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/grep.jpg","slug":"grep.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/hadoop.jpg","slug":"hadoop.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/hadoop_path.jpg","slug":"hadoop_path.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/install_java.jpg","slug":"install_java.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/java_version.jpg","slug":"java_version.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/jps.jpg","slug":"jps.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/master_jps.jpg","slug":"master_jps.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/openssh.jpg","slug":"openssh.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/slaves_jps.jpg","slug":"slaves_jps.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/ssh.jpg","slug":"ssh.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/ssh_localhost.jpg","slug":"ssh_localhost.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop-1-2-1集群安装/su_hadoop.jpg","slug":"su_hadoop.jpg","post":"ckcd0s2q7001ktabjlmb4tivt","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-chitose.png","slug":"live2d-widget-model-chitose.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-epsilon2_1.png","slug":"live2d-widget-model-epsilon2_1.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-gf.png","slug":"live2d-widget-model-gf.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haru_01.png","slug":"live2d-widget-model-haru_01.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haru_02.png","slug":"live2d-widget-model-haru_02.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-haruto.png","slug":"live2d-widget-model-haruto.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-hibiki.png","slug":"live2d-widget-model-hibiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-hijiki.png","slug":"live2d-widget-model-hijiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-izumi.png","slug":"live2d-widget-model-izumi.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-koharu.png","slug":"live2d-widget-model-koharu.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-miku.png","slug":"live2d-widget-model-miku.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-ni-j.png","slug":"live2d-widget-model-ni-j.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nico.png","slug":"live2d-widget-model-nico.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nietzsche.png","slug":"live2d-widget-model-nietzsche.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nipsilon.png","slug":"live2d-widget-model-nipsilon.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-nito.png","slug":"live2d-widget-model-nito.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-tororo.png","slug":"live2d-widget-model-tororo.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-tsumiki.png","slug":"live2d-widget-model-tsumiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-unitychan.png","slug":"live2d-widget-model-unitychan.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-wanko.png","slug":"live2d-widget-model-wanko.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/live2d-widget-model-z16.png","slug":"live2d-widget-model-z16.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-chitose.png","slug":"src/live2d-widget-model-chitose.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-epsilon2_1.png","slug":"src/live2d-widget-model-epsilon2_1.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-gf.png","slug":"src/live2d-widget-model-gf.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haru:01.png","slug":"src/live2d-widget-model-haru:01.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haru:02.png","slug":"src/live2d-widget-model-haru:02.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-haruto.png","slug":"src/live2d-widget-model-haruto.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-hibiki.png","slug":"src/live2d-widget-model-hibiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-izumi.png","slug":"src/live2d-widget-model-izumi.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-koharu.png","slug":"src/live2d-widget-model-koharu.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-miku.png","slug":"src/live2d-widget-model-miku.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nico.png","slug":"src/live2d-widget-model-nico.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nietzsche.png","slug":"src/live2d-widget-model-nietzsche.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-nipsilon.png","slug":"src/live2d-widget-model-nipsilon.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-shizuku.png","slug":"src/live2d-widget-model-shizuku.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-tororo.png","slug":"src/live2d-widget-model-tororo.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-tsumiki.png","slug":"src/live2d-widget-model-tsumiki.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-unitychan.png","slug":"src/live2d-widget-model-unitychan.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0},{"_id":"source/_posts/Hexo-Live2d喵星人模型s/src/live2d-widget-model-z16.png","slug":"src/live2d-widget-model-z16.png","post":"ckcd0s2qi001ntabjcam9el8u","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckcd0s2lr0001tabj6ungeb1p","category_id":"ckcd0s2m10004tabjd7f9u35d","_id":"ckcd0s2mg000gtabjfg9zylso"},{"post_id":"ckcd0s2ly0003tabj2s60mri6","category_id":"ckcd0s2ma000btabj5hgizln6","_id":"ckcd0s2n1000otabjpbk8whox"},{"post_id":"ckcd0s2m40007tabjnj68fmhz","category_id":"ckcd0s2mh000htabj1vtqxo5r","_id":"ckcd0s2ni000vtabj3jc3bnmc"},{"post_id":"ckcd0s2m60009tabjof26t5sc","category_id":"ckcd0s2mh000htabj1vtqxo5r","_id":"ckcd0s2ny0011tabjvgpllnnc"},{"post_id":"ckcd0s2m8000atabjq420kzmq","category_id":"ckcd0s2mh000htabj1vtqxo5r","_id":"ckcd0s2ok0017tabj0cqaqsgw"},{"post_id":"ckcd0s2mb000etabjsvsr9h1t","category_id":"ckcd0s2nt000ytabjwgdp4mqs","_id":"ckcd0s2pn001dtabjfkjq81qr"},{"post_id":"ckcd0s2me000ftabj92vxhjnn","category_id":"ckcd0s2nt000ytabjwgdp4mqs","_id":"ckcd0s2q7001jtabjb4qch0jd"},{"post_id":"ckcd0s2mn000jtabji6xfr9oa","category_id":"ckcd0s2nt000ytabjwgdp4mqs","_id":"ckcd0s2qo001otabj9ku2vban"},{"post_id":"ckcd0s2mt000ktabjs1g405u3","category_id":"ckcd0s2nt000ytabjwgdp4mqs","_id":"ckcd0s2qz001utabjnqu4av9y"},{"post_id":"ckcd0s2n0000ntabjzbl56b0f","category_id":"ckcd0s2nt000ytabjwgdp4mqs","_id":"ckcd0s2rf0020tabjmdwulxlg"},{"post_id":"ckcd0s2n5000qtabjm29qmji3","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2rj0026tabjsx196t6q"},{"post_id":"ckcd0s2ne000utabjoc8p8qt8","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2rn002btabjmiuteohh"},{"post_id":"ckcd0s2no000xtabjnttix8dj","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2ru002htabjh4rqnmka"},{"post_id":"ckcd0s2nu0010tabjc46ityvg","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2rz002ntabjon855idv"},{"post_id":"ckcd0s2rs002ftabjp6si2p8w","category_id":"ckcd0s2m10004tabjd7f9u35d","_id":"ckcd0s2s7002stabju9meqvyn"},{"post_id":"ckcd0s2o40013tabj5ihcgdne","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2sb002wtabjkhfvrl4b"},{"post_id":"ckcd0s2og0015tabj3og30j2p","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2si0030tabja3seoiik"},{"post_id":"ckcd0s2oz0019tabjjbe8vcgh","category_id":"ckcd0s2qw001stabjlf8jcxzz","_id":"ckcd0s2st0036tabjblqlh3cy"},{"post_id":"ckcd0s2pd001btabj6adlibzu","category_id":"ckcd0s2sh002ztabjncd5uupm","_id":"ckcd0s2t7003dtabjh5fsui8i"},{"post_id":"ckcd0s2po001etabja3130t9o","category_id":"ckcd0s2sh002ztabjncd5uupm","_id":"ckcd0s2tg003jtabj7ac19sg4"},{"post_id":"ckcd0s2t3003ctabjltiv7w4y","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2tn003ptabjxg53lte3"},{"post_id":"ckcd0s2t8003ftabjcm7ihgaf","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2tt003stabjfaa2j8h1"},{"post_id":"ckcd0s2te003itabj3uwibn4d","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2tx003wtabj1a6j4s65"},{"post_id":"ckcd0s2tl003otabjuhko5ozv","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2ud0042tabjxi38t4yi"},{"post_id":"ckcd0s2qi001ntabjcam9el8u","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2ui0045tabjxloj1r84"},{"post_id":"ckcd0s2tq003rtabj5yprig7f","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2ul0049tabjmi7valwl"},{"post_id":"ckcd0s2qo001qtabj61486820","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2uo004dtabjxchsg1mi"},{"post_id":"ckcd0s2qx001ttabj6ll1qcp4","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2us004gtabjoov7v0bq"},{"post_id":"ckcd0s2r0001wtabjxksxzw79","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2v0004ntabjardx766c"},{"post_id":"ckcd0s2rb001ytabj09axdjt2","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2v7004ttabj93vdjcpq"},{"post_id":"ckcd0s2rf0022tabjgyz2t9xi","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2vd004ztabj3l9yep1a"},{"post_id":"ckcd0s2ri0024tabjn0mtvj1g","category_id":"ckcd0s2v5004rtabjyu4qdzt1","_id":"ckcd0s2vp0058tabj1pm47vxt"},{"post_id":"ckcd0s2ri0024tabjn0mtvj1g","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2vu005atabjosg32wmo"},{"post_id":"ckcd0s2rk0028tabjd3lecjzm","category_id":"ckcd0s2v5004rtabjyu4qdzt1","_id":"ckcd0s2vz005etabjtdigor0p"},{"post_id":"ckcd0s2rk0028tabjd3lecjzm","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2w2005htabj111mhbed"},{"post_id":"ckcd0s2rl0029tabjnukri6pm","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2w5005mtabj8s68a718"},{"post_id":"ckcd0s2ro002ctabjdv0oczob","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2w8005ptabjprq22ifp"},{"post_id":"ckcd0s2rv002jtabjkw9xjxxm","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2wa005ttabjinr72q3k"},{"post_id":"ckcd0s2rx002ltabjfxnjoilt","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2wl005ytabjukozlgls"},{"post_id":"ckcd0s2s0002otabjqsuh1bi1","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2wr0063tabj59o39slj"},{"post_id":"ckcd0s2s4002rtabjrloyleqy","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2wz006atabj91w4hv9e"},{"post_id":"ckcd0s2s9002vtabjfrv1i37f","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2x4006htabjp1j9f34v"},{"post_id":"ckcd0s2se002ytabj3abks7pg","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xc006ntabjl8n3illq"},{"post_id":"ckcd0s2sj0031tabjqgaouvd1","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xh006utabj0m42dryk"},{"post_id":"ckcd0s2so0034tabj3vs5q20z","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xn0071tabjm9ul6nd0"},{"post_id":"ckcd0s2st0038tabjk8dibona","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xt0078tabjmtaza7yy"},{"post_id":"ckcd0s2sx003atabj151pbzh2","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xw007etabj60hvjujk"},{"post_id":"ckcd0s2q0001htabj0u3sun06","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s2xy007ktabjglgfq8ea"},{"post_id":"ckcd0s2q0001htabj0u3sun06","category_id":"ckcd0s2xs0076tabjci6pm2d6","_id":"ckcd0s2xy007mtabjur4re29a"},{"post_id":"ckcd0s2ti003mtabjpx6rgkeg","category_id":"ckcd0s2xw007ctabjqvlb6rvz","_id":"ckcd0s2y0007qtabjx4dep436"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","category_id":"ckcd0s2td003htabjn1v3teub","_id":"ckcd0s2y1007vtabjn36u9mv3"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2y1007wtabjhhqvw7a7"},{"post_id":"ckcd0s2tu003vtabjg6fgazh9","category_id":"ckcd0s2xw007ctabjqvlb6rvz","_id":"ckcd0s2y2007ztabjs0dkspkk"},{"post_id":"ckcd0s2tu003vtabjg6fgazh9","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2y30083tabjqwe3x1c5"},{"post_id":"ckcd0s2tz003ztabj3n78udzx","category_id":"ckcd0s2y0007ttabj8lewamb1","_id":"ckcd0s2y50085tabjxynhv4q7"},{"post_id":"ckcd0s2ua0041tabjkpk8n13y","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2y60089tabja7ijwkde"},{"post_id":"ckcd0s2ug0044tabjd9pgihau","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2y7008dtabj8dpxtif2"},{"post_id":"ckcd0s2uj0048tabjb2vx9l1f","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2y8008gtabjbe5sr0k7"},{"post_id":"ckcd0s2un004ctabj6ag8cput","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2y9008ktabj9yr8nlg3"},{"post_id":"ckcd0s2ut004itabjbs278v6k","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2ya008ptabj2suxqf8k"},{"post_id":"ckcd0s2uw004ltabjkhxh8x7y","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2yc008stabjpq4872dh"},{"post_id":"ckcd0s2v1004ptabjfouqn929","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2yc008vtabj9tfbbrwf"},{"post_id":"ckcd0s2v5004stabjchqv13e5","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s2ye0091tabjiy7r8t86"},{"post_id":"ckcd0s2vb004xtabjg2u4a3pa","category_id":"ckcd0s2yc008utabjrnxgku95","_id":"ckcd0s2yg0095tabjdkmp2rlv"},{"post_id":"ckcd0s2vd0050tabj5z8689fc","category_id":"ckcd0s2ye008ztabjv403jy9c","_id":"ckcd0s2yh0099tabjdqxclzbx"},{"post_id":"ckcd0s2vf0052tabjbfoubnvs","category_id":"ckcd0s2ye008ztabjv403jy9c","_id":"ckcd0s2yj009etabjh1wif4cv"},{"post_id":"ckcd0s2vi0054tabj41gw5khw","category_id":"ckcd0s2yc008utabjrnxgku95","_id":"ckcd0s2yl009itabjlggodq7x"},{"post_id":"ckcd0s2vk0056tabj67k9podt","category_id":"ckcd0s2ye008ztabjv403jy9c","_id":"ckcd0s2yn009ltabjrfxonaod"},{"post_id":"ckcd0s2vr0059tabjwthe15uk","category_id":"ckcd0s2ye008ztabjv403jy9c","_id":"ckcd0s2yo009otabjuj0t7m9o"},{"post_id":"ckcd0s2vw005ctabjwijbsuao","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yq009stabjvwgxexbb"},{"post_id":"ckcd0s2w1005gtabjszl71ksm","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yr009xtabjoc1ewf9o"},{"post_id":"ckcd0s2w3005ktabjurq8wx9r","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2ys00a1tabjqrpnkri8"},{"post_id":"ckcd0s2w6005otabjh6fb77p4","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yt00a5tabjvbrs6y3x"},{"post_id":"ckcd0s2w8005qtabj20a2hsba","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yt00a9tabjsaqz0vwl"},{"post_id":"ckcd0s2wb005utabj7v199vu4","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yu00adtabjcge5cqhk"},{"post_id":"ckcd0s2wf005vtabjz64hdlna","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yv00ahtabjvrmjcpwu"},{"post_id":"ckcd0s2wl005ztabj8s589o82","category_id":"ckcd0s2yu00actabjqa7wf4ba","_id":"ckcd0s2yx00aotabjja2ez8x4"},{"post_id":"ckcd0s2wl005ztabj8s589o82","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yx00aqtabj3jet2bil"},{"post_id":"ckcd0s2wo0060tabju9vs2cwr","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yy00autabjzq264tm1"},{"post_id":"ckcd0s2wr0064tabjscuqyrjb","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2yz00avtabj5un187x6"},{"post_id":"ckcd0s2wu0066tabjo9n307uf","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2z000aztabjassxxtea"},{"post_id":"ckcd0s2wz006btabjymc5vl6o","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2z100b2tabjk6a7ypiz"},{"post_id":"ckcd0s2x1006dtabjm90p7akz","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2z200b5tabjo1y7i2a2"},{"post_id":"ckcd0s2x4006itabjpzj4ff1l","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s2z300b9tabj98iutxvw"},{"post_id":"ckcd0s2xl006ytabjs23dsds2","category_id":"ckcd0s2z500bgtabjwi2q4o9h","_id":"ckcd0s2z700bptabjxyfabpys"},{"post_id":"ckcd0s2xo0073tabjuva6bfzq","category_id":"ckcd0s2z500bgtabjwi2q4o9h","_id":"ckcd0s2z800bstabjmrgxb9yv"},{"post_id":"ckcd0s2xr0075tabj3v9yvvca","category_id":"ckcd0s2z700bmtabjb0329tuj","_id":"ckcd0s2z900bxtabj46ee77k9"},{"post_id":"ckcd0s2xt007atabjwt6xldeb","category_id":"ckcd0s2z700bmtabjb0329tuj","_id":"ckcd0s2z900c1tabj71wkrihe"},{"post_id":"ckcd0s2xc006ptabjiwj7lzjz","category_id":"ckcd0s2z200b4tabjsjtacvsi","_id":"ckcd0s2zb00c5tabjkc6rhx6j"},{"post_id":"ckcd0s2xc006ptabjiwj7lzjz","category_id":"ckcd0s2z900butabjjou8atb7","_id":"ckcd0s2zb00c7tabj78du147k"},{"post_id":"ckcd0s2xe006rtabjsjx2qkk4","category_id":"ckcd0s2yc008utabjrnxgku95","_id":"ckcd0s2zd00c9tabj45e9n3g8"},{"post_id":"ckcd0s2xe006rtabjsjx2qkk4","category_id":"ckcd0s2z900bztabjdpuiw64k","_id":"ckcd0s2zd00catabjn92htbqr"},{"post_id":"ckcd0s2xi006wtabjhr3188ru","category_id":"ckcd0s2z200b4tabjsjtacvsi","_id":"ckcd0s2zd00cctabjtz1iwa19"},{"post_id":"ckcd0s2xi006wtabjhr3188ru","category_id":"ckcd0s2z900butabjjou8atb7","_id":"ckcd0s2ze00cetabjbazjaq6b"},{"post_id":"ckcd0s38000g4tabjrt17gsdt","category_id":"ckcd0s2mh000htabj1vtqxo5r","_id":"ckcd0s38c00gdtabjvzz2csv1"},{"post_id":"ckcd0s38200g6tabjf8jfm0wm","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s38d00ggtabj4f1kx05w"},{"post_id":"ckcd0s38900gatabjugcyuape","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcd0s38g00gntabjndkcgivs"},{"post_id":"ckcd0s38400g8tabj303raoe5","category_id":"ckcd0s2v5004rtabjyu4qdzt1","_id":"ckcd0s38j00gqtabjxmodr94j"},{"post_id":"ckcd0s38400g8tabj303raoe5","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s38l00gutabjrhffdoqt"},{"post_id":"ckcd0s38c00gftabj9il559xy","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s38m00gwtabj8hd5nlyk"},{"post_id":"ckcd0s38e00gjtabj4pz57mdg","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s38n00gztabjqr40l1tv"},{"post_id":"ckcd0s38f00gmtabjz12ungqx","category_id":"ckcd0s2z500bgtabjwi2q4o9h","_id":"ckcd0s38q00h1tabjzep68o8g"},{"post_id":"ckcd0s38b00gctabjsh6b76u0","category_id":"ckcd0s38f00gktabjt76gvufn","_id":"ckcd0s38r00h3tabj19cq5p7h"},{"post_id":"ckcd0s38i00gptabjxck2zfc1","category_id":"ckcd0s2z500bgtabjwi2q4o9h","_id":"ckcd0s38s00h5tabju1gvyzj0"},{"post_id":"ckcd0s38k00gttabjeerzrcob","category_id":"ckcd0s2z700bmtabjb0329tuj","_id":"ckcd0s38s00h7tabjvrsd294m"},{"post_id":"ckcd0s3l100hgtabjynln70pw","category_id":"ckcd0s2xx007itabju3zfrw0u","_id":"ckcd0s3l300hktabjp8kefu5j"},{"post_id":"ckcd0s3kz00hftabjp3xby9y2","category_id":"ckcd0s2t0003btabjscp1waw9","_id":"ckcd0s3lq00hmtabj8r9xsv0p"},{"post_id":"ckcmvdeh400005cbjoonvpiqb","category_id":"ckcd0s2y1007ytabjhjbfr6z0","_id":"ckcmvdwlx00035cbjcc9we09n"}],"PostTag":[{"post_id":"ckcd0s2lr0001tabj6ungeb1p","tag_id":"ckcd0s2m30005tabjs29jqsct","_id":"ckcd0s2mb000dtabjegv7ot51"},{"post_id":"ckcd0s2ly0003tabj2s60mri6","tag_id":"ckcd0s2ma000ctabj56zael9c","_id":"ckcd0s2n1000ptabjlj2lwgjn"},{"post_id":"ckcd0s2ly0003tabj2s60mri6","tag_id":"ckcd0s2mh000itabj8zoo6174","_id":"ckcd0s2n7000rtabjka53m8rm"},{"post_id":"ckcd0s2m40007tabjnj68fmhz","tag_id":"ckcd0s2my000mtabjpap9b2bo","_id":"ckcd0s2nn000wtabjtr196oxq"},{"post_id":"ckcd0s2m60009tabjof26t5sc","tag_id":"ckcd0s2my000mtabjpap9b2bo","_id":"ckcd0s2o30012tabjzcpt8v9x"},{"post_id":"ckcd0s2m8000atabjq420kzmq","tag_id":"ckcd0s2nu000ztabjfmekd72b","_id":"ckcd0s2oz0018tabjiu1a6pis"},{"post_id":"ckcd0s2mb000etabjsvsr9h1t","tag_id":"ckcd0s2oj0016tabj3fbgb49p","_id":"ckcd0s2pq001ftabj3p8y4xfm"},{"post_id":"ckcd0s2me000ftabj92vxhjnn","tag_id":"ckcd0s2oj0016tabj3fbgb49p","_id":"ckcd0s2q9001ltabjg8tkvapp"},{"post_id":"ckcd0s2mn000jtabji6xfr9oa","tag_id":"ckcd0s2q2001itabjb4o6j0jj","_id":"ckcd0s2qp001rtabjixdwwqs4"},{"post_id":"ckcd0s2mt000ktabjs1g405u3","tag_id":"ckcd0s2q2001itabjb4o6j0jj","_id":"ckcd0s2r2001xtabj5zxmf5u1"},{"post_id":"ckcd0s2n0000ntabjzbl56b0f","tag_id":"ckcd0s2oj0016tabj3fbgb49p","_id":"ckcd0s2rh0023tabj91ftlvzb"},{"post_id":"ckcd0s2n5000qtabjm29qmji3","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2rq002etabjtkouxhac"},{"post_id":"ckcd0s2n5000qtabjm29qmji3","tag_id":"ckcd0s2rk0027tabj3u7nezwx","_id":"ckcd0s2ru002itabjvy2ebppa"},{"post_id":"ckcd0s2ne000utabjoc8p8qt8","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2s3002qtabjovogclvf"},{"post_id":"ckcd0s2ne000utabjoc8p8qt8","tag_id":"ckcd0s2rk0027tabj3u7nezwx","_id":"ckcd0s2s9002utabjweb4rg02"},{"post_id":"ckcd0s2no000xtabjnttix8dj","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2so0033tabjtfhk47jf"},{"post_id":"ckcd0s2no000xtabjnttix8dj","tag_id":"ckcd0s2rk0027tabj3u7nezwx","_id":"ckcd0s2st0037tabj2wj9ot33"},{"post_id":"ckcd0s2nu0010tabjc46ityvg","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2tc003gtabja0bgyypd"},{"post_id":"ckcd0s2nu0010tabjc46ityvg","tag_id":"ckcd0s2sw0039tabj7frlssg9","_id":"ckcd0s2th003ktabjggaz02mm"},{"post_id":"ckcd0s2o40013tabj5ihcgdne","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2tt003ttabjekinwibc"},{"post_id":"ckcd0s2o40013tabj5ihcgdne","tag_id":"ckcd0s2th003ltabjigc4qt1f","_id":"ckcd0s2ty003xtabjftvrcux2"},{"post_id":"ckcd0s2og0015tabj3og30j2p","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2ui0046tabje3hsd1hb"},{"post_id":"ckcd0s2og0015tabj3og30j2p","tag_id":"ckcd0s2th003ltabjigc4qt1f","_id":"ckcd0s2um004atabje1da2j6k"},{"post_id":"ckcd0s2oz0019tabjjbe8vcgh","tag_id":"ckcd0s2rf0021tabj7x7krsoj","_id":"ckcd0s2uv004jtabj67iq4v6e"},{"post_id":"ckcd0s2oz0019tabjjbe8vcgh","tag_id":"ckcd0s2rk0027tabj3u7nezwx","_id":"ckcd0s2v0004mtabjjzta4qpb"},{"post_id":"ckcd0s2pd001btabj6adlibzu","tag_id":"ckcd0s2us004htabj0rjecsyx","_id":"ckcd0s2v5004qtabj3bv8ir9i"},{"post_id":"ckcd0s2po001etabja3130t9o","tag_id":"ckcd0s2us004htabj0rjecsyx","_id":"ckcd0s2va004wtabjm0etur4o"},{"post_id":"ckcd0s2q0001htabj0u3sun06","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2w0005ftabjamah6u36"},{"post_id":"ckcd0s2q0001htabj0u3sun06","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2w3005itabjejyh5j42"},{"post_id":"ckcd0s2q0001htabj0u3sun06","tag_id":"ckcd0s2vk0055tabjsn55xyuk","_id":"ckcd0s2w6005ntabjz1yd5fa3"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2wt0065tabj48n7bwvd"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","tag_id":"ckcd0s2w3005jtabja3zxc0ym","_id":"ckcd0s2wy0068tabjvtbv6wwk"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","tag_id":"ckcd0s2wa005stabjz3lqabxn","_id":"ckcd0s2x1006ctabjlbw7k3ly"},{"post_id":"ckcd0s2q7001ktabjlmb4tivt","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2x3006ftabjmto98hjg"},{"post_id":"ckcd0s2wo0060tabju9vs2cwr","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2x7006jtabj88fq4qi7"},{"post_id":"ckcd0s2wo0060tabju9vs2cwr","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2xc006mtabjew7ayvwu"},{"post_id":"ckcd0s2wz006btabjymc5vl6o","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2xe006qtabju7k63o23"},{"post_id":"ckcd0s2wz006btabjymc5vl6o","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2xh006ttabj64u4n0r5"},{"post_id":"ckcd0s2wz006btabjymc5vl6o","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2xk006xtabjr24f4uy7"},{"post_id":"ckcd0s2x4006itabjpzj4ff1l","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2xn0070tabj5j4bryl8"},{"post_id":"ckcd0s2x4006itabjpzj4ff1l","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2xr0074tabjxzp38shp"},{"post_id":"ckcd0s2qi001ntabjcam9el8u","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2xt0077tabjurkhg0c6"},{"post_id":"ckcd0s2qi001ntabjcam9el8u","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2xv007btabjvrml4l4r"},{"post_id":"ckcd0s2qi001ntabjcam9el8u","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2xw007dtabj8le3idxe"},{"post_id":"ckcd0s2qo001qtabj61486820","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2xx007gtabjmjx243mj"},{"post_id":"ckcd0s2qo001qtabj61486820","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2xx007htabjwx4gpfcm"},{"post_id":"ckcd0s2qx001ttabj6ll1qcp4","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2xy007ltabj6j2y0xfv"},{"post_id":"ckcd0s2qx001ttabj6ll1qcp4","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2xz007ntabjt48n2pna"},{"post_id":"ckcd0s2r0001wtabjxksxzw79","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2y0007rtabj9t1pshsu"},{"post_id":"ckcd0s2r0001wtabjxksxzw79","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2y0007stabj7dum7x57"},{"post_id":"ckcd0s2rb001ytabj09axdjt2","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2y30082tabj91i9vv3g"},{"post_id":"ckcd0s2rb001ytabj09axdjt2","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2y50084tabj795h4dgo"},{"post_id":"ckcd0s2rb001ytabj09axdjt2","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2y60088tabj2v97c5hq"},{"post_id":"ckcd0s2rf0022tabjgyz2t9xi","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2y6008atabjani5cjnc"},{"post_id":"ckcd0s2ri0024tabjn0mtvj1g","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2y9008jtabj3hwrxxc6"},{"post_id":"ckcd0s2ri0024tabjn0mtvj1g","tag_id":"ckcd0s2y6008btabjqwss4gz1","_id":"ckcd0s2y9008ltabjhoa2augx"},{"post_id":"ckcd0s2ri0024tabjn0mtvj1g","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2ya008otabj9xb83h2f"},{"post_id":"ckcd0s2rk0028tabjd3lecjzm","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yd008wtabjjozbhepj"},{"post_id":"ckcd0s2rk0028tabjd3lecjzm","tag_id":"ckcd0s2y6008btabjqwss4gz1","_id":"ckcd0s2yd008xtabjfqeuo586"},{"post_id":"ckcd0s2rk0028tabjd3lecjzm","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2ye0090tabjv6ohuxg0"},{"post_id":"ckcd0s2rl0029tabjnukri6pm","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2ye0092tabjz6x623cy"},{"post_id":"ckcd0s2ro002ctabjdv0oczob","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yh0098tabj1bz11xxf"},{"post_id":"ckcd0s2ro002ctabjdv0oczob","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2yh009atabjmld8rqlf"},{"post_id":"ckcd0s2rs002ftabjp6si2p8w","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yi009dtabjs7hb710f"},{"post_id":"ckcd0s2rv002jtabjkw9xjxxm","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yl009htabj8bq79blc"},{"post_id":"ckcd0s2rx002ltabjfxnjoilt","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yp009rtabjuc673y0i"},{"post_id":"ckcd0s2rx002ltabjfxnjoilt","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2yq009ttabj3sd9m1gy"},{"post_id":"ckcd0s2rx002ltabjfxnjoilt","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2yr009wtabjhzhxp355"},{"post_id":"ckcd0s2s0002otabjqsuh1bi1","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2ys00a0tabjtxeptk75"},{"post_id":"ckcd0s2s0002otabjqsuh1bi1","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2ys00a2tabj60hzzo4t"},{"post_id":"ckcd0s2s4002rtabjrloyleqy","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yt00a8tabjvdapuwa4"},{"post_id":"ckcd0s2s4002rtabjrloyleqy","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2yt00aatabjmfr6q3ge"},{"post_id":"ckcd0s2s9002vtabjfrv1i37f","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yv00aftabj2tiji8s3"},{"post_id":"ckcd0s2s9002vtabjfrv1i37f","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2yv00aitabj096ls3np"},{"post_id":"ckcd0s2se002ytabj3abks7pg","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yx00amtabjfk1h2bbe"},{"post_id":"ckcd0s2se002ytabj3abks7pg","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2yx00aptabj92migpjb"},{"post_id":"ckcd0s2sj0031tabjqgaouvd1","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yy00astabjguni0u2e"},{"post_id":"ckcd0s2so0034tabj3vs5q20z","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2yz00axtabj73nl4wyf"},{"post_id":"ckcd0s2st0038tabjk8dibona","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2z300b7tabj7aql1ejj"},{"post_id":"ckcd0s2st0038tabjk8dibona","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2z400batabjibcft6g7"},{"post_id":"ckcd0s2st0038tabjk8dibona","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2z400bctabjubp76af4"},{"post_id":"ckcd0s2sx003atabj151pbzh2","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2z500bftabjsi72a3jf"},{"post_id":"ckcd0s2sx003atabj151pbzh2","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2z500bhtabjbxaa9e2x"},{"post_id":"ckcd0s2t3003ctabjltiv7w4y","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2z700bltabjr8h6er5u"},{"post_id":"ckcd0s2t3003ctabjltiv7w4y","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2z700bntabjybpor150"},{"post_id":"ckcd0s2t8003ftabjcm7ihgaf","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2z900bttabjg4xgjmav"},{"post_id":"ckcd0s2t8003ftabjcm7ihgaf","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s2z900bvtabjxlp36eos"},{"post_id":"ckcd0s2te003itabj3uwibn4d","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2z900bytabj8li8aa3d"},{"post_id":"ckcd0s2ti003mtabjpx6rgkeg","tag_id":"ckcd0s2z900bwtabj0hl0qmdt","_id":"ckcd0s2za00c2tabjd49vtflb"},{"post_id":"ckcd0s2tl003otabjuhko5ozv","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2zb00c6tabjdokuh1x0"},{"post_id":"ckcd0s2tq003rtabj5yprig7f","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s2zd00cdtabjis5yxw3y"},{"post_id":"ckcd0s2tq003rtabj5yprig7f","tag_id":"ckcd0s2x3006gtabjfdwc3sk2","_id":"ckcd0s2ze00cftabjslojuj9o"},{"post_id":"ckcd0s2tu003vtabjg6fgazh9","tag_id":"ckcd0s2z900bwtabj0hl0qmdt","_id":"ckcd0s2ze00citabj8rl4wic5"},{"post_id":"ckcd0s2tu003vtabjg6fgazh9","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2ze00cjtabjl2oyhbd2"},{"post_id":"ckcd0s2tz003ztabj3n78udzx","tag_id":"ckcd0s2ze00chtabj71f74gzb","_id":"ckcd0s2zg00cntabjpv4qbinq"},{"post_id":"ckcd0s2tz003ztabj3n78udzx","tag_id":"ckcd0s2zf00cktabjoq9eqa59","_id":"ckcd0s2zg00cotabjwv894hv7"},{"post_id":"ckcd0s2tz003ztabj3n78udzx","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zh00cqtabjiwcnm1tu"},{"post_id":"ckcd0s2ua0041tabjkpk8n13y","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zh00cstabj067liwjb"},{"post_id":"ckcd0s2ua0041tabjkpk8n13y","tag_id":"ckcd0s2zg00cptabjwrgyouyi","_id":"ckcd0s2zh00cttabj80rvi9vs"},{"post_id":"ckcd0s2ug0044tabjd9pgihau","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zj00cwtabjg1sjpe9x"},{"post_id":"ckcd0s2ug0044tabjd9pgihau","tag_id":"ckcd0s2zg00cptabjwrgyouyi","_id":"ckcd0s2zj00cxtabj4v20imo7"},{"post_id":"ckcd0s2uj0048tabjb2vx9l1f","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zk00d0tabjgvw2614t"},{"post_id":"ckcd0s2uj0048tabjb2vx9l1f","tag_id":"ckcd0s2zg00cptabjwrgyouyi","_id":"ckcd0s2zk00d1tabj5xqvg2y9"},{"post_id":"ckcd0s2un004ctabj6ag8cput","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zl00d5tabj6r3n6pjl"},{"post_id":"ckcd0s2un004ctabj6ag8cput","tag_id":"ckcd0s2zk00d2tabjopubik77","_id":"ckcd0s2zl00d6tabjukc2beod"},{"post_id":"ckcd0s2un004ctabj6ag8cput","tag_id":"ckcd0s2zk00d3tabjxps58sc0","_id":"ckcd0s2zl00d8tabj86r94jtt"},{"post_id":"ckcd0s2ut004itabjbs278v6k","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zm00databj91ghnrnh"},{"post_id":"ckcd0s2ut004itabjbs278v6k","tag_id":"ckcd0s2zg00cptabjwrgyouyi","_id":"ckcd0s2zm00dbtabjh6mxvnot"},{"post_id":"ckcd0s2uw004ltabjkhxh8x7y","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zm00detabj7fp2uit5"},{"post_id":"ckcd0s2uw004ltabjkhxh8x7y","tag_id":"ckcd0s2zm00dctabj0ax3d7y0","_id":"ckcd0s2zm00dftabjnbd68exf"},{"post_id":"ckcd0s2v1004ptabjfouqn929","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zn00ditabjuek3kkp5"},{"post_id":"ckcd0s2v1004ptabjfouqn929","tag_id":"ckcd0s2zk00d3tabjxps58sc0","_id":"ckcd0s2zn00djtabjnsajjswy"},{"post_id":"ckcd0s2v5004stabjchqv13e5","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s2zo00dmtabjvli1s3ol"},{"post_id":"ckcd0s2v5004stabjchqv13e5","tag_id":"ckcd0s2zm00dctabj0ax3d7y0","_id":"ckcd0s2zo00dntabjtk9xqygo"},{"post_id":"ckcd0s2vb004xtabjg2u4a3pa","tag_id":"ckcd0s2zo00dltabjgnva7kk1","_id":"ckcd0s2zo00dqtabjbczyn3es"},{"post_id":"ckcd0s2vb004xtabjg2u4a3pa","tag_id":"ckcd0s2zo00dotabjrll45sy7","_id":"ckcd0s2zo00drtabjxrwuplsy"},{"post_id":"ckcd0s2vd0050tabj5z8689fc","tag_id":"ckcd0s2zo00dptabj54vss1y7","_id":"ckcd0s2zp00dutabj353bzl3v"},{"post_id":"ckcd0s2vd0050tabj5z8689fc","tag_id":"ckcd0s2zp00dstabjqudlw5hg","_id":"ckcd0s2zp00dvtabjxhu2i0mh"},{"post_id":"ckcd0s2vf0052tabjbfoubnvs","tag_id":"ckcd0s2zp00dttabjavkvp9gk","_id":"ckcd0s2zp00dxtabjgsp7hab7"},{"post_id":"ckcd0s2vi0054tabj41gw5khw","tag_id":"ckcd0s2zo00dotabjrll45sy7","_id":"ckcd0s2zq00e0tabjckqddejq"},{"post_id":"ckcd0s2vi0054tabj41gw5khw","tag_id":"ckcd0s2zq00dytabjm5ds63vu","_id":"ckcd0s2zq00e1tabjqzpkyhkg"},{"post_id":"ckcd0s2vk0056tabj67k9podt","tag_id":"ckcd0s2zo00dptabj54vss1y7","_id":"ckcd0s2zr00e4tabj50snxu7j"},{"post_id":"ckcd0s2vk0056tabj67k9podt","tag_id":"ckcd0s2zq00e2tabj9mvlev5u","_id":"ckcd0s2zr00e5tabjwfx7sr17"},{"post_id":"ckcd0s2vr0059tabjwthe15uk","tag_id":"ckcd0s2zo00dptabj54vss1y7","_id":"ckcd0s2zs00e8tabja9s3hyje"},{"post_id":"ckcd0s2vr0059tabjwthe15uk","tag_id":"ckcd0s2zq00e2tabj9mvlev5u","_id":"ckcd0s2zs00e9tabjxvf45vux"},{"post_id":"ckcd0s2vw005ctabjwijbsuao","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zs00ebtabjymqezmka"},{"post_id":"ckcd0s2vw005ctabjwijbsuao","tag_id":"ckcd0s2zr00e7tabjore5bor2","_id":"ckcd0s2zs00ectabju6nicnfu"},{"post_id":"ckcd0s2w1005gtabjszl71ksm","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zt00eetabj04jewaxk"},{"post_id":"ckcd0s2w1005gtabjszl71ksm","tag_id":"ckcd0s2zs00eatabjkyfephrp","_id":"ckcd0s2zt00eftabj59w20ki1"},{"post_id":"ckcd0s2w3005ktabjurq8wx9r","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zu00eitabjpzumj5e4"},{"post_id":"ckcd0s2w3005ktabjurq8wx9r","tag_id":"ckcd0s2zs00eatabjkyfephrp","_id":"ckcd0s2zv00ejtabj22wpb8eb"},{"post_id":"ckcd0s2w3005ktabjurq8wx9r","tag_id":"ckcd0s2zt00egtabjoutyhzxt","_id":"ckcd0s2zv00eltabj7fxngd2y"},{"post_id":"ckcd0s2w6005otabjh6fb77p4","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zv00emtabjswfv1j02"},{"post_id":"ckcd0s2w6005otabjh6fb77p4","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2zw00eotabjkhrzr6c3"},{"post_id":"ckcd0s2w8005qtabj20a2hsba","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zw00eptabj57bnhgda"},{"post_id":"ckcd0s2w8005qtabj20a2hsba","tag_id":"ckcd0s2zs00eatabjkyfephrp","_id":"ckcd0s2zx00ertabjrml1vozx"},{"post_id":"ckcd0s2wb005utabj7v199vu4","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zy00ettabj8r7ikgvk"},{"post_id":"ckcd0s2wb005utabj7v199vu4","tag_id":"ckcd0s2zs00eatabjkyfephrp","_id":"ckcd0s2zy00eutabjn7jwrn7o"},{"post_id":"ckcd0s2wb005utabj7v199vu4","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2zz00ewtabjegj8w8z0"},{"post_id":"ckcd0s2wf005vtabjz64hdlna","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s2zz00eytabjput7cna9"},{"post_id":"ckcd0s2wf005vtabjz64hdlna","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s2zz00eztabj0iqaitml"},{"post_id":"ckcd0s2wf005vtabjz64hdlna","tag_id":"ckcd0s2zy00evtabjq3o33c7e","_id":"ckcd0s30000f1tabjzthj2zpz"},{"post_id":"ckcd0s2wl005ztabj8s589o82","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s30000f2tabja0dvivpv"},{"post_id":"ckcd0s2wl005ztabj8s589o82","tag_id":"ckcd0s2zz00extabju56h9lmt","_id":"ckcd0s30200f4tabj5o4fq06t"},{"post_id":"ckcd0s2wl005ztabj8s589o82","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s30200f5tabjnojcta8r"},{"post_id":"ckcd0s2wr0064tabjscuqyrjb","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s30200f7tabjqkr88but"},{"post_id":"ckcd0s2wr0064tabjscuqyrjb","tag_id":"ckcd0s2zz00f0tabj3vnwzzs7","_id":"ckcd0s30200f8tabj1d98r2q0"},{"post_id":"ckcd0s2wr0064tabjscuqyrjb","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s30300fatabjgiakfspg"},{"post_id":"ckcd0s2wu0066tabjo9n307uf","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s30300fbtabjbtmduo2o"},{"post_id":"ckcd0s2wu0066tabjo9n307uf","tag_id":"ckcd0s2zz00f0tabj3vnwzzs7","_id":"ckcd0s30300fdtabj6flel3ba"},{"post_id":"ckcd0s2x1006dtabjm90p7akz","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s30300fetabjmormhax4"},{"post_id":"ckcd0s2x1006dtabjm90p7akz","tag_id":"ckcd0s2zs00eatabjkyfephrp","_id":"ckcd0s30300fftabj97abjkgv"},{"post_id":"ckcd0s2xc006ptabjiwj7lzjz","tag_id":"ckcd0s30200f9tabjunuis0jq","_id":"ckcd0s30300fhtabjo489zznk"},{"post_id":"ckcd0s2xc006ptabjiwj7lzjz","tag_id":"ckcd0s30300fctabj2touh8jr","_id":"ckcd0s30300fitabjbuktvf79"},{"post_id":"ckcd0s2xe006rtabjsjx2qkk4","tag_id":"ckcd0s30300fgtabjx9ae8lo8","_id":"ckcd0s30400fktabj0f4hd7gc"},{"post_id":"ckcd0s2xi006wtabjhr3188ru","tag_id":"ckcd0s30200f9tabjunuis0jq","_id":"ckcd0s30500fntabj82kct1na"},{"post_id":"ckcd0s2xi006wtabjhr3188ru","tag_id":"ckcd0s30300fctabj2touh8jr","_id":"ckcd0s30500fotabj18vx25oh"},{"post_id":"ckcd0s2xl006ytabjs23dsds2","tag_id":"ckcd0s30400fmtabj0a7rgl7j","_id":"ckcd0s30500frtabjkoqoutix"},{"post_id":"ckcd0s2xl006ytabjs23dsds2","tag_id":"ckcd0s30500fptabj6tlpxrnq","_id":"ckcd0s30500fstabjftdj50h5"},{"post_id":"ckcd0s2xo0073tabjuva6bfzq","tag_id":"ckcd0s30400fmtabj0a7rgl7j","_id":"ckcd0s30700fvtabjm7tcpnkb"},{"post_id":"ckcd0s2xo0073tabjuva6bfzq","tag_id":"ckcd0s30500fptabj6tlpxrnq","_id":"ckcd0s30800fwtabjx41hqcsi"},{"post_id":"ckcd0s2xr0075tabj3v9yvvca","tag_id":"ckcd0s30700futabjzcmsmlod","_id":"ckcd0s30900fztabjqanefmjk"},{"post_id":"ckcd0s2xr0075tabj3v9yvvca","tag_id":"ckcd0s30800fxtabj1rkacjj6","_id":"ckcd0s30d00g0tabjdk4vxxzw"},{"post_id":"ckcd0s2xt007atabjwt6xldeb","tag_id":"ckcd0s30700futabjzcmsmlod","_id":"ckcd0s30f00g2tabjqjg0l8zh"},{"post_id":"ckcd0s2xt007atabjwt6xldeb","tag_id":"ckcd0s30800fxtabj1rkacjj6","_id":"ckcd0s30f00g3tabj2hw2w86u"},{"post_id":"ckcd0s38000g4tabjrt17gsdt","tag_id":"ckcd0s2nu000ztabjfmekd72b","_id":"ckcd0s38400g7tabjmza2oyer"},{"post_id":"ckcd0s38200g6tabjf8jfm0wm","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s38800g9tabj5ajlexdq"},{"post_id":"ckcd0s38200g6tabjf8jfm0wm","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s38b00gbtabjmmqfqgrj"},{"post_id":"ckcd0s38400g8tabj303raoe5","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s38c00getabjwj3pu96n"},{"post_id":"ckcd0s38400g8tabj303raoe5","tag_id":"ckcd0s2y6008btabjqwss4gz1","_id":"ckcd0s38e00gitabjg0w7wrqp"},{"post_id":"ckcd0s38900gatabjugcyuape","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcd0s38f00gltabj087ihpcz"},{"post_id":"ckcd0s38900gatabjugcyuape","tag_id":"ckcd0s2zk00d3tabjxps58sc0","_id":"ckcd0s38i00gotabjtsimyllv"},{"post_id":"ckcd0s38c00gftabj9il559xy","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s38k00gstabj6qoz9ot4"},{"post_id":"ckcd0s38c00gftabj9il559xy","tag_id":"ckcd0s2zt00egtabjoutyhzxt","_id":"ckcd0s38m00gvtabjw3h5ji33"},{"post_id":"ckcd0s38c00gftabj9il559xy","tag_id":"ckcd0s2zz00f0tabj3vnwzzs7","_id":"ckcd0s38n00gxtabjz5rhc1oh"},{"post_id":"ckcd0s38e00gjtabj4pz57mdg","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s38q00h0tabjwkyokiw5"},{"post_id":"ckcd0s38e00gjtabj4pz57mdg","tag_id":"ckcd0s2zt00egtabjoutyhzxt","_id":"ckcd0s38r00h2tabjeorzrbz9"},{"post_id":"ckcd0s38e00gjtabj4pz57mdg","tag_id":"ckcd0s2zz00f0tabj3vnwzzs7","_id":"ckcd0s38r00h4tabjpjfikynn"},{"post_id":"ckcd0s38b00gctabjsh6b76u0","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s38s00h6tabj0zyaq5so"},{"post_id":"ckcd0s38b00gctabjsh6b76u0","tag_id":"ckcd0s38d00ghtabjxqxj020z","_id":"ckcd0s38s00h8tabjtigwkh2c"},{"post_id":"ckcd0s38k00gttabjeerzrcob","tag_id":"ckcd0s30700futabjzcmsmlod","_id":"ckcd0s38s00h9tabjb6fmtvp5"},{"post_id":"ckcd0s38k00gttabjeerzrcob","tag_id":"ckcd0s30800fxtabj1rkacjj6","_id":"ckcd0s38s00hatabj2csbqmtg"},{"post_id":"ckcd0s38f00gmtabjz12ungqx","tag_id":"ckcd0s38k00grtabjsw03cp6g","_id":"ckcd0s38t00hbtabj0ge0z2ej"},{"post_id":"ckcd0s38f00gmtabjz12ungqx","tag_id":"ckcd0s30500fptabj6tlpxrnq","_id":"ckcd0s38t00hctabj2n9rbtg5"},{"post_id":"ckcd0s38i00gptabjxck2zfc1","tag_id":"ckcd0s38n00gytabj5vntvmxd","_id":"ckcd0s38t00hdtabjktfblnuk"},{"post_id":"ckcd0s38i00gptabjxck2zfc1","tag_id":"ckcd0s30500fptabj6tlpxrnq","_id":"ckcd0s38t00hetabj91bkjrkh"},{"post_id":"ckcd0s3kz00hftabjp3xby9y2","tag_id":"ckcd0s2v8004utabjbzf82gdv","_id":"ckcd0s3l200hhtabjs3shwl7b"},{"post_id":"ckcd0s3kz00hftabjp3xby9y2","tag_id":"ckcd0s2ve0051tabje8gi6ss6","_id":"ckcd0s3l300hitabjka0zs28j"},{"post_id":"ckcd0s3l100hgtabjynln70pw","tag_id":"ckcd0s2vv005btabjpvnb9udy","_id":"ckcd0s3l300hjtabju9ix4ovx"},{"post_id":"ckcd0s3l100hgtabjynln70pw","tag_id":"ckcd0s2wk005xtabjgj9rj76p","_id":"ckcd0s3lp00hltabjatqd2qbf"},{"post_id":"ckcmvdeh400005cbjoonvpiqb","tag_id":"ckcd0s2zf00cmtabjledp7rcb","_id":"ckcmvdwlx00015cbj6igzbnv0"},{"post_id":"ckcmvdeh400005cbjoonvpiqb","tag_id":"ckcd0s2zm00dctabj0ax3d7y0","_id":"ckcmvdwlx00025cbj2ms02wmo"}],"Tag":[{"name":"实验","_id":"ckcd0s2m30005tabjs29jqsct"},{"name":"证书","_id":"ckcd0s2ma000ctabj56zael9c"},{"name":"回忆录","_id":"ckcd0s2mh000itabj8zoo6174"},{"name":"Mysql","_id":"ckcd0s2my000mtabjpap9b2bo"},{"name":"Postgresql","_id":"ckcd0s2nu000ztabjfmekd72b"},{"name":"看图笑话","_id":"ckcd0s2oj0016tabj3fbgb49p"},{"name":"纯文笑话","_id":"ckcd0s2q2001itabjb4o6j0jj"},{"name":"节日","_id":"ckcd0s2rf0021tabj7x7krsoj"},{"name":"中国节","_id":"ckcd0s2rk0027tabj3u7nezwx"},{"name":"西方节","_id":"ckcd0s2sw0039tabj7frlssg9"},{"name":"国际节","_id":"ckcd0s2th003ltabjigc4qt1f"},{"name":"历史","_id":"ckcd0s2us004htabj0rjecsyx"},{"name":"Hexo","_id":"ckcd0s2v8004utabjbzf82gdv"},{"name":"Hexo美化","_id":"ckcd0s2ve0051tabje8gi6ss6"},{"name":"前端","_id":"ckcd0s2vk0055tabjsn55xyuk"},{"name":"Python","_id":"ckcd0s2vv005btabjpvnb9udy"},{"name":"Hadoop","_id":"ckcd0s2w3005jtabja3zxc0ym"},{"name":"Ubuntu","_id":"ckcd0s2wa005stabjz3lqabxn"},{"name":"Python程序篇","_id":"ckcd0s2wk005xtabjgj9rj76p"},{"name":"Hexo插件","_id":"ckcd0s2x3006gtabjfdwc3sk2"},{"name":"seo优化","_id":"ckcd0s2y6008btabjqwss4gz1"},{"name":"LDAP","_id":"ckcd0s2z900bwtabj0hl0qmdt"},{"name":"Atom","_id":"ckcd0s2ze00chtabj71f74gzb"},{"name":"编译器","_id":"ckcd0s2zf00cktabjoq9eqa59"},{"name":"Linux","_id":"ckcd0s2zf00cmtabjledp7rcb"},{"name":"Linux基础篇","_id":"ckcd0s2zg00cptabjwrgyouyi"},{"name":"Nginx","_id":"ckcd0s2zk00d2tabjopubik77"},{"name":"Linux增强篇","_id":"ckcd0s2zk00d3tabjxps58sc0"},{"name":"Linux番外篇","_id":"ckcd0s2zm00dctabj0ax3d7y0"},{"name":"英语学习","_id":"ckcd0s2zo00dltabjgnva7kk1"},{"name":"生活","_id":"ckcd0s2zo00dotabjrll45sy7"},{"name":"电视剧","_id":"ckcd0s2zo00dptabj54vss1y7"},{"name":"烧脑剧","_id":"ckcd0s2zp00dstabjqudlw5hg"},{"name":"动漫","_id":"ckcd0s2zp00dttabjavkvp9gk"},{"name":"抓娃娃","_id":"ckcd0s2zq00dytabjm5ds63vu"},{"name":"美国大片","_id":"ckcd0s2zq00e2tabj9mvlev5u"},{"name":"Github","_id":"ckcd0s2zr00e7tabjore5bor2"},{"name":"Python基础篇","_id":"ckcd0s2zs00eatabjkyfephrp"},{"name":"Python包","_id":"ckcd0s2zt00egtabjoutyhzxt"},{"name":"爬虫","_id":"ckcd0s2zy00evtabjq3o33c7e"},{"name":"ArcGIS","_id":"ckcd0s2zz00extabju56h9lmt"},{"name":"爬虫系列","_id":"ckcd0s2zz00f0tabj3vnwzzs7"},{"name":"SSH","_id":"ckcd0s30200f9tabjunuis0jq"},{"name":"协议类","_id":"ckcd0s30300fctabj2touh8jr"},{"name":"Mac","_id":"ckcd0s30300fgtabjx9ae8lo8"},{"name":"WIKI","_id":"ckcd0s30400fmtabj0a7rgl7j"},{"name":"运维工具","_id":"ckcd0s30500fptabj6tlpxrnq"},{"name":"旅行记","_id":"ckcd0s30700futabjzcmsmlod"},{"name":"美食","_id":"ckcd0s30800fxtabj1rkacjj6"},{"name":"项目","_id":"ckcd0s38d00ghtabjxqxj020z"},{"name":"ffmpeg","_id":"ckcd0s38k00grtabjsw03cp6g"},{"name":"etherpad","_id":"ckcd0s38n00gytabj5vntvmxd"}]}}